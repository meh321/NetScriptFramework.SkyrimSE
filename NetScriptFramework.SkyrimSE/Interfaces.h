#pragma once
#pragma warning(push)
#pragma warning(disable : 4638)

namespace NetScriptFramework
{
	namespace SkyrimSE
	{
		public ref class UnknownGenArg_16 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "16";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_2 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "2";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_256 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "256";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_128 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "128";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_3 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "3";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_22 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "22";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_12 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "12";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_1 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "1";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_8 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "8";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_64 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "64";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_32 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "32";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_System__Single : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "System__Single";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_System__Int32 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "System__Int32";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_20 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "20";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_6 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "6";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_0 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "0";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_4 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "4";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_10 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "10";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_152 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "152";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_50 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "50";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_163840 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "163840";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_432 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "432";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_37 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "37";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_512 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "512";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_5 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "5";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_40 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "40";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_25 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "25";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_4294967295 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "4294967295";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_42 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "42";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_1024 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "1024";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_104 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "104";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_108 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "108";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_112 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "112";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_120 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "120";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_160 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "160";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_176 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "176";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_2048 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "2048";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_2080 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "2080";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_224 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "224";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_24 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "24";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_240 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "240";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_36 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "36";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_48 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "48";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_56 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "56";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_672 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "672";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_72 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "72";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_96 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "96";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_100 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "100";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_46 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "46";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_94 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "94";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_33 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "33";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_125 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "125";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_123 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "123";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_93 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "93";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_97 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "97";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_132 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "132";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_133 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "133";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_49 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "49";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_88 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "88";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_115 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "115";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_129 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "129";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_103 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "103";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_87 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "87";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_110 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "110";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_111 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "111";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_51 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "51";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_47 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "47";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_101 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "101";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_135 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "135";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_91 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "91";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_126 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "126";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_99 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "99";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_105 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "105";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_127 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "127";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_116 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "116";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_109 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "109";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_124 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "124";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_92 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "92";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_106 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "106";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_57 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "57";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_121 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "121";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_134 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "134";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_122 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "122";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_130 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "130";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_131 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "131";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_35 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "35";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_114 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "114";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_113 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "113";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_7 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "7";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_98 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "98";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_137 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "137";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_18 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "18";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_21 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "21";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_30 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "30";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_73 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "73";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_19 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "19";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_23 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "23";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_55 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "55";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_80 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "80";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_85 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "85";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_13 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "13";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_11 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "11";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_39 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "39";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_9 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "9";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_78 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "78";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_89 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "89";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_90 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "90";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_45 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "45";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_44 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "44";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_53 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "53";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_82 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "82";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_81 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "81";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_43 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "43";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_83 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "83";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_102 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "102";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_26 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "26";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_27 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "27";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_60 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "60";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_28 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "28";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_29 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "29";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_31 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "31";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_34 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "34";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_38 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "38";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_41 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "41";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_77 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "77";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_14 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "14";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_58 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "58";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_119 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "119";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_52 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "52";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_15 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "15";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_75 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "75";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_76 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "76";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_84 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "84";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_54 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "54";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_118 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "118";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_71 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "71";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_17 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "17";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_63 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "63";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_95 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "95";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_61 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "61";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_74 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "74";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_70 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "70";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_62 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "62";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_68 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "68";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_65 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "65";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_69 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "69";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_67 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "67";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_66 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "66";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_59 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "59";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_79 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "79";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_3988292384 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "3988292384";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg__1 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "_1";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_4096 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "4096";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg__3932672073523589310 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "_3932672073523589310";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_0x30 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "0x30";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_0x10 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "0x10";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		public ref class UnknownGenArg_800 : public IUnknownValueGenericArgument
		{
		public:
			virtual property System::String^ Value
			{
				System::String^ __clrcall get()
				{
					return "800";
				}
			}

			virtual property System::Object^ BaseValue
			{
				System::Object^ __clrcall get()
				{
					return Value;
				}
			}
		};

		ref class RayCastResult;
		ref class RayCastParameters;
		ref class NiObjectLoadParameters;

		public interface class _SECURITY_FUNCTION_TABLE_A : public NetScriptFramework::IMemoryObject { };

		public enum class ActiveEffectFlags : System::UInt32
		{
			None = 0,
			HasConditions = 0x80,
			Recovers = 0x200,
			Inactive = 0x8000,
			Dispelled = 0x40000,
		};

		/// <summary>
		/// List of slots for equipped spell.
		/// </summary>
		public enum class EquippedSpellSlots : System::Int32
		{
			LeftHand = 0,
			RightHand = 1,
			Other = 2,
			Instant = 3,
		};

		/// <summary>
		/// Actor value indices list.
		/// </summary>
		public enum class ActorValueIndices : System::Int32
		{
			Aggression = 0,
			Confidence = 1,
			Energy = 2,
			Morality = 3,
			Mood = 4,
			Assistance = 5,
			OneHanded = 6,
			TwoHanded = 7,
			Marksman = 8,
			Block = 9,
			Smithing = 0xA,
			HeavyArmor = 0xB,
			LightArmor = 0xC,
			Pickpocket = 0xD,
			Lockpicking = 0xE,
			Sneak = 0xF,
			Alchemy = 0x10,
			Speechcraft = 0x11,
			Alteration = 0x12,
			Conjuration = 0x13,
			Destruction = 0x14,
			Illusion = 0x15,
			Restoration = 0x16,
			Enchanting = 0x17,
			Health = 0x18,
			Magicka = 0x19,
			Stamina = 0x1A,
			HealRate = 0x1B,
			MagickaRate = 0x1C,
			StaminaRate = 0x1D,
			SpeedMult = 0x1E,
			InventoryWeight = 0x1F,
			CarryWeight = 0x20,
			CritChance = 0x21,
			MeleeDamage = 0x22,
			UnarmedDamage = 0x23,
			Mass = 0x24,
			VoicePoints = 0x25,
			VoiceRate = 0x26,
			DamageResist = 0x27,
			PoisonResist = 0x28,
			FireResist = 0x29,
			ElectricResist = 0x2A,
			FrostResist = 0x2B,
			MagicResist = 0x2C,
			DiseaseResist = 0x2D,
			PerceptionCondition = 0x2E,
			EnduranceCondition = 0x2F,
			LeftAttackCondition = 0x30,
			RightAttackCondition = 0x31,
			LeftMobilityCondition = 0x32,
			RightMobilityCondition = 0x33,
			BrainCondition = 0x34,
			Paralysis = 0x35,
			Invisibility = 0x36,
			NightEye = 0x37,
			DetectLifeRange = 0x38,
			WaterBreathing = 0x39,
			WaterWalking = 0x3A,
			IgnoreCrippledLimbs = 0x3B,
			Fame = 0x3C,
			Infamy = 0x3D,
			JumpingBonus = 0x3E,
			WardPower = 0x3F,
			RightItemCharge = 0x40,
			ArmorPerks = 0x41,
			ShieldPerks = 0x42,
			WardDeflection = 0x43,
			Variable01 = 0x44,
			Variable02 = 0x45,
			Variable03 = 0x46,
			Variable04 = 0x47,
			Variable05 = 0x48,
			Variable06 = 0x49,
			Variable07 = 0x4A,
			Variable08 = 0x4B,
			Variable09 = 0x4C,
			Variable10 = 0x4D,
			BowSpeedBonus = 0x4E,
			FavorActive = 0x4F,
			FavorsPerDay = 0x50,
			FavorsPerDayTimer = 0x51,
			LeftItemCharge = 0x52,
			AbsorbChance = 0x53,
			Blindness = 0x54,
			WeaponSpeedMult = 0x55,
			ShoutRecoveryMult = 0x56,
			BowStaggerBonus = 0x57,
			Telekinesis = 0x58,
			FavorPointsBonus = 0x59,
			LastBribedIntimidated = 0x5A,
			LastFlattered = 0x5B,
			MovementNoiseMult = 0x5C,
			BypassVendorStolenCheck = 0x5D,
			BypassVendorKeywordCheck = 0x5E,
			WaitingForPlayer = 0x5F,
			OneHandedMod = 0x60,
			TwoHandedMod = 0x61,
			MarksmanMod = 0x62,
			BlockMod = 0x63,
			SmithingMod = 0x64,
			HeavyArmorMod = 0x65,
			LightArmorMod = 0x66,
			PickPocketMod = 0x67,
			LockpickingMod = 0x68,
			SneakMod = 0x69,
			AlchemyMod = 0x6A,
			SpeechcraftMod = 0x6B,
			AlterationMod = 0x6C,
			ConjurationMod = 0x6D,
			DestructionMod = 0x6E,
			IllusionMod = 0x6F,
			RestorationMod = 0x70,
			EnchantingMod = 0x71,
			OneHandedSkillAdvance = 0x72,
			TwoHandedSkillAdvance = 0x73,
			MarksmanSkillAdvance = 0x74,
			BlockSkillAdvance = 0x75,
			SmithingSkillAdvance = 0x76,
			HeavyArmorSkillAdvance = 0x77,
			LightArmorSkillAdvance = 0x78,
			PickPocketSkillAdvance = 0x79,
			LockpickingSkillAdvance = 0x7A,
			SneakSkillAdvance = 0x7B,
			AlchemySkillAdvance = 0x7C,
			SpeechcraftSkillAdvance = 0x7D,
			AlterationSkillAdvance = 0x7E,
			ConjurationSkillAdvance = 0x7F,
			DestructionSkillAdvance = 0x80,
			IllusionSkillAdvance = 0x81,
			RestorationSkillAdvance = 0x82,
			EnchantingSkillAdvance = 0x83,
			LeftWeaponSpeedMult = 0x84,
			DragonSouls = 0x85,
			CombatHealthRegenMult = 0x86,
			OneHandedPowerMod = 0x87,
			TwoHandedPowerMod = 0x88,
			MarksmanPowerMod = 0x89,
			BlockPowerMod = 0x8A,
			SmithingPowerMod = 0x8B,
			HeavyArmorPowerMod = 0x8C,
			LightArmorPowerMod = 0x8D,
			PickPocketPowerMod = 0x8E,
			LockpickingPowerMod = 0x8F,
			SneakPowerMod = 0x90,
			AlchemyPowerMod = 0x91,
			SpeechcraftPowerMod = 0x92,
			AlterationPowerMod = 0x93,
			ConjurationPowerMod = 0x94,
			DestructionPowerMod = 0x95,
			IllusionPowerMod = 0x96,
			RestorationPowerMod = 0x97,
			EnchantingPowerMod = 0x98,
			DragonRend = 0x99,
			AttackDamageMult = 0x9A,
			HealRateMult = 0x9B,
			MagickaRateMult = 0x9C,
			StaminaRateMult = 0x9D,
			WerewolfPerks = 0x9E,
			VampirePerks = 0x9F,
			GrabActorOffset = 0xA0,
			Grabbed = 0xA1,
			DEPRECATED05 = 0xA2,
			ReflectDamage = 0xA3,
			Max = 0xA4,
		};

		public interface class IMemoryStoreBase : public NetScriptFramework::IVirtualObject { };

		public interface class BSIntrusiveRefCounted : public NetScriptFramework::IMemoryObject { };

		public interface class ActionInput : public NetScriptFramework::IVirtualObject { };

		public interface class ActionOutput : public NetScriptFramework::IMemoryObject { };

		public interface class PlayerInputHandler : public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Int32 Enabled
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class ReferenceEffectController : public NetScriptFramework::IVirtualObject { };

		/// <summary>
		/// Base form component implementation. All inheritable components of a form derive from this type.
		/// </summary>
		public interface class BaseFormComponent : public NetScriptFramework::IVirtualObject { };

		/// <summary>
		/// List of all form type identifiers.
		/// </summary>
		public enum class FormTypes : System::Byte
		{
			None = 0,
			TES4 = 1,
			Group = 2,
			GMST = 3,
			Keyword = 4,
			LocationRef = 5,
			Action = 6,
			TextureSet = 7,
			MenuIcon = 8,
			Global = 9,
			Class = 0xA,
			Faction = 0xB,
			HeadPart = 0xC,
			Eyes = 0xD,
			Race = 0xE,
			Sound = 0xF,
			AcousticSpace = 0x10,
			Skill = 0x11,
			EffectSetting = 0x12,
			Script = 0x13,
			LandTexture = 0x14,
			Enchantment = 0x15,
			Spell = 0x16,
			ScrollItem = 0x17,
			Activator = 0x18,
			TalkingActivator = 0x19,
			Armor = 0x1A,
			Book = 0x1B,
			Container = 0x1C,
			Door = 0x1D,
			Ingredient = 0x1E,
			Light = 0x1F,
			Misc = 0x20,
			Apparatus = 0x21,
			Static = 0x22,
			StaticCollection = 0x23,
			MovableStatic = 0x24,
			Grass = 0x25,
			Tree = 0x26,
			Flora = 0x27,
			Furniture = 0x28,
			Weapon = 0x29,
			Ammo = 0x2A,
			NPC = 0x2B,
			LeveledCharacter = 0x2C,
			Key = 0x2D,
			Potion = 0x2E,
			IdleMarker = 0x2F,
			Note = 0x30,
			ConstructibleObject = 0x31,
			Projectile = 0x32,
			Hazard = 0x33,
			SoulGem = 0x34,
			LeveledItem = 0x35,
			Weather = 0x36,
			Climate = 0x37,
			SPGD = 0x38,
			ReferenceEffect = 0x39,
			Region = 0x3A,
			NAVI = 0x3B,
			Cell = 0x3C,
			Reference = 0x3D,
			Character = 0x3E,
			Missile = 0x3F,
			Arrow = 0x40,
			Grenade = 0x41,
			BeamProj = 0x42,
			FlameProj = 0x43,
			ConeProj = 0x44,
			BarrierProj = 0x45,
			PHZD = 0x46,
			WorldSpace = 0x47,
			Land = 0x48,
			NAVM = 0x49,
			TLOD = 0x4A,
			Topic = 0x4B,
			TopicInfo = 0x4C,
			Quest = 0x4D,
			Idle = 0x4E,
			Package = 0x4F,
			CombatStyle = 0x50,
			LoadScreen = 0x51,
			LeveledSpell = 0x52,
			ANIO = 0x53,
			Water = 0x54,
			EffectShader = 0x55,
			TOFT = 0x56,
			Explosion = 0x57,
			Debris = 0x58,
			ImageSpace = 0x59,
			ImageSpaceMod = 0x5A,
			List = 0x5B,
			Perk = 0x5C,
			BodyPartData = 0x5D,
			AddonNode = 0x5E,
			ActorValueInfo = 0x5F,
			CameraShot = 0x60,
			CameraPath = 0x61,
			VoiceType = 0x62,
			MaterialType = 0x63,
			ImpactData = 0x64,
			ImpactDataSet = 0x65,
			ARMA = 0x66,
			EncounterZone = 0x67,
			Location = 0x68,
			Message = 0x69,
			Ragdoll = 0x6A,
			DOBJ = 0x6B,
			LightingTemplate = 0x6C,
			MusicType = 0x6D,
			Footstep = 0x6E,
			FootstepSet = 0x6F,
			StoryBranchNode = 0x70,
			StoryQuestNode = 0x71,
			StoryEventNode = 0x72,
			DialogueBranch = 0x73,
			MusicTrack = 0x74,
			DLVW = 0x75,
			WordOfPower = 0x76,
			Shout = 0x77,
			EquipSlot = 0x78,
			Relationship = 0x79,
			Scene = 0x7A,
			AssociationType = 0x7B,
			Outfit = 0x7C,
			Art = 0x7D,
			Material = 0x7E,
			MovementType = 0x7F,
			SoundDescriptor = 0x80,
			DualCastData = 0x81,
			SoundCategory = 0x82,
			SoundOutput = 0x83,
			CollisionLayer = 0x84,
			ColorForm = 0x85,
			ReverbParam = 0x86,
			Unk87 = 0x87,
			Alias = 0x88,
			ReferenceAlias = 0x89,
			LocationAlias = 0x8A,
			ActiveMagicEffect = 0x8B,
		};

		public interface class NiRefObject : public NetScriptFramework::IVirtualObject
		{
		public:
			/// <summary>
			/// Increment the ref count of object.
			/// </summary>
			void IncRef();

			/// <summary>
			/// Decrement the ref count of object. If this is derived from BSHandleRefObject and true is returned then the object was deleted.
			/// </summary>
			System::Boolean DecRef();
		};

		generic <typename BSTEventSink_T1>
		public interface class BSTEventSink : public NetScriptFramework::IVirtualObject { };

		public interface class IAnimationGraphManagerHolder : public NetScriptFramework::IVirtualObject { };

		public interface class BSExtraData : public NetScriptFramework::IVirtualObject
		{
		public:
			/// <summary>
			/// Gets or sets the next entry in list.
			/// </summary>
			property BSExtraData^ Next
			{
				BSExtraData^ __clrcall get();

				void __clrcall set(BSExtraData^ value);
			}
		};

		/// <summary>
		/// List of extra data types.
		/// </summary>
		public enum class ExtraDataTypes : System::Int32
		{
			Havok = 1,
			Cell3D = 2,
			CellWaterType = 3,
			RegionList = 4,
			SeenData = 5,
			EditorID = 6,
			CellMusicType = 7,
			CellSkyRegion = 8,
			ProcessMiddleLow = 9,
			DetachTime = 0xA,
			PersistentCell = 0xB,
			Action = 0xD,
			StartingPosition = 0xE,
			AnimGraphManager = 0x10,
			UsedMarkers = 0x12,
			DistantData = 0x13,
			RagDollData = 0x14,
			ContainerChanges = 0x15,
			Worn = 0x16,
			WornLeft = 0x17,
			PackageStartLocation = 0x18,
			Package = 0x19,
			TresPassPackage = 0x1A,
			RunOncePacks = 0x1B,
			ReferenceHandle = 0x1C,
			Follower = 0x1D,
			LevCreaModifier = 0x1E,
			Ghost = 0x1F,
			OriginalReference = 0x20,
			Ownership = 0x21,
			Global = 0x22,
			Rank = 0x23,
			Count = 0x24,
			Health = 0x25,
			TimeLeft = 0x27,
			Charge = 0x28,
			Light = 0x29,
			Lock = 0x2A,
			Teleport = 0x2B,
			MapMarker = 0x2C,
			LeveledCreature = 0x2D,
			LeveledItem = 0x2E,
			Scale = 0x2F,
			Seed = 0x30,
			MagicCaster = 0x31,
			PlayerCrimeList = 0x34,
			EnableStateParent = 0x36,
			EnableStateChildren = 0x37,
			ItemDropper = 0x38,
			DroppedItemList = 0x39,
			RandomTeleportMarker = 0x3A,
			SavedHavokData = 0x3C,
			CannotWear = 0x3D,
			Poison = 0x3E,
			LastFinishedSequence = 0x40,
			SavedAnimation = 0x41,
			NorthRotation = 0x42,
			SpawnContainer = 0x43,
			FriendHits = 0x44,
			HeadingTarget = 0x45,
			RefractionProperty = 0x47,
			StartingWorldOrCell = 0x48,
			Hotkey = 0x49,
			EditiorRefMoveData = 0x4B,
			InfoGeneralTopic = 0x4C,
			HasNoRumors = 0x4D,
			Sound = 0x4E,
			TerminalState = 0x4F,
			LinkedRef = 0x50,
			LinkedRefChildren = 0x51,
			ActivateRef = 0x52,
			ActivateRefChildren = 0x53,
			CanTalkToPlayer = 0x54,
			ObjectHealth = 0x55,
			CellImageSpace = 0x56,
			NavMeshPortal = 0x57,
			ModelSwap = 0x58,
			Radius = 0x59,
			FactionChanges = 0x5B,
			DismemberedLimbs = 0x5C,
			ActorCause = 0x5D,
			MultiBound = 0x5E,
			MultiBoundData = 0x5F,
			MultiBoundRef = 0x60,
			ReflectedRefs = 0x61,
			ReflectorRefs = 0x62,
			EmittanceSource = 0x63,
			RadioData = 0x64,
			CombatStyle = 0x65,
			Primitive = 0x67,
			OpenCloseActivateRef = 0x68,
			AnimNoteReceiver = 0x69,
			Ammo = 0x6A,
			PatrolRefData = 0x6B,
			PackageData = 0x6C,
			OcclusionShape = 0x6D,
			CollisionData = 0x6E,
			SayTopicInfoOnceADay = 0x6F,
			EncounterZone = 0x70,
			SayTopicInfo = 0x71,
			OcclusionPlaneRefData = 0x72,
			PortalRefData = 0x73,
			Portal = 0x74,
			Room = 0x75,
			HealthPerc = 0x76,
			RoomRefData = 0x77,
			GuardedRefData = 0x78,
			CreatureAwakeSound = 0x79,
			Horse = 0x7B,
			IgnoredBySandbox = 0x7C,
			CellAcousticSpace = 0x7D,
			ReservedMarkers = 0x7E,
			WeaponIdleSound = 0x7F,
			WaterLightRefs = 0x80,
			LitWaterRefs = 0x81,
			WeaponAttackSound = 0x82,
			ActivateLoopSound = 0x83,
			PatrolRefInUseData = 0x84,
			AshPileRef = 0x85,
			FollowerSwimBreadcrumbs = 0x87,
			AliasInstanceArray = 0x88,
			Location = 0x89,
			LocationRefType = 0x8B,
			PromotedRef = 0x8C,
			OutfitItem = 0x8E,
			LeveledItemBase = 0x90,
			LightData = 0x91,
			SceneData = 0x92,
			BadPosition = 0x93,
			HeadTrackingWeight = 0x94,
			FromAlias = 0x95,
			ShouldWear = 0x96,
			FavorCost = 0x97,
			AttachedArrows3D = 0x98,
			TextDisplayData = 0x99,
			AlphaCutoff = 0x9A,
			Enchantment = 0x9B,
			Soul = 0x9C,
			ForcedTarget = 0x9D,
			UniqueID = 0x9F,
			Flags = 0xA0,
			RefrPath = 0xA1,
			DecalGroup = 0xA2,
			LockList = 0xA3,
			ForcedLandingMarker = 0xA4,
			LargeRefOwnerCells = 0xA5,
			CellWaterEnvMap = 0xA6,
			CellGrassData = 0xA7,
			TeleportName = 0xA8,
			Interaction = 0xA9,
			WaterData = 0xAA,
			WaterCurrentZoneData = 0xAB,
			AttachRef = 0xAC,
			AttachRefChildren = 0xAD,
			GroupConstraint = 0xAE,
			ScriptedAnimDependence = 0xAF,
			CachedScale = 0xB0,
			RaceData = 0xB1,
			GIDBuffer = 0xB2,
			MissingRefIDs = 0xB3,
			HavokLink = 0xB4,
		};

		/// <summary>
		/// Types for opening the container menu.
		/// </summary>
		public enum class ContainerOpenTypes : System::Int32
		{
			NormalContainerOrLoot = 0,
			StealFromContainer = 1,
			PickPocket = 2,
			PlayerTeammateTrade = 3,
		};

		/// <summary>
		/// Magic effect archetypes list.
		/// </summary>
		public enum class Archetypes : System::Int32
		{
			ValueMod = 0,
			Script = 1,
			Dispel = 2,
			CureDisease = 3,
			Absorb = 4,
			DualValueMod = 5,
			Calm = 6,
			Demoralize = 7,
			Frenzy = 8,
			Disarm = 9,
			CommandSummoned = 0xA,
			Invisibility = 0xB,
			Light = 0xC,
			Lock = 0xF,
			Open = 0x10,
			BoundWeapon = 0x11,
			SummonCreature = 0x12,
			DetectLife = 0x13,
			Telekinesis = 0x14,
			Paralysis = 0x15,
			Reanimate = 0x16,
			SoulTrap = 0x17,
			TurnUndead = 0x18,
			Guide = 0x19,
			WerewolfFeed = 0x1A,
			CureParalysis = 0x1B,
			CureAddiction = 0x1C,
			CurePoison = 0x1D,
			Concussion = 0x1E,
			ValueAndParts = 0x1F,
			AccumulateMagnitude = 0x20,
			Stagger = 0x21,
			PeakValueMod = 0x22,
			Cloak = 0x23,
			Werewolf = 0x24,
			SlowTime = 0x25,
			Rally = 0x26,
			EnhanceWeapon = 0x27,
			SpawnHazard = 0x28,
			Etherealize = 0x29,
			Banish = 0x2A,
			Disguise = 0x2C,
			GrabActor = 0x2D,
			VampireLord = 0x2E,
		};

		public interface class IMovementInterface : public NetScriptFramework::IVirtualObject { };

		public enum class ActorLifeStates : System::Int32
		{
			Alive = 0,
			Dying = 1,
			Dead = 2,
			Unconcious = 3,
			Reanimate = 4,
			Recycle = 5,
			Restrained = 6,
			EssentialDown = 7,
			Bleedout = 8,
		};

		public enum class ActorKnockStates : System::Int32
		{
			Normal = 0,
			Explode = 1,
			ExplodeLeadIn = 2,
			Out = 3,
			OutLeadIn = 4,
			Queued = 5,
			GetUp = 6,
			Down = 7,
			WaitForTaskQueue = 8,
		};

		public enum class ActorAttackStates : System::Int32
		{
			None = 0,
			Draw = 1,
			Swing = 2,
			Hit = 3,
			NextAttack = 4,
			FollowThrough = 5,
			Bash = 6,
			BowDraw = 8,
			BowAttached = 9,
			BowDrawn = 0xA,
			BowReleasing = 0xB,
			BowReleased = 0xC,
			BowNextAttack = 0xD,
			BowFollowThrough = 0xE,
			Fire = 0xF,
			Firing = 0x10,
			Fired = 0x11,
		};

		public enum class ActorWeaponStates : System::Int32
		{
			Sheathed = 0,
			WantToDraw = 1,
			Drawing = 2,
			Drawn = 3,
			WantToSheathe = 4,
			Sheathing = 5,
		};

		public interface class IPostAnimationChannelUpdateFunctor : public NetScriptFramework::IVirtualObject { };

		public enum class ActorFlags1 : System::UInt32
		{
			None = 0,
			DelayUpdateScenegraph = 1,
			ProcessMe = 2,
			MurderAlarm = 4,
			HasSceneExtra = 8,
			HeadingFixed = 0x10,
			SpeakingDone = 0x20,
			IgnoreChangeAnimationCall = 0x40,
			SoundFileDone = 0x80,
			VoiceFileDone = 0x100,
			InTempChangeList = 0x200,
			DoNotRunSayToCallback = 0x400,
			Dead = 0x800,
			ForceGreetingPlayer = 0x1000,
			ForceUpdateQuestTarget = 0x2000,
			SearchingInCombat = 0x4000,
			AttackOnNextTheft = 0x8000,
			EvpBuffered = 0x10000,
			ResetAI = 0x20000,
			InWater = 0x40000,
			Swimming = 0x80000,
			VoicePausedByScript = 0x100000,
			WasInFrustrum = 0x200000,
			ShouldRotateToTrack = 0x400000,
			SetOnDeath = 0x800000,
			DoNotPadVoice = 0x1000000,
			FootIKInRange = 0x2000000,
			PlayerTeammate = 0x4000000,
			GivePlayerXP = 0x8000000,
			SoundCallbackSuccess = 0x10000000,
			UseEmotion = 0x20000000,
			Guard = 0x40000000,
			Paralyzed = 0x80000000,
		};

		/// <summary>
		/// List of critical stages for actor.
		/// </summary>
		public enum class ActorCriticalStages : System::Int32
		{
			None = 0,
			GooStart = 1,
			GooEnd = 2,
			DisintegrateStart = 3,
			DisintegrateEnd = 4,
		};

		generic <typename BSTSmartPointerIntrusiveRefCount_T1>
		public interface class BSTSmartPointerIntrusiveRefCount : public NetScriptFramework::IMemoryObject { };

		public interface class AITimeStamp : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Single Timestamp
			{
				System::Single __clrcall get();
			}
		};

		generic <typename BSTSmallArrayHeapAllocator_T1>
		public interface class BSTSmallArrayHeapAllocator : public NetScriptFramework::IMemoryObject
		{
		public:
			/// <summary>
			/// Gets the capacity of array.
			/// </summary>
			property System::Int32 Capacity
			{
				System::Int32 __clrcall get();
			}

			property System::Boolean IsLocalAllocation
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Gets the allocation base pointer.
			/// </summary>
			property System::IntPtr Data
			{
				System::IntPtr __clrcall get();
			}
		};

		public enum class ActorFlags2 : System::UInt32
		{
			None = 0,
			ScenePackage = 1,
			IsAMount = 2,
			MountPointClear = 4,
			GettingOnOffMount = 8,
			InRandomScene = 0x10,
			NoBleedoutRecovery = 0x20,
			InBleedoutAnimation = 0x40,
			CanDoFavor = 0x80,
			ShouldAnimGraphUpdate = 0x100,
			CanSpeakToEssentialDown = 0x200,
			BribedByPlayer = 0x400,
			AngryWithPlayer = 0x800,
			IsTrespassing = 0x1000,
			CanSpeak = 0x2000,
			IsInKillMove = 0x4000,
			AttackOnSight = 0x8000,
			IsCommandedActor = 0x10000,
			ForceOneAnimgraphUpdate = 0x20000,
			Essential = 0x40000,
			Protected = 0x80000,
			AttackingDisabled = 0x100000,
			CastingDisabled = 0x200000,
			SceneHeadTrackRotation = 0x400000,
			ForceIncMinBoneUpdate = 0x800000,
			CrimeSearch = 0x1000000,
			MovingIntoLoadedArea = 0x2000000,
			DoNotShowOnStealthMeter = 0x4000000,
			MovementBlocked = 0x8000000,
			AllowInstantFurniturePopInPlayerCell = 0x10000000,
			ForceAnimGraphUpdate = 0x20000000,
			CheckAddEffectDualCast = 0x40000000,
			Underwater = 0x80000000,
		};

		public interface class ActorValueStorage : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Modifiers : public NetScriptFramework::IMemoryObject
			{
			public:
				property NetScriptFramework::FixedMemoryArray<System::Single>^ Values
				{
					NetScriptFramework::FixedMemoryArray<System::Single>^ __clrcall get();
				}
			};

			enum class ModifierTypes : System::Int32
			{
				Permanent = 0,
				Temporary = 1,
				Damage = 2,
			};

			generic <typename LocalMap_T1>
			interface class LocalMap : public NetScriptFramework::IMemoryObject { };

			property ActorValueStorage::LocalMap<System::Single>^ BaseValues
			{
				ActorValueStorage::LocalMap<System::Single>^ __clrcall get();
			}

			property ActorValueStorage::LocalMap<ActorValueStorage::Modifiers^>^ ModifierValues
			{
				ActorValueStorage::LocalMap<ActorValueStorage::Modifiers^>^ __clrcall get();
			}
		};

		/// <summary>
		/// List of combat states.
		/// </summary>
		public enum class ActorCombatStates : System::Int32
		{
			NotInCombat = 0,
			InCombat = 1,
			Searching = 2,
		};

		/// <summary>
		/// List of flying states.
		/// </summary>
		public enum class FlyingStates : System::Int32
		{
			NotFlying = 0,
			TakingOff = 1,
			Cruising = 2,
			Hovering = 3,
			Landing = 4,
		};

		/// <summary>
		/// List of equip biped slots.
		/// </summary>
		public enum class EquipSlots : System::Int32
		{
			Head = 0x1E,
			Hair = 0x1F,
			Body = 0x20,
			Hands = 0x21,
			Forearms = 0x22,
			Amulet = 0x23,
			Ring = 0x24,
			Feet = 0x25,
			Calves = 0x26,
			Shield = 0x27,
			Tail = 0x28,
			LongHair = 0x29,
			Circlet = 0x2A,
			Ears = 0x2B,
			DecapitatedHead_NordRace = 0x32,
			Decapitate_NordRace = 0x33,
			FX01 = 0x3D,
			Unused_FaceMouth = 0x2C,
			Unused_Neck = 0x2D,
			Unused_ChestPrimary = 0x2E,
			Unused_Back = 0x2F,
			Unused_Misc = 0x30,
			Unused_PelvisPrimary = 0x31,
			Unused_PelvisSecondary = 0x34,
			Unused_LegPrimary = 0x35,
			Unused_LegSecondary = 0x36,
			Unused_Jewelry = 0x37,
			Unused_ChestSecondary = 0x38,
			Unused_Shoulder = 0x39,
			Unused_ArmSecondary = 0x3A,
			Unused_ArmPrimary = 0x3B,
			Unused_Misc2 = 0x3C,
		};

		/// <summary>
		/// List of equipped item types (in hand).
		/// </summary>
		public enum class EquippedItemTypes : System::Int32
		{
			HandToHand = 0,
			OneHandedSword = 1,
			OneHandedDagger = 2,
			OneHandedAxe = 3,
			OneHandedMace = 4,
			TwoHandedSword = 5,
			TwoHandedAxeMace = 6,
			Bow = 7,
			Staff = 8,
			Magic = 9,
			Shield = 0xA,
			Torch = 0xB,
			Crossbow = 0xC,
		};

		/// <summary>
		/// Slots for equipping items in hands.
		/// </summary>
		public enum class EquippedHandSlots : System::Int32
		{
			LeftHand = 0,
			RightHand = 1,
		};

		/// <summary>
		/// List of reactions based on faction.
		/// </summary>
		public enum class FactionReactions : System::Int32
		{
			Neutral = 0,
			Enemy = 1,
			Ally = 2,
			Friend = 3,
		};

		/// <summary>
		/// List of relationship rank entries.
		/// </summary>
		public enum class RelationshipRanks : System::Int32
		{
			Lover = 4,
			Ally = 3,
			Confidant = 2,
			Friend = 1,
			Acquaintance = 0,
			Rival = -1,
			Foe = -2,
			Enemy = -3,
			Archnemesis = -4,
		};

		/// <summary>
		/// Types of character states.
		/// </summary>
		public enum class bhkCharacterStateTypes : System::Int32
		{
			OnGround = 0,
			Jumping = 1,
			InAir = 2,
			Climbing = 3,
			Flying = 4,
			Swimming = 5,
			Unknown = 0xFF,
		};

		/// <summary>
		/// Action states of actor.
		/// </summary>
		public enum class ActorActionStates : System::Int32
		{
			NotAction = 0,
			WantToStart = 2,
			InProgress = 3,
			WantToStop = 4,
		};

		public interface class ActorCopyGraphVariableChannel0 : public NetScriptFramework::IMemoryObject { };

		generic <typename ActorCopyGraphVariableChannel_T1, typename ActorCopyGraphVariableChannel_T2>
		public interface class ActorCopyGraphVariableChannel2 : public NetScriptFramework::IMemoryObject { };

		public interface class ActorDirectionChannel0 : public NetScriptFramework::IMemoryObject { };

		generic <typename ActorDirectionChannel_T1, typename ActorDirectionChannel_T2>
		public interface class ActorDirectionChannel2 : public NetScriptFramework::IMemoryObject { };

		public interface class ActorInventoryEvent : public NetScriptFramework::IMemoryObject { };

		public interface class ActorItemEquipped : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class ActorKill : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class BSTArrayHeapAllocator : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::IntPtr Data
			{
				System::IntPtr __clrcall get();
			}

			property System::Int32 Capacity
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class ActorLeftWeaponSpeedChannel0 : public NetScriptFramework::IMemoryObject { };

		generic <typename ActorLeftWeaponSpeedChannel_T1, typename ActorLeftWeaponSpeedChannel_T2>
		public interface class ActorLeftWeaponSpeedChannel2 : public NetScriptFramework::IMemoryObject { };

		public interface class ActorLookAtChannel0 : public NetScriptFramework::IMemoryObject { };

		generic <typename ActorLookAtChannel_T1, typename ActorLookAtChannel_T2>
		public interface class ActorLookAtChannel2 : public NetScriptFramework::IMemoryObject { };

		/// <summary>
		/// List of states for spell casting.
		/// </summary>
		public enum class MagicCastingStates : System::Int32
		{
			None = 0,
			Charging = 2,
			Charged = 3,
			Released = 4,
			Concentrating = 6,
		};

		generic <typename BSTSingletonSDMBase_T1>
		public interface class BSTSingletonSDMBase : /* BSTSingletonSDMBase_T1 */ public NetScriptFramework::IMemoryObject { };

		generic <typename BSTSDMTraits_T1, typename BSTSDMTraits_T2>
		public interface class BSTSDMTraits : public NetScriptFramework::IMemoryObject { };

		generic <typename ActorMovementMessageMap_T1>
		public interface class ActorMovementMessageMap : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class IMessageHandlerWrapper : public NetScriptFramework::IVirtualObject { };

			interface class RawMessageHandlerWrapperType : public NetScriptFramework::IMemoryObject { };

			generic <typename MessageHandlerWrapper_T1>
			interface class MessageHandlerWrapper : public ActorMovementMessageMap<ActorMovementMessageMap_T1>::IMessageHandlerWrapper, public NetScriptFramework::IVirtualObject { };
		};

		public interface class IPathFollowerAction : public NetScriptFramework::IVirtualObject { };

		public interface class ActorPackageData : public NetScriptFramework::IVirtualObject { };

		public interface class ActorPitchChannel0 : public NetScriptFramework::IMemoryObject { };

		generic <typename ActorPitchChannel_T1, typename ActorPitchChannel_T2>
		public interface class ActorPitchChannel2 : public NetScriptFramework::IMemoryObject { };

		public interface class ActorPitchDeltaChannel0 : public NetScriptFramework::IMemoryObject { };

		generic <typename ActorPitchDeltaChannel_T1, typename ActorPitchDeltaChannel_T2>
		public interface class ActorPitchDeltaChannel2 : public NetScriptFramework::IMemoryObject { };

		public interface class ActorRollChannel0 : public NetScriptFramework::IMemoryObject { };

		generic <typename ActorRollChannel_T1, typename ActorRollChannel_T2>
		public interface class ActorRollChannel2 : public NetScriptFramework::IMemoryObject { };

		public interface class ActorSpeedChannel0 : public NetScriptFramework::IMemoryObject { };

		generic <typename ActorSpeedChannel_T1, typename ActorSpeedChannel_T2>
		public interface class ActorSpeedChannel2 : public NetScriptFramework::IMemoryObject { };

		public interface class ActorTargetSpeedChannel0 : public NetScriptFramework::IMemoryObject { };

		generic <typename ActorTargetSpeedChannel_T1, typename ActorTargetSpeedChannel_T2>
		public interface class ActorTargetSpeedChannel2 : public NetScriptFramework::IMemoryObject { };

		public interface class ActorTimeDeltaChannel0 : public NetScriptFramework::IMemoryObject { };

		generic <typename ActorTimeDeltaChannel_T1, typename ActorTimeDeltaChannel_T2>
		public interface class ActorTimeDeltaChannel2 : public NetScriptFramework::IMemoryObject { };

		public interface class ActorTurnDeltaChannel0 : public NetScriptFramework::IMemoryObject { };

		generic <typename ActorTurnDeltaChannel_T1, typename ActorTurnDeltaChannel_T2>
		public interface class ActorTurnDeltaChannel2 : public NetScriptFramework::IMemoryObject { };

		/// <summary>
		/// Game's string cache entry pointer.
		/// </summary>
		public interface class BSFixedString : public NetScriptFramework::IMemoryObject
		{
		public:
			/// <summary>
			/// Get the text of this string cache entry.
			/// </summary>
			property System::String^ Text
			{
				System::String^ __clrcall get();
			}
		};

		public interface class BGSLocalizedStringDL : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::UInt32 Id
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class GFxMovieView : public NetScriptFramework::IMemoryObject { };

		public interface class GFxValue : public NetScriptFramework::IMemoryObject { };

		public interface class ActorWantBlockChannel0 : public NetScriptFramework::IMemoryObject { };

		generic <typename ActorWantBlockChannel_T1, typename ActorWantBlockChannel_T2>
		public interface class ActorWantBlockChannel2 : public NetScriptFramework::IMemoryObject { };

		public interface class ActorWardHealthChannel0 : public NetScriptFramework::IMemoryObject { };

		generic <typename ActorWardHealthChannel_T1, typename ActorWardHealthChannel_T2>
		public interface class ActorWardHealthChannel2 : public NetScriptFramework::IMemoryObject { };

		public interface class ActorWeaponSpeedChannel0 : public NetScriptFramework::IMemoryObject { };

		generic <typename ActorWeaponSpeedChannel_T1, typename ActorWeaponSpeedChannel_T2>
		public interface class ActorWeaponSpeedChannel2 : public NetScriptFramework::IMemoryObject { };

		public interface class BSTask : public NetScriptFramework::IVirtualObject { };

		public interface class hkBaseObject : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkBool : public NetScriptFramework::IMemoryObject { };

		public interface class hkpEntityListener : public NetScriptFramework::IVirtualObject { };

		public interface class hkpPhantomListener : public NetScriptFramework::IVirtualObject { };

		public interface class hkContainerHeapAllocator : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Allocator;
		};

		public interface class hkpCharacterProxyListener : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpWorldPostSimulationListener : public NetScriptFramework::IVirtualObject { };

		public interface class hkpMtThreadStructure : public NetScriptFramework::IMemoryObject { };

		public interface class hkMultiThreadCheck : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class AccessType : System::Int32
			{
				HK_ACCESS_IGNORE = 0,
				HK_ACCESS_RO = 1,
				HK_ACCESS_RW = 2,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class ReadMode : System::Int32
			{
				THIS_OBJECT_ONLY = 0,
				RECURSIVE = 1,
			};
		};

		generic <typename hkEnum_T1, typename hkEnum_T2>
		public interface class hkEnum : public NetScriptFramework::IMemoryObject { };

		public interface class hkpActionListener : public NetScriptFramework::IVirtualObject { };

		public interface class hkpConstraintListener : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpWorldDeletionListener : public NetScriptFramework::IVirtualObject { };

		public interface class hkpIslandActivationListener : public NetScriptFramework::IVirtualObject { };

		public interface class hkpWorldPostIntegrateListener : public NetScriptFramework::IVirtualObject { };

		public interface class hkpWorldPostCollideListener : public NetScriptFramework::IVirtualObject { };

		public interface class hkpIslandPostIntegrateListener : public NetScriptFramework::IVirtualObject { };

		public interface class hkpIslandPostCollideListener : public NetScriptFramework::IVirtualObject { };

		public interface class hkpContactListener : public NetScriptFramework::IVirtualObject { };

		public interface class hkpContactImpulseLimitBreachedListener : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkdWorld : public NetScriptFramework::IMemoryObject { };

		public interface class hknpWorld : public NetScriptFramework::IMemoryObject { };

		public interface class AITimer : public NetScriptFramework::IMemoryObject { };

		public interface class TESPackageData : public NetScriptFramework::IVirtualObject { };

		public interface class TESCondition : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Functions : System::Int16
			{
				GetWantBlocking = 0,
				GetDistance = 1,
				AddItem = 2,
				SetEssential = 3,
				Rotate = 4,
				GetLocked = 5,
				GetPos = 6,
				SetPos = 7,
				GetAngle = 8,
				SetAngle = 9,
				GetStartingPos = 0xA,
				GetStartingAngle = 0xB,
				GetSecondsPassed = 0xC,
				Activate = 0xD,
				GetActorValue = 0xE,
				SetActorValue = 0xF,
				ModActorValue = 0x10,
				SetAtStart = 0x11,
				GetCurrentTime = 0x12,
				PlayGroup = 0x13,
				LoopGroup = 0x14,
				SkipAnim = 0x15,
				StartCombat = 0x16,
				StopCombat = 0x17,
				GetScale = 0x18,
				IsMoving = 0x19,
				IsTurning = 0x1A,
				GetLineOfSight = 0x1B,
				AddSpell = 0x1C,
				RemoveSpell = 0x1D,
				Cast = 0x1E,
				GetButtonPressed = 0x1F,
				GetInSameCell = 0x20,
				Enable = 0x21,
				Disable = 0x22,
				GetDisabled = 0x23,
				MenuMode = 0x24,
				PlaceAtMe = 0x25,
				PlaySound = 0x26,
				GetDisease = 0x27,
				FailAllObjectives = 0x28,
				GetClothingValue = 0x29,
				SameFaction = 0x2A,
				SameRace = 0x2B,
				SameSex = 0x2C,
				GetDetected = 0x2D,
				GetDead = 0x2E,
				GetItemCount = 0x2F,
				GetGold = 0x30,
				GetSleeping = 0x31,
				GetTalkedToPC = 0x32,
				Say = 0x33,
				SayTo = 0x34,
				GetScriptVariable = 0x35,
				StartQuest = 0x36,
				StopQuest = 0x37,
				GetQuestRunning = 0x38,
				SetStage = 0x39,
				GetStage = 0x3A,
				GetStageDone = 0x3B,
				GetFactionRankDifference = 0x3C,
				GetAlarmed = 0x3D,
				IsRaining = 0x3E,
				GetAttacked = 0x3F,
				GetIsCreature = 0x40,
				GetLockLevel = 0x41,
				GetShouldAttack = 0x42,
				GetInCell = 0x43,
				GetIsClass = 0x44,
				GetIsRace = 0x45,
				GetIsSex = 0x46,
				GetInFaction = 0x47,
				GetIsID = 0x48,
				GetFactionRank = 0x49,
				GetGlobalValue = 0x4A,
				IsSnowing = 0x4B,
				FastTravel = 0x4C,
				GetRandomPercent = 0x4D,
				RemoveMusic = 0x4E,
				GetQuestVariable = 0x4F,
				GetLevel = 0x50,
				IsRotating = 0x51,
				RemoveItem = 0x52,
				GetLeveledEncounterValue = 0x53,
				GetDeadCount = 0x54,
				AddToMap = 0x55,
				StartConversation = 0x56,
				Drop = 0x57,
				AddTopic = 0x58,
				ShowMessage = 0x59,
				SetAlert = 0x5A,
				GetIsAlerted = 0x5B,
				Look = 0x5C,
				StopLook = 0x5D,
				EvaluatePackage = 0x5E,
				SendAssaultAlarm = 0x5F,
				EnablePlayerControls = 0x60,
				DisablePlayerControls = 0x61,
				GetPlayerControlsDisabled = 0x62,
				GetHeadingAngle = 0x63,
				PickIdle = 0x64,
				IsWeaponMagicOut = 0x65,
				IsTorchOut = 0x66,
				IsShieldOut = 0x67,
				CreateDetectionEvent = 0x68,
				IsActionRef = 0x69,
				IsFacingUp = 0x6A,
				GetKnockedState = 0x6B,
				GetWeaponAnimType = 0x6C,
				IsWeaponSkillType = 0x6D,
				GetCurrentAIPackage = 0x6E,
				IsWaiting = 0x6F,
				IsIdlePlaying = 0x70,
				CompleteQuest = 0x71,
				Lock = 0x72,
				UnLock = 0x73,
				IsIntimidatedByPlayer = 0x74,
				IsPlayerInRegion = 0x75,
				GetActorAggroRadiusViolated = 0x76,
				GetCrimeKnown = 0x77,
				SetEnemy = 0x78,
				SetAlly = 0x79,
				GetCrime = 0x7A,
				IsGreetingPlayer = 0x7B,
				StartMisterSandMan = 0x7C,
				IsGuard = 0x7D,
				StartCannibal = 0x7E,
				HasBeenEaten = 0x7F,
				GetStaminaPercentage = 0x80,
				GetPCIsClass = 0x81,
				GetPCIsRace = 0x82,
				GetPCIsSex = 0x83,
				GetPCInFaction = 0x84,
				SameFactionAsPC = 0x85,
				SameRaceAsPC = 0x86,
				SameSexAsPC = 0x87,
				GetIsReference = 0x88,
				SetFactionRank = 0x89,
				ModFactionRank = 0x8A,
				KillActor = 0x8B,
				ResurrectActor = 0x8C,
				IsTalking = 0x8D,
				GetWalkSpeed = 0x8E,
				GetCurrentAIProcedure = 0x8F,
				GetTrespassWarningLevel = 0x90,
				IsTrespassing = 0x91,
				IsInMyOwnedCell = 0x92,
				GetWindSpeed = 0x93,
				GetCurrentWeatherPercent = 0x94,
				GetIsCurrentWeather = 0x95,
				IsContinuingPackagePCNear = 0x96,
				SetCrimeFaction = 0x97,
				GetIsCrimeFaction = 0x98,
				CanHaveFlames = 0x99,
				HasFlames = 0x9A,
				AddFlames = 0x9B,
				RemoveFlames = 0x9C,
				GetOpenState = 0x9D,
				MoveToMarker = 0x9E,
				GetSitting = 0x9F,
				GetFurnitureMarkerID = 0xA0,
				GetIsCurrentPackage = 0xA1,
				IsCurrentFurnitureRef = 0xA2,
				IsCurrentFurnitureObj = 0xA3,
				SetSize = 0xA4,
				RemoveMe = 0xA5,
				DropMe = 0xA6,
				GetFactionReaction = 0xA7,
				SetFactionReaction = 0xA8,
				ModFactionReaction = 0xA9,
				GetDayOfWeek = 0xAA,
				IgnoreCrime = 0xAB,
				GetTalkedToPCParam = 0xAC,
				RemoveAllItems = 0xAD,
				WakeUpPC = 0xAE,
				IsPCSleeping = 0xAF,
				IsPCAMurderer = 0xB0,
				SetCombatStyle = 0xB1,
				PlaySound3D = 0xB2,
				SelectPlayerSpell = 0xB3,
				HasSameEditorLocAsRef = 0xB4,
				HasSameEditorLocAsRefAlias = 0xB5,
				GetEquipped = 0xB6,
				Wait = 0xB7,
				StopWaiting = 0xB8,
				IsSwimming = 0xB9,
				ScriptEffectElapsedSeconds = 0xBA,
				SetCellPublicFlag = 0xBB,
				GetPCSleepHours = 0xBC,
				SetPCSleepHours = 0xBD,
				GetAmountSoldStolen = 0xBE,
				ModAmountSoldStolen = 0xBF,
				GetIgnoreCrime = 0xC0,
				GetPCExpelled = 0xC1,
				SetPCExpelled = 0xC2,
				GetPCFactionMurder = 0xC3,
				SetPCFactionMurder = 0xC4,
				GetPCEnemyofFaction = 0xC5,
				SetPCEnemyofFaction = 0xC6,
				GetPCFactionAttack = 0xC7,
				SetPCFactionAttack = 0xC8,
				StartScene = 0xC9,
				StopScene = 0xCA,
				GetDestroyed = 0xCB,
				SetDestroyed = 0xCC,
				GetActionRef = 0xCD,
				GetSelf = 0xCE,
				GetContainer = 0xCF,
				GetForceRun = 0xD0,
				SetForceRun = 0xD1,
				GetForceSneak = 0xD2,
				SetForceSneak = 0xD3,
				AdvancePCSkill = 0xD4,
				AdvancePCLevel = 0xD5,
				HasMagicEffect = 0xD6,
				GetDefaultOpen = 0xD7,
				SetDefaultOpen = 0xD8,
				ShowClassMenu = 0xD9,
				ShowRaceMenu = 0xDA,
				GetAnimAction = 0xDB,
				ShowNameMenu = 0xDC,
				SetOpenState = 0xDD,
				ResetReference = 0xDE,
				IsSpellTarget = 0xDF,
				GetVATSMode = 0xE0,
				GetPersuasionNumber = 0xE1,
				GetVampireFeed = 0xE2,
				GetCannibal = 0xE3,
				GetIsClassDefault = 0xE4,
				GetClassDefaultMatch = 0xE5,
				GetInCellParam = 0xE6,
				UnusedFunction1 = 0xE7,
				GetCombatTarget = 0xE8,
				GetPackageTarget = 0xE9,
				ShowSpellMaking = 0xEA,
				GetVatsTargetHeight = 0xEB,
				SetGhost = 0xEC,
				GetIsGhost = 0xED,
				EquipItem = 0xEE,
				UnequipItem = 0xEF,
				SetClass = 0xF0,
				SetUnconscious = 0xF1,
				GetUnconscious = 0xF2,
				SetRestrained = 0xF3,
				GetRestrained = 0xF4,
				ForceFlee = 0xF5,
				GetIsUsedItem = 0xF6,
				GetIsUsedItemType = 0xF7,
				IsScenePlaying = 0xF8,
				IsInDialogueWithPlayer = 0xF9,
				GetLocationCleared = 0xFA,
				SetLocationCleared = 0xFB,
				ForceRefIntoAlias = 0xFC,
				EmptyRefAlias = 0xFD,
				GetIsPlayableRace = 0xFE,
				GetOffersServicesNow = 0xFF,
				GetGameSetting = 0x100,
				StopCombatAlarmOnActor = 0x101,
				HasAssociationType = 0x102,
				HasFamilyRelationship = 0x103,
				SetWeather = 0x104,
				HasParentRelationship = 0x105,
				IsWarningAbout = 0x106,
				IsWeaponOut = 0x107,
				HasSpell = 0x108,
				IsTimePassing = 0x109,
				IsPleasant = 0x10A,
				IsCloudy = 0x10B,
				TrapUpdate = 0x10C,
				ShowQuestObjectives = 0x10D,
				ForceActorValue = 0x10E,
				IncrementPCSkill = 0x10F,
				DoTrap = 0x110,
				EnableFastTravel = 0x111,
				IsSmallBump = 0x112,
				GetParentRef = 0x113,
				PlayBink = 0x114,
				GetBaseActorValue = 0x115,
				IsOwner = 0x116,
				SetOwnership = 0x117,
				IsCellOwner = 0x118,
				SetCellOwnership = 0x119,
				IsHorseStolen = 0x11A,
				SetCellFullName = 0x11B,
				SetActorFullName = 0x11C,
				IsLeftUp = 0x11D,
				IsSneaking = 0x11E,
				IsRunning = 0x11F,
				GetFriendHit = 0x120,
				IsInCombat = 0x121,
				SetPackDuration = 0x122,
				PlayMagicShaderVisuals = 0x123,
				PlayMagicEffectVisuals = 0x124,
				StopMagicShaderVisuals = 0x125,
				StopMagicEffectVisuals = 0x126,
				ResetInterior = 0x127,
				IsAnimPlaying = 0x128,
				SetActorAlpha = 0x129,
				EnableLinkedPathPoints = 0x12A,
				DisableLinkedPathPoints = 0x12B,
				IsInInterior = 0x12C,
				ForceWeather = 0x12D,
				ToggleActorsAI = 0x12E,
				IsActorsAIOff = 0x12F,
				IsWaterObject = 0x130,
				GetPlayerAction = 0x131,
				IsActorUsingATorch = 0x132,
				SetLevel = 0x133,
				ResetFallDamageTimer = 0x134,
				IsXBox = 0x135,
				GetInWorldspace = 0x136,
				ModPCMiscStat = 0x137,
				GetPCMiscStat = 0x138,
				GetPairedAnimation = 0x139,
				IsActorAVictim = 0x13A,
				GetTotalPersuasionNumber = 0x13B,
				SetScale = 0x13C,
				ModScale = 0x13D,
				GetIdleDoneOnce = 0x13E,
				KillAllActors = 0x13F,
				GetNoRumors = 0x140,
				SetNoRumors = 0x141,
				Dispel = 0x142,
				GetCombatState = 0x143,
				TriggerHitShader = 0x144,
				GetWithinPackageLocation = 0x145,
				Reset3DState = 0x146,
				IsRidingMount = 0x147,
				DispelAllSpells = 0x148,
				IsFleeing = 0x149,
				AddAchievement = 0x14A,
				DuplicateAllItems = 0x14B,
				IsInDangerousWater = 0x14C,
				EssentialDeathReload = 0x14D,
				SetShowQuestItems = 0x14E,
				DuplicateNPCStats = 0x14F,
				ResetHealth = 0x150,
				SetIgnoreFriendlyHits = 0x151,
				GetIgnoreFriendlyHits = 0x152,
				IsPlayersLastRiddenMount = 0x153,
				SetActorRefraction = 0x154,
				SetItemValue = 0x155,
				SetRigidBodyMass = 0x156,
				ShowViewerStrings = 0x157,
				ReleaseWeatherOverride = 0x158,
				SetAllReachable = 0x159,
				SetAllVisible = 0x15A,
				SetNoAvoidance = 0x15B,
				SendTrespassAlarm = 0x15C,
				SetSceneIsComplex = 0x15D,
				Autosave = 0x15E,
				StartMasterFileSeekData = 0x15F,
				DumpMasterFileSeekData = 0x160,
				IsActor = 0x161,
				IsEssential = 0x162,
				PreloadMagicEffect = 0x163,
				ShowDialogSubtitles = 0x164,
				SetPlayerResistingArrest = 0x165,
				IsPlayerMovingIntoNewSpace = 0x166,
				GetInCurrentLoc = 0x167,
				GetInCurrentLocAlias = 0x168,
				GetTimeDead = 0x169,
				HasLinkedRef = 0x16A,
				GetLinkedRef = 0x16B,
				DamageObject = 0x16C,
				IsChild = 0x16D,
				GetStolenItemValueNoCrime = 0x16E,
				GetLastPlayerAction = 0x16F,
				IsPlayerActionActive = 0x170,
				SetTalkingActivatorActor = 0x171,
				IsTalkingActivatorActor = 0x172,
				ShowBarterMenu = 0x173,
				IsInList = 0x174,
				GetStolenItemValue = 0x175,
				AddPerk = 0x176,
				GetCrimeGoldViolent = 0x177,
				GetCrimeGoldNonviolent = 0x178,
				ShowRepairMenu = 0x179,
				HasShout = 0x17A,
				AddNote = 0x17B,
				RemoveNote = 0x17C,
				GetHasNote = 0x17D,
				AddToFaction = 0x17E,
				RemoveFromFaction = 0x17F,
				DamageActorValue = 0x180,
				RestoreActorValue = 0x181,
				TriggerHUDShudder = 0x182,
				GetObjectiveFailed = 0x183,
				SetObjectiveFailed = 0x184,
				SetGlobalTimeMultiplier = 0x185,
				GetHitLocation = 0x186,
				IsPC1stPerson = 0x187,
				PurgeCellBuffers = 0x188,
				PushActorAway = 0x189,
				SetActorsAI = 0x18A,
				ClearOwnership = 0x18B,
				GetCauseofDeath = 0x18C,
				IsLimbGone = 0x18D,
				IsWeaponInList = 0x18E,
				PlayIdle = 0x18F,
				ApplyImageSpaceModifier = 0x190,
				RemoveImageSpaceModifier = 0x191,
				IsBribedbyPlayer = 0x192,
				GetRelationshipRank = 0x193,
				SetRelationshipRank = 0x194,
				SetCellImageSpace = 0x195,
				ShowChargenMenu = 0x196,
				GetVATSValue = 0x197,
				IsKiller = 0x198,
				IsKillerObject = 0x199,
				GetFactionCombatReaction = 0x19A,
				UseWeapon = 0x19B,
				EvaluateSpellConditions = 0x19C,
				ToggleMotionBlur = 0x19D,
				Exists = 0x19E,
				GetGroupMemberCount = 0x19F,
				GetGroupTargetCount = 0x1A0,
				SetObjectiveCompleted = 0x1A1,
				SetObjectiveDisplayed = 0x1A2,
				GetObjectiveCompleted = 0x1A3,
				GetObjectiveDisplayed = 0x1A4,
				SetImageSpace = 0x1A5,
				PipboyRadio = 0x1A6,
				RemovePerk = 0x1A7,
				DisableAllActors = 0x1A8,
				GetIsFormType = 0x1A9,
				GetIsVoiceType = 0x1AA,
				GetPlantedExplosive = 0x1AB,
				CompleteAllObjectives = 0x1AC,
				IsScenePackageRunning = 0x1AD,
				GetHealthPercentage = 0x1AE,
				SetAudioMultithreading = 0x1AF,
				GetIsObjectType = 0x1B0,
				ShowChargenMenuParams = 0x1B1,
				GetDialogueEmotion = 0x1B2,
				GetDialogueEmotionValue = 0x1B3,
				ExitGame = 0x1B4,
				GetIsCreatureType = 0x1B5,
				PlayerCreatePotion = 0x1B6,
				PlayerEnchantObject = 0x1B7,
				ShowWarning = 0x1B8,
				EnterTrigger = 0x1B9,
				MarkForDelete = 0x1BA,
				SetPlayerAIDriven = 0x1BB,
				GetInCurrentLocFormList = 0x1BC,
				GetInZone = 0x1BD,
				GetVelocity = 0x1BE,
				GetGraphVariableFloat = 0x1BF,
				HasPerk = 0x1C0,
				GetFactionRelation = 0x1C1,
				IsLastIdlePlayed = 0x1C2,
				SetNPCRadio = 0x1C3,
				SetPlayerTeammate = 0x1C4,
				GetPlayerTeammate = 0x1C5,
				GetPlayerTeammateCount = 0x1C6,
				OpenActorContainer = 0x1C7,
				ClearFactionPlayerEnemyFlag = 0x1C8,
				ClearActorsFactionsPlayerEnemyFlag = 0x1C9,
				GetActorCrimePlayerEnemy = 0x1CA,
				GetCrimeGold = 0x1CB,
				SetCrimeGold = 0x1CC,
				ModCrimeGold = 0x1CD,
				GetPlayerGrabbedRef = 0x1CE,
				IsPlayerGrabbedRef = 0x1CF,
				PlaceLeveledActorAtMe = 0x1D0,
				GetKeywordItemCount = 0x1D1,
				ShowLockpickMenu = 0x1D2,
				GetBroadcastState = 0x1D3,
				SetBroadcastState = 0x1D4,
				StartRadioConversation = 0x1D5,
				GetDestructionStage = 0x1D6,
				ClearDestruction = 0x1D7,
				CastImmediateOnSelf = 0x1D8,
				GetIsAlignment = 0x1D9,
				ResetQuest = 0x1DA,
				SetQuestDelay = 0x1DB,
				IsProtected = 0x1DC,
				GetThreatRatio = 0x1DD,
				MatchFaceGeometry = 0x1DE,
				GetIsUsedItemEquipType = 0x1DF,
				GetPlayerName = 0x1E0,
				FireWeapon = 0x1E1,
				PayCrimeGold = 0x1E2,
				UnusedFunction2 = 0x1E3,
				MatchRace = 0x1E4,
				SetPCYoung = 0x1E5,
				SexChange = 0x1E6,
				IsCarryable = 0x1E7,
				GetConcussed = 0x1E8,
				SetZoneRespawns = 0x1E9,
				SetVATSTarget = 0x1EA,
				GetMapMarkerVisible = 0x1EB,
				ResetInventory = 0x1EC,
				PlayerKnows = 0x1ED,
				GetPermanentActorValue = 0x1EE,
				GetKillingBlowLimb = 0x1EF,
				GoToJail = 0x1F0,
				CanPayCrimeGold = 0x1F1,
				ServeTime = 0x1F2,
				GetDaysInJail = 0x1F3,
				EPAlchemyGetMakingPoison = 0x1F4,
				EPAlchemyEffectHasKeyword = 0x1F5,
				ShowAllMapMarkers = 0x1F6,
				GetAllowWorldInteractions = 0x1F7,
				ResetAI = 0x1F8,
				SetRumble = 0x1F9,
				SetNoActivationSound = 0x1FA,
				ClearNoActivationSound = 0x1FB,
				GetLastHitCritical = 0x1FC,
				AddMusic = 0x1FD,
				UnusedFunction3 = 0x1FE,
				UnusedFunction4 = 0x1FF,
				SetPCToddler = 0x200,
				IsCombatTarget = 0x201,
				TriggerScreenBlood = 0x202,
				GetVATSRightAreaFree = 0x203,
				GetVATSLeftAreaFree = 0x204,
				GetVATSBackAreaFree = 0x205,
				GetVATSFrontAreaFree = 0x206,
				GetIsLockBroken = 0x207,
				IsPS3 = 0x208,
				IsWin32 = 0x209,
				GetVATSRightTargetVisible = 0x20A,
				GetVATSLeftTargetVisible = 0x20B,
				GetVATSBackTargetVisible = 0x20C,
				GetVATSFrontTargetVisible = 0x20D,
				AttachAshPile = 0x20E,
				SetCriticalStage = 0x20F,
				IsInCriticalStage = 0x210,
				RemoveFromAllFactions = 0x211,
				GetXPForNextLevel = 0x212,
				ShowLockpickMenuDebug = 0x213,
				ForceSave = 0x214,
				GetInfamy = 0x215,
				GetInfamyViolent = 0x216,
				GetInfamyNonViolent = 0x217,
				UnusedFunction5 = 0x218,
				Sin = 0x219,
				Cos = 0x21A,
				Tan = 0x21B,
				Sqrt = 0x21C,
				Log = 0x21D,
				Abs = 0x21E,
				GetQuestCompleted = 0x21F,
				UnusedFunction6 = 0x220,
				PipBoyRadioOff = 0x221,
				AutoDisplayObjectives = 0x222,
				IsGoreDisabled = 0x223,
				FadeSFX = 0x224,
				SetMinimalUse = 0x225,
				IsSceneActionComplete = 0x226,
				ShowQuestStages = 0x227,
				GetSpellUsageNum = 0x228,
				ForceRadioStationUpdate = 0x229,
				GetActorsInHigh = 0x22A,
				HasLoaded3D = 0x22B,
				DisableAllMines = 0x22C,
				SetLastExtDoorActivated = 0x22D,
				KillQuestUpdates = 0x22E,
				IsImageSpaceActive = 0x22F,
				HasKeyword = 0x230,
				HasRefType = 0x231,
				LocationHasKeyword = 0x232,
				LocationHasRefType = 0x233,
				CreateEvent = 0x234,
				GetIsEditorLocation = 0x235,
				GetIsAliasRef = 0x236,
				GetIsEditorLocAlias = 0x237,
				IsSprinting = 0x238,
				IsBlocking = 0x239,
				HasEquippedSpell = 0x23A,
				GetCurrentCastingType = 0x23B,
				GetCurrentDeliveryType = 0x23C,
				EquipSpell = 0x23D,
				GetAttackState = 0x23E,
				GetAliasedRef = 0x23F,
				GetEventData = 0x240,
				IsCloserToAThanB = 0x241,
				EquipShout = 0x242,
				GetEquippedShout = 0x243,
				IsBleedingOut = 0x244,
				UnlockWord = 0x245,
				TeachWord = 0x246,
				AddToContainer = 0x247,
				GetRelativeAngle = 0x248,
				SendAnimEvent = 0x249,
				Shout = 0x24A,
				AddShout = 0x24B,
				RemoveShout = 0x24C,
				GetMovementDirection = 0x24D,
				IsInScene = 0x24E,
				GetRefTypeDeadCount = 0x24F,
				GetRefTypeAliveCount = 0x250,
				ApplyHavokImpulse = 0x251,
				GetIsFlying = 0x252,
				IsCurrentSpell = 0x253,
				SpellHasKeyword = 0x254,
				GetEquippedItemType = 0x255,
				GetLocationAliasCleared = 0x256,
				SetLocationAliasCleared = 0x257,
				GetLocAliasRefTypeDeadCount = 0x258,
				GetLocAliasRefTypeAliveCount = 0x259,
				IsWardState = 0x25A,
				IsInSameCurrentLocAsRef = 0x25B,
				IsInSameCurrentLocAsRefAlias = 0x25C,
				LocAliasIsLocation = 0x25D,
				GetKeywordDataForLocation = 0x25E,
				SetKeywordDataForLocation = 0x25F,
				GetKeywordDataForAlias = 0x260,
				SetKeywordDataForAlias = 0x261,
				LocAliasHasKeyword = 0x262,
				IsNullPackageData = 0x263,
				GetNumericPackageData = 0x264,
				IsFurnitureAnimType = 0x265,
				IsFurnitureEntryType = 0x266,
				GetHighestRelationshipRank = 0x267,
				GetLowestRelationshipRank = 0x268,
				HasAssociationTypeAny = 0x269,
				HasFamilyRelationshipAny = 0x26A,
				GetPathingTargetOffset = 0x26B,
				GetPathingTargetAngleOffset = 0x26C,
				GetPathingTargetSpeed = 0x26D,
				GetPathingTargetSpeedAngle = 0x26E,
				GetMovementSpeed = 0x26F,
				GetInContainer = 0x270,
				IsLocationLoaded = 0x271,
				IsLocAliasLoaded = 0x272,
				IsDualCasting = 0x273,
				DualCast = 0x274,
				GetVMQuestVariable = 0x275,
				GetVMScriptVariable = 0x276,
				IsEnteringInteractionQuick = 0x277,
				IsCasting = 0x278,
				GetFlyingState = 0x279,
				SetFavorState = 0x27A,
				IsInFavorState = 0x27B,
				HasTwoHandedWeaponEquipped = 0x27C,
				IsExitingInstant = 0x27D,
				IsInFriendStateWithPlayer = 0x27E,
				GetWithinDistance = 0x27F,
				GetActorValuePercent = 0x280,
				IsUnique = 0x281,
				GetLastBumpDirection = 0x282,
				CameraShake = 0x283,
				IsInFurnitureState = 0x284,
				GetIsInjured = 0x285,
				GetIsCrashLandRequest = 0x286,
				GetIsHastyLandRequest = 0x287,
				UpdateQuestInstanceGlobal = 0x288,
				SetAllowFlying = 0x289,
				IsLinkedTo = 0x28A,
				GetKeywordDataForCurrentLocation = 0x28B,
				GetInSharedCrimeFaction = 0x28C,
				GetBribeAmount = 0x28D,
				GetBribeSuccess = 0x28E,
				GetIntimidateSuccess = 0x28F,
				GetArrestedState = 0x290,
				GetArrestingActor = 0x291,
				ClearArrestState = 0x292,
				EPTemperingItemIsEnchanted = 0x293,
				EPTemperingItemHasKeyword = 0x294,
				GetReceivedGiftValue = 0x295,
				GetGiftGivenValue = 0x296,
				ForceLocIntoAlias = 0x297,
				GetReplacedItemType = 0x298,
				SetHorseActor = 0x299,
				PlayReferenceEffect = 0x29A,
				StopReferenceEffect = 0x29B,
				PlayShaderParticleGeometry = 0x29C,
				StopShaderParticleGeometry = 0x29D,
				ApplyImageSpaceModifierCrossFade = 0x29E,
				RemoveImageSpaceModifierCrossFade = 0x29F,
				IsAttacking = 0x2A0,
				IsPowerAttacking = 0x2A1,
				IsLastHostileActor = 0x2A2,
				GetGraphVariableInt = 0x2A3,
				GetCurrentShoutVariation = 0x2A4,
				PlayImpactEffect = 0x2A5,
				ShouldAttackKill = 0x2A6,
				SendStealAlarm = 0x2A7,
				GetActivationHeight = 0x2A8,
				EPModSkillUsage_IsAdvanceSkill = 0x2A9,
				WornHasKeyword = 0x2AA,
				GetPathingCurrentSpeed = 0x2AB,
				GetPathingCurrentSpeedAngle = 0x2AC,
				KnockAreaEffect = 0x2AD,
				InterruptCast = 0x2AE,
				AddFormToFormList = 0x2AF,
				RevertFormList = 0x2B0,
				AddFormToLeveledList = 0x2B1,
				RevertLeveledList = 0x2B2,
				EPModSkillUsage_AdvanceObjectHasKeyword = 0x2B3,
				EPModSkillUsage_IsAdvanceAction = 0x2B4,
				EPMagic_SpellHasKeyword = 0x2B5,
				GetNoBleedoutRecovery = 0x2B6,
				SetNoBleedoutRecovery = 0x2B7,
				EPMagic_SpellHasSkill = 0x2B8,
				IsAttackType = 0x2B9,
				IsAllowedToFly = 0x2BA,
				HasMagicEffectKeyword = 0x2BB,
				IsCommandedActor = 0x2BC,
				IsStaggered = 0x2BD,
				IsRecoiling = 0x2BE,
				IsExitingInteractionQuick = 0x2BF,
				IsPathing = 0x2C0,
				GetShouldHelp = 0x2C1,
				HasBoundWeaponEquipped = 0x2C2,
				GetCombatTargetHasKeyword = 0x2C3,
				UpdateLevel = 0x2C4,
				GetCombatGroupMemberCount = 0x2C5,
				IsIgnoringCombat = 0x2C6,
				GetLightLevel = 0x2C7,
				SavePCFace = 0x2C8,
				SpellHasCastingPerk = 0x2C9,
				IsBeingRidden = 0x2CA,
				IsUndead = 0x2CB,
				GetRealHoursPassed = 0x2CC,
				UnequipAll = 0x2CD,
				IsUnlockedDoor = 0x2CE,
				IsHostileToActor = 0x2CF,
				GetTargetHeight = 0x2D0,
				IsPoison = 0x2D1,
				WornApparelHasKeywordCount = 0x2D2,
				GetItemHealthPercent = 0x2D3,
				EffectWasDualCast = 0x2D4,
				GetKnockStateEnum = 0x2D5,
				DoesNotExist = 0x2D6,
				UnequipItemSlot = 0x2D7,
				MountActor = 0x2D8,
				DismountActor = 0x2D9,
				IsOnFlyingMount = 0x2DA,
				CanFlyHere = 0x2DB,
				IsFlyingMountPatrolQueued = 0x2DC,
				IsFlyingMountFastTravelling = 0x2DD,
				IsOverEncumbered = 0x2DE,
				GetActorWarmth = 0x2DF,
			};

			enum class ReferenceTypes : System::SByte
			{
				Subject = 0,
				Target = 1,
				Reference = 2,
				CombatTarget = 3,
				LinkedReference = 4,
				QuestAlias = 5,
				PackageData = 6,
				EventData = 7,
				Player = 8,
			};

			enum class Opcodes : System::SByte
			{
				EqualTo = 0,
				NotEqualTo = 1,
				GreaterThan = 2,
				GreaterThanOrEqualTo = 3,
				LessThan = 4,
				LessThanOrEqualTo = 5,
			};

			interface class ComparisonOptions : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Byte Packed
				{
					System::Byte __clrcall get();
				}

				property System::Boolean IsOr
				{
					System::Boolean __clrcall get();
				}

				property System::Boolean IsAnd
				{
					System::Boolean __clrcall get();
				}

				property System::Boolean IsUsingAliases
				{
					System::Boolean __clrcall get();
				}

				[System::ObsoleteAttribute("The TESCondition::ComparisonOptions::IsGlobal property is not explicitly exported and could change in future versions. Use at your own risk!", false)]
				property System::Boolean IsGlobal
				{
					System::Boolean __clrcall get();
				}

				[System::ObsoleteAttribute("The TESCondition::ComparisonOptions::IsUsingPackData property is not explicitly exported and could change in future versions. Use at your own risk!", false)]
				property System::Boolean IsUsingPackData
				{
					System::Boolean __clrcall get();
				}

				[System::ObsoleteAttribute("The TESCondition::ComparisonOptions::SwapTarget property is not explicitly exported and could change in future versions. Use at your own risk!", false)]
				property System::Boolean SwapTarget
				{
					System::Boolean __clrcall get();
				}

				property TESCondition::Opcodes Opcode
				{
					TESCondition::Opcodes __clrcall get();
				}
			};

			interface class ConditionNode : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESCondition::ConditionNode^ Next
				{
					TESCondition::ConditionNode^ __clrcall get();
				}

				property System::Single ComparisonValue
				{
					System::Single __clrcall get();
				}

				property System::UInt32 ReferenceRefHandle
				{
					System::UInt32 __clrcall get();
				}

				property TESCondition::Functions Function
				{
					TESCondition::Functions __clrcall get();
				}

				property System::IntPtr Param1
				{
					System::IntPtr __clrcall get();
				}

				property System::IntPtr Param2
				{
					System::IntPtr __clrcall get();
				}

				property TESCondition::ComparisonOptions^ Options
				{
					TESCondition::ComparisonOptions^ __clrcall get();
				}

				property TESCondition::ReferenceTypes ReferenceType
				{
					TESCondition::ReferenceTypes __clrcall get();
				}
			};

			interface class Solution;

			property TESCondition::ConditionNode^ First
			{
				TESCondition::ConditionNode^ __clrcall get();
			}
		};

		public interface class BSResource : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class IEntryDB : public NetScriptFramework::IVirtualObject
			{
			public:
				interface class PostFlushNotify : public NetScriptFramework::IVirtualObject { };

				interface class NotifyLoadDone : public NetScriptFramework::IVirtualObject { };
			};

			interface class LocationTraverser : public NetScriptFramework::IVirtualObject { };

			interface class ArchiveFoundStreamCB : public NetScriptFramework::IVirtualObject { };

			generic <typename EntryDBTraits_T1, typename EntryDBTraits_T2>
			interface class EntryDBTraits : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class CArgs : public NetScriptFramework::IMemoryObject { };
			};

			generic <typename Directory_T1, typename Directory_T2>
			interface class Directory : public NetScriptFramework::IMemoryObject { };

			interface class anonymous_namespace : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class LooseFileAsyncBase : public NetScriptFramework::IMemoryObject
				{
				public:
					interface class FunctorType;
				};

				interface class LooseFileStreamBase : public NetScriptFramework::IMemoryObject { };

				interface class LooseFileSBTraits : public NetScriptFramework::IMemoryObject
				{
				public:
					interface class AsyncFunctor;
				};

				interface class ArchiveRegistrationTaskData;

				interface class AsyncArchiveStream;

				interface class DefaultLocationData;

				interface class DevNull;

				interface class EventSources;

				interface class GlobalLocations;

				interface class GlobalPaths;

				interface class LocationTree;

				interface class LooseFileAsyncChild;

				interface class LooseFileAsyncStream;

				interface class LooseFileStream;
			};

			interface class StreamBase : public NetScriptFramework::IVirtualObject { };

			interface class Location : public NetScriptFramework::IVirtualObject { };

			interface class ArchiveRegisteredEvent : public NetScriptFramework::IMemoryObject { };

			interface class ArchiveStreamOpenedEvent : public NetScriptFramework::IMemoryObject { };

			interface class ClearArchiveRegistryEvent : public NetScriptFramework::IMemoryObject { };

			interface class FileID : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::UInt32 File
				{
					System::UInt32 __clrcall get();
				}

				property System::IntPtr Extension
				{
					System::IntPtr __clrcall get();
				}
			};

			generic <typename Entry_T1, typename Entry_T2>
			interface class Entry : public NetScriptFramework::IMemoryObject { };

			interface class NameFoundEvent : public NetScriptFramework::IMemoryObject { };

			interface class ID : public BSResource::FileID, public NetScriptFramework::IMemoryObject
			{
			public:
				property System::UInt32 Directory
				{
					System::UInt32 __clrcall get();
				}
			};

			interface class CacheDrive : public BSResource::Location, public NetScriptFramework::IVirtualObject
			{
			public:
				interface class Op : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

				interface class Task : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

				interface class Impl;
			};

			interface class AsyncStream : public BSResource::StreamBase, public NetScriptFramework::IVirtualObject { };

			interface class Stream : public BSResource::StreamBase, public NetScriptFramework::IVirtualObject { };

			interface class LooseFileLocation : public BSResource::Location, public NetScriptFramework::IVirtualObject { };

			interface class ArchiveStream : public BSResource::Stream, public NetScriptFramework::IVirtualObject { };

			interface class CacheArchiveOp : public BSResource::CacheDrive::Op, public NetScriptFramework::IVirtualObject { };

			interface class CompressedArchiveStream : public BSResource::ArchiveStream, public NetScriptFramework::IVirtualObject { };

			generic <typename EntryDB_T1>
			interface class EntryDB;

			generic <typename EntryDBBase_T1>
			interface class EntryDBBase;

			interface class ArchiveManager;
		};

		public interface class IAnimationClipLoaderSingleton : public NetScriptFramework::IVirtualObject { };

		public interface class IAnimationStreamRead : public NetScriptFramework::IVirtualObject { };

		public interface class IAnimationStreamWrite : public NetScriptFramework::IVirtualObject { };

		public interface class AnimationSystemUtils : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class QueuedReferenceAnimationTask;

			interface class TESModelAndAnimationHandles;
		};

		public interface class BShkbHkxDB : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DBTraits : public NetScriptFramework::IMemoryObject { };

			interface class QueuedHandles;

			interface class DBData;

			interface class ProjectDBData;

			interface class StreamAdaptor;
		};

		public interface class TESModelDB : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class anonymous_namespace : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class TESProcessor;
			};

			interface class TESQueuedHandles;
		};

		public interface class BSModelDB : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DBTraits : public NetScriptFramework::IMemoryObject { };

			interface class QueuedHandles;

			interface class BSModelProcessor;
		};

		public interface class anonymous_namespace : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class ActorItemEquippedToMiscStatHandler : public BSTEventSink<ActorItemEquipped::Event^>, public NetScriptFramework::IVirtualObject { };

			interface class ActorKillToMiscStatHandler : public BSTEventSink<ActorKill::Event^>, public NetScriptFramework::IVirtualObject { };

			interface class anonymous_namespace_ : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class Pauser : public BSResource::IEntryDB::NotifyLoadDone, public NetScriptFramework::IVirtualObject { };

				interface class Traverser : public BSResource::LocationTraverser, public NetScriptFramework::IVirtualObject { };

				interface class MobDialogueFlagResetter;
			};

			interface class ArchiveRegistrationListener : public BSTEventSink<BSResource::ArchiveRegisteredEvent^>, public NetScriptFramework::IVirtualObject { };

			interface class bhkConstraintDisabler : public hkpConstraintListener, public NetScriptFramework::IVirtualObject { };

			interface class ClearArchiveRegistrationListener : public BSTEventSink<BSResource::ClearArchiveRegistryEvent^>, public NetScriptFramework::IVirtualObject { };

			interface class Compression : public NetScriptFramework::IMemoryObject { };

			generic <typename FavoriteItemHandler_T1, typename FavoriteItemHandler_T2>
			interface class FavoriteItemHandler : public BSTEventSink<FavoriteItemHandler_T2>, public NetScriptFramework::IVirtualObject { };

			interface class GetStatsNode : public NetScriptFramework::IVirtualObject { };

			interface class HavokLink : public BSExtraData, public NetScriptFramework::IVirtualObject { };

			generic <typename MiscStatIncrementer_T1>
			interface class MiscStatIncrementer : public BSTEventSink<MiscStatIncrementer_T1>, public NetScriptFramework::IVirtualObject { };

			interface class NavmeshMovementPostPhysicsListener : public hkpWorldPostSimulationListener, public NetScriptFramework::IVirtualObject { };

			interface class PathBuilderBSPathingRequest : public NetScriptFramework::IMemoryObject { };

			interface class PathBuilderClosePointPath : public NetScriptFramework::IMemoryObject { };

			interface class PathBuilderPathingRequest : public NetScriptFramework::IMemoryObject { };

			interface class PathBuilderRotatePath : public NetScriptFramework::IMemoryObject { };

			interface class PathBuilderStopMovingPath : public NetScriptFramework::IMemoryObject { };

			interface class QUEUED_ATTACH : public NetScriptFramework::IMemoryObject { };

			interface class ScriptArchiveRegistered : public BSTEventSink<BSResource::ArchiveRegisteredEvent^>, public NetScriptFramework::IVirtualObject { };

			interface class StatsStarSelector : public NetScriptFramework::IVirtualObject { };

			interface class StatsStarSelectorPC : public NetScriptFramework::IVirtualObject { };

			interface class UpdateConstellationAnims : public NetScriptFramework::IVirtualObject { };

			interface class UpdateStarText : public NetScriptFramework::IVirtualObject { };

			interface class LZ4Compression : public anonymous_namespace::Compression, public NetScriptFramework::IVirtualObject { };

			interface class ZLibCompression : public anonymous_namespace::Compression, public NetScriptFramework::IVirtualObject { };

			interface class ActivateChoiceMenuCallbackFunctor;

			interface class ActiveMagicEffectEventArguments;

			interface class ActorEquipArguments;

			interface class ActorLocationChangeArguments;

			interface class ActorTargetCheck;

			interface class ActorValueFormFactory;

			interface class AddExtraMissingRefIDFunctor;

			interface class AddPackagesToListFunc;

			interface class AliasAddPackagesToListFunc;

			interface class AnimationEventArguments;

			interface class ApparelUnequipper;

			interface class ApplyAllDecalsRefFunctor;

			interface class ArmorRatingVisitor;

			interface class ArmorRatingVisitorBase;

			interface class AttachLightHitEffectVisitor;

			interface class AudioLoadTask;

			interface class AutoDoorFadeCallback;

			generic <typename AutoRegisterCombatMagicCaster_T1>
			interface class AutoRegisterCombatMagicCaster;

			interface class bhkClosestRBRayHitCollector;

			interface class bhkLifoAllocator;

			interface class bhkTiltPreventAction;

			interface class bhkWheelAction;

			interface class BookReadToMiscStatHandler;

			interface class BountyToMiscStatHandler;

			interface class BSHashMapEventFindFunctor;

			interface class BShkbAnimationGraphLoadScrapper;

			interface class BSResourceAssetLoader;

			interface class BSScaleformAllocatorPaged;

			interface class BSScaleformSysMemMapper;

			interface class CanCastWornEnchantmentVisitor;

			interface class CastAliasSpellVisitor;

			interface class CastWornEnchantmentsVisitor;

			interface class CellAcousticSpaceListener;

			interface class CheckEndReachedFunctorMapper;

			interface class CheckLineOfSightTriangleFlagFiltersAdapter;

			interface class CheckNavmeshPathFilter;

			interface class CheckSphereVisitor;

			interface class CheckSummonedActorEffect;

			interface class Clear1nTracksFilter;

			interface class ClearPrecomputedPathFlag;

			interface class ClipAddingFunctor;

			interface class CloakEffectCallbackFunctor;

			interface class CollectUsedUniqueIDsFunctor;

			interface class CollectUsedUniqueIDsVisitor;

			interface class CompileExpressionFunctor;

			interface class ConfirmAndNameCallback;

			interface class ConfirmCloseRaceSexMenuCallback;

			interface class ConfirmDestructiveChangesCallback;

			interface class ConfirmLevelUpAttributeCallback;

			interface class ConsoleLogPrinter;

			interface class ContainerChangedEventArguments;

			interface class ContainerEventArguments;

			interface class CountActorValueEffects;

			interface class CountObjectsWithKeywordFunctor;

			interface class CriticalHitToMiscStatHandler;

			interface class DaysJailedToMiscStatHandler;

			interface class DaysPassedToMiscStatHandler;

			interface class DecalApplier;

			interface class DeepCopyStream;

			interface class DefaultObjectInitListener;

			interface class DeferredUpdate;

			interface class DestructionStageChangedArguments;

			interface class DeviceSelectCallback;

			interface class DisarmedToMiscStatHandler;

			interface class DispelAliasSpellVisitor;

			interface class DispelAppropriateEffectsVisitor;

			interface class DispelEffectFunctor;

			interface class DispelFirstOnlyFunctor;

			interface class DispelWornItemEnchantsVisitor;

			interface class EmptyCallbackFunctor;

			interface class EventCallbackAdapter;

			interface class FadeThenFastTravelCallback;

			interface class FadeThenLoadCallback;

			interface class FadeThenMainMenuCallback;

			interface class FastTravelConfirmCallback;

			interface class FavoriteShoutHandler;

			interface class FavoriteSpellHandler;

			interface class FavoriteWeaponHandler;

			interface class FindAppropriateDisplaceEffect;

			interface class FindClosestOpenEdgeFunctor;

			interface class FindFormTypeHelper;

			interface class FindPreferredConnectedNavmeshInfosWithinRadiusVisitor;

			interface class FinesPaidToMiscStatHandler;

			interface class ForwardingPackfileListerer;

			interface class GetArmorInSlotFunctor;

			interface class GetClothingValueVisitor;

			interface class GetMagicItemDescriptionFunctor;

			interface class GetMiscStatInfoFunc;

			interface class GetVMConditionalVariableValueFunc;

			interface class GraphPhysicsStepListener;

			interface class GraphVarTypeQuery;

			interface class HandleEntryPointVisitor;

			interface class HarvestToMiscStatHandler;

			interface class HasSameUsageEffect;

			interface class HavokThreadMemorySink;

			interface class HitArguments;

			interface class hkEntitySelectorAll;

			interface class hkEntitySelectorListed;

			interface class hkNativeResource;

			interface class hkpCompressedMeshShapeShared;

			interface class hkpTiltPreventAction;

			interface class hkpWheelAction;

			interface class HoursPassedToMiscStatHandler;

			interface class InitItemPerkRankDataVisitor;

			interface class InitWornVisitor;

			interface class InternedStringRefCounted;

			interface class InventoryToMiscStatHandler;

			interface class iStateTaggingFunctor;

			interface class IsTeleportDoorOnPath;

			interface class ItemCraftedToMiscStatHandler;

			interface class ItemsPickpocketedToMiscStatHandler;

			interface class ItemsStolenToMiscStatHandler;

			interface class LegendarySkillResetConfirmCallback;

			interface class LevelIncreaseToMiscStatHandler;

			interface class LoadGameMissingContentCallBack;

			interface class LoadMenuOpenCloseListener;

			interface class LocationDiscoveryToMiscStatHandler;

			interface class LoggingDisabler;

			interface class LogWriteThread;

			interface class LooseAudioRegistrar;

			interface class LOSEventArguments;

			interface class MagicCastOnTarget;

			interface class MagicEffectApplyArguments;

			interface class MagicMenuAddActiveEffectVisitor;

			interface class MagicMenuAddSpellVisitor;

			interface class MagicWardHitArguments;

			interface class MainCullingCamera;

			interface class MapEventFindFunctor;

			interface class MemoryManagerFileFactory;

			interface class MenuModeChangeListener;

			interface class ModsChanged_ConfirmResetCallback;

			interface class MonitorAPO;

			interface class MovementControllerAIAdapter;

			interface class NearestHitCollector;

			interface class NeverCollideFilter;

			interface class NoMusic;

			interface class NonDialogSubCategory;

			interface class NormalDoorFadeCallback;

			interface class NullAssetLoader;

			interface class NullCallbackFunctor;

			interface class NullMapCameraCallbacks;

			interface class ObjectFactoryVisitor;

			interface class ObjectiveStateToMiscStatHandler;

			interface class ObjectTypeFinder;

			interface class OldMessageBoxCallback;

			interface class OnCombatStateChangedArguments;

			interface class OutputInfoStream;

			interface class PathSmootherRayCastBuildNodesForLargeZDelta;

			interface class PerkFragmentArguments;

			interface class PerkSelectConfirmCallback;

			interface class PhysicsWorldHandler;

			interface class PickpocketToMiscStatHandler;

			interface class PlacePlayerMarkerCallbackFunctor;

			interface class PlayerBowShotArguments;

			interface class PlayerControlsEGMClear;

			interface class PlayerParentCellListener;

			interface class PreloadCountVisitor;

			interface class PreloadModelsVisitor;

			interface class PreloadWornItemEnchantsVisitor;

			interface class PrintPapyrusObjectsOnAliasToConsole;

			interface class PrintPapyrusObjectsOnMagicEffectToConsole;

			interface class PrintPapyrusObjectsToConsole;

			interface class QualifyAsCurrentPackage;

			interface class QuestStatusToMiscStatHandler;

			interface class QueuedMagicItem;

			interface class RandomDialogueStoryEventProcessor;

			interface class RefreshEnchantedWeaponsVisitor;

			interface class ResetElapsedTimeMatchingEffects;

			interface class ReverbModCallback;

			interface class RotateNormalHitCollector;

			interface class SceneActionResultsCallBack;

			interface class ScenePhaseResultsCallBack;

			interface class SceneResultsCallBack;

			interface class ScriptFoundCallback;

			interface class SetPapyrusVarFunctor;

			interface class ShouldRunDefaultWornVisitor;

			interface class SingleActorArgument;

			interface class SingleObjectRefrHandleArgument;

			interface class SinglePackageArgument;

			interface class SingleRefAliasFunctionArguments;

			generic <typename SingleSimpleArgument_T1>
			interface class SingleSimpleArgument;

			interface class SkillIncreaseToMiscStatHandler;

			interface class SkipJumpNode;

			interface class SortIntersectingEdgesFunctor;

			interface class SpellCastArguments;

			interface class SpendSoulCallback;

			interface class StageItemFinishedCallback;

			interface class StandardDetectionListener;

			interface class StopHitEffectsVisitor;

			interface class StopStartEquipabilityFunctor;

			interface class StoreEnchantedItemsVisitor;

			interface class SynchronizedClipGenVisitor;

			interface class SynchronizedClipNameVisitor;

			interface class TESObjectREFRFactory;

			interface class TopicResultCallBack;

			interface class TrackedStatsEventFunctor;

			interface class TrapHitArguments;

			interface class TrespassToMiscStatHandler;

			interface class UnequipAllVisitor;

			interface class UnequipArmorFunctor;

			interface class UnloadWornItemEnchantsVisitor;

			interface class UpdateAllDecalsRefFunctor;

			interface class UpdateArmorWornVisitor;

			interface class WarmthCalcFunc;

			interface class Win32FileType;

			interface class VMInitThread;

			interface class WordLearnedToMiscStatHandler;

			interface class WordUnlockedToMiscStatHandler;
		};

		public interface class BSScript : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class IFunctionArguments : public NetScriptFramework::IVirtualObject { };

			interface class IStackCallbackFunctor : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

			interface class IForEachScriptObjectFunctor : public NetScriptFramework::IVirtualObject { };

			interface class anonymous_namespace : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class LinkerConvertTypeFunctor;

				interface class VMTypeResolveFunctor;
			};

			interface class UnlinkedTypes : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class Function : public NetScriptFramework::IMemoryObject
				{
				public:
					interface class ConvertTypeFunctor : public NetScriptFramework::IVirtualObject { };
				};

				interface class anonymous_namespace : public NetScriptFramework::IMemoryObject
				{
				public:
					interface class BuildInstructionOffsetMapFunctor;

					interface class CollectStringsFunctor;

					interface class CountInstructionInfo;

					interface class UnpackInstructionsFunctor;

					interface class WriteInstructionsFunctor;
				};

				interface class InstructionStream : public NetScriptFramework::IMemoryObject
				{
				public:
					interface class InstructionFunctor : public NetScriptFramework::IVirtualObject { };
				};
			};

			interface class ByteCode : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class PackedInstructionStream : public NetScriptFramework::IMemoryObject
				{
				public:
					interface class InstructionFunctor : public NetScriptFramework::IVirtualObject { };
				};
			};

			interface class ILoader : public NetScriptFramework::IVirtualObject { };

			interface class LogEvent : public NetScriptFramework::IMemoryObject { };

			interface class IFindBoundObjectFunctor : public NetScriptFramework::IVirtualObject { };

			interface class IFreezeQuery : public NetScriptFramework::IVirtualObject { };

			interface class IFunction : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject
			{
			public:
				/// <summary>
				/// Gets the source file name.
				/// </summary>
				property System::String^ SourceFileName
				{
					System::String^ __clrcall get();
				}

				/// <summary>
				/// Gets the name of function.
				/// </summary>
				property System::String^ FunctionName
				{
					System::String^ __clrcall get();
				}

				/// <summary>
				/// Gets the parent object type name.
				/// </summary>
				property System::String^ ObjectTypeName
				{
					System::String^ __clrcall get();
				}
			};

			interface class IHandleReaderWriter : public NetScriptFramework::IVirtualObject { };

			interface class IMemoryPagePolicy : public NetScriptFramework::IVirtualObject { };

			interface class Internal : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class anonymous_namespace : public NetScriptFramework::IMemoryObject
				{
				public:
					interface class OneVariableArgument : public BSScript::IFunctionArguments, public NetScriptFramework::IVirtualObject { };

					interface class ZeroArguments : public BSScript::IFunctionArguments, public NetScriptFramework::IVirtualObject { };
				};

				interface class AutoPropGetFunction : public BSScript::IFunction, public NetScriptFramework::IVirtualObject { };

				interface class AutoPropSetFunction : public BSScript::IFunction, public NetScriptFramework::IVirtualObject { };

				interface class IFuncCallQuery : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

				interface class FunctionMessage : public NetScriptFramework::IMemoryObject { };

				interface class NativeFunctionStub : public BSScript::IFunction, public NetScriptFramework::IVirtualObject { };

				interface class ScriptFunction : public BSScript::IFunction, public NetScriptFramework::IVirtualObject { };

				interface class SuspendedStack : public NetScriptFramework::IMemoryObject { };

				interface class VDescTable : public NetScriptFramework::IMemoryObject
				{
				public:
					interface class Entry;

					property System::IntPtr Entries
					{
						System::IntPtr __clrcall get();
					}

					property System::UInt16 ParamCount
					{
						System::UInt16 __clrcall get();
					}

					property System::UInt16 TotalEntries
					{
						System::UInt16 __clrcall get();
					}
				};

				interface class RawFuncCallQuery : public BSScript::Internal::IFuncCallQuery, public NetScriptFramework::IVirtualObject { };

				interface class CodeTasklet;

				interface class VirtualMachine;
			};

			interface class IVirtualMachine : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

			interface class IVMObjectBindInterface : public NetScriptFramework::IVirtualObject { };

			interface class IVMSaveLoadInterface : public NetScriptFramework::IVirtualObject { };

			interface class IVMDebugInterface : public NetScriptFramework::IVirtualObject { };

			interface class StatsEvent : public NetScriptFramework::IMemoryObject { };

			interface class IObjectHandlePolicy : public NetScriptFramework::IVirtualObject { };

			interface class IObjectProcessor : public NetScriptFramework::IVirtualObject { };

			interface class IProfilePolicy : public NetScriptFramework::IVirtualObject { };

			interface class ISavePatcherInterface : public NetScriptFramework::IVirtualObject { };

			interface class IStackCallbackSaveInterface : public NetScriptFramework::IVirtualObject { };

			interface class NF_util : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class NativeFunctionBase;
			};

			interface class StaticFunctionTag : public NetScriptFramework::IMemoryObject { };

			interface class ObjectBindPolicy : public NetScriptFramework::IVirtualObject { };

			interface class CompiledScriptLoader : public BSScript::ILoader, public NetScriptFramework::IVirtualObject { };

			interface class LinkerProcessor : public BSScript::IObjectProcessor, public NetScriptFramework::IVirtualObject { };

			interface class SimpleAllocMemoryPagePolicy : public BSScript::IMemoryPagePolicy, public NetScriptFramework::IVirtualObject { };

			interface class ZeroFunctionArguments : public BSScript::IFunctionArguments, public NetScriptFramework::IVirtualObject { };

			interface class ErrorLogger;

			interface class Stack;

			interface class StackFrame;

			interface class IStore;

			generic <typename NativeFunction0_T1, typename NativeFunction0_T2>
			interface class NativeFunction0;

			interface class TypeInfo;

			generic <typename NativeFunction1_T1, typename NativeFunction1_T2, typename NativeFunction1_T3>
			interface class NativeFunction1;

			generic <typename NativeFunction10_T1, typename NativeFunction10_T2, typename NativeFunction10_T3, typename NativeFunction10_T4, typename NativeFunction10_T5, typename NativeFunction10_T6, typename NativeFunction10_T7, typename NativeFunction10_T8, typename NativeFunction10_T9, typename NativeFunction10_T10, typename NativeFunction10_T11, typename NativeFunction10_T12>
			interface class NativeFunction10;

			generic <typename NativeFunction11_T1, typename NativeFunction11_T2, typename NativeFunction11_T3, typename NativeFunction11_T4, typename NativeFunction11_T5, typename NativeFunction11_T6, typename NativeFunction11_T7, typename NativeFunction11_T8, typename NativeFunction11_T9, typename NativeFunction11_T10, typename NativeFunction11_T11, typename NativeFunction11_T12, typename NativeFunction11_T13>
			interface class NativeFunction11;

			generic <typename NativeFunction2_T1, typename NativeFunction2_T2, typename NativeFunction2_T3, typename NativeFunction2_T4>
			interface class NativeFunction2;

			generic <typename NativeFunction3_T1, typename NativeFunction3_T2, typename NativeFunction3_T3, typename NativeFunction3_T4, typename NativeFunction3_T5>
			interface class NativeFunction3;

			generic <typename NativeFunction4_T1, typename NativeFunction4_T2, typename NativeFunction4_T3, typename NativeFunction4_T4, typename NativeFunction4_T5, typename NativeFunction4_T6>
			interface class NativeFunction4;

			generic <typename NativeFunction5_T1, typename NativeFunction5_T2, typename NativeFunction5_T3, typename NativeFunction5_T4, typename NativeFunction5_T5, typename NativeFunction5_T6, typename NativeFunction5_T7>
			interface class NativeFunction5;

			generic <typename NativeFunction6_T1, typename NativeFunction6_T2, typename NativeFunction6_T3, typename NativeFunction6_T4, typename NativeFunction6_T5, typename NativeFunction6_T6, typename NativeFunction6_T7, typename NativeFunction6_T8>
			interface class NativeFunction6;

			generic <typename NativeFunction8_T1, typename NativeFunction8_T2, typename NativeFunction8_T3, typename NativeFunction8_T4, typename NativeFunction8_T5, typename NativeFunction8_T6, typename NativeFunction8_T7, typename NativeFunction8_T8, typename NativeFunction8_T9, typename NativeFunction8_T10>
			interface class NativeFunction8;

			generic <typename NativeFunction9_T1, typename NativeFunction9_T2, typename NativeFunction9_T3, typename NativeFunction9_T4, typename NativeFunction9_T5, typename NativeFunction9_T6, typename NativeFunction9_T7, typename NativeFunction9_T8, typename NativeFunction9_T9, typename NativeFunction9_T10, typename NativeFunction9_T11>
			interface class NativeFunction9;

			generic <typename NativeLatentFunction0_T1, typename NativeLatentFunction0_T2>
			interface class NativeLatentFunction0;

			generic <typename NativeLatentFunction1_T1, typename NativeLatentFunction1_T2, typename NativeLatentFunction1_T3>
			interface class NativeLatentFunction1;

			generic <typename NativeLatentFunction10_T1, typename NativeLatentFunction10_T2, typename NativeLatentFunction10_T3, typename NativeLatentFunction10_T4, typename NativeLatentFunction10_T5, typename NativeLatentFunction10_T6, typename NativeLatentFunction10_T7, typename NativeLatentFunction10_T8, typename NativeLatentFunction10_T9, typename NativeLatentFunction10_T10, typename NativeLatentFunction10_T11, typename NativeLatentFunction10_T12>
			interface class NativeLatentFunction10;

			generic <typename NativeLatentFunction2_T1, typename NativeLatentFunction2_T2, typename NativeLatentFunction2_T3, typename NativeLatentFunction2_T4>
			interface class NativeLatentFunction2;

			generic <typename NativeLatentFunction3_T1, typename NativeLatentFunction3_T2, typename NativeLatentFunction3_T3, typename NativeLatentFunction3_T4, typename NativeLatentFunction3_T5>
			interface class NativeLatentFunction3;

			generic <typename NativeLatentFunction4_T1, typename NativeLatentFunction4_T2, typename NativeLatentFunction4_T3, typename NativeLatentFunction4_T4, typename NativeLatentFunction4_T5, typename NativeLatentFunction4_T6>
			interface class NativeLatentFunction4;

			generic <typename NativeLatentFunction5_T1, typename NativeLatentFunction5_T2, typename NativeLatentFunction5_T3, typename NativeLatentFunction5_T4, typename NativeLatentFunction5_T5, typename NativeLatentFunction5_T6, typename NativeLatentFunction5_T7>
			interface class NativeLatentFunction5;

			generic <typename NativeLatentFunction9_T1, typename NativeLatentFunction9_T2, typename NativeLatentFunction9_T3, typename NativeLatentFunction9_T4, typename NativeLatentFunction9_T5, typename NativeLatentFunction9_T6, typename NativeLatentFunction9_T7, typename NativeLatentFunction9_T8, typename NativeLatentFunction9_T9, typename NativeLatentFunction9_T10, typename NativeLatentFunction9_T11>
			interface class NativeLatentFunction9;

			interface class Variable;

			interface class ObjectTypeInfo;

			interface class Array;

			interface class Object;

			interface class TypeInfo : public NetScriptFramework::IMemoryObject
			{
			public:
				enum class PrimitiveTypes : System::UInt64
				{
					None = 0,
					Object = 1,
					String = 2,
					Int = 3,
					Float = 4,
					Bool = 5,
					NoneArray = 0xA,
					ObjectArray = 0xB,
					StringArray = 0xC,
					IntArray = 0xD,
					FloatArray = 0xE,
					BoolArray = 0xF,
				};

				property BSScript::TypeInfo::PrimitiveTypes TypeData
				{
					BSScript::TypeInfo::PrimitiveTypes __clrcall get();
				}

				/// <summary>
				/// Check if this type is a boolean value.
				/// </summary>
				property System::Boolean IsBool
				{
					System::Boolean __clrcall get();
				}

				/// <summary>
				/// Check if the type is an array of any kind.
				/// </summary>
				property System::Boolean IsArray
				{
					System::Boolean __clrcall get();
				}

				/// <summary>
				/// Check if this type is a float value.
				/// </summary>
				property System::Boolean IsFloat
				{
					System::Boolean __clrcall get();
				}

				/// <summary>
				/// Check if this type is an int value.
				/// </summary>
				property System::Boolean IsInt
				{
					System::Boolean __clrcall get();
				}

				/// <summary>
				/// Check if this type is a primitive type array (not class or none).
				/// </summary>
				property System::Boolean IsLiteralArray
				{
					System::Boolean __clrcall get();
				}

				/// <summary>
				/// Check if this type is a none array.
				/// </summary>
				property System::Boolean IsNoneArray
				{
					System::Boolean __clrcall get();
				}

				/// <summary>
				/// Check if this type is a none object.
				/// </summary>
				property System::Boolean IsNoneObject
				{
					System::Boolean __clrcall get();
				}

				/// <summary>
				/// Check if this type is a class object.
				/// </summary>
				property System::Boolean IsObject
				{
					System::Boolean __clrcall get();
				}

				/// <summary>
				/// Check if this type is a class array.
				/// </summary>
				property System::Boolean IsObjectArray
				{
					System::Boolean __clrcall get();
				}

				/// <summary>
				/// Check if this type is a string value.
				/// </summary>
				property System::Boolean IsString
				{
					System::Boolean __clrcall get();
				}

				/// <summary>
				/// Gets the underlying object type info. This is only valid if this is an Object or ObjectArray.
				/// </summary>
				property BSScript::ObjectTypeInfo^ UnderlyingObjectTypeInfo
				{
					BSScript::ObjectTypeInfo^ __clrcall get();
				}
			};

			interface class Variable : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class ValueData;

				property BSScript::TypeInfo^ VariableType
				{
					BSScript::TypeInfo^ __clrcall get();
				}

				property BSScript::Variable::ValueData^ VariableValue
				{
					BSScript::Variable::ValueData^ __clrcall get();
				}
			};
		};

		public interface class IFormFactory : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class IFactoryVisitor : public NetScriptFramework::IVirtualObject { };
		};

		public interface class TESObjectREFRDef : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class ILinkedReferenceFunctor : public NetScriptFramework::IVirtualObject { };

			interface class IAliasFunctor : public NetScriptFramework::IVirtualObject { };
		};

		public interface class PackageList : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class IPackageVisitor : public NetScriptFramework::IMemoryObject { };
		};

		public interface class MobIterOperator : public NetScriptFramework::IVirtualObject { };

		public interface class InventoryChanges : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class IItemChangeVisitor : public NetScriptFramework::IVirtualObject { };

			interface class FindBestSoulGemVisitor : public InventoryChanges::IItemChangeVisitor, public NetScriptFramework::IVirtualObject { };
		};

		generic <typename AutoRegisterFactory_T1, typename AutoRegisterFactory_T2>
		public interface class AutoRegisterFactory : /* AutoRegisterFactory_T1 */ public NetScriptFramework::IVirtualObject { };

		generic <typename IBSTCreator_T1>
		public interface class IBSTCreator : public NetScriptFramework::IVirtualObject { };

		public interface class hkpRayHitCollector : public NetScriptFramework::IVirtualObject { };

		public interface class hkMemoryAllocator : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class ExtendedInterface : public NetScriptFramework::IVirtualObject { };

			enum class MemoryState : System::Int32
			{
				MEMORY_STATE_OK = 0,
				MEMORY_STATE_OUT_OF_MEMORY = 1,
			};

			interface class MemoryStatistics : public NetScriptFramework::IMemoryObject { };
		};

		public interface class BSSynchronizedClipGeneratorUtils : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class FindEventFunctor : public NetScriptFramework::IVirtualObject { };
		};

		public interface class BSAnimationGraphLoadScrapper : public NetScriptFramework::IVirtualObject { };

		public interface class GSysAllocBase : public NetScriptFramework::IVirtualObject { };

		public interface class GSysMemoryMap : public NetScriptFramework::IVirtualObject { };

		public interface class ICheckEndReachedFunctorMapper : public NetScriptFramework::IVirtualObject { };

		public interface class hkpCollidableCollidableFilter : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpShapeCollectionFilter : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpRayShapeCollectionFilter : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpRayCollidableFilter : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };
		};

		public interface class BShkbUtils : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class GraphInspectionFunctor : public NetScriptFramework::IVirtualObject { };

			interface class SaveDataRestoreFunctor : public BShkbUtils::GraphInspectionFunctor, public NetScriptFramework::IVirtualObject { };

			interface class ProspectiveEventClipAddingFunctor;
		};

		public interface class IStringForwarder : public NetScriptFramework::IVirtualObject { };

		public interface class NiStream : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class BackgroundLoadProcedure;
		};

		generic <typename BSTMessageQueue_T1>
		public interface class BSTMessageQueue : public NetScriptFramework::IVirtualObject { };

		public interface class MagicItemTraversalFunctor : public NetScriptFramework::IVirtualObject { };

		public interface class IAnimationSetCallbackFunctor : public NetScriptFramework::IVirtualObject { };

		public interface class SpellAttack : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public enum class EffectSettingCastingTypes16 : System::UInt16
		{
			ConstantEffect = 0,
			FireAndForget = 1,
			Concentration = 2,
			Scroll = 3,
		};

		public enum class SoundLevels : System::Int32
		{
			Loud = 0,
			Normal = 1,
			Silent = 2,
			VeryLoud = 3,
			Quiet = 4,
		};

		public interface class WeaponAttack : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class ShoutAttack : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class MiscStatManager : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class IMiscStatVisitor : public NetScriptFramework::IMemoryObject { };

			interface class anonymous_namespace : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class RevertStatVisitor : public MiscStatManager::IMiscStatVisitor, public NetScriptFramework::IVirtualObject { };

				interface class SaveStatVisitor : public MiscStatManager::IMiscStatVisitor, public NetScriptFramework::IVirtualObject { };
			};

			interface class FindStatByCRC : public MiscStatManager::IMiscStatVisitor, public NetScriptFramework::IVirtualObject { };
		};

		public interface class bhkIWorldStepListener : public NetScriptFramework::IVirtualObject { };

		public interface class BSAnimGraphVisit : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class BShkbVisitor : public NetScriptFramework::IVirtualObject { };
		};

		public interface class PerkEntryVisitor : public NetScriptFramework::IVirtualObject { };

		public interface class hkpSaveContactPointsUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class EntitySelector : public NetScriptFramework::IVirtualObject { };

			interface class LoadPointsInput : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class SavePointsInput : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public enum class hkpShapeType : System::Int32
		{
			HK_SHAPE_INVALID = 0,
			HK_SHAPE_SPHERE = 1,
			HK_FIRST_SHAPE_TYPE = 1,
			HK_SHAPE_CYLINDER = 2,
			HK_SHAPE_TRIANGLE = 3,
			HK_SHAPE_BOX = 4,
			HK_SHAPE_CAPSULE = 5,
			HK_SHAPE_CONVEX_VERTICES = 6,
			HK_SHAPE_COLLECTION = 7,
			HK_SHAPE_BV_TREE = 8,
			HK_SHAPE_LIST = 9,
			HK_SHAPE_MOPP = 0xA,
			HK_SHAPE_CONVEX_TRANSLATE = 0xB,
			HK_SHAPE_CONVEX_TRANSFORM = 0xC,
			HK_SHAPE_SAMPLED_HEIGHT_FIELD = 0xD,
			HK_SHAPE_EXTENDED_MESH = 0xE,
			HK_SHAPE_TRANSFORM = 0xF,
			HK_SHAPE_COMPRESSED_MESH = 0x10,
			HK_SHAPE_COMPOUND = 0x11,
			HK_SHAPE_MAX_ID_SPU = 0x12,
			HK_SHAPE_CONVEX = 0x13,
			HK_SHAPE_MOPP_EMBEDDED = 0x14,
			HK_SHAPE_CONVEX_PIECE = 0x15,
			HK_SHAPE_MULTI_SPHERE = 0x16,
			HK_SHAPE_CONVEX_LIST = 0x17,
			HK_SHAPE_TRIANGLE_COLLECTION = 0x18,
			HK_SHAPE_MULTI_RAY = 0x19,
			HK_SHAPE_HEIGHT_FIELD = 0x1A,
			HK_SHAPE_SPHERE_REP = 0x1B,
			HK_SHAPE_BV = 0x1C,
			HK_SHAPE_PLANE = 0x1D,
			HK_SHAPE_PHANTOM_CALLBACK = 0x1E,
			HK_SHAPE_USER0 = 0x1F,
			HK_SHAPE_USER1 = 0x20,
			HK_SHAPE_USER2 = 0x21,
			HK_SHAPE_MAX_ID = 0x22,
			HK_SHAPE_ALL = -1,
		};

		public interface class hkpShapeContainer : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class ReferencePolicy : System::Int32
			{
				REFERENCE_POLICY_IGNORE = 0,
				REFERENCE_POLICY_INCREMENT = 1,
			};
		};

		public interface class hkpWeldingUtility : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class WeldingType : System::Int32
			{
				WELDING_TYPE_ANTICLOCKWISE = 0,
				WELDING_TYPE_CLOCKWISE = 4,
				WELDING_TYPE_TWO_SIDED = 5,
				WELDING_TYPE_NONE = 6,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class NumAngles : System::Int32
			{
				NUM_ANGLES = 0x1F,
			};

			enum class SectorType : System::Int32
			{
				ACCEPT_0 = 1,
				SNAP_0 = 0,
				REJECT = 2,
				SNAP_1 = 4,
				ACCEPT_1 = 3,
			};

			interface class SinCosTableEntry : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkpMeshMaterial : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkStringPtr : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class StringFlags : System::Int32
			{
				OWNED_FLAG = 1,
			};

			property System::String^ m_stringAndFlag
			{
				System::String^ __clrcall get();
			}
		};

		public interface class PerkRankVisitor : public NetScriptFramework::IVirtualObject { };

		generic <typename GRefCountBaseStatImpl_T1, typename GRefCountBaseStatImpl_T2>
		public interface class GRefCountBaseStatImpl : /* GRefCountBaseStatImpl_T1 */ public NetScriptFramework::IVirtualObject { };

		public interface class GRefCountImplCore : public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Int32 RefCount
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class GFxLogConstants : public NetScriptFramework::IMemoryObject { };

		generic <typename BSTSingletonImplicit_T1>
		public interface class BSTSingletonImplicit1 : public NetScriptFramework::IMemoryObject { };

		public interface class BSTreeManager : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class IQueryCullingCamera : public NetScriptFramework::IVirtualObject { };
		};

		generic <typename BSTSingletonExplicit_T1>
		public interface class BSTSingletonExplicit : public NetScriptFramework::IMemoryObject { };

		public interface class AssaultCrime : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class ChestsLooted : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class ContractedDisease : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class DragonSoulGained : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class GrandTheftHorse : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class JailEscape : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class Jailing : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class LocationCleared : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class LocksPicked : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class MurderCrime : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class PoisonedWeapon : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class ShoutMastered : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class SoulGemsUsed : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class SoulsTrapped : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class SpellsLearned : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class TimesBartered : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class TimesTrained : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class IUnknown0 : public NetScriptFramework::IMemoryObject { };

		public interface class IMovementControllerNPCFunctor : public NetScriptFramework::IVirtualObject { };

		public interface class BSIMusicTrack : public NetScriptFramework::IVirtualObject
		{
		public:
			enum class MusicStates : System::Int32
			{
				Inactive = 0,
				Playing = 1,
				Paused = 2,
				Finishing = 3,
				Finished = 4,
			};

			property BSIMusicTrack::MusicStates TrackStatus
			{
				BSIMusicTrack::MusicStates __clrcall get();
			}
		};

		public interface class BSISoundCategory : public NetScriptFramework::IVirtualObject { };

		public interface class IMapCameraCallbacks : public NetScriptFramework::IVirtualObject { };

		public interface class NiBinaryStream : public NetScriptFramework::IVirtualObject
		{
		public:
			property System::UInt32 CurrentPosition
			{
				System::UInt32 __clrcall get();
			}

			property System::IntPtr ReadFunction
			{
				System::IntPtr __clrcall get();
			}

			property System::IntPtr WriteFunction
			{
				System::IntPtr __clrcall get();
			}
		};

		public interface class IPathSmootherRayCast : public NetScriptFramework::IVirtualObject { };

		public interface class IXAudio2EngineCallback : public NetScriptFramework::IMemoryObject { };

		public interface class REFREventCallbacks : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class IEventCallback : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

			interface class IEventCallbackFactory : public NetScriptFramework::IVirtualObject { };

			generic <typename ConcreteEventCallbackFactory_T1>
			interface class ConcreteEventCallbackFactory : public REFREventCallbacks::IEventCallbackFactory, public NetScriptFramework::IVirtualObject { };
		};

		public interface class AppResourceCaching : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class anonymous_namespace : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class CacheESMOp : public BSResource::CacheDrive::Op, public NetScriptFramework::IVirtualObject { };

				interface class Manager;
			};
		};

		public interface class BSArchiveHeader : public NetScriptFramework::IMemoryObject { };

		public interface class hkDataRefCounted : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public enum class ImpactResults : System::Int32
		{
			None = 0,
			Destroy = 1,
			Bounce = 2,
			Impale = 3,
			Stick = 4,
		};

		public interface class BSFastNavmeshTriLocation : public NetScriptFramework::IMemoryObject { };

		public interface class BSFastNavmeshEdgeHandle : public NetScriptFramework::IMemoryObject { };

		generic <typename AStarSearch_T1, typename AStarSearch_T2, typename AStarSearch_T3>
		public interface class AStarSearch : public NetScriptFramework::IVirtualObject { };

		public interface class BSNavmeshInfo : public NetScriptFramework::IMemoryObject { };

		public interface class BSPathSmootherPOVNode : public NetScriptFramework::IMemoryObject { };

		public interface class BSPathSmootherPOVLink : public NetScriptFramework::IMemoryObject { };

		public interface class ParentSpaceNode : public NetScriptFramework::IMemoryObject { };

		public interface class TeleportLink : public NetScriptFramework::IMemoryObject { };

		generic <typename BSTHashMapTraits_T1, typename BSTHashMapTraits_T2, typename BSTHashMapTraits_T3>
		public interface class BSTHashMapTraits : public NetScriptFramework::IMemoryObject { };

		generic <typename BSTScatterTable_T1, typename BSTScatterTable_T2, typename BSTScatterTable_T3, typename BSTScatterTable_T4, typename BSTScatterTable_T5, typename BSTScatterTable_T6>
		public interface class BSTScatterTable : public NetScriptFramework::IMemoryObject { };

		generic <typename CombatInventoryItemMagicT_T1, typename CombatInventoryItemMagicT_T2>
		public interface class CombatInventoryItemMagicT : /* CombatInventoryItemMagicT_T1 */ public NetScriptFramework::IVirtualObject { };

		generic <typename CombatPathRequest_T1>
		public interface class CombatPathRequest : public NetScriptFramework::IMemoryObject { };

		public interface class CombatPathDestination : public NetScriptFramework::IMemoryObject { };

		public interface class CombatPathingGoalPolicy : public NetScriptFramework::IMemoryObject { };

		public interface class CombatPathingSearchPolicy : public NetScriptFramework::IMemoryObject { };

		public interface class IPathBuilderFactoryBase : public NetScriptFramework::IVirtualObject { };

		public interface class CombatPathingRequestBuilder : public NetScriptFramework::IVirtualObject { };

		public interface class BSFixedStringCI : public NetScriptFramework::IMemoryObject { };

		generic <typename BSTCreateFactoryManager_T1, typename BSTCreateFactoryManager_T2, typename BSTCreateFactoryManager_T3>
		public interface class BSTCreateFactoryManager : public NetScriptFramework::IMemoryObject { };

		generic <typename BGSTypedItem_T1, typename BGSTypedItem_T2>
		public interface class BGSTypedItem : /* BGSTypedItem_T2 */ public NetScriptFramework::IMemoryObject { };

		public interface class IAIWorldLocation : public NetScriptFramework::IVirtualObject { };

		public interface class BGSAIWorldLocationFactory : public NetScriptFramework::IMemoryObject { };

		public interface class BShkNonTransformController : public NetScriptFramework::IVirtualObject { };

		generic <typename BGSNamedPackageData_T1>
		public interface class BGSNamedPackageData : /* BGSNamedPackageData_T1 */ public NetScriptFramework::IVirtualObject
		{
		public:
			property System::IntPtr Data
			{
				System::IntPtr __clrcall get();
			}
		};

		public interface class IPackageData : public NetScriptFramework::IVirtualObject { };

		public interface class IAIWorldLocationHandle : public NetScriptFramework::IVirtualObject { };

		public interface class PackageTarget : public NetScriptFramework::IMemoryObject { };

		generic <typename BGSProcedureTyped_T1, typename BGSProcedureTyped_T2>
		public interface class BGSProcedureTyped : /* BGSProcedureTyped_T1 */ public NetScriptFramework::IVirtualObject { };

		public interface class IProcedure : public NetScriptFramework::IVirtualObject { };

		public interface class IProcedureTreeExecState : public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureTreeExecStateFactory : public NetScriptFramework::IMemoryObject { };

		public interface class IProcedureTreeItem : public NetScriptFramework::IVirtualObject { };

		public interface class BSISoundDescriptor : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class BSIPlaybackCharacteristics : public NetScriptFramework::IVirtualObject { };
		};

		public interface class BSAudio : public NetScriptFramework::IVirtualObject { };

		generic <typename BSTSmartPointerPathingFactoryManager_T1, typename BSTSmartPointerPathingFactoryManager_T2>
		public interface class BSTSmartPointerPathingFactoryManager : public NetScriptFramework::IMemoryObject { };

		public interface class IUIMessageData : public NetScriptFramework::IVirtualObject { };

		public interface class BSString : public NetScriptFramework::IMemoryObject
		{
		public:
			/// <summary>
			/// Gets the text.
			/// </summary>
			property System::String^ Text
			{
				System::String^ __clrcall get();
			}

			property System::UInt16 Length
			{
				System::UInt16 __clrcall get();
			}

			property System::UInt16 BufferSize
			{
				System::UInt16 __clrcall get();
			}
		};

		public interface class IPipelineStageInterface : public NetScriptFramework::IVirtualObject { };

		public interface class IMovementPlayIdleResult : public NetScriptFramework::IVirtualObject { };

		public interface class BSTSingletonImplicit0 : public NetScriptFramework::IMemoryObject { };

		generic <typename BSTFactoryManager_T1, typename BSTFactoryManager_T2, typename BSTFactoryManager_T3, typename BSTFactoryManager_T4>
		public interface class BSTFactoryManager : public NetScriptFramework::IMemoryObject { };

		public interface class PathBuilderFlee : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class PathBuilderFleePath : public NetScriptFramework::IMemoryObject { };
		};

		public interface class PathBuilderFlight : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class PathBuilderFlyPath : public NetScriptFramework::IMemoryObject { };

			interface class PathBuilderFlyActionPath : public NetScriptFramework::IMemoryObject { };

			interface class PathBuilderFlyHoverPath : public NetScriptFramework::IMemoryObject { };

			interface class PathBuilderFlyLandPath : public NetScriptFramework::IMemoryObject { };

			interface class PathBuilderFlyOrbitPath : public NetScriptFramework::IMemoryObject { };

			interface class PathBuilderFlyTakeOffPath : public NetScriptFramework::IMemoryObject { };
		};

		public interface class PathBuilderHide : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class PathBuilderHidePath : public NetScriptFramework::IMemoryObject { };
		};

		public interface class PathBuilderLOS : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class PathBuilderLOSPath : public NetScriptFramework::IMemoryObject { };
		};

		public interface class PathBuilderOptimalLocation : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class PathBuilderOptimalLocationPath : public NetScriptFramework::IMemoryObject { };
		};

		public interface class PathBuilderSafeStraightLine : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class PathBuilderSafeStraightLinePath : public NetScriptFramework::IMemoryObject { };
		};

		public enum class TESCameraStates : System::Int32
		{
			FirstPerson = 0,
			AutoVanity = 1,
			VATS = 2,
			Free = 3,
			IronSights = 4,
			Furniture = 5,
			Transition = 6,
			TweenMenu = 7,
			ThirdPerson1 = 8,
			ThirdPerson2 = 9,
			Horse = 0xA,
			Bleedout = 0xB,
			Dragon = 0xC,
		};

		public enum class IMenuFlags : System::UInt32
		{
			None = 0,
			PausesGame = 1,
			AlwaysOpen = 2,
			UsesCursor = 4,
			UsesMenuContext = 8,
			Modal = 0x10,
			FreezeFrameBackground = 0x20,
			OnStack = 0x40,
			DisablePauseMenu = 0x80,
			RequiresUpdate = 0x100,
			TopmostRenderedMenu = 0x200,
			UpdateUsesCursor = 0x400,
			AllowSaving = 0x800,
			RendersOffscreenTargets = 0x1000,
			InventoryItemMenu = 0x2000,
			DontHideCursorWhenTopmost = 0x4000,
			CustomRendering = 0x8000,
			AssignCursorToRenderer = 0x10000,
			ApplicationMenu = 0x20000,
			HasButtonBar = 0x40000,
			IsTopButtonBar = 0x80000,
			AdvancesUnderPauseMenu = 0x100000,
			RendersUnderPauseMenu = 0x200000,
			UsesBlurredBackground = 0x400000,
			CompanionAppAllowed = 0x800000,
			FreezeFramePause = 0x1000000,
			SkipRenderDuringFreezeFrameScreenshot = 0x2000000,
			LargeScaleformRenderCacheMode = 0x4000000,
			UsesMovementToDirection = 0x8000000,
		};

		public enum class InputContextIds : System::Int32
		{
			Gameplay = 0,
			MenuMode = 1,
			Console = 2,
			ItemMenu = 3,
			Inventory = 4,
			DebugText = 5,
			Favorites = 6,
			Map = 7,
			Stats = 8,
			Cursor = 9,
			Book = 0xA,
			DebugOverlay = 0xB,
			Journal = 0xC,
			TFCMode = 0xD,
			MapDebug = 0xE,
			Lockpicking = 0xF,
			Favor = 0x10,
		};

		public interface class uchar : public NetScriptFramework::IMemoryObject { };

		public interface class BeamProjectileImpactEvent : public NetScriptFramework::IMemoryObject { };

		/// <summary>
		/// Game mutex class.
		/// </summary>
		public interface class Mutex : public NetScriptFramework::IMemoryObject
		{
		public:
			/// <summary>
			/// Locks the mutex with method #1.
			/// </summary>
			void Lock();

			/// <summary>
			/// Unlocks the mutex with method #1.
			/// </summary>
			void Unlock();
		};

		public interface class bgs : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class saveload : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class Request : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

				interface class BuildSaveListRequest : public bgs::saveload::Request, public NetScriptFramework::IVirtualObject { };

				interface class LoadEntryRequest : public bgs::saveload::Request, public NetScriptFramework::IVirtualObject { };

				interface class LoadRequest : public bgs::saveload::Request, public NetScriptFramework::IVirtualObject { };

				interface class SaveOperationRequest : public bgs::saveload::Request, public NetScriptFramework::IVirtualObject { };
			};
		};

		public interface class BGSPerkEntry : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Header : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::SByte Rank
				{
					System::SByte __clrcall get();
				}

				property System::SByte Priority
				{
					System::SByte __clrcall get();
				}
			};

			property BGSPerkEntry::Header^ PerkHeader
			{
				BGSPerkEntry::Header^ __clrcall get();
			}
		};

		public interface class BGSActorCellEvent : public NetScriptFramework::IMemoryObject { };

		public interface class BGSActorDeathEvent : public NetScriptFramework::IMemoryObject { };

		public interface class BGSAnimSoundEvent : public NetScriptFramework::IMemoryObject { };

		public interface class BGSAttachTechniquesUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class ProcessTechniquesFunctor : public NetScriptFramework::IVirtualObject { };

			interface class AttachTechniquesFunctor : public BGSAttachTechniquesUtil::ProcessTechniquesFunctor, public NetScriptFramework::IVirtualObject { };

			interface class DetachTechniquesFunctor : public BGSAttachTechniquesUtil::ProcessTechniquesFunctor, public NetScriptFramework::IVirtualObject { };
		};

		generic <typename BSTHashMap_T1, typename BSTHashMap_T2>
		public interface class BSTHashMap2 : public NetScriptFramework::IMemoryObject, public System::Collections::Generic::IEnumerable<System::Collections::Generic::KeyValuePair<BSTHashMap_T1, BSTHashMap_T2>>
		{
		public:
			property System::Int32 Capacity
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 Count
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class BGSBtoDB : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DBTraits : public NetScriptFramework::IMemoryObject { };
		};

		public interface class BGSBtrDB : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DBTraits : public NetScriptFramework::IMemoryObject { };
		};

		public interface class BGSBttDB : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DBTraits : public NetScriptFramework::IMemoryObject { };
		};

		public interface class Color : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Byte Red
			{
				System::Byte __clrcall get();

				void __clrcall set(System::Byte value);
			}

			property System::Byte Green
			{
				System::Byte __clrcall get();

				void __clrcall set(System::Byte value);
			}

			property System::Byte Blue
			{
				System::Byte __clrcall get();

				void __clrcall set(System::Byte value);
			}

			property System::Byte Alpha
			{
				System::Byte __clrcall get();

				void __clrcall set(System::Byte value);
			}
		};

		public interface class BGSCollisionSoundEvent : public NetScriptFramework::IMemoryObject { };

		public interface class BGSCombatImpactEvent : public NetScriptFramework::IMemoryObject { };

		public enum class NiAVObjectFlags : System::UInt32
		{
			None = 0,
			Hidden = 1,
			SelectiveUpdate = 2,
			SelectiveUpdateTransforms = 4,
			SelectiveUpdateController = 8,
			SelectiveUpdateRigid = 0x10,
			DisplayObject = 0x20,
			DisableSorting = 0x40,
			SelectiveUpdateTransformsOverride = 0x80,
			IgnoreLocalTransform = 0x200,
			NoDecals = 0x400,
			AlwaysDraw = 0x800,
			MeshLOD = 0x1000,
			FixedBound = 0x2000,
			TopFadeNode = 0x4000,
			IgnoreFade = 0x8000,
			NoAnimSyncX = 0x10000,
			NoAnimSyncY = 0x20000,
			NoAnimSyncZ = 0x40000,
			NoAnimSyncS = 0x80000,
			NoDismember = 0x100000,
			NoDismemberValidity = 0x200000,
			RenderUse = 0x400000,
			MaterialsApplied = 0x800000,
			HighDetail = 0x1000000,
			ForceUpdate = 0x2000000,
			PreProcessedNode = 0x4000000,
		};

		public enum class DialogueTypes : System::Int32
		{
			PlayerDialogue = 0,
			CommandDialogue = 1,
			BranchedTotal = 2,
			Combat = 3,
			Favors = 4,
			Detection = 5,
			Service = 6,
			Miscellaneous = 7,
		};

		public interface class BGSDistantObjectBlock : public NetScriptFramework::IMemoryObject { };

		public interface class BGSEntryPointFunctionData : public NetScriptFramework::IVirtualObject
		{
		public:
			enum class FunctionTypes : System::Int32
			{
				Invalid = 0,
				OneValue = 1,
				TwoValue = 2,
				LeveledList = 3,
				ActivateChoice = 4,
				SpellItem = 5,
				BooleanGraphVariable = 6,
				Text = 7,
			};
		};

		public interface class BGSEventProcessedEvent : public NetScriptFramework::IMemoryObject { };

		public interface class BSIFootIkRaycastInterfaceDB : public NetScriptFramework::IVirtualObject { };

		public interface class BGSActorEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::UInt32 ActorRefHandle
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class IGamebryoSequenceGeneratorHolderSingleton : public NetScriptFramework::IVirtualObject { };

		public interface class BSAttachTechniques : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class BSAttachTechnique : public NetScriptFramework::IVirtualObject { };

			interface class AttachTechniqueInput : public NetScriptFramework::IVirtualObject { };
		};

		public interface class BGSLoadGameBuffer : public NetScriptFramework::IVirtualObject { };

		public interface class BGSLoadFormData : public NetScriptFramework::IMemoryObject { };

		public interface class NiColor : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Single Red
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}

			property System::Single Green
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}

			property System::Single Blue
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}
		};

		public interface class MoviePlayer : public NetScriptFramework::IVirtualObject { };

		public interface class BSMusicEvent : public NetScriptFramework::IMemoryObject { };

		public interface class BGSOpenCloseForm : public NetScriptFramework::IVirtualObject { };

		generic <typename BSUntypedPointerHandle_T1, typename BSUntypedPointerHandle_T2>
		public interface class BSUntypedPointerHandle : public NetScriptFramework::IMemoryObject { };

		generic <typename BSPointerHandle_T1, typename BSPointerHandle_T2>
		public interface class BSPointerHandle : public NetScriptFramework::IMemoryObject { };

		public interface class IPackageDataTypeCheck : public NetScriptFramework::IVirtualObject { };

		public interface class BGSPrimitive : public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureParamInfo : public NetScriptFramework::IMemoryObject { };

		public interface class BGSQueuedTerrainUpdate : public NetScriptFramework::IVirtualObject { };

		public interface class BSIReverbType : public NetScriptFramework::IVirtualObject { };

		public interface class BGSSaveGameBuffer : public NetScriptFramework::IVirtualObject { };

		public interface class BGSSaveLoadManagerEvent : public NetScriptFramework::IMemoryObject { };

		public interface class ENUM_FORM_ID : public NetScriptFramework::IMemoryObject { };

		public interface class SavedFormData : public NetScriptFramework::IMemoryObject { };

		public interface class BGSSceneAction : public NetScriptFramework::IVirtualObject
		{
		public:
			enum class SceneDataFlags : System::UInt32
			{
				None = 0,
				FaceTarget = 0x8000,
				Looping = 0x10000,
				HeadTrackPlayer = 0x20000,
			};

			enum class EmotionTypes : System::Int32
			{
				Neutral = 0,
				Anger = 1,
				Disgust = 2,
				Fear = 3,
				Sad = 4,
				Happy = 5,
				Surprise = 6,
				Puzzled = 7,
			};

			enum class SceneActionTypes : System::Int32
			{
				Dialogue = 0,
				Package = 1,
				Timer = 2,
			};

			property System::Int32 ActorId
			{
				System::Int32 __clrcall get();
			}

			property System::UInt16 StartPhase
			{
				System::UInt16 __clrcall get();
			}

			property System::UInt16 EndPhase
			{
				System::UInt16 __clrcall get();
			}

			property BGSSceneAction::SceneDataFlags SceneActionFlags
			{
				BGSSceneAction::SceneDataFlags __clrcall get();
			}

			property System::Int32 Index
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class BGSSceneInfo : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class TextureUse;
		};

		public interface class BSISoundOutputModel : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class BSIAttenuationCharacteristics : public NetScriptFramework::IVirtualObject { };
		};

		generic <typename BSTTuple_T1, typename BSTTuple_T2>
		public interface class BSTTuple : public NetScriptFramework::IMemoryObject { };

		public interface class BGSZoneTargetListener : public NetScriptFramework::IVirtualObject { };

		public interface class TESMagicTargetForm : public NetScriptFramework::IMemoryObject { };

		public interface class BGSTerrainChunk : public NetScriptFramework::IMemoryObject { };

		public interface class BGSTerrainVisibilityData : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::IntPtr VisibilityData
			{
				System::IntPtr __clrcall get();
			}
		};

		public interface class BGSTerrainVisibilityDataDB : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DBTraits : public NetScriptFramework::IMemoryObject { };
		};

		public interface class BGSTextureUseMap : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class TextureUse;
		};

		public interface class BGSWaterCollisionManager : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class BGSWaterUpdateI : public NetScriptFramework::IVirtualObject { };

			interface class bhkAutoWater;

			interface class bhkPlaceableWater;

			interface class bhkWaterfall;

			interface class bshkAutoWater;
		};

		public interface class hkpPhantomOverlapListener : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class IVisitProcedures : public NetScriptFramework::IVirtualObject { };

		public interface class BSVolumetricLightingRenderData : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class CustomColorData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Single Contribution
				{
					System::Single __clrcall get();
				}
			};

			interface class DensityData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Single Contribution
				{
					System::Single __clrcall get();
				}

				property System::Single Size
				{
					System::Single __clrcall get();
				}

				property System::Single WindSpeed
				{
					System::Single __clrcall get();
				}

				property System::Single FallingSpeed
				{
					System::Single __clrcall get();
				}
			};

			interface class PhaseFunctionData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Single Contribution
				{
					System::Single __clrcall get();
				}

				property System::Single Scattering
				{
					System::Single __clrcall get();
				}
			};

			interface class SamplingRepartitionData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Single RangeFactor
				{
					System::Single __clrcall get();
				}
			};

			property System::Single Intensity
			{
				System::Single __clrcall get();
			}

			property BSVolumetricLightingRenderData::CustomColorData^ CustomColor
			{
				BSVolumetricLightingRenderData::CustomColorData^ __clrcall get();
			}

			property System::Single Red
			{
				System::Single __clrcall get();
			}

			property System::Single Green
			{
				System::Single __clrcall get();
			}

			property System::Single Blue
			{
				System::Single __clrcall get();
			}

			property BSVolumetricLightingRenderData::DensityData^ Density
			{
				BSVolumetricLightingRenderData::DensityData^ __clrcall get();
			}

			property BSVolumetricLightingRenderData::PhaseFunctionData^ PhaseFunction
			{
				BSVolumetricLightingRenderData::PhaseFunctionData^ __clrcall get();
			}

			property BSVolumetricLightingRenderData::SamplingRepartitionData^ SamplingRepartition
			{
				BSVolumetricLightingRenderData::SamplingRepartitionData^ __clrcall get();
			}
		};

		public interface class bhkICharOrientationController : public NetScriptFramework::IVirtualObject { };

		public interface class bhkCharacterMoveFinishEvent : public NetScriptFramework::IMemoryObject { };

		public interface class bhkCharacterControllerCinfo : public NetScriptFramework::IVirtualObject { };

		public interface class hkpCdPointCollector : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkSerializableCinfo : public NetScriptFramework::IMemoryObject { };

		public interface class hkMemorySystem : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class FrameInfo : public NetScriptFramework::IMemoryObject { };

			enum class FlagBits : System::Int32
			{
				FLAG_PERSISTENT = 1,
				FLAG_TEMPORARY = 2,
				FLAG_ALL = 3,
				FLAG_ROUTER = 1,
				FLAG_FRAME = 2,
			};
		};

		public interface class hkpEntityActivationListener : public NetScriptFramework::IVirtualObject { };

		public interface class BSTaskletManagerCallback : public NetScriptFramework::IVirtualObject { };

		public interface class hkaRaycastInterface : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaRagdollRaycastInterface : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		generic <typename bhkTTNode_T1>
		public interface class bhkTTNode : public NetScriptFramework::IVirtualObject { };

		public interface class NiQuaternion : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Single W
			{
				System::Single __clrcall get();
			}

			property System::Single X
			{
				System::Single __clrcall get();
			}

			property System::Single Y
			{
				System::Single __clrcall get();
			}

			property System::Single Z
			{
				System::Single __clrcall get();
			}
		};

		public interface class bnet : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class _detail : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class Composite;

				generic <typename implComposite_T1>
				interface class implComposite;
			};

			interface class Job : public NetScriptFramework::IVirtualObject { };

			interface class IJobCollection : public NetScriptFramework::IVirtualObject { };

			interface class ta : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class NonThreadSafe : public NetScriptFramework::IMemoryObject { };

				interface class ThreadSafe : public NetScriptFramework::IMemoryObject { };

				interface class ErrorPropagation : public NetScriptFramework::IMemoryObject { };

				interface class NoErrorPropagation : public NetScriptFramework::IMemoryObject { };
			};

			interface class _impl : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class AsyncOperation : public NetScriptFramework::IVirtualObject { };

				interface class IPool : public NetScriptFramework::IVirtualObject { };

				generic <typename StdAllocator_T1>
				interface class StdAllocator : public NetScriptFramework::IMemoryObject { };

				generic <typename FixedString_T1, typename FixedString_T2, typename FixedString_T3, typename FixedString_T4>
				interface class FixedString : public NetScriptFramework::IMemoryObject { };

				generic <typename FixedVector_T1, typename FixedVector_T2, typename FixedVector_T3, typename FixedVector_T4>
				interface class FixedVector : public NetScriptFramework::IMemoryObject { };

				generic <typename MemoryDeleter_T1>
				interface class MemoryDeleter : public NetScriptFramework::IMemoryObject { };

				generic <typename Observable_T1, typename Observable_T2>
				interface class Observable : /* Observable_T1 */ public NetScriptFramework::IVirtualObject { };

				generic <typename OneToManyObservable_T1>
				interface class OneToManyObservable : public NetScriptFramework::IVirtualObject { };

				generic <typename OneToManyObserver_T1>
				interface class OneToManyObserver : public NetScriptFramework::IVirtualObject { };

				interface class RefCount : public NetScriptFramework::IVirtualObject { };

				generic <typename FixedPool_T1, typename FixedPool_T2>
				interface class FixedPool : public bnet::_impl::IPool, public NetScriptFramework::IVirtualObject { };

				interface class SharedMutex : public bnet::_impl::RefCount, public NetScriptFramework::IVirtualObject { };
			};

			interface class CMS : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class Message : public NetScriptFramework::IMemoryObject { };

				interface class ListMessagesRequest;
			};

			generic <typename Count_T1>
			interface class Count : public NetScriptFramework::IMemoryObject { };

			interface class Entitlements : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class Item : public NetScriptFramework::IMemoryObject { };

				interface class ConsumeResponse : public NetScriptFramework::IMemoryObject { };

				interface class ConsumeRequest;

				interface class ListRequest;
			};

			interface class LegalDocument : public NetScriptFramework::IMemoryObject { };

			interface class Notification : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class SystemModel : public NetScriptFramework::IMemoryObject { };

				interface class EventData : public NetScriptFramework::IMemoryObject { };

				interface class UserWebSocket : public NetScriptFramework::IMemoryObject
				{
				public:
					interface class OnSystemIdFetchedSend;

					interface class OnConnected;
				};

				interface class Frame : public NetScriptFramework::IMemoryObject { };

				interface class UserData : public NetScriptFramework::IMemoryObject
				{
				public:
					interface class ReconnectJob : public bnet::Job, public NetScriptFramework::IVirtualObject { };

					interface class OnSystemIdFetchedRegister;
				};

				interface class anonymous_namespace : public NetScriptFramework::IMemoryObject
				{
				public:
					interface class OnReadFrame;
				};

				interface class ChangeFilterRequest : public bnet::Job, public NetScriptFramework::IVirtualObject { };

				interface class Context : public NetScriptFramework::IMemoryObject
				{
				public:
					interface class OnSystemFetched;
				};

				interface class ReceiveJob;

				interface class FilterJob;

				interface class ListSystemRequest;
			};

			interface class Platform : public NetScriptFramework::IMemoryObject { };

			interface class UgcAuthor : public NetScriptFramework::IMemoryObject { };

			interface class UgcComment : public NetScriptFramework::IMemoryObject { };

			interface class UgcContent : public NetScriptFramework::IMemoryObject { };

			interface class UgcNotification : public NetScriptFramework::IMemoryObject { };

			interface class BNetError : public NetScriptFramework::IMemoryObject { };

			interface class User : public NetScriptFramework::IVirtualObject { };

			interface class WebSocket : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class pImpl : public NetScriptFramework::IMemoryObject
				{
				public:
					interface class WebSocketJob;
				};
			};

			interface class BaseHttpRequest : public NetScriptFramework::IVirtualObject { };

			interface class AccountAuthenticationStatus : public NetScriptFramework::IMemoryObject { };

			interface class AccountLinkingResult : public NetScriptFramework::IMemoryObject { };

			interface class AccountResult : public NetScriptFramework::IMemoryObject { };

			interface class IHeap : public NetScriptFramework::IVirtualObject { };

			interface class anonymous_namespace : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class ModuleDeleter : public NetScriptFramework::IMemoryObject { };

				generic <typename SecBufferList_T1>
				interface class SecBufferList : public NetScriptFramework::IMemoryObject { };

				interface class WinSocket : public NetScriptFramework::IMemoryObject
				{
				public:
					interface class SocketJob;
				};
			};

			generic <typename ArrayView_T1>
			interface class ArrayView : public NetScriptFramework::IMemoryObject { };

			interface class BaseCallback : public NetScriptFramework::IVirtualObject { };

			interface class ExternalAccountInfo : public NetScriptFramework::IMemoryObject { };

			generic <typename UniquePtr_T1>
			interface class UniquePtr : public NetScriptFramework::IMemoryObject { };

			interface class HttpResponseInfo : public NetScriptFramework::IMemoryObject { };

			generic <typename BaseCallbackJob_T1, typename BaseCallbackJob_T2, typename BaseCallbackJob_T3>
			interface class BaseCallbackJob : /* BaseCallbackJob_T1 */ public NetScriptFramework::IVirtualObject { };

			interface class IDownloader : public NetScriptFramework::IVirtualObject { };

			interface class BNetErrorResult : public NetScriptFramework::IMemoryObject { };

			interface class SocketStatus : public NetScriptFramework::IMemoryObject { };

			interface class EmptyStatus : public NetScriptFramework::IMemoryObject { };

			interface class HydraAuthenticationResult : public NetScriptFramework::IMemoryObject { };

			interface class WebSocketStatus : public NetScriptFramework::IMemoryObject { };

			interface class SessionToken : public NetScriptFramework::IMemoryObject { };

			interface class UgcReleaseNote : public NetScriptFramework::IMemoryObject { };

			interface class UgcType : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class UploadStatus : public NetScriptFramework::IMemoryObject { };
			};

			interface class CdpAuthenticationResult : public NetScriptFramework::IMemoryObject { };

			interface class CdpFileInfoResult : public NetScriptFramework::IMemoryObject { };

			interface class CdpKeyResult : public NetScriptFramework::IMemoryObject { };

			interface class FileChunk : public NetScriptFramework::IMemoryObject { };

			interface class Status : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class ExtServerStatusResult : public NetScriptFramework::IMemoryObject { };

				interface class GetExtServerStatusRequest;
			};

			interface class UgcChunkUploadResult : public NetScriptFramework::IMemoryObject { };

			interface class UgcCreationResult : public NetScriptFramework::IMemoryObject { };

			interface class UgcListCategoriesResult : public NetScriptFramework::IMemoryObject { };

			interface class UgcPagedContentListResult : public NetScriptFramework::IMemoryObject { };

			interface class UgcUploadDetails : public NetScriptFramework::IMemoryObject { };

			interface class UpgradeTokenResult : public NetScriptFramework::IMemoryObject { };

			interface class VCCS : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class Catalog : public NetScriptFramework::IMemoryObject
				{
				public:
					interface class Item : public NetScriptFramework::IMemoryObject { };

					interface class ListItemsResult : public NetScriptFramework::IMemoryObject { };

					interface class GetItemRequest;

					interface class ListItemsRequest;
				};

				interface class Wallet : public NetScriptFramework::IMemoryObject
				{
				public:
					interface class Balance : public NetScriptFramework::IMemoryObject { };

					interface class BalanceRequest;

					interface class PurchaseRequest;
				};

				interface class Fulfillment : public NetScriptFramework::IMemoryObject
				{
				public:
					interface class UpdateFirstPartyEntitlementRequest;
				};
			};

			interface class WebSocketReadResult : public NetScriptFramework::IMemoryObject { };

			generic <typename CallbackBind_T1, typename CallbackBind_T2>
			interface class CallbackBind : /* CallbackBind_T1 */ public NetScriptFramework::IVirtualObject { };

			interface class SecureSocket : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class pImpl : public NetScriptFramework::IMemoryObject
				{
				public:
					interface class SecureSocketJob;
				};
			};

			interface class IUgcUploader : public NetScriptFramework::IVirtualObject { };

			generic <typename CallbackWrapper_T1, typename CallbackWrapper_T2>
			interface class CallbackWrapper : /* CallbackWrapper_T1 */ public NetScriptFramework::IVirtualObject { };

			interface class InternalBNet : public NetScriptFramework::IMemoryObject { };

			interface class IHttpConnectionProvider : public NetScriptFramework::IVirtualObject { };

			interface class IDynamicVariableDeleter : public NetScriptFramework::IVirtualObject { };

			interface class ISocket : public NetScriptFramework::IVirtualObject { };

			interface class CustomData : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class Value : public NetScriptFramework::IVirtualObject { };

				interface class BinaryValue : public bnet::CustomData::Value, public NetScriptFramework::IVirtualObject { };

				interface class ObjectValue : public bnet::CustomData::Value, public NetScriptFramework::IVirtualObject { };

				interface class StringValue : public bnet::CustomData::Value, public NetScriptFramework::IVirtualObject { };
			};

			generic <typename Evaluator_T1>
			interface class Evaluator : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class IEvaluator : public NetScriptFramework::IVirtualObject { };
			};

			interface class EventLog : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class anonymous_namespace : public NetScriptFramework::IMemoryObject
				{
				public:
					interface class CollectErrorRequest;

					interface class CollectLogRequest;
				};
			};

			interface class ExternalAuthInfo : public NetScriptFramework::IVirtualObject { };

			generic <typename IDispenser_T1>
			interface class IDispenser : public NetScriptFramework::IVirtualObject { };

			generic <typename IProducerConsumerQueue_T1>
			interface class IProducerConsumerQueue : public NetScriptFramework::IVirtualObject { };

			interface class Presence : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class UpdateRequest;
			};

			interface class Ugc : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class ListPlatformsRequest;

				interface class ListProductsRequest;

				interface class RefreshEntitlementRequest;
			};

			interface class InternalUser : public bnet::User, public NetScriptFramework::IVirtualObject { };

			interface class ConfigurationEntry : public bnet::_impl::OneToManyObservable<bnet::ConfigurationEntry^>, public NetScriptFramework::IVirtualObject { };

			generic <typename HttpRequest_T1>
			interface class HttpRequest : public bnet::BaseHttpRequest, public NetScriptFramework::IVirtualObject { };

			interface class AcquirableFreeLessHeap : public bnet::IHeap, public NetScriptFramework::IVirtualObject { };

			generic <typename Callback_T1, typename Callback_T2>
			interface class Callback : public bnet::BaseCallback, public NetScriptFramework::IVirtualObject { };

			generic <typename Caller_T1, typename Caller_T2>
			interface class Caller : public bnet::BaseCallback, public NetScriptFramework::IVirtualObject { };

			generic <typename ConfigurationEntryPool_T1, typename ConfigurationEntryPool_T2>
			interface class ConfigurationEntryPool : public bnet::IDynamicVariableDeleter, public NetScriptFramework::IVirtualObject { };

			interface class CSecureSocket : public bnet::ISocket, public NetScriptFramework::IVirtualObject { };

			interface class CSocket : public bnet::ISocket, public NetScriptFramework::IVirtualObject { };

			interface class FreeLessHeap : public bnet::IHeap, public NetScriptFramework::IVirtualObject { };

			interface class HttpTransport : public bnet::Job, public bnet::_impl::Observable<bnet::_impl::AsyncOperation^, bnet::BNetError^>, public NetScriptFramework::IVirtualObject { };

			interface class Network : public bnet::IDispenser<bnet::Job^>, public bnet::IHttpConnectionProvider, public bnet::IJobCollection, public NetScriptFramework::IVirtualObject { };

			interface class NotificationConnectRequest : public bnet::Job, public bnet::_impl::Observable<bnet::_impl::AsyncOperation^, bnet::BNetError^>, public NetScriptFramework::IVirtualObject { };

			interface class NotificationLogoutRequest : public bnet::Job, public bnet::_impl::Observable<bnet::_impl::AsyncOperation^, bnet::BNetError^>, public NetScriptFramework::IVirtualObject { };

			generic <typename ProducerConsumerQueue_T1, typename ProducerConsumerQueue_T2>
			interface class ProducerConsumerQueue : public bnet::IProducerConsumerQueue<ProducerConsumerQueue_T1>, public NetScriptFramework::IVirtualObject { };

			interface class SharedSRWMutex : public bnet::_impl::RefCount, public NetScriptFramework::IVirtualObject { };

			interface class SteamExternalAuthInfo : public bnet::ExternalAuthInfo, public NetScriptFramework::IVirtualObject { };

			interface class AcceptLegalDocumentsRequest : public bnet::HttpRequest<bnet::Callback<System::Boolean, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class AccountAuthenticationRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::AccountResult^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class AccountLinkingRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::AccountLinkingResult^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class AccountQuickCreationRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::User^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class CdpAuthenticationRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::CdpAuthenticationResult^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class CdpFileInfoRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::CdpFileInfoResult^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class CdpKeyRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::CdpKeyResult^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class CheckEmailRequest : public bnet::HttpRequest<bnet::Callback<System::Boolean, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class ConfigurationEntryBoolean : public bnet::ConfigurationEntry, public NetScriptFramework::IVirtualObject { };

			interface class ConfigurationEntryFloat : public bnet::ConfigurationEntry, public NetScriptFramework::IVirtualObject { };

			interface class ConfigurationEntryInteger : public bnet::ConfigurationEntry, public NetScriptFramework::IVirtualObject { };

			interface class ConfigurationEntryLong : public bnet::ConfigurationEntry, public NetScriptFramework::IVirtualObject { };

			interface class ConfigurationEntryString : public bnet::ConfigurationEntry, public NetScriptFramework::IVirtualObject { };

			generic <typename ConfigurationVariable_T1>
			interface class ConfigurationVariable : public bnet::_impl::OneToManyObserver<bnet::ConfigurationEntry^>, public NetScriptFramework::IVirtualObject { };

			interface class EmptyTerminationCB : public bnet::Callback<bnet::BNetError^, bnet::HttpResponseInfo^>, public NetScriptFramework::IVirtualObject { };

			interface class HydraAccessRequest : public bnet::HttpRequest<bnet::Callback<bnet::_impl::FixedString<UnknownGenArg_512^, UnknownGenArg_1^, UnknownGenArg_1^, bnet::_impl::StdAllocator<System::SByte>^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class HydraAuthenticationRequest : public bnet::HttpRequest<bnet::Callback<bnet::HydraAuthenticationResult^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class IsAccountLinkableRequest : public bnet::HttpRequest<bnet::Callback<System::Boolean, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class ListRequiredLegalDocumentsRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::_impl::FixedVector<bnet::LegalDocument^, UnknownGenArg_5^, UnknownGenArg_1^, bnet::_impl::StdAllocator<bnet::LegalDocument^>^>^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class RetrieveExternalAccountRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::ExternalAccountInfo^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class SessionTokenRequest : public bnet::HttpRequest<bnet::Callback<bnet::SessionToken^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class TokenUpgradeRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::UpgradeTokenResult^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class UgcAddReleaseNoteRequest : public bnet::HttpRequest<bnet::Callback<bnet::UgcReleaseNote^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class UgcBrowseRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::UgcPagedContentListResult^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class UgcCategoryCountRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::_impl::FixedVector<bnet::Count<bnet::_impl::FixedString<UnknownGenArg_64^, UnknownGenArg_1^, UnknownGenArg_1^, bnet::_impl::StdAllocator<System::SByte>^>^>^, UnknownGenArg_40^, UnknownGenArg_1^, bnet::_impl::StdAllocator<bnet::Count<bnet::_impl::FixedString<UnknownGenArg_64^, UnknownGenArg_1^, UnknownGenArg_1^, bnet::_impl::StdAllocator<System::SByte>^>^>^>^>^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class UgcChunkedUploadInitiationRequest : public bnet::HttpRequest<bnet::Callback<System::UInt64, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class UgcChunkUploadRequest : public bnet::HttpRequest<bnet::Callback<System::UInt64, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class UgcContentRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::UgcContent^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class UgcContentUploadDetailsRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::UgcUploadDetails^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			generic <typename UgcUploadRequest_T1>
			interface class UgcUploadRequest : public bnet::HttpRequest<UgcUploadRequest_T1>, public NetScriptFramework::IVirtualObject { };

			interface class UgcCreationRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::UgcCreationResult^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class UgcListBlacklistedRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::_impl::FixedVector<bnet::_impl::FixedString<UnknownGenArg_10^, UnknownGenArg_1^, UnknownGenArg_1^, bnet::_impl::StdAllocator<System::SByte>^>^, UnknownGenArg_16^, UnknownGenArg_1^, bnet::_impl::StdAllocator<bnet::_impl::FixedString<UnknownGenArg_10^, UnknownGenArg_1^, UnknownGenArg_1^, bnet::_impl::StdAllocator<System::SByte>^>^>^>^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class UgcListByEntitlementIdsRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::_impl::FixedVector<bnet::UgcContent^, UnknownGenArg_25^, UnknownGenArg_1^, bnet::_impl::StdAllocator<bnet::UgcContent^>^>^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class UgcListCategoriesRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::UgcListCategoriesResult^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class UgcListCommentRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::_impl::FixedVector<bnet::UgcComment^, UnknownGenArg_20^, UnknownGenArg_1^, bnet::_impl::StdAllocator<bnet::UgcComment^>^>^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class UgcListContentRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::_impl::FixedVector<bnet::UgcContent^, UnknownGenArg_25^, UnknownGenArg_1^, bnet::_impl::StdAllocator<bnet::UgcContent^>^>^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class UgcListDlcRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::_impl::FixedVector<bnet::_impl::FixedString<UnknownGenArg_32^, UnknownGenArg_1^, UnknownGenArg_1^, bnet::_impl::StdAllocator<System::SByte>^>^, UnknownGenArg_16^, UnknownGenArg_1^, bnet::_impl::StdAllocator<bnet::_impl::FixedString<UnknownGenArg_32^, UnknownGenArg_1^, UnknownGenArg_1^, bnet::_impl::StdAllocator<System::SByte>^>^>^>^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class UgcListFeaturedContentRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::_impl::FixedVector<bnet::UgcContent^, UnknownGenArg_25^, UnknownGenArg_1^, bnet::_impl::StdAllocator<bnet::UgcContent^>^>^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class UgcListFollowedAuthorRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::_impl::FixedVector<bnet::UgcAuthor^, UnknownGenArg_20^, UnknownGenArg_1^, bnet::_impl::StdAllocator<bnet::UgcAuthor^>^>^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class UgcListNotificationRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::_impl::FixedVector<bnet::UgcNotification^, UnknownGenArg_20^, UnknownGenArg_1^, bnet::_impl::StdAllocator<bnet::UgcNotification^>^>^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class UsernameValidationRequest : public bnet::HttpRequest<bnet::Callback<System::Boolean, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class VerifyFingerprintRequest : public bnet::HttpRequest<bnet::Callback<System::Boolean, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class VerifyLinkRequest : public bnet::HttpRequest<bnet::Callback<System::Boolean, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class WinHttpTransport : public bnet::HttpTransport, public NetScriptFramework::IVirtualObject { };

			interface class AccountExternalAuthenticationRequest : public bnet::AccountAuthenticationRequest, public NetScriptFramework::IVirtualObject { };

			interface class AccountUserCredentialsAuthenticationRequest : public bnet::AccountAuthenticationRequest, public NetScriptFramework::IVirtualObject { };

			interface class SessionAuthRequest : public bnet::SessionTokenRequest, public NetScriptFramework::IVirtualObject { };

			interface class SessionExternalAuthRequest : public bnet::SessionTokenRequest, public NetScriptFramework::IVirtualObject { };

			interface class SessionRefreshRequest : public bnet::SessionTokenRequest, public NetScriptFramework::IVirtualObject { };

			interface class UgcContentUploadRequest : public bnet::UgcUploadRequest<bnet::Callback<bnet::UgcType::UploadStatus^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class UgcImageUploadRequest : public bnet::UgcUploadRequest<bnet::Callback<bnet::UgcType::UploadStatus^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			interface class UgcPreviewUploadRequest : public bnet::UgcUploadRequest<bnet::Callback<bnet::UgcType::UploadStatus^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

			generic <typename Parallel_T1, typename Parallel_T2>
			interface class Parallel;

			generic <typename Composite_T1>
			interface class Composite;

			interface class AccountDeletionRequest;

			interface class AccountQuickCreateFlow;

			interface class AuthenticationFlow;

			generic <typename Sequence_T1, typename Sequence_T2>
			interface class Sequence;

			interface class AccountUnlinkingRequest;

			interface class AddFingerprintRequest;

			interface class BaseFileDownloader;

			interface class ExternalAuthenticationFlow;

			interface class UserCredentialsAuthenticationFlow;

			interface class UgcMtxPurchaseFlow;

			interface class ListLegalDocumentsFlow;

			interface class DownloadFlow;

			interface class RetrieveExternalAccountJob;

			generic <typename CallbackSequence_T1, typename CallbackSequence_T2, typename CallbackSequence_T3>
			interface class CallbackSequence;

			interface class UnlinkAccountFlow;

			interface class ChunkedUploadFlow;

			interface class NetworkLoop;

			interface class FileDownloader;

			interface class LogoutFlow;

			interface class RecoverPasswordRequest;

			interface class RecoverUsernameRequest;

			interface class ResendVerificationRequest;

			interface class SessionLogoutRequest;

			interface class UgcAddVideoRequest;

			interface class UgcArgLessRequest;

			interface class UgcCancelUploadRequest;

			interface class UgcChunkedUploadCompletionRequest;

			interface class UgcCommentCreationRequest;

			interface class UgcEditRequest;

			interface class UgcFlagRequest;

			interface class UgcLikeCommentRequest;

			interface class UgcNotificationAcknowledgeRequest;

			interface class UgcQueryRequest;

			interface class UgcRateRequest;

			interface class UgcRemoveReleaseNoteRequest;

			interface class UgcUpdateReleaseNoteRequest;

			interface class UserProcessor;

			interface class UserProcessorCollection;

			generic <typename CallbackSequence_T1, typename CallbackSequence_T2, typename CallbackSequence_T3>
			interface class CallbackSequence : public bnet::BaseCallbackJob<bnet::Sequence<CallbackSequence_T2, CallbackSequence_T3>^, CallbackSequence_T1, CallbackSequence_T2>, public NetScriptFramework::IVirtualObject { };

			interface class RetrieveExternalAccountJob : public bnet::CallbackSequence<bnet::Callback<bnet::UniquePtr<bnet::ExternalAccountInfo^>^, bnet::HttpResponseInfo^>^, bnet::ta::ThreadSafe^, bnet::ta::ErrorPropagation^>, public bnet::_impl::Observable<bnet::_impl::AsyncOperation^, bnet::BNetError^>, public NetScriptFramework::IVirtualObject { };
		};

		public interface class HINSTANCE__ : public NetScriptFramework::IMemoryObject { };

		public interface class bnet_std : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class void_t : public NetScriptFramework::IMemoryObject { };
		};

		public interface class SocketStatus : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class SocketStatus_ : public NetScriptFramework::IMemoryObject { };
		};

		public interface class BSPlatform : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class BSModsManager : public NetScriptFramework::IMemoryObject { };

			interface class BSCreationClubManager : public NetScriptFramework::IMemoryObject { };

			interface class BSCoreServicesManager : public NetScriptFramework::IMemoryObject { };

			interface class BSBNetAccountManager : public NetScriptFramework::IMemoryObject { };

			interface class BNetResult : public NetScriptFramework::IMemoryObject { };

			interface class BSAsyncRequestBase : public NetScriptFramework::IVirtualObject { };

			interface class BSCreation : public NetScriptFramework::IMemoryObject { };

			interface class BSExternalServerStatusInfo : public NetScriptFramework::IMemoryObject { };

			interface class BSUserContent : public NetScriptFramework::IMemoryObject { };

			interface class BSEntitlement : public NetScriptFramework::IMemoryObject { };

			interface class BSLegalDocument : public NetScriptFramework::IMemoryObject { };

			interface class BSTerminatedCallback : public bnet::Callback<bnet::BNetError^, bnet::HttpResponseInfo^>, public NetScriptFramework::IVirtualObject { };

			generic <typename BSAsyncRequest_T1>
			interface class BSAsyncRequest : public BSPlatform::BSAsyncRequestBase, public NetScriptFramework::IVirtualObject { };

			interface class BSBethesdaPlatform;

			interface class BSDownloadRequest;

			interface class BSUploadRequest;
		};

		public interface class BooksRead : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class Bounty : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class BSAnimNoteListener : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class BSAnimReceiverType : public NetScriptFramework::IMemoryObject { };
		};

		public interface class IBSAnimNoteReceiver : public NetScriptFramework::IVirtualObject { };

		public interface class BSShapeConstructor : public NetScriptFramework::IVirtualObject { };

		public interface class BSAudioListener : public NetScriptFramework::IVirtualObject { };

		generic <typename BSAutoQueuedResourceCollection_T1>
		public interface class BSAutoQueuedResourceCollection : public NetScriptFramework::IVirtualObject { };

		public interface class BSFaceGenDB : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class TRI : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DBTraits : public NetScriptFramework::IMemoryObject { };

				interface class TriData : public NetScriptFramework::IMemoryObject { };

				interface class QueuedHandles;
			};

			interface class FG : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class CoordData : public NetScriptFramework::IMemoryObject { };

				interface class DBTraits : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class BSTextureDB : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DBTraits : public NetScriptFramework::IMemoryObject { };

			interface class anonymous_namespace : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class NiTextureDBForwarded;
			};

			interface class QueuedHandles;
		};

		public interface class BSAwardsSystemUtility : public NetScriptFramework::IVirtualObject { };

		public interface class BSBatchRenderer : public NetScriptFramework::IVirtualObject { };

		public interface class NiBoneMatrixSetterI : public NetScriptFramework::IVirtualObject { };

		public interface class BSReloadShaderI : public NetScriptFramework::IVirtualObject { };

		public interface class BSCacheDriveSystemUtility : public NetScriptFramework::IVirtualObject { };

		public interface class BSCoreMessage : public NetScriptFramework::IVirtualObject { };

		public interface class NiFrustum : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Single Left
			{
				System::Single __clrcall get();
			}

			property System::Single Right
			{
				System::Single __clrcall get();
			}

			property System::Single Top
			{
				System::Single __clrcall get();
			}

			property System::Single Bottom
			{
				System::Single __clrcall get();
			}

			property System::Single Near
			{
				System::Single __clrcall get();
			}

			property System::Single Far
			{
				System::Single __clrcall get();
			}

			property System::Boolean Ortho
			{
				System::Boolean __clrcall get();
			}
		};

		generic <typename NiRect_T1>
		public interface class NiRect : public NetScriptFramework::IMemoryObject
		{
		public:
			property NiRect_T1 Left
			{
				NiRect_T1 __clrcall get();
			}

			property NiRect_T1 Right
			{
				NiRect_T1 __clrcall get();
			}

			property NiRect_T1 Top
			{
				NiRect_T1 __clrcall get();
			}

			property NiRect_T1 Bottom
			{
				NiRect_T1 __clrcall get();
			}
		};

		public interface class BSIDirectAtModifierSingleton : public NetScriptFramework::IVirtualObject { };

		public interface class BSDiscBootSystemUtility : public NetScriptFramework::IVirtualObject { };

		public interface class NiPoint2 : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Single X
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}

			property System::Single Y
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}
		};

		public interface class BSExternalAudioIO : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class ExternalIOInterface : public NetScriptFramework::IVirtualObject { };
		};

		public interface class BSFaceGenKeyframe : public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Int32 KeyframeType
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class BSFaceGenModelMap : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Entry : public NiRefObject, public NetScriptFramework::IVirtualObject { };
		};

		public interface class BSGameDataSystemUtility : public NetScriptFramework::IVirtualObject { };

		public interface class BSIInputDevice : public NetScriptFramework::IVirtualObject { };

		public enum class InputDevices : System::Int32
		{
			None = -1,
			Keyboard = 0,
			Mouse = 1,
			Gamepad = 2,
			VirtualKeyboard = 3,
		};

		public interface class BSGamepadEvent : public NetScriptFramework::IMemoryObject { };

		public interface class BSGamerProfileEvent : public NetScriptFramework::IMemoryObject { };

		public interface class BSGameSound : public NetScriptFramework::IVirtualObject { };

		public interface class BSGraphics : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class TextureFilterMode : public NetScriptFramework::IMemoryObject { };
		};

		public interface class BSIRagdollDriver : public NetScriptFramework::IVirtualObject { };

		public interface class BSTransformDeltaEvent : public NetScriptFramework::IMemoryObject { };

		public interface class BSILimbIKModifierSingleton : public NetScriptFramework::IVirtualObject { };

		public interface class ImageSpaceEffect : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class EffectInput : public NetScriptFramework::IMemoryObject { };
		};

		public interface class BSIOStreamTraits : public NetScriptFramework::IMemoryObject { };

		public interface class BSIPassByTargetTriggerModifierSingleton : public NetScriptFramework::IVirtualObject { };

		public interface class BSIRagdollContactListenerModifierSingleton : public NetScriptFramework::IVirtualObject { };

		public interface class BSISpeedSamplerDB : public NetScriptFramework::IVirtualObject { };

		public interface class BSiStateTaggingUtils : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class BSiStateTaggingStateListener;
		};

		public interface class BSTIOStream : public NetScriptFramework::IMemoryObject
		{
		public:
			generic <typename TIStream_T1>
			interface class TIStream : /* TIStream_T1 */ public NetScriptFramework::IVirtualObject { };

			generic <typename TOStream_T1>
			interface class TOStream : /* TOStream_T1 */ public NetScriptFramework::IVirtualObject { };
		};

		public interface class BSJobs : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class JobThread;
		};

		public interface class NiColorA : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Single Red
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}

			property System::Single Green
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}

			property System::Single Blue
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}

			property System::Single Alpha
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}
		};

		public interface class BSLimbIKModifierCastInfo : public NetScriptFramework::IVirtualObject { };

		generic <typename BSListBase_T1>
		public interface class BSListBase : public NetScriptFramework::IVirtualObject { };

		generic <typename BSMapBase_T1, typename BSMapBase_T2>
		public interface class BSMapBase : public NetScriptFramework::IVirtualObject { };

		public interface class TEX_SWAP : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorThread : public NetScriptFramework::IMemoryObject { };

		public interface class BSMemStorageHeapAllocator : public NetScriptFramework::IMemoryObject { };

		public interface class BSMsgDialogSystemUtility : public NetScriptFramework::IVirtualObject { };

		public interface class BSNavmeshTriangle : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class NavmeshTriangleFlags : System::UInt16
			{
				None = 0,
				Edge0_Link = 1,
				Edge1_Link = 2,
				Edge2_Link = 4,
				Deleted = 8,
				NoLargeCreatures = 0x10,
				Overlapping = 0x20,
				Preferred = 0x40,
			};

			enum class NavmeshTraversalFlags : System::UInt16
			{
				None = 0,
				Edge0_CoverValueQuarter = 1,
				Edge0_CoverValueHalf = 2,
				Edge0_CoverValueTri = 4,
				Edge0_CoverValueFull = 8,
				Edge0_Left = 0x10,
				Edge0_Right = 0x20,
				Edge1_CoverValueQuarter = 0x40,
				Edge1_CoverValueHalf = 0x80,
				Edge1_CoverValueTri = 0x100,
				Edge1_CoverValueFull = 0x200,
				Edge1_Left = 0x400,
				Edge1_Right = 0x800,
			};

			property NetScriptFramework::FixedMemoryArray<System::UInt16>^ Vertices
			{
				NetScriptFramework::FixedMemoryArray<System::UInt16>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<System::UInt16>^ Triangles
			{
				NetScriptFramework::FixedMemoryArray<System::UInt16>^ __clrcall get();
			}

			property BSNavmeshTriangle::NavmeshTriangleFlags TriangleFlags
			{
				BSNavmeshTriangle::NavmeshTriangleFlags __clrcall get();
			}

			property BSNavmeshTriangle::NavmeshTraversalFlags TraversalFlags
			{
				BSNavmeshTriangle::NavmeshTraversalFlags __clrcall get();
			}
		};

		public interface class BSNavmeshCoverEdge : public NetScriptFramework::IMemoryObject
		{
		public:
			property NetScriptFramework::FixedMemoryArray<System::UInt16>^ Vertices
			{
				NetScriptFramework::FixedMemoryArray<System::UInt16>^ __clrcall get();
			}

			property System::UInt32 Data
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class INavmeshSearchFilterSet : public NetScriptFramework::IVirtualObject { };

		public interface class NiAllocator : public NetScriptFramework::IVirtualObject { };

		public interface class BSNiUpdateTracker : public NetScriptFramework::IMemoryObject { };

		public interface class BSPackedTask : public NetScriptFramework::IMemoryObject { };

		public interface class IPathBuilder : public NetScriptFramework::IVirtualObject { };

		public interface class BSPathEvent : public NetScriptFramework::IMemoryObject { };

		generic <typename BSPathfindingTemporary_T1>
		public interface class BSPathfindingTemporary : /* BSPathfindingTemporary_T1 */ public NetScriptFramework::IVirtualObject { };

		public interface class BSPathingLocation : public NetScriptFramework::IMemoryObject { };

		public interface class BSPathingLOSGrid : public NetScriptFramework::IVirtualObject { };

		public interface class BSPathingLOSGridCell : public NetScriptFramework::IVirtualObject { };

		public interface class BSPathingLOSGridMap : public NetScriptFramework::IVirtualObject { };

		public interface class BSPathingNumericIDVisitor : public NetScriptFramework::IVirtualObject { };

		public interface class BSPathingSearchRayCast : public NetScriptFramework::IVirtualObject { };

		public interface class BSPathingStreamRead : public NetScriptFramework::IVirtualObject { };

		public interface class BSPathingStreamWrite : public NetScriptFramework::IVirtualObject { };

		public interface class std0 : public NetScriptFramework::IMemoryObject
		{
		public:
			generic <typename function_T1>
			interface class function : public NetScriptFramework::IMemoryObject { };

			interface class _Unforced : public NetScriptFramework::IMemoryObject { };

			generic <typename _Ph_T1>
			interface class _Ph : public NetScriptFramework::IMemoryObject { };

			generic <typename _Binder_T1, typename _Binder_T2, typename _Binder_T3, typename _Binder_T4, typename _Binder_T5, typename _Binder_T6>
			interface class _Binder6 : public NetScriptFramework::IMemoryObject { };

			generic <typename _Binder_T1, typename _Binder_T2, typename _Binder_T3, typename _Binder_T4, typename _Binder_T5, typename _Binder_T6, typename _Binder_T7, typename _Binder_T8>
			interface class _Binder8 : public NetScriptFramework::IMemoryObject { };

			generic <typename _Binder_T1, typename _Binder_T2, typename _Binder_T3, typename _Binder_T4, typename _Binder_T5, typename _Binder_T6, typename _Binder_T7>
			interface class _Binder7 : public NetScriptFramework::IMemoryObject { };

			generic <typename _Func_base_T1, typename _Func_base_T2, typename _Func_base_T3, typename _Func_base_T4>
			interface class _Func_base4 : public NetScriptFramework::IVirtualObject { };

			generic <typename _Func_base_T1, typename _Func_base_T2, typename _Func_base_T3, typename _Func_base_T4, typename _Func_base_T5>
			interface class _Func_base5 : public NetScriptFramework::IVirtualObject { };

			generic <typename _Func_base_T1, typename _Func_base_T2, typename _Func_base_T3>
			interface class _Func_base3 : public NetScriptFramework::IVirtualObject { };

			generic <typename allocator_T1>
			interface class allocator : public NetScriptFramework::IMemoryObject { };

			interface class _Ref_count_base : public NetScriptFramework::IMemoryObject { };

			generic <typename basic_streambuf_T1, typename basic_streambuf_T2>
			interface class basic_streambuf : public NetScriptFramework::IMemoryObject { };

			generic <typename basic_stringstream_T1, typename basic_stringstream_T2, typename basic_stringstream_T3>
			interface class basic_stringstream : public NetScriptFramework::IMemoryObject { };

			interface class bad_weak_ptr : public NetScriptFramework::IVirtualObject { };

			generic <typename _Func_impl_T1, typename _Func_impl_T2, typename _Func_impl_T3, typename _Func_impl_T4, typename _Func_impl_T5>
			interface class _Func_impl5 : public std0::_Func_base3<_Func_impl_T3, _Func_impl_T4, _Func_impl_T5>, public NetScriptFramework::IVirtualObject { };

			generic <typename _Func_impl_T1, typename _Func_impl_T2, typename _Func_impl_T3, typename _Func_impl_T4, typename _Func_impl_T5, typename _Func_impl_T6>
			interface class _Func_impl6 : public std0::_Func_base4<_Func_impl_T3, _Func_impl_T4, _Func_impl_T5, _Func_impl_T6>, public NetScriptFramework::IVirtualObject { };

			generic <typename _Ref_count_del_alloc_T1, typename _Ref_count_del_alloc_T2, typename _Ref_count_del_alloc_T3>
			interface class _Ref_count_del_alloc : public std0::_Ref_count_base, public NetScriptFramework::IVirtualObject { };

			generic <typename _Ref_count_obj_alloc_T1, typename _Ref_count_obj_alloc_T2>
			interface class _Ref_count_obj_alloc : public std0::_Ref_count_base, public NetScriptFramework::IVirtualObject { };

			generic <typename basic_stringbuf_T1, typename basic_stringbuf_T2, typename basic_stringbuf_T3>
			interface class basic_stringbuf : public std0::basic_streambuf<basic_stringbuf_T1, basic_stringbuf_T2>, public NetScriptFramework::IVirtualObject { };
		};

		public interface class BSTArrayBase : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class IAllocatorFunctor : public NetScriptFramework::IVirtualObject { };

			property System::Int32 Count
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class DynamicMemoryManagementPol : public NetScriptFramework::IMemoryObject { };

		generic <typename BSStringT_T1, typename BSStringT_T2, typename BSStringT_T3>
		public interface class BSStringT : public NetScriptFramework::IMemoryObject { };

		public interface class BSProceduralGeomEvent : public NetScriptFramework::IMemoryObject { };

		public interface class BSTaskletData : public NetScriptFramework::IVirtualObject { };

		public interface class BSRemoteGamepadEvent : public NetScriptFramework::IMemoryObject { };

		public interface class BSSystemFileAsyncFunctor : public NetScriptFramework::IVirtualObject { };

		public interface class LipSynchAnim : public NetScriptFramework::IMemoryObject { };

		public interface class LipSynchAnimDB : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DBTraits : public NetScriptFramework::IMemoryObject { };

			interface class LipAudioInterface : public BSExternalAudioIO::ExternalIOInterface, public NetScriptFramework::IVirtualObject { };
		};

		public interface class ScaleformFile : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class FileData : public NetScriptFramework::IMemoryObject { };

			interface class DBTraits : public NetScriptFramework::IMemoryObject { };

			interface class MemoryFile;
		};

		public interface class FutBinaryFileC : public NetScriptFramework::IVirtualObject { };

		public interface class BSStreamParserData : public NetScriptFramework::IVirtualObject { };

		public interface class DoNothingUnhandledPolicy0 : public NetScriptFramework::IMemoryObject { };

		generic <typename DoNothingUnhandledPolicy_T1>
		public interface class DoNothingUnhandledPolicy1 : public NetScriptFramework::IVirtualObject { };

		public interface class BSSaveDataEvent : public NetScriptFramework::IMemoryObject { };

		public enum class EffectSettingFlags : System::UInt32
		{
			None = 0,
			Hostile = 1,
			Recover = 2,
			Detrimental = 4,
			SnapToNavmesh = 8,
			NoHitEvent = 0x10,
			DispelWithKeywords = 0x100,
			NoDuration = 0x200,
			NoMagnitude = 0x400,
			NoArea = 0x800,
			FXPersist = 0x1000,
			GoryVisuals = 0x4000,
			HideInUI = 0x8000,
			NoRecast = 0x20000,
			PowerAffectsMagnitude = 0x200000,
			PowerAffectsDuration = 0x400000,
			Painless = 0x4000000,
			NoHitEffect = 0x8000000,
			NoDeathDispel = 0x10000000,
		};

		/// <summary>
		/// List of casting types for effect.
		/// </summary>
		public enum class EffectSettingCastingTypes : System::Int32
		{
			ConstantEffect = 0,
			FireAndForget = 1,
			Concentration = 2,
			Scroll = 3,
		};

		/// <summary>
		/// List of effect setting target types.
		/// </summary>
		public enum class EffectSettingTargetTypes : System::Int32
		{
			Self = 0,
			Touch = 1,
			Aimed = 2,
			TargetActor = 3,
			TargetLocation = 4,
		};

		public enum class SoundLevels8 : System::SByte
		{
			Loud = 0,
			Normal = 1,
			Silent = 2,
			VeryLoud = 3,
			Quiet = 4,
		};

		public interface class MutexRW : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::UInt32 CurrentThreadId
			{
				System::UInt32 __clrcall get();
			}

			property System::Int32 CurrentLockedCount
			{
				System::Int32 __clrcall get();
			}

			/// <summary>
			/// Locks mutex for reading.
			/// </summary>
			void EnterReadLock();

			/// <summary>
			/// Unlocks mutex from reading.
			/// </summary>
			void ExitReadLock();

			/// <summary>
			/// Enters write lock for this mutex.
			/// </summary>
			void EnterWriteLock();

			/// <summary>
			/// Exits write lock for this mutex.
			/// </summary>
			void ExitWriteLock();
		};

		public enum class QuestEvents : System::Int32
		{
			None = -1,
			KillActor = 0,
			AssaultActor = 1,
			ChangeLocation = 2,
			Script = 3,
			ActorDialogue = 4,
			ActorHello = 5,
			PlayerAddItem = 7,
			PlayerRemoveItem = 8,
			CraftItem = 9,
			NewVoicePower = 0xD,
			DeadBody = 0xE,
			SkillIncrease = 0xF,
			IncreaseLevel = 0x10,
			ChangeRelationshipRank = 0x11,
			Jail = 0x17,
			EscapeJail = 0x19,
			Arrest = 0x1C,
			CastMagic = 0x1D,
		};

		public interface class BGSStoryEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::UInt32 Id
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 Index
			{
				System::UInt32 __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<System::UInt64>^ Members
			{
				NetScriptFramework::FixedMemoryArray<System::UInt64>^ __clrcall get();
			}
		};

		public enum class SpellTypes : System::Int32
		{
			Spell = 0,
			Disease = 1,
			Power = 2,
			LesserPower = 3,
			Ability = 4,
			Poison = 5,
			Enchantment = 6,
			Alchemy = 7,
			Ingredient = 8,
			LeveledSpell = 9,
			Addiction = 0xA,
			VoicePower = 0xB,
			StaffEnchantment = 0xC,
			Scroll = 0xD,
		};

		public enum class TESLeveledListFlags : System::Byte
		{
			None = 0,
			CalculateFromAllLevelsLessOrEqualToPlayer = 1,
			CalculateForEachItemInCount = 2,
			UseAll = 4,
			SpecialLoot = 8,
		};

		generic <typename BSTSet_T1>
		public interface class BSTSet : public NetScriptFramework::IMemoryObject, public System::Collections::Generic::IEnumerable<BSTSet_T1>
		{
		public:
			property System::Int32 Capacity
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 Count
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class NiSearchPath : public NetScriptFramework::IVirtualObject { };

		public interface class IRendererResourceManager : public NetScriptFramework::IVirtualObject { };

		public interface class TESRegionObjectBase : public NetScriptFramework::IVirtualObject { };

		public interface class BSSmallBlockAllocatorUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class UserPoolBase : public NetScriptFramework::IVirtualObject { };
		};

		public interface class BSSocket : public NetScriptFramework::IVirtualObject { };

		public interface class BSStreamSystemUtility : public NetScriptFramework::IVirtualObject { };

		public interface class BSStringPool : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class IterationCallback : public NetScriptFramework::IVirtualObject { };
		};

		public interface class BSSysInfoSystemUtility : public NetScriptFramework::IVirtualObject { };

		public interface class BSSystemEvent : public NetScriptFramework::IMemoryObject { };

		public interface class BSSystemMonitor : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MemOpsThread;

			interface class SocketThread;
		};

		public interface class BSSystemUtilitiesStrings : public NetScriptFramework::IVirtualObject { };

		public interface class BSTasklet : public NetScriptFramework::IVirtualObject { };

		public interface class BSTaskletGroupData : public NetScriptFramework::IVirtualObject { };

		public interface class BSTaskletManager : public NetScriptFramework::IVirtualObject { };

		public interface class InterfacedClass : public NetScriptFramework::IVirtualObject { };

		public interface class BSTaskManagerWaitAction : public NetScriptFramework::IMemoryObject { };

		/// <summary>
		/// Types of INI setting values.
		/// </summary>
		public enum class SettingTypes : System::Int32
		{
			Bool = 0,
			Char = 1,
			Float = 5,
			h = 2,
			Int = 3,
			UInt = 4,
			String = 6,
			Color = 7,
			a = 8,
			Unknown = 9,
		};

		generic <typename NiTStringTemplateMap_T1, typename NiTStringTemplateMap_T2>
		public interface class NiTStringTemplateMap : /* NiTStringTemplateMap_T1 */ public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Boolean Copy
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class SkyrimScript : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DelayFunctor : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

			interface class StatsEvent : public NetScriptFramework::IMemoryObject { };

			interface class anonymous_namespace : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class LatentPlayerMover : public BSTEventSink<BGSActorCellEvent^>, public BSTSingletonImplicit1<SkyrimScript::anonymous_namespace::LatentPlayerMover^>, public NetScriptFramework::IVirtualObject { };

				interface class AddItemFunctor : public SkyrimScript::DelayFunctor, public NetScriptFramework::IVirtualObject { };

				interface class AddRemoveConstraintFunctor : public SkyrimScript::DelayFunctor, public NetScriptFramework::IVirtualObject { };

				interface class ApplyHavokImpulseFunctor : public SkyrimScript::DelayFunctor, public NetScriptFramework::IVirtualObject { };

				interface class AttachAshPileFunctor : public SkyrimScript::DelayFunctor, public NetScriptFramework::IVirtualObject { };

				interface class CastFunctor : public SkyrimScript::DelayFunctor, public NetScriptFramework::IVirtualObject { };

				interface class DamageObjectFunctor : public SkyrimScript::DelayFunctor, public NetScriptFramework::IVirtualObject { };

				interface class DeleteFunctor : public SkyrimScript::DelayFunctor, public NetScriptFramework::IVirtualObject { };

				interface class DisableFunctor : public SkyrimScript::DelayFunctor, public NetScriptFramework::IVirtualObject { };

				interface class DropObjectFunctor : public SkyrimScript::DelayFunctor, public NetScriptFramework::IVirtualObject { };

				interface class EnableFunctor : public SkyrimScript::DelayFunctor, public NetScriptFramework::IVirtualObject { };

				interface class FindAttachedObjectFunctor : public BSScript::IForEachScriptObjectFunctor, public NetScriptFramework::IVirtualObject { };

				interface class FindBaseObjVisitor : public InventoryChanges::IItemChangeVisitor, public NetScriptFramework::IVirtualObject { };

				interface class FindExactObjectFunctor : public BSScript::IForEachScriptObjectFunctor, public NetScriptFramework::IVirtualObject { };

				interface class FindRefrObjVisitor : public InventoryChanges::IItemChangeVisitor, public NetScriptFramework::IVirtualObject { };

				interface class ForceAddRemoveRagdollFunctor : public SkyrimScript::DelayFunctor, public NetScriptFramework::IVirtualObject { };

				interface class MoveToFunctor : public SkyrimScript::DelayFunctor, public NetScriptFramework::IVirtualObject { };

				interface class MoveToOwnEditorLocFunctor : public SkyrimScript::DelayFunctor, public NetScriptFramework::IVirtualObject { };

				interface class MoveToPackLocFunctor : public SkyrimScript::DelayFunctor, public NetScriptFramework::IVirtualObject { };

				interface class RemoveItemFunctor : public SkyrimScript::DelayFunctor, public NetScriptFramework::IVirtualObject { };

				interface class ResetFunctor : public SkyrimScript::DelayFunctor, public NetScriptFramework::IVirtualObject { };

				interface class ResurrectFunctor : public SkyrimScript::DelayFunctor, public NetScriptFramework::IVirtualObject { };

				interface class ScrollCastFunctor : public SkyrimScript::DelayFunctor, public NetScriptFramework::IVirtualObject { };

				interface class SendPlayerToJailFunctor : public SkyrimScript::DelayFunctor, public NetScriptFramework::IVirtualObject { };

				interface class SetAngleFunctor : public SkyrimScript::DelayFunctor, public NetScriptFramework::IVirtualObject { };

				interface class SetMotionTypeFunctor : public SkyrimScript::DelayFunctor, public NetScriptFramework::IVirtualObject { };

				interface class SetPositionFunctor : public SkyrimScript::DelayFunctor, public NetScriptFramework::IVirtualObject { };

				interface class SetScaleFunctor : public SkyrimScript::DelayFunctor, public NetScriptFramework::IVirtualObject { };

				interface class TetherFunctor : public SkyrimScript::DelayFunctor, public NetScriptFramework::IVirtualObject { };

				interface class NonLatentDeleteFunctor : public SkyrimScript::anonymous_namespace::DeleteFunctor, public NetScriptFramework::IVirtualObject { };

				interface class FadeThenMainMenuCallback;

				interface class FindActiveEffectFunctor;

				interface class ProfileCallQueryTranslator;

				interface class RawProfileCallQuery;

				interface class ScriptMessageBoxCallback;
			};

			interface class Internal : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class IProfileCallQuery : public NetScriptFramework::IMemoryObject { };

				interface class CallbackList : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

				interface class AnimationCallbacks;
			};

			interface class BaseHandleReaderWriter : public BSScript::IHandleReaderWriter, public NetScriptFramework::IVirtualObject { };

			interface class DelayFunctorFactory : public NetScriptFramework::IVirtualObject { };

			interface class HandlePolicy : public BSScript::IObjectHandlePolicy, public NetScriptFramework::IVirtualObject { };

			interface class ObjectBindPolicy : public BSScript::ObjectBindPolicy, public NetScriptFramework::IVirtualObject { };

			interface class Profiler : public BSScript::IProfilePolicy, public NetScriptFramework::IVirtualObject { };

			interface class SavePatcher : public BSScript::ISavePatcherInterface, public NetScriptFramework::IVirtualObject { };

			generic <typename ConcreteDelayFunctorFactory_T1, typename ConcreteDelayFunctorFactory_T2>
			interface class ConcreteDelayFunctorFactory : public SkyrimScript::DelayFunctorFactory, public NetScriptFramework::IVirtualObject { };

			interface class DataFileHandleReaderWriter : public SkyrimScript::BaseHandleReaderWriter, public NetScriptFramework::IVirtualObject { };

			interface class SaveFileHandleReaderWriter : public SkyrimScript::BaseHandleReaderWriter, public NetScriptFramework::IVirtualObject { };

			interface class PathingCallbackMgr;

			interface class QuestCallbackMgr;

			interface class SoundCallbackMgr;

			interface class Logger;

			interface class Store;
		};

		public enum class UIMessageTypes : System::Int32
		{
			Update = 0,
			Show = 1,
			Reshow = 2,
			Hide = 3,
			ForceHide = 4,
			ScaleformEvent = 6,
			UserEvent = 7,
			InventoryUpdate = 8,
			UserProfileChange = 9,
			MUStatusChange = 0xA,
			ResumeCaching = 0xB,
			UpdateController = 0xC,
			ChatterEvent = 0xD,
		};

		public interface class BSTDefaultScatterTable0 : public NetScriptFramework::IMemoryObject { };

		public interface class BSThreadEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class ThreadEvent : public NetScriptFramework::IMemoryObject { };

			interface class anonymous_namespace : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class Source;
			};
		};

		public interface class CellAttachDetachEvent : public NetScriptFramework::IMemoryObject { };

		public interface class CriticalHitEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class DaysJailed : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class DaysPassed : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class DefaultObjectsReadyEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class DisarmedEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class FinePaid : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class HoursPassed : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public enum class InputEventTypes : System::Int32
		{
			Button = 0,
			MouseMove = 1,
			Char = 2,
			Thumbstick = 3,
			DeviceConnect = 4,
			Kinect = 5,
		};

		public interface class Inventory : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class StatInventoryVisitor : public InventoryChanges::IItemChangeVisitor, public NetScriptFramework::IVirtualObject { };

			interface class Event;
		};

		public interface class ItemCrafted : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event;
		};

		public interface class ItemsPickpocketed : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Int32 NumItems
				{
					System::Int32 __clrcall get();
				}
			};
		};

		public interface class ItemSteal : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class LevelIncrease : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class LocationDiscovery : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class MenuModeChangeEvent : public NetScriptFramework::IMemoryObject { };

		public interface class ObjectiveState : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class Pickpocket : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class PositionPlayerEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class EventTypes : System::Int32
			{
				Pre = 0,
				PreUpdatePackages = 1,
				PostUpdatePackages = 2,
				Post = 3,
				Finish = 4,
			};

			property PositionPlayerEvent::EventTypes Type
			{
				PositionPlayerEvent::EventTypes __clrcall get();
			}
		};

		public interface class QuestStatus : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class RaceSexMenuEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class NameChangedEvent : public NetScriptFramework::IMemoryObject { };
		};

		public interface class SkillIncrease : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class SpeechRecognitionEvents : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DeviceConnected : public NetScriptFramework::IMemoryObject { };

			interface class DeviceReady : public NetScriptFramework::IMemoryObject { };

			interface class Interference : public NetScriptFramework::IMemoryObject { };

			interface class Recognition : public NetScriptFramework::IMemoryObject { };
		};

		public interface class TESActivateEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESActorLocationChangeEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESBookReadEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESCellAttachDetachEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESCellReadyToApplyDecalsEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESContainerChangedEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::UInt32 OldContainerFormId
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 NewContainerFormId
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 BaseObjFormId
			{
				System::UInt32 __clrcall get();
			}

			property System::Int32 ItemCount
			{
				System::Int32 __clrcall get();
			}

			property System::UInt32 ReferenceHandle
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt16 UniqueId
			{
				System::UInt16 __clrcall get();
			}
		};

		public interface class TESDataHandlerPostBuildFileListEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESDestructionStageChangedEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESEnterBleedoutEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESFastTravelEndEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESFormDeleteEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESFurnitureEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESHarvestEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class ItemHarvested : public NetScriptFramework::IMemoryObject { };
		};

		public interface class TESLoadGameEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESMagicWardHitEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESObjectLoadedEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::UInt32 FormId
			{
				System::UInt32 __clrcall get();
			}

			property System::Boolean Loaded
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class TESObjectREFRTranslationEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESOpenCloseEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESPackageEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESPerkEntryRunEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESPlayerBowShotEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESQuestInitEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESQuestStageEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESQuestStageItemDoneEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESQuestStartStopEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESResolveNPCTemplatesEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESSceneActionEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESSceneEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESScenePhaseEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESSellEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESSleepStartEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESSleepStopEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESSpellCastEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESTopicInfoEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESTrapHitEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESTriggerEnterEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESTriggerEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESTriggerLeaveEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESUniqueIDChangeEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::UInt32 OldBaseFormId
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 NewBaseFormId
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 ObjectFormId
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt16 OldUniqueId
			{
				System::UInt16 __clrcall get();
			}

			property System::UInt16 NewUniqueId
			{
				System::UInt16 __clrcall get();
			}
		};

		public interface class TESWaitStartEvent : public NetScriptFramework::IMemoryObject { };

		public interface class TESWaitStopEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Boolean Interrupted
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class Trespass : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class UserEventEnabledEvent : public NetScriptFramework::IMemoryObject { };

		public interface class WordLearned : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class WordUnlocked : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Event : public NetScriptFramework::IMemoryObject { };
		};

		public interface class ITextureDB : public NetScriptFramework::IVirtualObject { };

		public interface class ResponseDefinitionMissPolicy0 : public NetScriptFramework::IMemoryObject { };

		public interface class PreloadResponsesInitializationPolicy0 : public NetScriptFramework::IMemoryObject { };

		generic <typename ResponseDefinitionMissPolicy_T1, typename ResponseDefinitionMissPolicy_T2>
		public interface class ResponseDefinitionMissPolicy2 : public NetScriptFramework::IVirtualObject { };

		generic <typename PreloadResponsesInitializationPolicy_T1, typename PreloadResponsesInitializationPolicy_T2>
		public interface class PreloadResponsesInitializationPolicy2 : public NetScriptFramework::IVirtualObject { };

		public interface class HandlerCreationMissPolicy0 : public NetScriptFramework::IMemoryObject { };

		public interface class NoInitializationPolicy0 : public NetScriptFramework::IMemoryObject { };

		public interface class BSTScatterTableDefaultKVStorage : public NetScriptFramework::IMemoryObject { };

		public interface class BSTScatterTableDefaultHashPolicy0 : public NetScriptFramework::IMemoryObject { };

		public interface class BSTScatterTableHeapAllocator0 : public NetScriptFramework::IMemoryObject { };

		generic <typename BSTScatterTableDefaultHashPolicy_T1>
		public interface class BSTScatterTableDefaultHashPolicy1 : public NetScriptFramework::IMemoryObject { };

		generic <typename BSTScatterTableEntry_T1, typename BSTScatterTableEntry_T2, typename BSTScatterTableEntry_T3>
		public interface class BSTScatterTableEntry : public NetScriptFramework::IMemoryObject { };

		generic <typename BSTScatterTableHeapAllocator_T1>
		public interface class BSTScatterTableHeapAllocator1 : public NetScriptFramework::IMemoryObject { };

		generic <typename BSTScatterTableTraits_T1, typename BSTScatterTableTraits_T2, typename BSTScatterTableTraits_T3, typename BSTScatterTableTraits_T4, typename BSTScatterTableTraits_T5, typename BSTScatterTableTraits_T6>
		public interface class BSTScatterTableTraits : public NetScriptFramework::IMemoryObject { };

		generic <typename BSTSingletonSDMOpStaticBuffer_T1>
		public interface class BSTSingletonSDMOpStaticBuffer1 : public NetScriptFramework::IMemoryObject { };

		public interface class JobListManager : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class ServingThread;
		};

		public interface class TESAudio : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class ScriptedMusicState;
		};

		public interface class MovementHandlerOutputDataSmallDelta : public NetScriptFramework::IMemoryObject { };

		generic <typename IMovementAgentDataTracker_T1, typename IMovementAgentDataTracker_T2>
		public interface class IMovementAgentDataTracker : public NetScriptFramework::IVirtualObject { };

		public interface class MovementHandlerUpdateDataSmallDelta : public NetScriptFramework::IMemoryObject { };

		public interface class MovementPlannerAgentReturnDataSmallDelta : public NetScriptFramework::IMemoryObject { };

		public interface class MovementTweenerAgentOutputData : public NetScriptFramework::IMemoryObject { };

		public interface class IMovementControllerDataTracker : public NetScriptFramework::IVirtualObject { };

		public interface class MovementSelectIdleUtils : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class SelectFirstIdleFilter;

			interface class SelectClosestIdleToPath;
		};

		public interface class ISelectIdleFilter : public NetScriptFramework::IVirtualObject { };

		public interface class IPathBuilderTracker : public NetScriptFramework::IVirtualObject { };

		public interface class BSTSingletonSDMOpStaticBuffer0 : public NetScriptFramework::IMemoryObject { };

		public interface class IXAudio2VoiceCallback : public NetScriptFramework::IVirtualObject { };

		public interface class GameOverlayActivated_t : public NetScriptFramework::IMemoryObject { };

		public interface class CCallbackBase : public NetScriptFramework::IMemoryObject { };

		public interface class EncryptedAppTicketResponse_t : public NetScriptFramework::IMemoryObject { };

		public interface class ICheckEndReachedFunctor : public NetScriptFramework::IVirtualObject { };

		public interface class COMBAT_SEARCH_PRIORITY : public NetScriptFramework::IMemoryObject { };

		public interface class CombatAcquireItem : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorAcquireItem : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorAcquireResource : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class FLAG : public NetScriptFramework::IMemoryObject { };
		};

		public interface class CombatBehaviorAdvance : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorAttack : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorAttackFromCover : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorAttackLow : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorBackoff : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorBash : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorTree : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class CombatBehaviorAttacker : public NetScriptFramework::IMemoryObject { };

			interface class CombatBehaviorTarget : public NetScriptFramework::IMemoryObject { };
		};

		generic <typename CombatBehaviorFunc2_T1, typename CombatBehaviorFunc2_T2, typename CombatBehaviorFunc2_T3>
		public interface class CombatBehaviorFunc2 : public NetScriptFramework::IMemoryObject { };

		public interface class OpLessThan : public NetScriptFramework::IMemoryObject { };

		generic <typename CombatBehaviorBinaryExpression_T1, typename CombatBehaviorBinaryExpression_T2, typename CombatBehaviorBinaryExpression_T3>
		public interface class CombatBehaviorBinaryExpression : public NetScriptFramework::IMemoryObject { };

		generic <typename CombatBehaviorMemberFunc_T1, typename CombatBehaviorMemberFunc_T2>
		public interface class CombatBehaviorMemberFunc : public NetScriptFramework::IMemoryObject { };

		public interface class FLY_STATE : public NetScriptFramework::IMemoryObject { };

		public interface class OpNotEquals : public NetScriptFramework::IMemoryObject { };

		generic <typename CombatBehaviorExpression_T1>
		public interface class CombatBehaviorExpression : public NetScriptFramework::IMemoryObject { };

		public interface class OpOr : public NetScriptFramework::IMemoryObject { };

		public interface class OpNot : public NetScriptFramework::IMemoryObject { };

		generic <typename CombatBehaviorUnaryExpression_T1, typename CombatBehaviorUnaryExpression_T2>
		public interface class CombatBehaviorUnaryExpression : public NetScriptFramework::IMemoryObject { };

		public interface class OpAnd : public NetScriptFramework::IMemoryObject { };

		public interface class OpEquals : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorContextSearch : public NetScriptFramework::IMemoryObject { };

		public interface class OpGreaterThan : public NetScriptFramework::IMemoryObject { };

		public interface class CombatInventory : public NetScriptFramework::IMemoryObject { };

		public interface class CombatState : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorBlock : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorBlockAttack : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorCastConcentrationSpell : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorCastImmediateSpell : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorCastShout : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorChase : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorCheckUnreachableTarget : public NetScriptFramework::IMemoryObject { };

		public interface class ConditionalChildSelector : public NetScriptFramework::IMemoryObject { };

		generic <typename CombatBehaviorChildSelector_T1>
		public interface class CombatBehaviorChildSelector : public NetScriptFramework::IMemoryObject { };

		public interface class RandomValueChildSelector : public NetScriptFramework::IMemoryObject { };

		public interface class ValueChildSelector : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorCircle : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorCircleDistant : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorContextAcquireWeapon : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorContextBlock : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorContextCloseMovement : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorContextCover : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorContextDodgeThreat : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorContextFindAttackLocation : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorContextFlankingMovement : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorContextFlee : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorContextHide : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorContextMagic : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorContextMelee : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class ATTACK_TYPE : public NetScriptFramework::IMemoryObject { };
		};

		public interface class CombatBehaviorContextRanged : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorContextRangedMovement : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorContextShout : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorContextUsePotion : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorDisableAim : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorDiveBomb : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorDodgeThreat : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorDrinkPotion : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorDynamicConditionalNode : public NetScriptFramework::IMemoryObject { };

		generic <typename CombatBehaviorDynamicSelector_T1>
		public interface class CombatBehaviorDynamicSelector : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorEnableBlackboardFlag : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorEquipContext : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorEquipObject : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorEquipRangedWeapon : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorEquipShout : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorEquipSpell : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorExitWater : public NetScriptFramework::IMemoryObject { };

		generic <typename CombatBehaviorFunc_T1>
		public interface class CombatBehaviorFunc : public NetScriptFramework::IMemoryObject { };

		generic <typename CombatBehaviorFunc1_T1, typename CombatBehaviorFunc1_T2>
		public interface class CombatBehaviorFunc1 : public NetScriptFramework::IMemoryObject { };

		generic <typename SettingCollection_T1>
		public interface class SettingCollection : public NetScriptFramework::IVirtualObject
		{
		public:
			property System::String^ SubKey
			{
				System::String^ __clrcall get();
			}

			property System::IntPtr Handle
			{
				System::IntPtr __clrcall get();
			}
		};

		public interface class MagicSystem : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class CastingType : public NetScriptFramework::IMemoryObject { };
		};

		public interface class CombatGroup : public NetScriptFramework::IMemoryObject { };

		generic <typename CombatBehaviorMemberFunc1_T1, typename CombatBehaviorMemberFunc1_T2, typename CombatBehaviorMemberFunc1_T3>
		public interface class CombatBehaviorMemberFunc1 : public NetScriptFramework::IMemoryObject { };

		public interface class CombatController : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorFaceAngle : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorFallback : public NetScriptFramework::IMemoryObject { };

		public interface class NextChildSelector : public NetScriptFramework::IMemoryObject { };

		generic <typename CombatBehaviorFallbackSelector_T1>
		public interface class CombatBehaviorFallbackSelector : public NetScriptFramework::IMemoryObject { };

		public interface class WeightedRandomChildSelector : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorFallbackToRanged : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorFindAllyAttackLocation : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorFindAttackLocation : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorFindCover : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorFindLateralAttackLocation : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorFindWeapon : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorFlank : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorFlankDistant : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorFlee : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorFleeThroughDoor : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorFleeToAlly : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorFleeToCover : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorFlyingAttack : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorFollowPath : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorForceFail : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorForceSuccess : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorGroundAttack : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorHide : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorHover : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorIdle : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorLand : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorLandNearby : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorMaintainOptimalRange : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorOrbit : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorOrbitDistant : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorParallel : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class FLAGS : public NetScriptFramework::IMemoryObject { };
		};

		public interface class CombatBehaviorPause : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorPerchAttack : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorPrepareDualCast : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorPursueTarget : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorRangedAttack : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorRepeat : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class FLAGS : public NetScriptFramework::IMemoryObject { };
		};

		public interface class CombatBehaviorReposition : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorReturnToCombatArea : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorSearch : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorSearchCenter : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorSearchInvestigateDoor : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorSearchLocation : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorSearchWander : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorSequence : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorSetBlackboardData : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorSpawnParallel : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorSpecialAttack : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorStalk : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorStrafe : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorSurround : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorTakeoff : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorTrackTarget : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorTreeNode : public NetScriptFramework::IVirtualObject { };

		public interface class CombatBehaviorWaitBehindCover : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBlackboardFlag : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBehaviorWatchTarget : public NetScriptFramework::IMemoryObject { };

		public interface class CombatBlackboardKeyBase : public NetScriptFramework::IVirtualObject { };

		generic <typename CombatPathBuilderT_T1, typename CombatPathBuilderT_T2, typename CombatPathBuilderT_T3>
		public interface class CombatPathBuilderT : /* CombatPathBuilderT_T1 */ public NetScriptFramework::IVirtualObject { };

		public interface class CompactingStore : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MoveCallback : public NetScriptFramework::IVirtualObject { };

			interface class Store : public IMemoryStoreBase, public NetScriptFramework::IVirtualObject { };

			interface class NoopMoveCallback : public CompactingStore::MoveCallback, public NetScriptFramework::IVirtualObject { };
		};

		public interface class IExplosionFactory : public NetScriptFramework::IVirtualObject { };

		public interface class TESChildCell : public NetScriptFramework::IVirtualObject { };

		public interface class ScriptHeader : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Int32 VariableCount
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 RefObjectCount
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 DataSize
			{
				System::Int32 __clrcall get();
			}

			property System::UInt32 LastId
			{
				System::UInt32 __clrcall get();
			}

			property System::Boolean IsQuestScript
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean IsMagicEffectScript
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean IsCompiled
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class ScriptFunction : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class ScriptData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::UInt16 Opcode
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 ChunkSize
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 NumParams
				{
					System::UInt16 __clrcall get();
				}
			};

			property System::String^ FunctionName
			{
				System::String^ __clrcall get();
			}

			property System::String^ ShortName
			{
				System::String^ __clrcall get();
			}

			property System::UInt32 Output
			{
				System::UInt32 __clrcall get();
			}

			property System::String^ HelpString
			{
				System::String^ __clrcall get();
			}

			property System::Boolean ReferenceFunction
			{
				System::Boolean __clrcall get();
			}

			property System::UInt16 NumParams
			{
				System::UInt16 __clrcall get();
			}

			property System::IntPtr Params
			{
				System::IntPtr __clrcall get();
			}

			property System::IntPtr ExecuteFunction
			{
				System::IntPtr __clrcall get();
			}

			property System::IntPtr CompileFunction
			{
				System::IntPtr __clrcall get();
			}

			property System::IntPtr ConditionFunction
			{
				System::IntPtr __clrcall get();
			}

			property System::Boolean EditorFilter
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean InvalidatesCellList
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class TESMagicCasterForm : public NetScriptFramework::IMemoryObject { };

		public enum class SoulLevels : System::SByte
		{
			None = 0,
			Petty = 1,
			Lesser = 2,
			Common = 3,
			Greater = 4,
			Grand = 5,
		};

		public interface class ITempEffectFactory : public NetScriptFramework::IVirtualObject { };

		public interface class CraftingSubMenus : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class CraftingSubMenu;

			interface class AlchemyMenu;

			interface class ConstructibleObjectMenu;

			interface class EnchantConstructMenu;

			interface class SmithingMenu;
		};

		public interface class CreationClub : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class AsyncModRequest : public NetScriptFramework::IVirtualObject { };

			interface class CreationListRequest : public CreationClub::AsyncModRequest, public NetScriptFramework::IVirtualObject { };

			interface class DownloadCreationRequest : public CreationClub::AsyncModRequest, public NetScriptFramework::IVirtualObject { };

			interface class DownloadImageRequest : public CreationClub::AsyncModRequest, public NetScriptFramework::IVirtualObject { };

			interface class GetCreationRequest : public CreationClub::AsyncModRequest, public NetScriptFramework::IVirtualObject { };

			interface class GetIntRequest : public CreationClub::AsyncModRequest, public NetScriptFramework::IVirtualObject { };

			interface class SavedGFxValueRequest : public CreationClub::AsyncModRequest, public NetScriptFramework::IVirtualObject { };

			interface class StringStringRequest : public CreationClub::AsyncModRequest, public NetScriptFramework::IVirtualObject { };

			interface class BundleChildrenRequest : public CreationClub::CreationListRequest, public NetScriptFramework::IVirtualObject { };

			interface class CategorySearchRequest : public CreationClub::CreationListRequest, public NetScriptFramework::IVirtualObject { };

			interface class CreationChanged_ConfirmResetCallback;
		};

		public interface class CustomUtils : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class HasForceGreetVisitor;
		};

		public interface class IProcedureTreeVisitor : public NetScriptFramework::IMemoryObject { };

		public interface class IDebugText : public NetScriptFramework::IVirtualObject { };

		generic <typename DFALL_T1>
		public interface class DFALL : public NetScriptFramework::IMemoryObject { };

		public interface class TEX_USER_DATA : public NetScriptFramework::IMemoryObject { };

		public interface class RefActivateData : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::UInt32 ActivateRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property System::Single ActivateDelay
			{
				System::Single __clrcall get();
			}
		};

		public interface class SeenData : public NetScriptFramework::IVirtualObject { };

		public interface class FindTriangleForLocationFilter : public NetScriptFramework::IVirtualObject { };

		public interface class FxResponseArgsBase : public NetScriptFramework::IVirtualObject { };

		public interface class GFileConstants : public NetScriptFramework::IMemoryObject { };

		public interface class GridArray : public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Int32 Length
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class IPathingNodeGenerator : public NetScriptFramework::IVirtualObject { };

		public interface class ISmoothingRayValidator : public NetScriptFramework::IVirtualObject { };

		generic <typename HandlerCreationMissPolicy_T1, typename HandlerCreationMissPolicy_T2>
		public interface class HandlerCreationMissPolicy2 : public NetScriptFramework::IVirtualObject { };

		generic <typename hkSingleton_T1>
		public interface class hkSingleton : public NetScriptFramework::IMemoryObject { };

		public interface class hkAabbTreeData : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class hkAabbTreeAabb16 : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

				interface class Metric;
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class hkAabbTreeAabb;

			interface class Bundle;

			interface class CastVolumeInput;

			interface class Ray;

			interface class RayBundle;

			interface class SetRays;
		};

		generic <typename hkAabbTreeQueryUtils_T1, typename hkAabbTreeQueryUtils_T2>
		public interface class hkAabbTreeQueryUtils : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Collector : public NetScriptFramework::IVirtualObject { };

			interface class TreeTreeCollector : public NetScriptFramework::IVirtualObject { };

			interface class IdxPair : public NetScriptFramework::IMemoryObject { };

			interface class NodePair : public NetScriptFramework::IMemoryObject { };

			interface class AllHitsCollector : public hkAabbTreeQueryUtils<hkAabbTreeQueryUtils_T1, hkAabbTreeQueryUtils_T2>::Collector, public NetScriptFramework::IVirtualObject { };

			interface class AllHitsNodeCollector : public hkAabbTreeQueryUtils<hkAabbTreeQueryUtils_T1, hkAabbTreeQueryUtils_T2>::Collector, public NetScriptFramework::IVirtualObject { };

			interface class ClosestPointCollector : public hkAabbTreeQueryUtils<hkAabbTreeQueryUtils_T1, hkAabbTreeQueryUtils_T2>::Collector, public NetScriptFramework::IVirtualObject { };

			interface class TreeTreeNodePairCollector : public hkAabbTreeQueryUtils<hkAabbTreeQueryUtils_T1, hkAabbTreeQueryUtils_T2>::TreeTreeCollector, public NetScriptFramework::IVirtualObject { };
		};

		public interface class hkaAnimationControlListener : public NetScriptFramework::IVirtualObject { };

		public interface class hkaDefaultAnimationControlListener : public NetScriptFramework::IVirtualObject { };

		public interface class hkRemoteObjectClientSideListener : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkbBindableCollector : public NetScriptFramework::IVirtualObject { };

		public interface class hkContainerDebugAllocator : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Allocator : public hkMemoryAllocator, public NetScriptFramework::IVirtualObject { };
		};

		public interface class hkResourceMap : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkContainerTempAllocator : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Allocator : public hkMemoryAllocator, public NetScriptFramework::IVirtualObject { };
		};

		public interface class hkpBroadPhaseCastCollector : public NetScriptFramework::IVirtualObject { };

		public interface class hkKdTreeCastCollector : public NetScriptFramework::IVirtualObject { };

		public interface class hkMemoryTracker : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class TypeDefinition : public NetScriptFramework::IMemoryObject
			{
			public:
				enum class Type : System::Int32
				{
					TYPE_BASIC = 0,
					TYPE_CLASS = 1,
					TYPE_SCAN = 2,
				};
			};

			interface class Member : public NetScriptFramework::IMemoryObject { };

			interface class ClassDefinition : public hkMemoryTracker::TypeDefinition, public NetScriptFramework::IMemoryObject { };

			interface class InitClassDefinition : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDefaultMemoryTrackerAllocator : public NetScriptFramework::IMemoryObject { };

		public interface class hkGeometryProcessing : public NetScriptFramework::IMemoryObject
		{
		public:
			generic <typename IFunction_T1, typename IFunction_T2>
			interface class IFunction : public NetScriptFramework::IVirtualObject { };

			generic <typename ConstFunction_T1>
			interface class ConstFunction : /* ConstFunction_T1 */ public NetScriptFramework::IVirtualObject { };

			interface class IsoVertex : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class Primes : System::Int32
			{
				NEXT_PRIME_AFTER_8 = 0xB,
				NEXT_PRIME_AFTER_16 = 0x11,
				NEXT_PRIME_AFTER_32 = 0x25,
				NEXT_PRIME_AFTER_64 = 0x43,
				NEXT_PRIME_AFTER_128 = 0x83,
				NEXT_PRIME_AFTER_256 = 0x101,
				NEXT_PRIME_AFTER_512 = 0x209,
				NEXT_PRIME_AFTER_1024 = 0x407,
				NEXT_PRIME_AFTER_2048 = 0x805,
				NEXT_PRIME_AFTER_4096 = 0x1003,
				NEXT_PRIME_AFTER_8192 = 0x2011,
			};

			generic <typename Span_T1>
			interface class Span : public NetScriptFramework::IMemoryObject { };

			interface class TransposedVectors;

			interface class AccumulatorScope;

			interface class PerformanceScope;
		};

		public interface class __m128 : public NetScriptFramework::IMemoryObject { };

		public interface class hkGeometryProcessingInternals : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class NearestFeaturePolicy : public hkAabbTreeQueryUtils<hkAabbTreeData::hkAabbTreeAabb^, System::UInt32>::ClosestPointCollector, public NetScriptFramework::IVirtualObject { };
		};

		public interface class hkgpConvexHullImpl : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Edge : public NetScriptFramework::IMemoryObject { };

			interface class Vertex : public NetScriptFramework::IMemoryObject { };

			interface class Triangle : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkgpIndexedMeshDefinitions : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Edge : public NetScriptFramework::IMemoryObject { };

			interface class Vertex : public NetScriptFramework::IMemoryObject { };

			interface class Triangle : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkgpMeshBase : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Edge : public NetScriptFramework::IMemoryObject { };

			interface class Vertex : public NetScriptFramework::IMemoryObject { };

			interface class Triangle : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkgpJobQueue : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class IJob : public NetScriptFramework::IVirtualObject { };

			generic <typename Box_T1>
			interface class Box : public hkgpJobQueue::IJob, public NetScriptFramework::IVirtualObject { };
		};

		public interface class hkgpMeshInternals : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class ConcaveEdgeJob : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class Handle : public NetScriptFramework::IMemoryObject { };
			};

			interface class RayCaster : public hkAabbTreeQueryUtils<hkAabbTreeData::hkAabbTreeAabb^, System::UInt32>::Collector, public NetScriptFramework::IVirtualObject { };

			interface class SimpleCollector : public hkAabbTreeQueryUtils<hkAabbTreeData::hkAabbTreeAabb^, System::UInt32>::Collector, public NetScriptFramework::IVirtualObject { };

			interface class TriangleOverlap : public hkAabbTreeQueryUtils<hkAabbTreeData::hkAabbTreeAabb^, System::UInt32>::Collector, public NetScriptFramework::IVirtualObject { };
		};

		public interface class hkGskShape : public NetScriptFramework::IVirtualObject { };

		public interface class hkKdTreeBuildInput : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Splitting : System::Int32
			{
				SURFACE_AREA_HEURISTIC = 0,
				MEDIAN = 1,
			};

			interface class Mediator;

			interface class BuildRecursiveInput;

			interface class WorkingSet;

			interface class TreeStream;
		};

		public interface class hkKdTreeBundleCastCollector : public NetScriptFramework::IVirtualObject { };

		public interface class hkNiTriStripsData : public NetScriptFramework::IMemoryObject { };

		public interface class hkStructureLayout : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class LayoutRules : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		generic <typename hkFlags_T1, typename hkFlags_T2>
		public interface class hkFlags : public NetScriptFramework::IMemoryObject { };

		public interface class hkTypeInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkHalf : public NetScriptFramework::IMemoryObject { };

		public interface class hkpBroadPhaseListener : public NetScriptFramework::IVirtualObject { };

		public interface class hkpCollideTriangleUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class PointTriangleDistanceCache : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class ClosestPointTriangleCache : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			enum class ClosestPointTriangleStatus : System::Int32
			{
				HIT_TRIANGLE_FACE = 0,
				HIT_TRIANGLE_EDGE = 1,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class ClosestPointTriangleResult;
		};

		public enum class hkpCharacterStateType : System::Int32
		{
			HK_CHARACTER_ON_GROUND = 0,
			HK_CHARACTER_JUMPING = 1,
			HK_CHARACTER_IN_AIR = 2,
			HK_CHARACTER_CLIMBING = 3,
			HK_CHARACTER_FLYING = 4,
			HK_CHARACTER_USER_STATE_0 = 5,
			HK_CHARACTER_USER_STATE_1 = 6,
			HK_CHARACTER_USER_STATE_2 = 7,
			HK_CHARACTER_USER_STATE_3 = 8,
			HK_CHARACTER_USER_STATE_4 = 9,
			HK_CHARACTER_USER_STATE_5 = 0xA,
			HK_CHARACTER_MAX_STATE_ID = 0xB,
		};

		public interface class hkpConstraintInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConstraintUtils : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class CollectConstraintsFilter : public NetScriptFramework::IVirtualObject { };
		};

		public interface class hkpGskCache : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class BitField_A : System::Byte
			{
				m_maxDimA_0 = 1,
				m_maxDimA_1 = 2,
				m_maxDimA_2 = 4,
				m_maxDimA_3 = 8,
				m_maxDimB_0 = 0x10,
				m_maxDimB_1 = 0x20,
				m_maxDimB_2 = 0x40,
				m_maxDimB_3 = 0x80,
			};

			enum class GskFlagValues : System::Int32
			{
				GSK_FLAGS_SHAPE_A_IS_CYLINDER = 1,
				GSK_FLAGS_SHAPE_B_IS_CYLINDER = 2,
				GSK_FLAGS_REPLACE_SHAPE_A_WITH_CAPSULE = 4,
				GSK_FLAGS_REPLACE_SHAPE_B_WITH_CAPSULE = 8,
				GSK_FLAGS_CYLINDER_AGENT_FLAGS = 0xF,
				GSK_FLAGS_DISABLE_CONTACT_TIMS = 0x10,
				GSK_FLAGS_CONVEX_LIST_IN_GSK_MODE = 0x20,
				GSK_FLAGS_PROCESS_FUNCTION_CALLED = 0x40,
				GSK_FLAGS_ALLOW_QUICKER_CONTACT_POINT_RECREATION = 0x80,
			};

			enum class MaxDim : System::Int32
			{
				MAX_DIM_MAX = 0xF,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpGskManifold : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class ContactPoint : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpHavokSnapshot : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class SnapshotOptionsBits : System::Int32
			{
				SNAPSHOT_BINARY_TAGFILE = 0,
				SNAPSHOT_TEXT = 1,
				SNAPSHOT_PACKFILE = 2,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Options : public hkFlags<hkpHavokSnapshot::SnapshotOptionsBits, System::Int32>, public NetScriptFramework::IMemoryObject { };

			interface class ConvertListener;
		};

		public interface class hkpMoppModifier : public NetScriptFramework::IVirtualObject { };

		generic <typename hkMapOperations_T1>
		public interface class hkMapOperations : public NetScriptFramework::IMemoryObject { };

		public interface class hkDebugDisplayHandler : public NetScriptFramework::IVirtualObject { };

		public interface class hkProcessHandler : public NetScriptFramework::IVirtualObject { };

		generic <typename hkpSymmetricAgentLinearCast_T1>
		public interface class hkpSymmetricAgentLinearCast : /* hkpSymmetricAgentLinearCast_T1 */ public NetScriptFramework::IVirtualObject { };

		public interface class hkRemoteObjectServerSideListener : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class _iobuf : public NetScriptFramework::IMemoryObject { };

		public interface class ImageSpaceEffectParam : public NetScriptFramework::IVirtualObject { };

		public interface class ImageSpaceTexture : public NetScriptFramework::IMemoryObject { };

		public interface class IMemoryManagerFile : public NetScriptFramework::IVirtualObject { };

		public interface class MovementPathManagerAgentReturnData : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class AGENT_RESULT : public NetScriptFramework::IMemoryObject { };
		};

		public interface class IMovementControllerRegisterInterface : public NetScriptFramework::IVirtualObject { };

		public interface class InventoryUtils : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class anonymous_namespace : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class GetWornMaskVisitor : public InventoryChanges::IItemChangeVisitor, public NetScriptFramework::IVirtualObject { };

				interface class IsFavoriteVisitor : public InventoryChanges::IItemChangeVisitor, public NetScriptFramework::IVirtualObject { };

				interface class IsWornVisitor : public InventoryChanges::IItemChangeVisitor, public NetScriptFramework::IVirtualObject { };

				interface class WornHasKeywordVisitor : public InventoryChanges::IItemChangeVisitor, public NetScriptFramework::IVirtualObject { };
			};

			interface class ItemFilter : public NetScriptFramework::IVirtualObject { };

			interface class QuestItemFilter : public InventoryUtils::ItemFilter, public NetScriptFramework::IVirtualObject { };
		};

		public interface class IPathFollowerState : public NetScriptFramework::IVirtualObject { };

		public interface class ITrianglePathSplitter : public NetScriptFramework::IVirtualObject { };

		public interface class JournalInputMapping : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class RemapHandler;
		};

		public interface class SaveLoadMagicCasterVisitor : public NetScriptFramework::IVirtualObject { };

		public interface class LocalMapMenu : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class LocalMapCullingProcess;

			interface class InputHandler;

			property LocalMapMenu::LocalMapCullingProcess^ LocalCullingProcess
			{
				LocalMapMenu::LocalMapCullingProcess^ __clrcall get();
			}
		};

		public interface class MagicItemData : public NetScriptFramework::IVirtualObject { };

		public interface class BSSaveDataSystemUtilityImage : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Int32 Size
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 Width
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 Height
			{
				System::Int32 __clrcall get();
			}

			property System::IntPtr Buffer
			{
				System::IntPtr __clrcall get();
			}
		};

		public interface class MapCameraStates : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Exit;

			interface class Transition;

			interface class World;
		};

		public interface class ModManager : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class AsyncModRequest : public NetScriptFramework::IVirtualObject { };

			interface class CategorySearchRequest : public ModManager::AsyncModRequest, public NetScriptFramework::IVirtualObject { };

			interface class DownloadImageRequest : public ModManager::AsyncModRequest, public NetScriptFramework::IVirtualObject { };

			interface class DownloadModRequest : public ModManager::AsyncModRequest, public NetScriptFramework::IVirtualObject { };

			interface class GetDetailsRequest : public ModManager::AsyncModRequest, public NetScriptFramework::IVirtualObject { };

			interface class GetIntRequest : public ModManager::AsyncModRequest, public NetScriptFramework::IVirtualObject { };

			interface class SavedGFxValueRequest : public ModManager::AsyncModRequest, public NetScriptFramework::IVirtualObject { };

			interface class StringStringRequest : public ModManager::AsyncModRequest, public NetScriptFramework::IVirtualObject { };

			interface class GetDependencyRequest : public ModManager::GetDetailsRequest, public NetScriptFramework::IVirtualObject { };

			interface class CloseModManager_ConfirmCallback;

			interface class DeleteAllModsConfirmCallback;

			interface class DeleteLibraryModConfirmCallback;

			interface class DeleteMod_ConfirmCallback;

			interface class ModsChanged_ConfirmResetCallback;

			interface class ReportMod_CategoryCallback;

			interface class ReportMod_ConfirmCallback;
		};

		public interface class MovementVector : public NetScriptFramework::IMemoryObject { };

		public interface class NiBoundingVolume : public NetScriptFramework::IVirtualObject { };

		public interface class NiIntersector : public NetScriptFramework::IVirtualObject { };

		public interface class NiCollisionTraversals : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class IFindIntersections : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };
		};

		public interface class NiAnimationKey : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class KeyTypes : System::Int32
			{
				NoInterp = 0,
				Link = 1,
				Bez = 2,
				TCB = 3,
				Euler = 4,
				Strip = 5,
			};

			enum class KeyContents : System::Int32
			{
				Float = 0,
				Pos = 1,
				Rot = 2,
				Color = 3,
				Text = 4,
				Bool = 5,
			};

			property System::Single Time
			{
				System::Single __clrcall get();
			}
		};

		generic <typename NiTLargeArray_T1, typename NiTLargeArray_T2>
		public interface class NiTLargeArray : public NetScriptFramework::IVirtualObject, public System::Collections::Generic::IEnumerable<NiTLargeArray_T1>
		{
		public:
			property System::IntPtr Data
			{
				System::IntPtr __clrcall get();
			}

			property System::Int32 Capacity
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 SparseCount
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 ActualCount
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 GrowCount
			{
				System::Int32 __clrcall get();
			}

			property NiTLargeArray_T1 default[System::Int32]
			{
				NiTLargeArray_T1 get(System::Int32 index);
			}
		};

		public interface class NiMetricsOutputModule : public NetScriptFramework::IMemoryObject { };

		public interface class NiOBBNode : public NetScriptFramework::IVirtualObject { };

		public interface class NiOBBRoot : public NetScriptFramework::IVirtualObject { };

		public interface class NiPick : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Record : public NetScriptFramework::IMemoryObject { };

			interface class Results;
		};

		generic <typename NiTArray_T1, typename NiTArray_T2>
		public interface class NiTArray : public NetScriptFramework::IVirtualObject, public System::Collections::Generic::IEnumerable<NiTArray_T1>
		{
		public:
			/// <summary>
			/// The currently allocated data array to store elements.
			/// </summary>
			property System::IntPtr Data
			{
				System::IntPtr __clrcall get();
			}

			/// <summary>
			/// Gets the current max capacity of elements in array before reallocation.
			/// </summary>
			property System::UInt16 Capacity
			{
				System::UInt16 __clrcall get();
			}

			/// <summary>
			/// Gets the sparse count of elements in array. This should only be used for iterating and not to check actual count of elements!
			/// </summary>
			property System::UInt16 SparseCount
			{
				System::UInt16 __clrcall get();
			}

			/// <summary>
			/// Gets the actual count of elements in array.
			/// </summary>
			property System::UInt16 ActualCount
			{
				System::UInt16 __clrcall get();
			}

			property System::UInt16 GrowCount
			{
				System::UInt16 __clrcall get();
			}

			/// <summary>
			/// Gets the value at specified index.
			/// </summary>
			property NiTArray_T1 default[System::Int32]
			{
				NiTArray_T1 get(System::Int32 index);
			}
		};

		public interface class NiThreadProcedure : public NetScriptFramework::IVirtualObject { };

		generic <typename NiTMallocInterface_T1>
		public interface class NiTMallocInterface : public NetScriptFramework::IMemoryObject { };

		generic <typename NiTScrapHeapInterface_T1>
		public interface class NiTScrapHeapInterface : public NetScriptFramework::IMemoryObject { };

		generic <typename NiTNewInterface_T1>
		public interface class NiTNewInterface : public NetScriptFramework::IMemoryObject { };

		generic <typename NiTSet_T1, typename NiTSet_T2>
		public interface class NiTSet : public NetScriptFramework::IMemoryObject, public System::Collections::Generic::IEnumerable<NiTSet_T1>
		{
		public:
			property System::IntPtr Data
			{
				System::IntPtr __clrcall get();
			}

			property System::Int32 Capacity
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 Count
			{
				System::Int32 __clrcall get();
			}

			property NiTSet_T1 default[System::Int32]
			{
				NiTSet_T1 get(System::Int32 index);
			}
		};

		public interface class NiThread : public NetScriptFramework::IVirtualObject { };

		generic <typename NiTPointerAllocator_T1>
		public interface class NiTPointerAllocator : public NetScriptFramework::IMemoryObject { };

		public interface class WadingWaterData : public NetScriptFramework::IMemoryObject { };

		public interface class WIN32_FIND_DATA : public NetScriptFramework::IMemoryObject { };

		public interface class _FILETIME : public NetScriptFramework::IMemoryObject { };

		generic <typename NoInitializationPolicy_T1, typename NoInitializationPolicy_T2>
		public interface class NoInitializationPolicy2 : public NetScriptFramework::IVirtualObject { };

		public interface class CrimeGoldStruct : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Single ViolentCurrent
			{
				System::Single __clrcall get();
			}

			property System::Single NonViolentCurrent
			{
				System::Single __clrcall get();
			}

			property System::Single NonViolentInfamy
			{
				System::Single __clrcall get();
			}

			property System::Single ViolentInfamy
			{
				System::Single __clrcall get();
			}
		};

		public interface class StolenItemValueStruct : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Int32 Unwitnessed
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 Witnessed
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class FriendshipFactionsStruct : public NetScriptFramework::IMemoryObject
		{
		public:
			property NetScriptFramework::FixedMemoryArray<System::UInt16>^ FriendCounts
			{
				NetScriptFramework::FixedMemoryArray<System::UInt16>^ __clrcall get();
			}
		};

		public enum class PlayerActions : System::Int32
		{
			None = 0,
			SwingMeleeWeapon = 1,
			CastProjectileSpell = 2,
			ShootBow = 3,
			ZKeyObject = 4,
			Jumping = 5,
			KnockingOverObjects = 6,
			StandOnTableChair = 7,
			IronSights = 8,
			DestroyObject = 9,
			LockedObject = 0xA,
			Pickpocket = 0xB,
			CastSelfSpell = 0xC,
			Shout = 0xD,
			ActorCollision = 0xE,
		};

		public interface class PlayerSkills : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class SkillData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Single Level
				{
					System::Single __clrcall get();

					void __clrcall set(System::Single value);
				}

				property System::Single Xp
				{
					System::Single __clrcall get();

					void __clrcall set(System::Single value);
				}

				property System::Single LevelThreshold
				{
					System::Single __clrcall get();

					void __clrcall set(System::Single value);
				}
			};

			interface class Data;

			property PlayerSkills::Data^ Skills
			{
				PlayerSkills::Data^ __clrcall get();
			}
		};

		public enum class GrabbingTypes : System::Int32
		{
			None = 0,
			Normal = 1,
			Telekinesis = 2,
		};

		public enum class ByCharGenFlags : System::Byte
		{
			None = 0,
			HandsBound = 4,
		};

		public interface class StartSpellHelpers : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DoneEffectGatherFunctor;

			interface class EffectGatherFunctor;

			interface class SpellEffectGatherFunctor;
		};

		generic <typename StdAllocator_T1>
		public interface class StdAllocator : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class _impl : public NetScriptFramework::IMemoryObject
			{
			public:
				generic <typename StdAllocator_T1>
				interface class StdAllocator : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class StreamingInstallMenu : public NetScriptFramework::IVirtualObject { };

		generic <typename SynchronizedPriorityQueue_T1>
		public interface class SynchronizedPriorityQueue : public NetScriptFramework::IVirtualObject { };

		public interface class TargetLock : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class SetTargetLockFilter;
		};

		public interface class TESObjectREFRSync : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class REFRSyncController;
		};

		public interface class TESRegionData : public NetScriptFramework::IVirtualObject
		{
		public:
			enum class HeaderDataFlags : System::Byte
			{
				None = 0,
				Override = 1,
			};

			enum class Types : System::Int32
			{
				Objects = 2,
				Weather = 3,
				Map = 4,
				Land = 5,
				Grass = 6,
				Sound = 7,
				Imposter = 8,
			};

			interface class HeaderData : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESRegionData::HeaderDataFlags HeaderFlags
				{
					TESRegionData::HeaderDataFlags __clrcall get();
				}

				property System::Byte Priority
				{
					System::Byte __clrcall get();
				}
			};

			property TESRegionData::HeaderData^ Header
			{
				TESRegionData::HeaderData^ __clrcall get();
			}
		};

		public interface class TESRegionNoiseFunction : public NetScriptFramework::IVirtualObject { };

		public interface class VATS : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class ICommandListVisitor : public NetScriptFramework::IVirtualObject { };
		};

		generic <typename WeightedModifierVisitor_T1>
		public interface class WeightedModifierVisitor : public NetScriptFramework::IVirtualObject { };

		public interface class VelocityObstacle : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Utilities : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class BuildOpenEdgeListsVisitor;
			};
		};

		public enum class HK_MEMORY_CLASS : System::Int32
		{
			HK_MEMORY_CLASS_ROOT = 0,
			HK_MEMORY_CLASS_BASE = 1,
			HK_MEMORY_CLASS_COLLIDE = 2,
			HK_MEMORY_CLASS_CONSTRAINT_SOLVER = 3,
			HK_MEMORY_CLASS_DYNAMICS = 4,
			HK_MEMORY_CLASS_EXPORT = 5,
			HK_MEMORY_CLASS_SERIALIZE = 6,
			HK_MEMORY_CLASS_GEOMETRY = 7,
			HK_MEMORY_CLASS_DISPLAY = 8,
			HK_MEMORY_CLASS_MATH = 9,
			HK_MEMORY_CLASS_SCENE_DATA = 0xA,
			HK_MEMORY_CLASS_VEHICLE = 0xB,
			HK_MEMORY_CLASS_DESTRUCTION = 0xC,
			HK_MEMORY_CLASS_UTILITIES = 0xD,
			HK_MEMORY_CLASS_ANIMATION = 0xE,
			HK_MEMORY_CLASS_BEHAVIOR = 0xF,
			HK_MEMORY_CLASS_CLOTH = 0x10,
			HK_MEMORY_CLASS_AI = 0x11,
			HK_MEMORY_CLASS_TOOLS = 0x12,
			HK_MEMORY_CLASS_DEMO_FRAMEWORK = 0x13,
			HK_MEMORY_CLASS_DEMO = 0x14,
			HK_MEMORY_CLASS_USER = 0x15,
			HK_MEMORY_CLASS_BASE_CLASS = 0x16,
			HK_MEMORY_CLASS_STRING = 0x17,
			HK_MEMORY_CLASS_ARRAY = 0x18,
			HK_MEMORY_CLASS_SINGLETON = 0x19,
			HK_MEMORY_CLASS_SCRATCHPAD = 0x1A,
			HK_MEMORY_CLASS_STREAM = 0x1B,
			HK_MEMORY_CLASS_MONITOR = 0x1C,
			HK_MEMORY_CLASS_MAP = 0x1D,
			HK_MEMORY_CLASS_TREE = 0x1E,
			HK_MEMORY_CLASS_HKCLASS = 0x1F,
			HK_MEMORY_CLASS_AGENT = 0x20,
			HK_MEMORY_CLASS_ALGORITHM = 0x21,
			HK_MEMORY_CLASS_BROAD_PHASE = 0x22,
			HK_MEMORY_CLASS_CONTACT = 0x23,
			HK_MEMORY_CLASS_DISPATCH = 0x24,
			HK_MEMORY_CLASS_MANIFOLD = 0x25,
			HK_MEMORY_CLASS_SHAPE = 0x26,
			HK_MEMORY_CLASS_COLLIDABLE = 0x27,
			HK_MEMORY_CLASS_CDINFO = 0x28,
			HK_MEMORY_CLASS_MOPP = 0x29,
			HK_MEMORY_CLASS_ACTION = 0x2A,
			HK_MEMORY_CLASS_DYNCOLLIDE = 0x2B,
			HK_MEMORY_CLASS_CONSTRAINT = 0x2C,
			HK_MEMORY_CLASS_ENTITY = 0x2D,
			HK_MEMORY_CLASS_MOTION = 0x2E,
			HK_MEMORY_CLASS_WORLD = 0x2F,
			HK_MEMORY_CLASS_RIGID_BODY = 0x30,
			HK_MEMORY_CLASS_PHANTOM = 0x31,
			HK_MEMORY_CLASS_SIMISLAND = 0x32,
			HK_MEMORY_CLASS_CAMERA = 0x33,
			HK_MEMORY_CLASS_CHARACTER = 0x34,
			HK_MEMORY_CLASS_VDB = 0x35,
			HK_MEMORY_CLASS_INERTIA = 0x36,
			HK_MEMORY_CLASS_ANIM_UNCOMPRESSED = 0x37,
			HK_MEMORY_CLASS_ANIM_COMPRESSED = 0x38,
			HK_MEMORY_CLASS_ANIM_DATA = 0x39,
			HK_MEMORY_CLASS_ANIM_MOTION = 0x3A,
			HK_MEMORY_CLASS_ANIM_RIG = 0x3B,
			HK_MEMORY_CLASS_ANIM_CONTROL = 0x3C,
			HK_MEMORY_CLASS_ANIM_RUNTIME = 0x3D,
			HK_MEMORY_CLASS_ANIM_CACHE = 0x3E,
			HK_MEMORY_CLASS_BEHAVIOR_RUNTIME = 0x3F,
			HK_MEMORY_CLASS_BEHAVIOR_DEMOS = 0x40,
			HK_MEMORY_CLASS_CLOTH_RUNTIME = 0x41,
			HK_MEMORY_CLASS_CLOTH_DATA = 0x42,
			HK_MEMORY_CLASS_CLOTH_SETUP = 0x43,
			HK_MEMORY_CLASS_AI_NAVMESH = 0x44,
			HK_MEMORY_CLASS_AI_ASTAR = 0x45,
			HK_MEMORY_CLASS_AI_STEERING = 0x46,
			HK_MEMORY_CLASS_USER_1 = 0x47,
			HK_MEMORY_CLASS_USER_2 = 0x48,
			HK_MEMORY_CLASS_USER_3 = 0x49,
			HK_MEMORY_CLASS_USER_4 = 0x4A,
			HK_MEMORY_CLASS_PRE_ALLOCATED = 0x4B,
			HK_MEMORY_CLASS_MAX = 0x4C,
		};

		public interface class hk1AxisSweep : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class AabbInt;

			interface class IteratorAA;

			interface class IteratorAB;

			interface class IteratorAA : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class IteratorAB : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkAabbUint32 : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkAabb16 : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkAabbHalf : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkAabbTreeQueryUtilsData : public NetScriptFramework::IMemoryObject { };

		public interface class hkAabbTreeUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkAabbUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class OffsetAabbInput;
		};

		public interface class hkaAdditiveAnimationUtility : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Input;

			interface class ReferencePoseInput;
		};

		public interface class hkaAnimatedReferenceFrameUtils : public NetScriptFramework::IMemoryObject { };

		public interface class hkaAnimationLoopUtility : public NetScriptFramework::IMemoryObject { };

		public enum class hkJobType : System::Int32
		{
			HK_JOB_TYPE_DYNAMICS = 0,
			HK_JOB_TYPE_COLLIDE = 1,
			HK_JOB_TYPE_COLLISION_QUERY = 2,
			HK_JOB_TYPE_RAYCAST_QUERY = 3,
			HK_JOB_TYPE_ANIMATION_SAMPLE_AND_COMBINE = 4,
			HK_JOB_TYPE_ANIMATION_DEPRECATED = 5,
			HK_JOB_TYPE_ANIMATION_MAPPING = 6,
			HK_JOB_TYPE_BEHAVIOR = 7,
			HK_JOB_TYPE_CLOTH = 8,
			HK_JOB_TYPE_AI_PATHFINDING = 9,
			HK_JOB_TYPE_AI_DYNAMIC = 0xA,
			HK_JOB_TYPE_AI_LOCAL_STEERING = 0xB,
			HK_JOB_TYPE_DESTRUCTION = 0xC,
			HK_JOB_TYPE_PHYSICS_TESTS = 0xD,
			HK_JOB_TYPE_UNIT_TEST = 0xE,
			HK_JOB_TYPE_CHARACTER_PROXY = 0xF,
			HK_JOB_TYPE_VEHICLE = 0x10,
			HK_JOB_TYPE_OTHER = 0x11,
			HK_JOB_TYPE_COLLIDE_MIDPHASE = 0x12,
			HK_JOB_TYPE_COLLIDE_NARROWPHASE = 0x13,
			HK_JOB_TYPE_HAVOK_MAX = 0x14,
			HK_JOB_TYPE_USER_0 = 0x14,
			HK_JOB_TYPE_MAX = 0x15,
		};

		public enum class hkJobSpuType : System::Int32
		{
			HK_JOB_SPU_TYPE_INVALID = 0,
			HK_JOB_SPU_TYPE_ENABLED = 1,
			HK_JOB_SPU_TYPE_DISABLED = 2,
		};

		public interface class hkaAnimationMappingJobQueueUtils : public NetScriptFramework::IMemoryObject { };

		public interface class hkSemaphore : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaAnimationSampleAndCombineJobQueueUtils : public NetScriptFramework::IMemoryObject { };

		public interface class hkAATree : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Node : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Iterator : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkaBatchBlenderUtilities : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class BlendAdditiveFunctor : public NetScriptFramework::IMemoryObject { };

			interface class BlendNormalFunctor : public NetScriptFramework::IMemoryObject { };

			interface class BlendSubtractiveFunctor : public NetScriptFramework::IMemoryObject { };

			interface class LerpFunctor : public NetScriptFramework::IMemoryObject { };

			interface class NegateFunctor : public NetScriptFramework::IMemoryObject { };

			interface class PosateFunctor : public NetScriptFramework::IMemoryObject { };

			interface class SlerpFunctor : public NetScriptFramework::IMemoryObject { };

			interface class WeightAdditiveFunctor : public NetScriptFramework::IMemoryObject { };

			interface class WeightNormalFunctor : public NetScriptFramework::IMemoryObject { };

			interface class WeightUnweightedFunctor : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaBlender : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class BLEND_MODE : System::Int32
			{
				NORMAL = 0,
				ADDITIVE = 1,
				SUBTRACTIVE = -1,
			};

			enum class ROTATION_MODE : System::Int32
			{
				LERP = 0,
				SLERP = 1,
			};
		};

		public interface class hkaBlockDesc : public NetScriptFramework::IMemoryObject { };

		public interface class hkaChunkPoolCinfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaDmaGroups : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class hkaDmaGroupsEnum : System::Int32
			{
				HK_SPU_DMA_GROUP_ANIMATION_DATA = 0,
				HK_SPU_DMA_GROUP_ANIMATED_SKELETON_DATA = 2,
				HK_SPU_DMA_GROUP_OUTPUT_POSE = 3,
				HK_SPU_DMA_GROUP_ANIMATION_SAMPLE_DATA = 4,
				HK_SPU_DMA_GROUP_HEADER = 7,
				HK_SPU_DMA_GROUP_FRAME = 0xA,
				HK_SPU_DMA_GROUP_SEMAPHORE = 0xD,
			};
		};

		public interface class hkaFloatBinding : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaFloatLargeBinding : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaFootStepTiming : public NetScriptFramework::IMemoryObject { };

		public interface class hkaMorphingDeformer : public NetScriptFramework::IVirtualObject { };

		public interface class hkaFPUSkinningDeformer : public NetScriptFramework::IMemoryObject { };

		public interface class hkAgent3 : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class StreamCommand : System::Int32
			{
				STREAM_NULL = 0,
				STREAM_END = 1,
				STREAM_CALL = 2,
				STREAM_CALL_FLIPPED = 3,
				STREAM_CALL_WITH_TIM = 4,
				STREAM_CALL_WITH_TIM_FLIPPED = 5,
				STREAM_CALL_AGENT = 6,
				TRANSFORM_FLAG = 8,
				STREAM_CALL_WITH_TRANSFORM = 0xA,
				STREAM_CALL_FLIPPED_WITH_TRANSFORM = 0xB,
				STREAM_CALL_WITH_TIM_WITH_TRANSFORM = 0xC,
				STREAM_CALL_WITH_TIM_FLIPPED_WITH_TRANSFORM = 0xD,
				STREAM_CALL_AGENT_WITH_TRANSFORM = 0xE,
			};

			enum class Symmetric : System::Int32
			{
				IS_SYMMETRIC = 0,
				IS_NOT_SYMMETRIC = 1,
				IS_NOT_SYMMETRIC_AND_FLIPPED = 2,
			};
		};

		public interface class hkaKeyFrameHierarchyUtility : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class ControlData : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Output : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class BodyData;

			interface class KeyFrameData;

			interface class WorkElem;
		};

		public interface class hkAlgorithm : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class ListElement : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaMotionAnalyzerUtility : public NetScriptFramework::IMemoryObject { };

		public interface class hkaMultithreadedAnimationUtils : public NetScriptFramework::IMemoryObject { };

		public interface class hkaQuantizeDesc : public NetScriptFramework::IMemoryObject { };

		public interface class hkaQuantizedQuaternion : public NetScriptFramework::IMemoryObject { };

		public interface class hkaRagdollPoweredChainController : public NetScriptFramework::IMemoryObject { };

		public interface class hkaRagdollPoweredConstraintController : public NetScriptFramework::IMemoryObject { };

		public interface class hkaRagdollUtils : public NetScriptFramework::IMemoryObject { };

		public enum class hkpPhantomType : System::Int32
		{
			HK_PHANTOM_AABB = 0,
			HK_PHANTOM_SIMPLE_SHAPE = 1,
			HK_PHANTOM_CACHING_SHAPE = 2,
			HK_PHANTOM_USER0 = 3,
			HK_PHANTOM_USER1 = 4,
			HK_PHANTOM_USER2 = 5,
			HK_PHANTOM_USER3 = 6,
			HK_PHANTOM_USER4 = 7,
			HK_PHANTOM_USER5 = 8,
			HK_PHANTOM_USER6 = 9,
			HK_PHANTOM_USER7 = 0xA,
			HK_PHANTOM_USER8 = 0xB,
			HK_PHANTOM_USER9 = 0xC,
			HK_PHANTOM_MAX_ID = 0xD,
		};

		public interface class hkaSkeletonMapperUtils : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class UserChain : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class UserMapping : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class ExtractedMotionParams : public NetScriptFramework::IMemoryObject
			{
			public:
				enum class ExtractedMotionMode : System::Int32
				{
					HK_USE_BOUNDING_BOX_DIAGONAL = 0,
					HK_USE_BONE_LENGTHS = 1,
					HK_USE_FACTORS_DIRECTLY = 2,
				};

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Params;
		};

		public interface class hkPackfileHeader : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkPackfileSectionHeader : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		generic <typename hkBlockStreamBlock_T1>
		public interface class hkBlockStreamBlock : public NetScriptFramework::IMemoryObject { };

		public interface class hkCustomAttributes : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Attribute;
		};

		public enum class hkDisplayGeometryType : System::Int32
		{
			HK_DISPLAY_RECTANGLE = 0,
			HK_DISPLAY_SPHERE = 1,
			HK_DISPLAY_BOX = 2,
			HK_DISPLAY_AABB = 3,
			HK_DISPLAY_CONE = 4,
			HK_DISPLAY_SEMICIRCLE = 5,
			HK_DISPLAY_CONVEX = 6,
			HK_DISPLAY_PLANE = 7,
			HK_DISPLAY_CAPSULE = 8,
			HK_DISPLAY_CYLINDER = 9,
			HK_DISPLAY_TAPERED_CAPSULE = 0xA,
			HK_DISPLAY_MESH = 0xB,
		};

		public interface class hkGeometryMatchingUtils : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class FullMap;

			interface class TriangleMap;

			interface class Geometry;
		};

		public interface class hkGeometryUtils : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Node;
		};

		public interface class hkKdTreeNode : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Leaf : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Node : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkKdTreeProjectedEntry : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class PointerHalfUnion : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkVertexFormat : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class ComponentType : System::Int32
			{
				TYPE_NONE = 0,
				TYPE_INT8 = 1,
				TYPE_UINT8 = 2,
				TYPE_INT16 = 3,
				TYPE_UINT16 = 4,
				TYPE_INT32 = 5,
				TYPE_UINT32 = 6,
				TYPE_UINT8_DWORD = 7,
				TYPE_ARGB32 = 8,
				TYPE_FLOAT16 = 9,
				TYPE_FLOAT32 = 0xA,
				TYPE_VECTOR4 = 0xB,
				TYPE_LAST = 0xC,
			};

			enum class ComponentUsage : System::Int32
			{
				USAGE_NONE = 0,
				USAGE_POSITION = 1,
				USAGE_NORMAL = 2,
				USAGE_COLOR = 3,
				USAGE_TANGENT = 4,
				USAGE_BINORMAL = 5,
				USAGE_BLEND_MATRIX_INDEX = 6,
				USAGE_BLEND_WEIGHTS = 7,
				USAGE_BLEND_WEIGHTS_LAST_IMPLIED = 8,
				USAGE_TEX_COORD = 9,
				USAGE_POINT_SIZE = 0xA,
				USAGE_USER = 0xB,
				USAGE_LAST = 0xC,
			};

			enum class HintFlags : System::Int32
			{
				FLAG_READ = 1,
				FLAG_WRITE = 2,
				FLAG_DYNAMIC = 4,
				FLAG_NOT_SHARED = 8,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class SharingType : System::Int32
			{
				SHARING_ALL_SHARED = 0,
				SHARING_ALL_NOT_SHARED = 1,
				SHARING_MIXTURE = 2,
			};

			interface class Element : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkColor : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class ExtendedColors : System::Int32
			{
				MAROON = -8388608,
				DARKRED = -7667712,
				RED = -65536,
				LIGHTPINK = -18751,
				CRIMSON = -2354116,
				PALEVIOLETRED = -2396013,
				HOTPINK = -38476,
				DEEPPINK = -60269,
				MEDIUMVIOLETRED = -3730043,
				PURPLE = -8388480,
				DARKMAGENTA = -7667573,
				ORCHID = -2461482,
				THISTLE = -2572328,
				PLUM = -2252579,
				VIOLET = -1146130,
				FUCHSIA = -65281,
				MAGENTA = -65281,
				MEDIUMORCHID = -4565549,
				DARKVIOLET = -7077677,
				DARKORCHID = -6737204,
				BLUEVIOLET = -7722014,
				INDIGO = -11861886,
				MEDIUMPURPLE = -7114533,
				SLATEBLUE = -9807155,
				MEDIUMSLATEBLUE = -8689426,
				DARKBLUE = -16777077,
				MEDIUMBLUE = -16777011,
				BLUE = -16776961,
				NAVY = -16777088,
				MIDNIGHTBLUE = -15132304,
				DARKSLATEBLUE = -12042869,
				ROYALBLUE = -12490271,
				CORNFLOWERBLUE = -10185235,
				LIGHTSTEELBLUE = -5192482,
				ALICEBLUE = -984833,
				GHOSTWHITE = -460545,
				LAVENDER = -1644806,
				DODGERBLUE = -14774017,
				STEELBLUE = -12156236,
				DEEPSKYBLUE = -16728065,
				SLATEGRAY = -9404272,
				LIGHTSLATEGRAY = -8943463,
				LIGHTSKYBLUE = -7876870,
				SKYBLUE = -7876885,
				LIGHTBLUE = -5383962,
				TEAL = -16744320,
				DARKCYAN = -16741493,
				DARKTURQUOISE = -16724271,
				CYAN = -16711681,
				MEDIUMTURQUOISE = -12004916,
				CADETBLUE = -10510688,
				PALETURQUOISE = -5247250,
				LIGHTCYAN = -2031617,
				AZURE = -983041,
				LIGHTSEAGREEN = -14634326,
				TURQUOISE = -12525360,
				POWDERBLUE = -5185306,
				DARKSLATEGRAY = -13676721,
				AQUAMARINE = -8388652,
				MEDIUMSPRINGGREEN = -16713062,
				MEDIUMAQUAMARINE = -10039894,
				SPRINGGREEN = -16711809,
				MEDIUMSEAGREEN = -12799119,
				SEAGREEN = -13726889,
				LIMEGREEN = -13447886,
				DARKGREEN = -16751616,
				GREEN = -16744448,
				LIME = -16711936,
				FORESTGREEN = -14513374,
				DARKSEAGREEN = -7357297,
				LIGHTGREEN = -7278960,
				PALEGREEN = -6751336,
				MINTCREAM = -655366,
				HONEYDEW = -983056,
				CHARTREUSE = -8388864,
				LAWNGREEN = -8586240,
				OLIVEDRAB = -9728477,
				DARKOLIVEGREEN = -11179217,
				YELLOWGREEN = -6632142,
				GREENYELLOW = -5374161,
				BEIGE = -657956,
				LINEN = -331546,
				LIGHTGOLDENRODYELLOW = -329006,
				OLIVE = -8355840,
				YELLOW = -256,
				LIGHTYELLOW = -32,
				IVORY = -16,
				DARKKHAKI = -4343957,
				KHAKI = -989556,
				PALEGOLDENROD = -1120086,
				WHEAT = -663885,
				GOLD = -10496,
				LEMONCHIFFON = -1331,
				PAPAYAWHIP = -4139,
				DARKGOLDENROD = -4684277,
				GOLDENROD = -2448096,
				ANTIQUEWHITE = -332841,
				CORNSILK = -1828,
				OLDLACE = -133658,
				MOCCASIN = -6987,
				NAVAJOWHITE = -8531,
				ORANGE = -23296,
				BISQUE = -6972,
				TAN = -2968436,
				DARKORANGE = -29696,
				BURLYWOOD = -2180985,
				SADDLEBROWN = -7650029,
				SANDYBROWN = -744352,
				BLANCHEDALMOND = -5171,
				LAVENDERBLUSH = -3851,
				SEASHELL = -2578,
				FLORALWHITE = -1296,
				SNOW = -1286,
				PERU = -3308225,
				PEACHPUFF = -9543,
				CHOCOLATE = -2987746,
				SIENNA = -6270419,
				LIGHTSALMON = -24454,
				CORAL = -32944,
				DARKSALMON = -1468806,
				MISTYROSE = -6943,
				ORANGERED = -47872,
				SALMON = -360334,
				TOMATO = -40121,
				ROSYBROWN = -4419697,
				PINK = -16181,
				INDIANRED = -3318692,
				LIGHTCORAL = -1015680,
				BROWN = -5952982,
				FIREBRICK = -5103070,
				BLACK = -16777216,
				DIMGRAY = -9868951,
				GRAY = -8355712,
				DARKGRAY = -5658199,
				SILVER = -4144960,
				LIGHTGREY = -2894893,
				GAINSBORO = -2302756,
				WHITESMOKE = -657931,
				WHITE = -1,
				GREY = -7829368,
				GREY25 = -12566464,
				GREY50 = -8355712,
				GREY75 = -4144960,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkObjectInspector : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class ObjectListener : public NetScriptFramework::IVirtualObject { };

			interface class Pointer;
		};

		public interface class hkObjectSerialize : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class GlobalFixup : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class LocalFixup : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpBroadPhaseHandle : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpAgent1nSector : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpAgentNnSector : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpBreakOffPartsListener : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class ContactImpulseLimitBreachedEvent;
		};

		public interface class hkTjunctionDetector : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class ProximityInfoEnum : System::Int32
			{
				NEAR_NONE = 0,
				NEAR_EDGE0 = 1,
				NEAR_EDGE1 = 2,
				NEAR_EDGE2 = 3,
				NEAR_FACE = 4,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class ProximityInfo;
		};

		public interface class hkpConstraintModifier : public NetScriptFramework::IVirtualObject { };

		public interface class hkpJacobianSchema : public NetScriptFramework::IMemoryObject { };

		public interface class hkpPhysicsContextWorldListener : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkPlaneEquationUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class hkpPlaneEqnIndexPair : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class IntersectionPoint;

			interface class VisitedEdge;
		};

		public interface class hkpMeshWeldingUtility : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class WindingConsistency : System::Int32
			{
				WINDING_IGNORE_CONSISTENCY = 0,
				WINDING_TEST_CONSISTENCY = 1,
			};

			interface class ShapeInfo;
		};

		public interface class hkpMoppCodeReindexedTerminal : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpPropertyValue : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpShapeScalingUtility : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class ShapePair;
		};

		public interface class hkpShapeShrinker : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class ShapePair;
		};

		public interface class hkpVehicleFrictionDescription : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class AxisDescription : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Cinfo;
		};

		public interface class hkpVehicleFrictionStatus : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class AxisStatus : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkSkinningUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Entry : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkStackTraceReportUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Summary : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkString : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class ReplaceType : System::Int32
			{
				REPLACE_ONE = 0,
				REPLACE_ALL = 1,
			};
		};

		public interface class hkSubString : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkTextReportLayoutUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Column : public NetScriptFramework::IMemoryObject { };

			enum class Align : System::Int32
			{
				ALIGN_LEFT = 0x6C,
				ALIGN_RIGHT = 0x72,
				ALIGN_CENTER = 0x63,
				ALIGN_DEFAULT = 0x64,
			};
		};

		public interface class hkTypeSummaryReportUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class TypeSummary;
		};

		public interface class hkVirtualGamepadHandler : public NetScriptFramework::IVirtualObject { };

		public interface class hkVirtualKeyEventHandler : public NetScriptFramework::IVirtualObject { };

		public interface class hkVirtualMouseHandler : public NetScriptFramework::IVirtualObject { };

		public interface class hkWorldOperation : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Type : System::Int32
			{
				OPERATION_ID_ANY = 0,
				OPERATION_ID_INVALID = 0,
				ENTITY_ADD = 1,
				ENTITY_REMOVE = 2,
				ENTITY_UPDATE_BROAD_PHASE = 3,
				RIGIDBODY_SET_MOTION_TYPE = 4,
				WORLD_OBJECT_SET_SHAPE = 5,
				WORLD_OBJECT_UPDATE_SHAPE = 6,
				ENTITY_BATCH_ADD = 7,
				ENTITY_BATCH_REMOVE = 8,
				CONSTRAINT_ADD = 9,
				CONSTRAINT_REMOVE = 0xA,
				ACTION_ADD = 0xB,
				ACTION_REMOVE = 0xC,
				ISLAND_MERGE = 0xD,
				PHANTOM_ADD = 0xE,
				PHANTOM_REMOVE = 0xF,
				PHANTOM_BATCH_ADD = 0x10,
				PHANTOM_BATCH_REMOVE = 0x11,
				PHANTOM_UPDATE_BROAD_PHASE = 0x12,
				UPDATE_FILTER_ENTITY = 0x13,
				UPDATE_FILTER_ENTITY_PAIR = 0x14,
				UPDATE_FILTER_PHANTOM = 0x15,
				UPDATE_FILTER_WORLD = 0x16,
				UPDATE_MOVED_BODY_INFO = 0x17,
				ENTITY_BATCH_REINTEGRATE_AND_RECOLLIDE = 0x18,
				RIGIDBODY_SET_POSITION_AND_ROTATION = 0x19,
				RIGIDBODY_SET_LINEAR_VELOCITY = 0x1A,
				RIGIDBODY_SET_ANGULAR_VELOCITY = 0x1B,
				RIGIDBODY_APPLY_LINEAR_IMPULSE = 0x1C,
				RIGIDBODY_APPLY_POINT_IMPULSE = 0x1D,
				RIGIDBODY_APPLY_ANGULAR_IMPULSE = 0x1E,
				WORLD_OBJECT_ADD_REFERENCE = 0x1F,
				WORLD_OBJECT_REMOVE_REFERENCE = 0x20,
				ACTIVATE_REGION = 0x21,
				ACTIVATE_ENTITY = 0x22,
				DEACTIVATE_ENTITY = 0x23,
				CONSTRAINT_FILTER_BROKEN_EVENT = 0x24,
				USER_CALLBACK = 0x25,
			};

			enum class Result : System::Int32
			{
				POSTPONED = 0,
				DONE = 1,
			};

			interface class BaseOperation : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class BiggestOperation : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class ActivateEntity;

			interface class ActivateRegion;

			interface class AddAction;

			interface class AddConstraint;

			interface class AddEntity;

			interface class AddEntityBatch;

			interface class AddPhantom;

			interface class AddPhantomBatch;

			interface class AddReference;

			interface class ApplyRigidBodyAngularImpulse;

			interface class ApplyRigidBodyLinearImpulse;

			interface class ApplyRigidBodyPointImpulse;

			interface class ConstraintCollisionFilterConstraintBroken;

			interface class DeactivateEntity;

			interface class MergeIslands;

			interface class ReintegrateAndRecollideEntityBatch;

			interface class RemoveAction;

			interface class RemoveConstraint;

			interface class RemoveEntity;

			interface class RemoveEntityBatch;

			interface class RemovePhantom;

			interface class RemovePhantomBatch;

			interface class RemoveReference;

			interface class SetRigidBodyAngularVelocity;

			interface class SetRigidBodyLinearVelocity;

			interface class SetRigidBodyMotionType;

			interface class SetRigidBodyPositionAndRotation;

			interface class SetWorldObjectShape;

			interface class UpdateEntityBP;

			interface class UpdateFilterOnEntity;

			interface class UpdateFilterOnEntityPair;

			interface class UpdateFilterOnPhantom;

			interface class UpdateFilterOnWorld;

			interface class UpdateMovedBodyInfo;

			interface class UpdatePhantomBP;

			interface class UpdateWorldObjectShape;

			interface class UserCallback;

			interface class UserCallbackOperation;

			interface class UserCallbackOperation : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkxSceneDataContextListener : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxSceneDataToGeometryConverter : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class GeometryInstances;
		};

		public interface class hkxSceneUtils : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class GraphicsNode;

			interface class SceneTransformOptions;

			interface class TransformInfo;
		};

		public interface class hkPseudoRandomGenerator : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkTimerData : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkArrayUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkaSampleAndCombineUtils : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class FloatBlendParameters : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class TransformBlendParameters;
		};

		public interface class hkaSimdSkinningDeformer : public NetScriptFramework::IMemoryObject { };

		public interface class hkaSkeletonUtils : public NetScriptFramework::IMemoryObject { };

		public interface class hkaSkinningDeformer : public NetScriptFramework::IVirtualObject { };

		public interface class hkaSkinningUtils : public NetScriptFramework::IMemoryObject { };

		public interface class hkInternal3JointsIkIterSolver : public NetScriptFramework::IMemoryObject { };

		public interface class hkaTrackAnalysis : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class AnalysisCompose : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class AnalysisStats : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class TrackType : System::Int32
			{
				HK_TRACK_DYNAMIC = 0,
				HK_TRACK_STATIC = 1,
				HK_TRACK_CLEAR = 2,
			};

			interface class AnalysisInput;

			interface class AnalysisSplit;

			interface class PerFloatTrackAnalysisInput;

			interface class PerTransformTrackAnalysisInput;
		};

		public interface class hkBinaryTagfile : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class TagType : System::Int32
			{
				TAG_NONE = 0,
				TAG_FILE_INFO = 1,
				TAG_METADATA = 2,
				TAG_OBJECT = 3,
				TAG_OBJECT_REMEMBER = 4,
				TAG_OBJECT_BACKREF = 5,
				TAG_OBJECT_NULL = 6,
				TAG_FILE_END = 7,
			};
		};

		public interface class hkBufferCompression : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class CompressedOutput : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkStringMapOperations : public NetScriptFramework::IMemoryObject { };

		public interface class hkCategoryReportUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Category : System::Int32
			{
				CATEGORY_WORLD = 0,
				CATEGORY_CONTACT_MGR = 1,
				CATEGORY_RIGID_BODY = 2,
				CATEGORY_COLLISION = 3,
				CATEGORY_PHANTOM = 4,
				CATEGORY_CONSTRAINT = 5,
				CATEGORY_PACK_FILE_DATA = 6,
				CATEGORY_ACTION = 7,
				CATEGORY_GRAPHICS = 8,
				CATEGORY_DESTRUCTION = 9,
				CATEGORY_AI = 0xA,
				CATEGORY_ANIMATION = 0xB,
				CATEGORY_BEHAVIOR = 0xC,
				CATEGORY_CLOTH = 0xD,
				CATEGORY_GEOMETRY_PROCESSING = 0xE,
				CATEGORY_REMAINING = 0xF,
				CATEGORY_UNASSIGNED_REMAINING = 0x10,
				CATEGORY_LAST = 0x11,
			};
		};

		public interface class hkClassPointerVtable : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class TypeInfoRegistry;

			interface class VtableRegistry;
		};

		public interface class hkCompileError : public NetScriptFramework::IMemoryObject
		{
		public:
			generic <typename COMPILE_ASSERTION_FAILURE_T1>
			interface class COMPILE_ASSERTION_FAILURE : public NetScriptFramework::IMemoryObject { };

			generic <typename REFLECTION_PARSER_VTABLE_DETECTION_FAILED_T1>
			interface class REFLECTION_PARSER_VTABLE_DETECTION_FAILED : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkCompression : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Result_ : System::Int32
			{
				COMP_ERROR = 0,
				COMP_NEEDINPUT = 1,
				COMP_NEEDOUTPUT = 2,
			};
		};

		public interface class hkUFloat8 : public NetScriptFramework::IMemoryObject { };

		public interface class hkpSolverResults : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkCountOfBadArgCheck : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class ArgIsNotAnArray : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkCpuCache : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Cinfo : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkThread : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class Status : System::Int32
			{
				THREAD_TERMINATED = 0,
				THREAD_RUNNING = 1,
				THREAD_NOT_STARTED = 2,
			};
		};

		public interface class hkCurrentFunctionUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkDataObjectTypeAttribute : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkdBreakableBody : public NetScriptFramework::IMemoryObject { };

		public interface class hkMemoryPointerInfo : public NetScriptFramework::IMemoryObject { };

		public interface class hkDescriptionAttribute : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDocumentationAttribute : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public enum class hkpAgentNnTrackType : System::Int32
		{
			HK_AGENT3_INVALID_TRACK = 0,
			HK_AGENT3_MIDPHASE_TRACK = 1,
			HK_AGENT3_NARROWPHASE_TRACK = 2,
		};

		public enum class hkpCollidableQualityType : System::Int32
		{
			HK_COLLIDABLE_QUALITY_INVALID = -1,
			HK_COLLIDABLE_QUALITY_FIXED = 0,
			HK_COLLIDABLE_QUALITY_KEYFRAMED = 1,
			HK_COLLIDABLE_QUALITY_DEBRIS = 2,
			HK_COLLIDABLE_QUALITY_DEBRIS_SIMPLE_TOI = 3,
			HK_COLLIDABLE_QUALITY_MOVING = 4,
			HK_COLLIDABLE_QUALITY_CRITICAL = 5,
			HK_COLLIDABLE_QUALITY_BULLET = 6,
			HK_COLLIDABLE_QUALITY_USER = 7,
			HK_COLLIDABLE_QUALITY_CHARACTER = 8,
			HK_COLLIDABLE_QUALITY_KEYFRAMED_REPORTING = 9,
			HK_COLLIDABLE_QUALITY_MAX = 0xA,
		};

		public enum class hkpContactPointAccept : System::Int32
		{
			HK_CONTACT_POINT_ACCEPT = 0,
			HK_CONTACT_POINT_REJECT = 1,
		};

		public enum class hkpEntityActivation : System::Int32
		{
			HK_ENTITY_ACTIVATION_DO_NOT_ACTIVATE = 0,
			HK_ENTITY_ACTIVATION_DO_ACTIVATE = 1,
		};

		public enum class hkpUpdateCollectionFilterMode : System::Int32
		{
			HK_UPDATE_COLLECTION_FILTER_IGNORE_SHAPE_COLLECTIONS = 0,
			HK_UPDATE_COLLECTION_FILTER_PROCESS_SHAPE_COLLECTIONS = 1,
		};

		public enum class hkpUpdateCollisionFilterOnEntityMode : System::Int32
		{
			HK_UPDATE_FILTER_ON_ENTITY_FULL_CHECK = 0,
			HK_UPDATE_FILTER_ON_ENTITY_DISABLE_ENTITY_ENTITY_COLLISIONS_ONLY = 1,
		};

		public enum class hkpUpdateCollisionFilterOnWorldMode : System::Int32
		{
			HK_UPDATE_FILTER_ON_WORLD_FULL_CHECK = 0,
			HK_UPDATE_FILTER_ON_WORLD_DISABLE_ENTITY_ENTITY_COLLISIONS_ONLY = 1,
		};

		public interface class hkSerializeUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class ErrorDetails : public NetScriptFramework::IMemoryObject
			{
			public:
				enum class ErrorID : System::Int32
				{
					ERRORID_NONE = 0,
					ERRORID_READ_FAILED = 1,
					ERRORID_UNSUPPORTED_FORMAT = 2,
					ERRORID_PACKFILE_PLATFORM = 3,
					ERRORID_VERSIONING_FAILED = 4,
					ERRORID_NONHEAP_OBJECT = 5,
					ERRORID_LOAD_FAILED = 6,
					ERRORID_DEPRECATED_NOT_INITIALIZED = 7,
					ERRORID_MAX_ID = 8,
				};

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			enum class FormatType : System::Int32
			{
				FORMAT_ERROR = 0,
				FORMAT_UNKNOWN = 1,
				FORMAT_PACKFILE_BINARY = 2,
				FORMAT_PACKFILE_XML = 3,
				FORMAT_TAGFILE_BINARY = 4,
				FORMAT_TAGFILE_XML = 5,
			};

			enum class LoadOptionBits : System::Int32
			{
				LOAD_DEFAULT = 0,
				LOAD_FAIL_IF_VERSIONING = 1,
			};

			enum class SaveOptionBits : System::Int32
			{
				SAVE_DEFAULT = 0,
				SAVE_TEXT_FORMAT = 1,
				SAVE_SERIALIZE_IGNORED_MEMBERS = 2,
				SAVE_WRITE_ATTRIBUTES = 4,
				SAVE_CONCISE = 8,
				SAVE_TEXT_NUMBERS = 0x10,
			};

			interface class FormatDetails : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class LoadOptions : public hkFlags<hkSerializeUtil::LoadOptionBits, System::Int32>, public NetScriptFramework::IMemoryObject { };

			interface class SaveOptions : public hkFlags<hkSerializeUtil::SaveOptionBits, System::Int32>, public NetScriptFramework::IMemoryObject { };
		};

		public interface class HKEY__ : public NetScriptFramework::IMemoryObject { };

		public interface class hkFieldHierarchyReportUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkFindVertexWeightsUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkFinishLoadedObjectFlag : public NetScriptFramework::IMemoryObject { };

		public interface class hkFloatParseUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Type : System::Int32
			{
				TYPE_NEG_INF = 0,
				TYPE_INF = 1,
				TYPE_NEG_NAN = 2,
				TYPE_NAN = 3,
				TYPE_IND = 4,
				TYPE_FINITE = 5,
				TYPE_COUNT_OF = 6,
			};
		};

		public enum class hkFourDmaChannels : System::Int32
		{
			HK_SPU_DMA_ABCD = 0,
			HK_SPU_DMA_BCDE = 1,
			HK_SPU_DMA_CDEF = 2,
			HK_SPU_DMA_DEFG = 3,
			HK_SPU_DMA_EFGH = 4,
			HK_SPU_DMA_FGHI = 5,
			HK_SPU_DMA_GHIJ = 6,
			HK_SPU_DMA_HIJK = 7,
			HK_SPU_DMA_IJKL = 8,
			HK_SPU_DMA_JKLM = 9,
			HK_SPU_DMA_KLMN = 0xA,
		};

		public enum class hkGeomConvexHullMode : System::Int32
		{
			HK_GEOM_CONVEXHULL_MODE_INVALID = 0,
			HK_GEOM_CONVEXHULL_MODE_FAST = 1,
			HK_GEOM_CONVEXHULL_MODE_ACCURATE_BUT_SLOW = 2,
			HK_GEOM_CONVEXHULL_MODE_MAX_ID = 3,
		};

		public interface class hkGeometryUtility : public NetScriptFramework::IMemoryObject { };

		public enum class hkGeomObbMode : System::Int32
		{
			HK_GEOM_OBB_MODE_INVALID = 0,
			HK_GEOM_OBB_MODE_DEFAULT = 1,
			HK_GEOM_OBB_MODE_BETTER_FIT_BUT_SLOWER = 2,
			HK_GEOM_OBB_MODE_MAX_ID = 3,
		};

		public interface class hkgpAbstractMeshDefinitions : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Error : System::Int32
			{
				VALID = 0,
				ORPHAN_VERTEX = 1,
				ZOMBIE_VERTEX = 2,
				ZOMBIE_TRIANGLE = 3,
				VOID_TRIANGLE = 4,
				INVALID_BIND = 5,
				SELF_EDGE = 6,
				NULL_EDGE = 7,
			};
		};

		public interface class hkgpTopology : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkHardwareInfo : public NetScriptFramework::IMemoryObject { };

		public interface class hkHierarchicalSummaryReportUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkHierarchyReportUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkInertiaTensorComputer : public NetScriptFramework::IMemoryObject { };

		public interface class hkInternalCustomAttributes : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Attribute;
		};

		public interface class hkInternalClassEnumItem : public NetScriptFramework::IMemoryObject { };

		public interface class hkIntVector : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		generic <typename hkTraitBool_T1>
		public interface class hkTraitBool : public NetScriptFramework::IMemoryObject { };

		public interface class hkKdTreeAabbCastUtils : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class NodeState : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class hkCastAabbInput;
		};

		public interface class hkKdTreeAabbQueryUtils : public NetScriptFramework::IMemoryObject { };

		generic <typename hkKdTreeBuilder_T1, typename hkKdTreeBuilder_T2, typename hkKdTreeBuilder_T3>
		public interface class hkKdTreeBuilder : public NetScriptFramework::IMemoryObject { };

		public interface class hkKdTreeBuildingUtils : public NetScriptFramework::IMemoryObject { };

		public interface class hkKdTreeMath : public NetScriptFramework::IMemoryObject { };

		public interface class hkKdTreeRayCastJobUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkKdTreeUtils : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class NodeState : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class BundleState;

			interface class RayBundle;
		};

		public enum class hkKeyboardCommand : System::Int32
		{
			HK_VIRTUAL_KEYBOARD_DUMP = 0xA0,
		};

		public interface class hkKeyPair : public NetScriptFramework::IMemoryObject { };

		public interface class HKL__ : public NetScriptFramework::IMemoryObject { };

		public interface class hkLineSegmentUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class ClosestLineSegLineSegResult;

			interface class ClosestPointInfLineInfLineResult;

			interface class ClosestPointLineSegResult;
		};

		generic <typename hkLocalArray_T1>
		public interface class hkLocalArray : public NetScriptFramework::IMemoryObject { };

		public interface class hkMaskStorage : public NetScriptFramework::IMemoryObject { };

		public interface class hkMathUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Decomposition;
		};

		public interface class hkMemoryClassStatistics : public NetScriptFramework::IMemoryObject { };

		public interface class hkMemoryExceptionTestingUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMemoryInitUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class SyncInfo;
		};

		public interface class hkSingletonInitNode : public NetScriptFramework::IMemoryObject { };

		public interface class hkMemoryTrackerAttribute : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMemUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			generic <typename TypeFromAlign_T1>
			interface class TypeFromAlign : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMeshPrimitiveUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class PrimitiveStyle : System::Int32
			{
				PRIMITIVE_STYLE_UNKNOWN = 0,
				PRIMITIVE_STYLE_POINT = 1,
				PRIMITIVE_STYLE_LINE = 2,
				PRIMITIVE_STYLE_TRIANGLE = 3,
			};
		};

		public interface class hkMeshSectionMergeUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkMeshShapeUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Statistics : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkMeshTohkGeometryConverter : public NetScriptFramework::IMemoryObject { };

		public interface class hkMeshToSceneDataConverter : public NetScriptFramework::IMemoryObject { };

		public interface class hkMeshVertexBufferUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Thresholds : public NetScriptFramework::IMemoryObject { };

			enum class TransformFlag : System::Int32
			{
				TRANSFORM_NORMALIZE = 1,
				TRANSFORM_PRE_NEGATE = 2,
				TRANSFORM_POST_NEGATE = 4,
			};
		};

		generic <typename hkMultiMapOperations_T1>
		public interface class hkMultiMapOperations : public NetScriptFramework::IMemoryObject { };

		generic <typename hkMultiMap_T1, typename hkMultiMap_T2, typename hkMultiMap_T3, typename hkMultiMap_T4>
		public interface class hkMultiMap : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Pair : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMultiMapIntegralOperations : public NetScriptFramework::IMemoryObject { };

		public interface class hkNormalCalculator : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkNullName : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkObjectUnpackUtility : public NetScriptFramework::IMemoryObject { };

		public interface class hkp1dMotorSolverInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkp26Dop : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class DOP_AXIS : System::Int32
			{
				AXIS_X = 0,
				AXIS_Y = 1,
				AXIS_Z = 2,
				AXIS_YZ = 3,
				AXIS_YMZ = 4,
				AXIS_XZ = 5,
				AXIS_XMZ = 6,
				AXIS_XY = 7,
				AXIS_XMY = 8,
				AXIS_XYZ = 9,
				AXIS_XYMZ = 0xA,
				AXIS_XMYZ = 0xB,
				AXIS_XMYMZ = 0xC,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCollisionQueryJobHeader : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkPackedVector3 : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpAddModifierUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkpCollisionAgentConfig : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpAgentEntry : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpShapeKeyPair : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public enum class hkpAgentMachineMode : System::Int32
		{
			HKP_AGENT_MACHINE_MODE_1N = 1,
			HKP_AGENT_MACHINE_MODE_NM = 2,
		};

		public interface class hkpAgentRegisterUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkpFeatureContactPoint : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpBreakableListener : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public enum class hkpBufferSize : System::Int32
		{
			HK_SHAPE_BUFFER_SIZE = 0x200,
		};

		public interface class hkpImpulseLimitBreachedHeader : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSolverElemTemp : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCharacterMovementUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class hkpMovementUtilInput;
		};

		public interface class hkpCharacterProxyJobHeader : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCharacterProxyJobQueueUtils : public NetScriptFramework::IMemoryObject { };

		public interface class hkpCharacterProxyJobUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class CharacterJobBatch;

			interface class JobData;
		};

		public interface class hkpClosestPointManifold : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class hkpAgentContactPoint;
		};

		public interface class hkpCollapseTransformsDeprecated : public NetScriptFramework::IMemoryObject { };

		public enum class hkpCollidableAccept : System::Int32
		{
			HK_COLLIDABLE_ACCEPT = 0,
			HK_COLLIDABLE_REJECT = 1,
		};

		public interface class hkpCollideDebugUtil : public NetScriptFramework::IMemoryObject { };

		public enum class hkpCollisionDispatcherAgentType : System::Int32
		{
			HK_AGENT_TYPE_NULL = 0,
			HK_AGENT_TYPE_BRIDGE = 1,
		};

		public interface class hkpCollisionQueryJobQueueUtils : public NetScriptFramework::IMemoryObject { };

		public interface class hkpConstraintCallbackUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkpConstraintChainUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkpConstraintDataCloningUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkpConstraintPivotsUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkpConstraintSolverSetup : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class SolverMode : System::Int32
			{
				SOLVER_MODE_PROCESS_ALL = 0,
				SOLVER_MODE_INCREMENTAL_CONTINUE = 1,
			};
		};

		public interface class hkpConstraintStabilizationUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkpContactImpulseLimitBreachedListenerInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class ListenerData;

			interface class SingleImpulseElem;
		};

		public interface class hkpContactPointPropertiesStream : public NetScriptFramework::IMemoryObject { };

		public interface class hkpContactUpdater : public NetScriptFramework::IMemoryObject { };

		public interface class hkpShapeCollectionMaterialMediator : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConvexVerticesConnectivityUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Edge : public NetScriptFramework::IMemoryObject { };

			interface class FaceEdge : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class VertexInfo : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCpuCharacterProxyUtil : public NetScriptFramework::IMemoryObject { };

		generic <typename hkpDualObjectPhysicsCommand_T1, typename hkpDualObjectPhysicsCommand_T2, typename hkpDualObjectPhysicsCommand_T3>
		public interface class hkpDualObjectPhysicsCommand : public NetScriptFramework::IMemoryObject { };

		public interface class hkpEntityAabbUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkpEntityCallbackUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkpExtendedGskOut : public NetScriptFramework::IMemoryObject { };

		public interface class hkpFeatureOutput : public NetScriptFramework::IMemoryObject { };

		public interface class hkpGroupFilterSetup : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class DefaultCollisionGroups : System::Int32
			{
				LAYER_NONE = 0,
				LAYER_STATIC = 1,
				LAYER_DYNAMIC = 2,
				LAYER_PLAYER = 3,
				LAYER_AI = 4,
				LAYER_KEYFRAME = 5,
				LAYER_DEBRIS = 6,
				LAYER_FAST_DEBRIS = 7,
			};
		};

		public interface class hkpGroupFilterUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkpGsk : public NetScriptFramework::IMemoryObject { };

		public interface class hkpKeyFrameUtility : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class AccelerationInfo;

			interface class KeyFrameInfo;
		};

		public enum class hkpKnownWorldExtensionIds : System::Int32
		{
			HK_WORLD_EXTENSION_ANONYMOUS = -1,
			HK_WORLD_EXTENSION_BREAK_OFF_PARTS = 0x3E8,
			HK_WORLD_EXTENSION_COLLISION_CALLBACK = 0x3E9,
		};

		public interface class hkpMoppBvTreeStreamAgent : public NetScriptFramework::IMemoryObject { };

		public interface class hkpMoppChunk : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpMoppCodeStreamer : public NetScriptFramework::IMemoryObject { };

		public interface class hkpMoppUtility : public NetScriptFramework::IMemoryObject { };

		public interface class hkpMultithreadConfig : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		generic <typename hkPointerMapStorage_T1>
		public interface class hkPointerMapStorage : public NetScriptFramework::IMemoryObject { };

		generic <typename hkPointerMultiMapSelectOperations_T1>
		public interface class hkPointerMultiMapSelectOperations : public NetScriptFramework::IMemoryObject { };

		generic <typename hkPointerMultiMapStorage_T1>
		public interface class hkPointerMultiMapStorage : public NetScriptFramework::IMemoryObject { };

		public interface class hkPostFinishAttribute : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpPhantomBatchMoveUtil : public NetScriptFramework::IMemoryObject { };

		generic <typename hkpRelativePointer32_T1>
		public interface class hkpRelativePointer32 : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpPoweredChainMapperUtil : public NetScriptFramework::IMemoryObject { };

		generic <typename hkpRayCastJobUtil_T1, typename hkpRayCastJobUtil_T2>
		public interface class hkpRayCastJobUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkpRayCastQueryJobQueueUtils : public NetScriptFramework::IMemoryObject { };

		public interface class hkpRemoveContactUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class AgentType : System::Int32
			{
				INVALID_AGENT_TYPE = 0,
				BOX_BOX_AGENT3 = 1,
				CAPSULE_TRIANGLE_AGENT3 = 2,
				PRED_GSK_AGENT3 = 3,
				PRED_GSK_CYLINDER_AGENT3 = 4,
				CONVEX_LIST_AGENT3 = 5,
				LIST_AGENT3 = 6,
				BV_TREE_AGENT3 = 7,
				COLLECTION_COLLECTION_AGENT3 = 8,
				COLLECTION_AGENT3 = 9,
			};
		};

		public interface class hkpResponseModifier : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Flags : System::Int32
			{
				MASS_SCALING = 1,
				CENTER_OF_MASS_DISPLACEMENT = 2,
				SURFACE_VELOCITY = 4,
				IMPULSE_SCALING = 8,
				VISCOUS_SURFACE = 0x10,
				ADDITIONAL_SIZE_MODIFIERS = 7,
			};
		};

		public interface class hkProcessRegisterUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkProductReportUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Product : System::Int32
			{
				PRODUCT_AI = 0,
				PRODUCT_ANIMATION = 1,
				PRODUCT_BEHAVIOR = 2,
				PRODUCT_CLOTH = 3,
				PRODUCT_COMMON = 4,
				PRODUCT_DESTRUCTION = 5,
				PRODUCT_PHYSICS = 6,
				PRODUCT_GEOMETRY_PROCESSING = 7,
				PRODUCT_GRAPHICS = 8,
				PRODUCT_OTHER = 9,
				PRODUCT_LAST = 0xA,
			};
		};

		public interface class hkpSaveContactPointsEndianUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkpShapeConverter : public NetScriptFramework::IMemoryObject { };

		public interface class hkpShapeCutterUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class ConvexShapeCollector : public NetScriptFramework::IVirtualObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class IntersectShapeInput;

			interface class SubtractShapeInput;
		};

		public interface class hkpShapeDepthUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkpShapeGenerator : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Flags : System::Int32
			{
				NONE = 0,
				NO_PLANE_EQUATIONS = 1,
			};

			enum class ShapeType : System::Int32
			{
				RANDOM = 0,
				SPHERE = 1,
				CAPSULE = 2,
				BOX = 3,
				TRIANGLE = 4,
				CONVEX_VERTICES = 5,
				CONVEX_VERTICES_BOX = 6,
				SHAPE_MAX = 7,
			};
		};

		public interface class hkpShapeMergeUtility : public NetScriptFramework::IMemoryObject { };

		public interface class hkpShapeRayCastJobUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkpShapeSharingUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Options : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Results : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkpShapeSkinningUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Input;
		};

		public interface class hkpShapeToMeshConverter : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSimpleCollisionResponse : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class SolveSingleOutput : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class SolveSingleOutput2 : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkpSimpleContactConstraintAtomUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkpSimpleContactConstraintUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkpSurfaceConstraintInteraction : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class hkpStatus : System::Int32
			{
				HK_STATUS_OK = 0,
				HK_STATUS_3D_FAILURE = 1,
				HK_STATUS_2D_FAILURE = 2,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		generic <typename hkpSingleObjectPhysicsCommand_T1, typename hkpSingleObjectPhysicsCommand_T2>
		public interface class hkpSingleObjectPhysicsCommand : public NetScriptFramework::IMemoryObject { };

		public interface class hkpSphereUtil : public NetScriptFramework::IMemoryObject { };

		public enum class hkpStepResult : System::Int32
		{
			HK_STEP_RESULT_SUCCESS = 0,
			HK_STEP_RESULT_MEMORY_FAILURE_BEFORE_INTEGRATION = 1,
			HK_STEP_RESULT_MEMORY_FAILURE_DURING_COLLIDE = 2,
			HK_STEP_RESULT_MEMORY_FAILURE_DURING_TOI_SOLVE = 3,
		};

		public interface class hkpSystemScalingUtility : public NetScriptFramework::IMemoryObject { };

		public interface class hkpTklStreamer : public NetScriptFramework::IMemoryObject { };

		public interface class hkpToiEvent : public NetScriptFramework::IMemoryObject { };

		public interface class hkpTransformCollapseUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class SharedShapeBehaviour : System::Int32
			{
				ALWAYS_COLLAPSE = 0,
				NEVER_COLLAPSE = 1,
				COLLAPSE_IF_LESS_THAN_THRESHOLD = 2,
			};

			interface class Results : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Options : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkpTriangleCompressor : public NetScriptFramework::IMemoryObject { };

		public interface class hkpTriangleUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkpVariableTimestepper : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpVehicleJobQueueUtils : public NetScriptFramework::IMemoryObject { };

		public interface class hkpVehicleStepInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpWorldAgentUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkpWorldCallbackUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkpWorldConstraintUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkpWorldMemoryUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkpWorldOperationUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class FireCallbacks : System::Int32
			{
				DO_NOT_FIRE_CALLBACKS_AND_SUPPRESS_EXECUTION_OF_PENDING_OPERATIONS = 0,
				DO_FIRE_CALLBACKS = 1,
			};
		};

		public interface class hkpWorldRayCastJobUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkQuadCharUnion : public NetScriptFramework::IMemoryObject { };

		public interface class hkQuadIntUnion : public NetScriptFramework::IMemoryObject { };

		public interface class hkQuadShortUnion : public NetScriptFramework::IMemoryObject { };

		public interface class hkQuadUcharUnion : public NetScriptFramework::IMemoryObject { };

		public interface class hkQuadUintUnion : public NetScriptFramework::IMemoryObject { };

		public interface class hkQuadUshortUnion : public NetScriptFramework::IMemoryObject { };

		public interface class hkRadixSort : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class SortData16 : public NetScriptFramework::IMemoryObject { };

			interface class SortData32 : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkRangeInt32Attribute : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkRangeRealAttribute : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkReflectedFileAttribute : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkRelArrayUtil : public NetScriptFramework::IMemoryObject { };

		public enum class hkResult : System::Int32
		{
			HK_SUCCESS = 0,
			HK_FAILURE = 1,
		};

		public interface class hkScanReportUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class FollowFilter : public NetScriptFramework::IVirtualObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MemorySize : public NetScriptFramework::IMemoryObject
			{
			public:
				enum class Flag : System::Int32
				{
					FLAG_PAD_RIGHT = 1,
					FLAG_PAD_LEFT = 2,
					FLAG_RAW = 4,
				};
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class NameTypePair : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			enum class Traversal : System::Int32
			{
				TRAVERSAL_DEPTH_FIRST = 0,
				TRAVERSAL_BREADTH_FIRST = 1,
			};
		};

		public interface class hkSceneDataToMeshConverter : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Space : System::Int32
			{
				SPACE_ONLY_USING_SCALE_SKEW = 0,
				SPACE_TO_WORLD_SPACE = 1,
				SPACE_LOCAL = 2,
			};
		};

		public enum class hkSingleDmaChannel : System::Int32
		{
			HK_SPU_DMA_A = 0,
			HK_SPU_DMA_B = 1,
			HK_SPU_DMA_C = 2,
			HK_SPU_DMA_D = 3,
			HK_SPU_DMA_E = 4,
			HK_SPU_DMA_F = 5,
			HK_SPU_DMA_G = 6,
			HK_SPU_DMA_H = 7,
			HK_SPU_DMA_I = 8,
			HK_SPU_DMA_J = 9,
			HK_SPU_DMA_K = 0xA,
			HK_SPU_DMA_L = 0xB,
			HK_SPU_DMA_M = 0xC,
			HK_SPU_DMA_N = 0xD,
		};

		generic <typename hkSizeOfTypeOrVoid_T1>
		public interface class hkSizeOfTypeOrVoid : public NetScriptFramework::IMemoryObject { };

		public interface class hkSizeReportUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkSkinOperator : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class BoneInfluence : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Buffer : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Component : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			enum class ExecutionFlags : System::Int32
			{
				HK_SKIN_NONE = 0,
				HK_TYPE_POSITIONS = 0,
				HK_TYPE_NORMALS = 1,
				HK_TYPE_TANGENTS = 2,
				HK_TYPE_BITANGENTS = 3,
				HK_SKIN_POSITIONS = 1,
				HK_SKIN_NORMALS = 2,
				HK_SKIN_TANGENTS = 4,
				HK_SKIN_BITANGENTS = 8,
				HK_SKIN_ALL = 0xF,
				HK_USE_SIMD_FOR_POSITIONS_SHIFT = 4,
				HK_USE_SIMD_FOR_NORMALS_SHIFT = 5,
				HK_USE_SIMD_FOR_TANGENTS_SHIFT = 6,
				HK_USE_SIMD_FOR_BITANGENTS_SHIFT = 7,
				HK_USE_SIMD_FOR_POSITIONS = 0x10,
				HK_USE_SIMD_FOR_NORMALS = 0x20,
				HK_USE_SIMD_FOR_TANGENTS = 0x40,
				HK_USE_SIMD_FOR_BITANGENTS = 0x80,
				HK_USE_SIMD_FOR_ALL = 0xF0,
				HK_USE_SIMD_FOR_POSITIONS_AND_NORMALS = 0x30,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class SkinStream : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Parameters;
		};

		public enum class hkSplitPrimitivesStatus : System::Int32
		{
			SPLIT_PRIMITIVES_OK = 0,
			SPLIT_PRIMITIVES_INDISTINGUISHABLE = 1,
		};

		public interface class hkSpu4WayCache : public NetScriptFramework::IMemoryObject { };

		public interface class hkSpuDmaUtils : public NetScriptFramework::IMemoryObject { };

		public interface class hkSpuMonitorCache : public NetScriptFramework::IMemoryObject { };

		public interface class hkSpursTasksetParams : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkSpuTaskParams : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkStatisticsCollectorUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkStridedVertices : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkSystemDate : public NetScriptFramework::IMemoryObject { };

		public interface class hkTestEntry : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		generic <typename hkThreadLocalData_T1>
		public interface class hkThreadLocalData : public NetScriptFramework::IMemoryObject { };

		public enum class hkThreeDmaChannels : System::Int32
		{
			HK_SPU_DMA_ABC = 0,
			HK_SPU_DMA_BCD = 1,
			HK_SPU_DMA_CDE = 2,
			HK_SPU_DMA_DEF = 3,
			HK_SPU_DMA_EFG = 4,
			HK_SPU_DMA_FGH = 5,
			HK_SPU_DMA_GHI = 6,
			HK_SPU_DMA_HIJ = 7,
			HK_SPU_DMA_IJK = 8,
			HK_SPU_DMA_JKL = 9,
			HK_SPU_DMA_KLM = 0xA,
			HK_SPU_DMA_LMN = 0xB,
		};

		public interface class hkTimeFunctionHelper : public NetScriptFramework::IMemoryObject { };

		public interface class hkTrackerSnapshotUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkTrackerTypeTreeParser : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class TokenType : System::Int32
			{
				TOKEN_REFERENCE = 0,
				TOKEN_POINTER = 1,
				TOKEN_IDENTIFIER = 2,
				TOKEN_CLASS = 3,
				TOKEN_ENUM = 4,
				TOKEN_BUILT_IN = 5,
				TOKEN_UNSIGNED = 6,
				TOKEN_SIGNED = 7,
				TOKEN_LT = 8,
				TOKEN_GT = 9,
				TOKEN_COMMA = 0xA,
				TOKEN_TERMINATOR = 0xB,
				TOKEN_OPEN_SQUARE = 0xC,
				TOKEN_CLOSE_SQUARE = 0xD,
				TOKEN_INT_VALUE = 0xE,
			};

			interface class Token;

			interface class TokenContainer;

			interface class TokenRange;

			interface class TokenContainer : public NetScriptFramework::IMemoryObject { };

			interface class TokenRange : public NetScriptFramework::IMemoryObject { };
		};

		generic <typename hkTree_T1>
		public interface class hkTree : public NetScriptFramework::IMemoryObject { };

		public interface class hkTreeBundleRayCastUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkTreeRayCastJobUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkTulipReportUtil : public NetScriptFramework::IMemoryObject { };

		public enum class hkTwoDmaChannels : System::Int32
		{
			HK_SPU_DMA_AB = 0,
			HK_SPU_DMA_BC = 1,
			HK_SPU_DMA_CD = 2,
			HK_SPU_DMA_DE = 3,
			HK_SPU_DMA_EF = 4,
			HK_SPU_DMA_FG = 5,
			HK_SPU_DMA_GH = 6,
			HK_SPU_DMA_HI = 7,
			HK_SPU_DMA_IJ = 8,
			HK_SPU_DMA_JK = 9,
			HK_SPU_DMA_KL = 0xA,
			HK_SPU_DMA_LM = 0xB,
			HK_SPU_DMA_MN = 0xC,
		};

		public interface class hkTypeReportUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkValueIndexPair : public NetScriptFramework::IMemoryObject { };

		public interface class hkVdbStreamReportUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkVector2 : public NetScriptFramework::IMemoryObject { };

		public interface class hkVector4Util : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DistanceToPoint;
		};

		public enum class hkVectorConstant : System::Int32
		{
			HK_QUADREAL_MINUS1 = 0,
			HK_QUADREAL_0 = 1,
			HK_QUADREAL_1 = 2,
			HK_QUADREAL_2 = 3,
			HK_QUADREAL_3 = 4,
			HK_QUADREAL_4 = 5,
			HK_QUADREAL_5 = 6,
			HK_QUADREAL_6 = 7,
			HK_QUADREAL_7 = 8,
			HK_QUADREAL_15 = 9,
			HK_QUADREAL_16 = 0xA,
			HK_QUADREAL_255 = 0xB,
			HK_QUADREAL_256 = 0xC,
			HK_QUADREAL_2_POW_23 = 0xD,
			HK_QUADREAL_INV_0 = 0xE,
			HK_QUADREAL_INV_1 = 0xF,
			HK_QUADREAL_INV_2 = 0x10,
			HK_QUADREAL_INV_3 = 0x11,
			HK_QUADREAL_INV_4 = 0x12,
			HK_QUADREAL_INV_5 = 0x13,
			HK_QUADREAL_INV_6 = 0x14,
			HK_QUADREAL_INV_7 = 0x15,
			HK_QUADREAL_INV_15 = 0x16,
			HK_QUADREAL_INV_255 = 0x17,
			HK_QUADREAL_1000 = 0x18,
			HK_QUADREAL_0100 = 0x19,
			HK_QUADREAL_0010 = 0x1A,
			HK_QUADREAL_0001 = 0x1B,
			HK_QUADREAL_MAX = 0x1C,
			HK_QUADREAL_EPS = 0x1D,
			HK_QUADREAL_EPS_SQRD = 0x1E,
			HK_QUADREAL_m11m11 = 0x1F,
			HK_QUADREAL_8421 = 0x20,
			HK_QUADREAL_PACK_HALF = 0x21,
			HK_QUADREAL_PACK16_UNIT_VEC = 0x22,
			HK_QUADREAL_UNPACK16_UNIT_VEC = 0x23,
			HK_QUADREAL_END = 0x24,
		};

		public interface class hkVerifySnapshotTypesUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkVersionCheckingUtils : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Flags : System::Int32
			{
				NONE = 0,
				VERBOSE = 1,
				IGNORE_REMOVED = 2,
			};
		};

		public interface class hkVersionReporter : public NetScriptFramework::IMemoryObject { };

		public interface class hkVertexBufferSharingUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkVirtualFramebuffer : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class DataType : System::Int32
			{
				DATA_RGB = 0,
				DATA_BGR = 1,
			};

			enum class RowOrder : System::Int32
			{
				DATA_TOP_LEFT = 0,
				DATA_LOWER_LEFT = 1,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkVirtualFramebufferProtocol : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Commands : System::Int32
			{
				SEND_FRAMEBUFFER = 1,
				SEND_GAMEPAD = 2,
				SEND_KEY = 3,
				SEND_MOUSE = 4,
				SEND_OPTIONS = 5,
			};

			enum class FramebufferCommands : System::Int32
			{
				FRAMEBUFFER_RECT_RAW = 1,
				FRAMEBUFFER_RECT_DIFF = 2,
				FRAMEBUFFER_RECT_RLE = 3,
			};

			enum class FramebufferFormat : System::Int32
			{
				PIXEL_RGB888 = 1,
				PIXEL_RGB565 = 2,
				PIXEL_PALLETE8 = 3,
			};
		};

		public interface class hkVirtualFramebufferRelativeRect : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkVisualDebuggerProtocol : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class BidirectionalCommands : System::Int32
			{
				HK_ADD_TOPLEVEL = 0x21,
				HK_REMOVE_TOPLEVEL = 0x22,
				HK_REQUEST_OBJECT = 0x23,
				HK_ADD_OBJECT = 0x24,
				HK_UPDATE_MEMBER = 0x25,
				HK_LIVE_OBJECT = 0x40,
			};

			enum class ClientToServerCommands : System::Int32
			{
				COMMAND_STEP = 0,
				COMMAND_REQUEST_GEOMETRY_WITH_HASH = 0x30,
				COMMAND_DO_NOT_REQUEST_GEOMETRY_WITH_HASH = 0x31,
				COMMAND_CLIENT_DISPLAY_HANDLER_SETTINGS = 0x32,
				HK_PICK_OBJECT = 0xB0,
				HK_DRAG_OBJECT = 0xB1,
				HK_RELEASE_OBJECT = 0xB2,
				HK_CREATE_PROCESS = 0xC2,
				HK_DELETE_PROCESS = 0xC3,
				COMMAND_ACK = 0xF0,
			};

			enum class ServerToClientCommands : System::Int32
			{
				HK_STEP = 0,
				HK_ADD_GEOMETRY = 1,
				HK_UPDATE_GEOMETRY = 2,
				HK_SET_COLOR_GEOMETRY = 3,
				HK_REMOVE_GEOMETRY = 4,
				HK_DISPLAY_GEOMETRY_WITH_TRANSFORM = 5,
				HK_DISPLAY_GEOMETRY = 6,
				HK_DISPLAY_POINT = 7,
				HK_DISPLAY_LINE = 8,
				HK_DISPLAY_TEXT = 9,
				HK_SEND_STATISTICS_DUMP = 0xA,
				HK_HOLD_IMMEDIATE = 0xB,
				HK_ADD_CAMERA = 0xC,
				HK_UPDATE_CAMERA = 0xD,
				HK_REMOVE_CAMERA = 0xE,
				HK_SEND_MEMSTATS_DUMP = 0xF,
				HK_ADD_GEOMETRY_INSTANCE = 0x10,
				HK_DISPLAY_TEXT_3D = 0x11,
				HK_UNUSED_0 = 0x12,
				HK_UNUSED_1 = 0x13,
				HK_DISPLAY_ANNOTATION = 0x14,
				HK_ADD_MESH_OBSOLETE = 0x15,
				HK_REMOVE_MESH_OBSOLETE = 0x16,
				HK_UPDATE_GEOMETRY_WITH_SCALE = 0x17,
				HK_SKIN_GEOMETRY = 0x18,
				HK_ADD_GEOMETRY_PART = 0x19,
				HK_ADD_GEOMETRY_FINAL = 0x1A,
				HK_ADD_GEOMETRY_HASH = 0x1B,
				HK_GEOMETRY_FOR_HASH_PART = 0x1C,
				HK_GEOMETRY_FOR_HASH_FINAL = 0x1D,
				HK_DISPLAY_BONE = 0x1E,
				HK_SET_TRANSPARENCY_GEOMETRY = 0x1F,
				HK_SETUP = 0x20,
				HK_VERSION_INFORMATION = 0x90,
				HK_SERVER_LAYOUT = 0x91,
				HK_REGISTER_PROCESS = 0xC0,
				HK_SELECT_PROCESS = 0xC1,
				HK_PAUSE_WORLD_STEP = 0xC4,
				HK_UNPAUSE_WORLD_STEP = 0xC5,
				HK_SNAPSHOT = 0xD0,
				MEMORY_SNAPSHOT = 0xD1,
			};
		};

		public interface class hkxBoneIndicesInt16Data : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class BoneIndicesDataPtr : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxBoneIndicesInt8Data : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class BoneIndicesDataPtr : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxMeshSectionUtil : public NetScriptFramework::IMemoryObject { };

		public interface class hkXmlPackfileUpdateTracker : public NetScriptFramework::IMemoryObject { };

		public interface class hkxVertexUtil : public NetScriptFramework::IMemoryObject { };

		public enum class BSSoundStates : System::Int32
		{
			Initialized = 0,
			Playing = 1,
			Stopped = 2,
			Paused = 3,
		};

		public interface class MiddleLowProcessData : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Int32 HourPackageEvaluated
			{
				System::Int32 __clrcall get();
			}
		};

		public enum class ActorProcessTypes : System::Byte
		{
			High = 0,
			MiddleHigh = 1,
			MiddleLow = 2,
			Low = 3,
			None = 0xFF,
		};

		public interface class BSSemaphoreBase : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::IntPtr SemaphoreHandle
			{
				System::IntPtr __clrcall get();
			}
		};

		public interface class NiNPShortPoint3 : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Int16 X
			{
				System::Int16 __clrcall get();

				void __clrcall set(System::Int16 value);
			}

			property System::Int16 Y
			{
				System::Int16 __clrcall get();

				void __clrcall set(System::Int16 value);
			}

			property System::Int16 Z
			{
				System::Int16 __clrcall get();

				void __clrcall set(System::Int16 value);
			}
		};

		public enum class ActorValueIndices8 : System::Byte
		{
			Aggression = 0,
			Confidence = 1,
			Energy = 2,
			Morality = 3,
			Mood = 4,
			Assistance = 5,
			OneHanded = 6,
			TwoHanded = 7,
			Marksman = 8,
			Block = 9,
			Smithing = 0xA,
			HeavyArmor = 0xB,
			LightArmor = 0xC,
			Pickpocket = 0xD,
			Lockpicking = 0xE,
			Sneak = 0xF,
			Alchemy = 0x10,
			Speechcraft = 0x11,
			Alteration = 0x12,
			Conjuration = 0x13,
			Destruction = 0x14,
			Illusion = 0x15,
			Restoration = 0x16,
			Enchanting = 0x17,
			Health = 0x18,
			Magicka = 0x19,
			Stamina = 0x1A,
			HealRate = 0x1B,
			MagickaRate = 0x1C,
			StaminaRate = 0x1D,
			SpeedMult = 0x1E,
			InventoryWeight = 0x1F,
			CarryWeight = 0x20,
			CritChance = 0x21,
			MeleeDamage = 0x22,
			UnarmedDamage = 0x23,
			Mass = 0x24,
			VoicePoints = 0x25,
			VoiceRate = 0x26,
			DamageResist = 0x27,
			PoisonResist = 0x28,
			FireResist = 0x29,
			ElectricResist = 0x2A,
			FrostResist = 0x2B,
			MagicResist = 0x2C,
			DiseaseResist = 0x2D,
			PerceptionCondition = 0x2E,
			EnduranceCondition = 0x2F,
			LeftAttackCondition = 0x30,
			RightAttackCondition = 0x31,
			LeftMobilityCondition = 0x32,
			RightMobilityCondition = 0x33,
			BrainCondition = 0x34,
			Paralysis = 0x35,
			Invisibility = 0x36,
			NightEye = 0x37,
			DetectLifeRange = 0x38,
			WaterBreathing = 0x39,
			WaterWalking = 0x3A,
			IgnoreCrippledLimbs = 0x3B,
			Fame = 0x3C,
			Infamy = 0x3D,
			JumpingBonus = 0x3E,
			WardPower = 0x3F,
			RightItemCharge = 0x40,
			ArmorPerks = 0x41,
			ShieldPerks = 0x42,
			WardDeflection = 0x43,
			Variable01 = 0x44,
			Variable02 = 0x45,
			Variable03 = 0x46,
			Variable04 = 0x47,
			Variable05 = 0x48,
			Variable06 = 0x49,
			Variable07 = 0x4A,
			Variable08 = 0x4B,
			Variable09 = 0x4C,
			Variable10 = 0x4D,
			BowSpeedBonus = 0x4E,
			FavorActive = 0x4F,
			FavorsPerDay = 0x50,
			FavorsPerDayTimer = 0x51,
			LeftItemCharge = 0x52,
			AbsorbChance = 0x53,
			Blindness = 0x54,
			WeaponSpeedMult = 0x55,
			ShoutRecoveryMult = 0x56,
			BowStaggerBonus = 0x57,
			Telekinesis = 0x58,
			FavorPointsBonus = 0x59,
			LastBribedIntimidated = 0x5A,
			LastFlattered = 0x5B,
			MovementNoiseMult = 0x5C,
			BypassVendorStolenCheck = 0x5D,
			BypassVendorKeywordCheck = 0x5E,
			WaitingForPlayer = 0x5F,
			OneHandedMod = 0x60,
			TwoHandedMod = 0x61,
			MarksmanMod = 0x62,
			BlockMod = 0x63,
			SmithingMod = 0x64,
			HeavyArmorMod = 0x65,
			LightArmorMod = 0x66,
			PickPocketMod = 0x67,
			LockpickingMod = 0x68,
			SneakMod = 0x69,
			AlchemyMod = 0x6A,
			SpeechcraftMod = 0x6B,
			AlterationMod = 0x6C,
			ConjurationMod = 0x6D,
			DestructionMod = 0x6E,
			IllusionMod = 0x6F,
			RestorationMod = 0x70,
			EnchantingMod = 0x71,
			OneHandedSkillAdvance = 0x72,
			TwoHandedSkillAdvance = 0x73,
			MarksmanSkillAdvance = 0x74,
			BlockSkillAdvance = 0x75,
			SmithingSkillAdvance = 0x76,
			HeavyArmorSkillAdvance = 0x77,
			LightArmorSkillAdvance = 0x78,
			PickPocketSkillAdvance = 0x79,
			LockpickingSkillAdvance = 0x7A,
			SneakSkillAdvance = 0x7B,
			AlchemySkillAdvance = 0x7C,
			SpeechcraftSkillAdvance = 0x7D,
			AlterationSkillAdvance = 0x7E,
			ConjurationSkillAdvance = 0x7F,
			DestructionSkillAdvance = 0x80,
			IllusionSkillAdvance = 0x81,
			RestorationSkillAdvance = 0x82,
			EnchantingSkillAdvance = 0x83,
			LeftWeaponSpeedMult = 0x84,
			DragonSouls = 0x85,
			CombatHealthRegenMult = 0x86,
			OneHandedPowerMod = 0x87,
			TwoHandedPowerMod = 0x88,
			MarksmanPowerMod = 0x89,
			BlockPowerMod = 0x8A,
			SmithingPowerMod = 0x8B,
			HeavyArmorPowerMod = 0x8C,
			LightArmorPowerMod = 0x8D,
			PickPocketPowerMod = 0x8E,
			LockpickingPowerMod = 0x8F,
			SneakPowerMod = 0x90,
			AlchemyPowerMod = 0x91,
			SpeechcraftPowerMod = 0x92,
			AlterationPowerMod = 0x93,
			ConjurationPowerMod = 0x94,
			DestructionPowerMod = 0x95,
			IllusionPowerMod = 0x96,
			RestorationPowerMod = 0x97,
			EnchantingPowerMod = 0x98,
			DragonRend = 0x99,
			AttackDamageMult = 0x9A,
			HealRateMult = 0x9B,
			MagickaRateMult = 0x9C,
			StaminaRateMult = 0x9D,
			WerewolfPerks = 0x9E,
			VampirePerks = 0x9F,
			GrabActorOffset = 0xA0,
			Grabbed = 0xA1,
			DEPRECATED05 = 0xA2,
			ReflectDamage = 0xA3,
			Max = 0xA4,
		};

		public enum class BGSDualCastDataFlags : System::UInt32
		{
			None = 0,
			HitEffectInheritScale = 1,
			ProjectileInheritScale = 2,
			ExplosionInheritScale = 4,
		};

		public enum class PerkEntryPoints8 : System::Byte
		{
			CalculateWeaponDamage = 0,
			CalculateMyCriticalHitChance = 1,
			CalculateMyCriticalHitDamage = 2,
			CalculateMineExplodeChance = 3,
			AdjustLimbDamage = 4,
			AdjustBookSkillPoints = 5,
			ModRecoveredHealth = 6,
			GetShouldAttack = 7,
			ModBuyPrices = 8,
			AddLeveledListOnDeath = 9,
			GetMaxCarryWeight = 0xA,
			ModAddictionChance = 0xB,
			ModAddictionDuration = 0xC,
			ModPositiveChemDuration = 0xD,
			Activate = 0xE,
			IgnoreRunningDuringDetection = 0xF,
			IgnoreBrokenLock = 0x10,
			ModEnemyCriticalHitChance = 0x11,
			ModSneakAttackMult = 0x12,
			ModMaxPlaceableMines = 0x13,
			ModBowZoom = 0x14,
			ModRecoverArrowChance = 0x15,
			ModSkillUse = 0x16,
			ModTelekinesisDistance = 0x17,
			ModTelekinesisDamageMult = 0x18,
			ModTelekinesisDamage = 0x19,
			ModBashingDamage = 0x1A,
			ModPowerAttackStamina = 0x1B,
			ModPowerAttackDamage = 0x1C,
			ModSpellMagnitude = 0x1D,
			ModSpellDuration = 0x1E,
			ModSecondaryValueWeight = 0x1F,
			ModArmorWeight = 0x20,
			ModIncomingStagger = 0x21,
			ModTargetStagger = 0x22,
			ModAttackDamage = 0x23,
			ModIncomingDamage = 0x24,
			ModTargetDamageResistance = 0x25,
			ModSpellCost = 0x26,
			ModPercentBlocked = 0x27,
			ModShieldDeflectArrowChance = 0x28,
			ModIncomingSpellMagnitude = 0x29,
			ModIncomingSpellDuration = 0x2A,
			ModPlayerIntimidation = 0x2B,
			ModPlayerReputation = 0x2C,
			ModFavorPoints = 0x2D,
			ModBribeAmount = 0x2E,
			ModDetectionLight = 0x2F,
			ModDetectionMovement = 0x30,
			ModSoulGemRecharge = 0x31,
			SetSweepAttack = 0x32,
			ApplyCombatHitSpell = 0x33,
			ApplyBashingSpell = 0x34,
			ApplyReanimateSpell = 0x35,
			SetBooleanGraphVariable = 0x36,
			ModSpellCastingSoundEvent = 0x37,
			ModPickpocketChance = 0x38,
			ModDetectionSneakSkill = 0x39,
			ModFallingDamage = 0x3A,
			ModLockpickSweetSpot = 0x3B,
			ModSellPrices = 0x3C,
			CanPickpocketEquippedItem = 0x3D,
			ModLockpickLevelAllowed = 0x3E,
			SetLockpickStartingArc = 0x3F,
			SetProgressionPicking = 0x40,
			MakeLockpicksUnbreakable = 0x41,
			ModAlchemyEffectiveness = 0x42,
			ApplyWeaponSwingSpell = 0x43,
			ModCommandedActorLimit = 0x44,
			ApplySneakingSpell = 0x45,
			ModPlayerMagicSlowdown = 0x46,
			ModWardMagickaAbsorptionPct = 0x47,
			ModInitialIngredientEffectsLearned = 0x48,
			PurifyAlchemyIngredients = 0x49,
			FilterActivation = 0x4A,
			CanDualCastSpell = 0x4B,
			ModTemperingHealth = 0x4C,
			ModEnchantmentPower = 0x4D,
			ModSoulPctCapturedToWeapon = 0x4E,
			ModSoulGemEnchanting = 0x4F,
			ModNumberAppliedEnchantmentsAllowed = 0x50,
			SetActivateLabel = 0x51,
			ModShoutOK = 0x52,
			ModPoisonDoseCount = 0x53,
			ShouldApplyPlacedItem = 0x54,
			ModArmorRating = 0x55,
			ModLockpickingCrimeChance = 0x56,
			ModIngredientsHarvested = 0x57,
			ModSpellRange_TargetLoc = 0x58,
			ModPotionsCreated = 0x59,
			ModLockpickingKeyRewardChance = 0x5A,
			AllowMountActor = 0x5B,
		};

		public enum class ImpactResults8 : System::SByte
		{
			None = 0,
			Destroy = 1,
			Bounce = 2,
			Impale = 3,
			Stick = 4,
		};

		public interface class BSNavmeshTriangleEdgePortal : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::UInt32 OtherMeshFormId
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt16 Triangle
			{
				System::UInt16 __clrcall get();
			}

			property System::SByte EdgeIndex
			{
				System::SByte __clrcall get();
			}
		};

		public enum class MagicSoundTypes : System::Int32
		{
			DrawSheatheLPM = 0,
			Charge = 1,
			ReadyLoop = 2,
			Release = 3,
			CastLoop = 4,
			Hit = 5,
		};

		/// <summary>
		/// List of collision layers.
		/// </summary>
		public enum class CollisionLayers : System::Int32
		{
			Unidentified = 0,
			Static = 1,
			AnimStatic = 2,
			Transparent = 3,
			Clutter = 4,
			Weapon = 5,
			Projectile = 6,
			Spell = 7,
			Biped = 8,
			Trees = 9,
			Props = 0xA,
			Water = 0xB,
			Trigger = 0xC,
			Terrain = 0xD,
			Trap = 0xE,
			NonCollidable = 0xF,
			CloudTrap = 0x10,
			Ground = 0x11,
			Portal = 0x12,
			DebrisSmall = 0x13,
			DebrisLarge = 0x14,
			AcousticSpace = 0x15,
			ActorZone = 0x16,
			ProjectileZone = 0x17,
			GasTrap = 0x18,
			Shellcasing = 0x19,
			TransparentSmall = 0x1A,
			InvisibleWall = 0x1B,
			TransparentSmallAnim = 0x1C,
			Ward = 0x1D,
			CharController = 0x1E,
			StairHelper = 0x1F,
			DeadBip = 0x20,
			BipedNoCC = 0x21,
			AvoidBox = 0x22,
			CollisionBox = 0x23,
			CameraSphere = 0x24,
			DoorDetection = 0x25,
			ConeProjectile = 0x26,
			Camera = 0x27,
			ItemPicker = 0x28,
			Los = 0x29,
			PathingPick = 0x2A,
			CustomPick1 = 0x2B,
			CustomPick2 = 0x2C,
			SpellExplosion = 0x2D,
			DroppingPick = 0x2E,
			DeadActorZone = 0x2F,
			TriggerFallingTrap = 0x30,
			Navcut = 0x31,
			Critter = 0x32,
			SpellTrigger = 0x33,
			LivingAndDeadActors = 0x34,
			Detection = 0x35,
			TrapTrigger = 0x36,
		};

		public enum class ExtraLockDataFlags : System::Byte
		{
			None = 0,
			Locked = 1,
			Leveled = 4,
		};

		public enum class ExtraLockDifficultyRanks : System::Int32
		{
			Unlocked = -1,
			VeryEasy = 0,
			Easy = 1,
			Average = 2,
			Hard = 3,
			VeryHard = 4,
			Impossible = 5,
		};

		public interface class BGSSaveLoadBuffer : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::IntPtr Buffer
			{
				System::IntPtr __clrcall get();
			}
		};

		public enum class QuestObjectiveStates : System::Int32
		{
			Dormant = 0,
			Displayed = 1,
			Completed = 2,
			CompletedDisplayed = 3,
			Failed = 4,
			FailedDisplayed = 5,
		};

		public interface class ScriptLocal : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::UInt32 Id
			{
				System::UInt32 __clrcall get();
			}

			property System::Single Value
			{
				System::Single __clrcall get();
			}

			property System::Boolean IsInteger
			{
				System::Boolean __clrcall get();
			}
		};

		public enum class ActorAggressionTypes : System::Int32
		{
			Calmed = -1,
			Unaggressive = 0,
			Aggressive = 1,
			VeryAggressive = 2,
			Frenzied = 3,
		};

		public enum class ActorConfidenceTypes : System::Int32
		{
			Cowardly = 0,
			Cautious = 1,
			Average = 2,
			Brave = 3,
			Foolhardy = 4,
		};

		public enum class ActorMoralityTypes : System::Int32
		{
			AnyCrime = 0,
			ViolenceAgainstEnemy = 1,
			PropertyCrimeOnly = 2,
			NoCrime = 3,
		};

		public enum class ActorMoodTypes : System::Int32
		{
			Neutral = 0,
			Angry = 1,
			Fear = 2,
			Happy = 3,
			Sad = 4,
			Surprised = 5,
			Puzzled = 6,
			Disgusted = 7,
		};

		public enum class ActorAssistanceTypes : System::Int32
		{
			HelpsNobody = 0,
			HelpsAllies = 1,
			HelpsFriends = 2,
		};

		public enum class SkillsEnum8 : System::SByte
		{
			OneHanded = 0,
			TwoHanded = 1,
			Archery = 2,
			Block = 3,
			Smithing = 4,
			HeavyArmor = 5,
			LightArmor = 6,
			Pickpocket = 7,
			Lockpicking = 8,
			Sneak = 9,
			Alchemy = 0xA,
			Speech = 0xB,
			Alteration = 0xC,
			Conjuration = 0xD,
			Destruction = 0xE,
			Illusion = 0xF,
			Restoration = 0x10,
			Enchanting = 0x11,
		};

		public enum class D3DBLEND : System::Int32
		{
			D3DBLEND_ZERO = 1,
			D3DBLEND_ONE = 2,
			D3DBLEND_SRCCOLOR = 3,
			D3DBLEND_INVSRCCOLOR = 4,
			D3DBLEND_SRCALPHA = 5,
			D3DBLEND_INVSRCALPHA = 6,
			D3DBLEND_DESTALPHA = 7,
			D3DBLEND_INVDESTALPHA = 8,
			D3DBLEND_DESTCOLOR = 9,
			D3DBLEND_INVDESTCOLOR = 0xA,
			D3DBLEND_SRCALPHASAT = 0xB,
			D3DBLEND_BOTHSRCALPHA = 0xC,
			D3DBLEND_BOTHINVSRCALPHA = 0xD,
			D3DBLEND_BLENDFACTOR = 0xE,
			D3DBLEND_INVBLENDFACTOR = 0xF,
			D3DBLEND_SRCCOLOR2 = 0x10,
			D3DBLEND_INVSRCCOLOR2 = 0x11,
			D3DBLEND_FORCE_DWORD = 0x7FFFFFFF,
		};

		public enum class D3DBLENDOP : System::Int32
		{
			D3DBLENDOP_ADD = 1,
			D3DBLENDOP_SUBTRACT = 2,
			D3DBLENDOP_REVSUBTRACT = 3,
			D3DBLENDOP_MIN = 4,
			D3DBLENDOP_MAX = 5,
			D3DBLENDOP_FORCE_DWORD = 0x7FFFFFFF,
		};

		public enum class D3DCMPFUNC : System::Int32
		{
			D3DCMP_NEVER = 1,
			D3DCMP_LESS = 2,
			D3DCMP_EQUAL = 3,
			D3DCMP_LESSEQUAL = 4,
			D3DCMP_GREATER = 5,
			D3DCMP_NOTEQUAL = 6,
			D3DCMP_GREATEREQUAL = 7,
			D3DCMP_ALWAYS = 8,
			D3DCMP_FORCE_DWORD = 0x7FFFFFFF,
		};

		public enum class WeaponHitBehaviors : System::Int32
		{
			Normal = 0,
			DismemberOnly = 1,
			ExplodeOnly = 2,
			NoDismemberOrExplode = 3,
		};

		public enum class WeaponTypes8 : System::SByte
		{
			HandToHandMelee = 0,
			OneHandSword = 1,
			OneHandDagger = 2,
			OneHandAxe = 3,
			OneHandMace = 4,
			TwoHandSword = 5,
			TwoHandAxe = 6,
			Bow = 7,
			Staff = 8,
			Crossbow = 9,
		};

		public enum class WeaponRumblePatterns : System::Int32
		{
			Constant = 0,
			PeriodicSquare = 1,
			PeriodicTriangle = 2,
			PeriodicSawtooth = 3,
		};

		public enum class QuestObjectiveStates8 : System::SByte
		{
			Dormant = 0,
			Displayed = 1,
			Completed = 2,
			CompletedDisplayed = 3,
			Failed = 4,
			FailedDisplayed = 5,
		};

		public enum class BipedObjects : System::Int32
		{
			None = -1,
			Head = 0,
			Hair = 1,
			Body = 2,
			Hands = 3,
			Forearms = 4,
			Amulet = 5,
			Ring = 6,
			Feet = 7,
			Calves = 8,
			Shield = 9,
			Tail = 0xA,
			LongHair = 0xB,
			Circlet = 0xC,
			Ears = 0xD,
			DecapitateHead = 0x14,
			Decapitate = 0x15,
			FX01 = 0x1F,
			HandToHandMelee = 0x20,
			OneHandSword = 0x21,
			OneHandDagger = 0x22,
			OneHandAxe = 0x23,
			OneHandMace = 0x24,
			TwoHandMelee = 0x25,
			Bow = 0x26,
			Staff = 0x27,
			Crossbow = 0x28,
			Quiver = 0x29,
		};

		public enum class DialogueTypes8 : System::SByte
		{
			PlayerDialogue = 0,
			CommandDialogue = 1,
			BranchedTotal = 2,
			Combat = 3,
			Favors = 4,
			Detection = 5,
			Service = 6,
			Miscellaneous = 7,
		};

		public enum class WardStates : System::Int32
		{
			None = 0,
			Absorb = 1,
			Break = 2,
		};

		public interface class AnimResponseBase : public NetScriptFramework::IMemoryObject { };

		public enum class Reset3DFlags : System::Byte
		{
			None = 0,
			Model = 1,
			Skin = 2,
			Head = 4,
			Face = 8,
			Scale = 0x10,
			Skeleton = 0x20,
			InitDefault = 0x40,
			SkyCellSkin = 0x80,
		};

		public enum class VoiceStates : System::Int32
		{
			None = 0,
			Request = 1,
			Start = 2,
			Continue = 3,
			Precast = 4,
			Postcast = 5,
			Fail = 6,
		};

		public enum class ShoutWordTypes : System::Int32
		{
			None = -1,
			One = 0,
			Two = 1,
			Three = 2,
		};

		public enum class FadeStates : System::Int32
		{
			Normal = 0,
			In = 1,
			Out = 2,
			TeleportIn = 3,
			TeleportOut = 4,
			OutDisable = 5,
			OutDelete = 6,
		};

		public enum class ActorPackageFlags : System::Byte
		{
			None = 0,
			SaveLoadSharedPackage = 1,
		};

		public enum class CachedValueBooleanFlags : System::UInt32
		{
			None = 0,
			ConditionPreventsRun = 1,
			OwnerIsNPC = 2,
			OwnerIsUndead = 4,
			OwnerIsInCombatantFaction = 8,
		};

		public enum class CachedValueFlags : System::UInt32
		{
			None = 0,
			Radius = 1,
			Width = 2,
			Length = 4,
			DPS = 8,
			MedicineEffectivenessMult = 0x10,
			EyeLevel = 0x200,
			ConditionPreventsRun = 0x400,
			ForwardLength = 0x800,
			ActorIsGhost = 0x100000,
			HealthDamaged = 0x200000,
			MagickaPointsDamaged = 0x400000,
			StaminaDamaged = 0x800000,
			OwnerIsNPC = 0x2000000,
			OwnerIsUndead = 0x4000000,
			OwnerIsInCombatantFaction = 0x8000000,
		};

		public interface class CachedValueData : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Boolean Dirty
			{
				System::Boolean __clrcall get();
			}

			property System::Single Value
			{
				System::Single __clrcall get();
			}
		};

		public interface class TESObjectList : public NetScriptFramework::IMemoryObject { };

		/// <summary>
		/// Structure that stores information about a game or console function registration.
		/// </summary>
		public interface class GameFunction : public NetScriptFramework::IMemoryObject
		{
		public:
			/// <summary>
			/// Gets the name of function.
			/// </summary>
			property System::String^ Name
			{
				System::String^ __clrcall get();
			}

			/// <summary>
			/// Gets the alternate name of function. This is usually the short version of name.
			/// </summary>
			property System::String^ AlternateName
			{
				System::String^ __clrcall get();
			}

			/// <summary>
			/// Gets the identifier of this function.
			/// </summary>
			property System::Int32 Id
			{
				System::Int32 __clrcall get();
			}

			/// <summary>
			/// Gets the description of function. This is set for console commands to describe what it does.
			/// </summary>
			property System::String^ Description
			{
				System::String^ __clrcall get();
			}

			/// <summary>
			/// Gets the options for this function.
			/// </summary>
			property System::UInt32 Flags
			{
				System::UInt32 __clrcall get();
			}

			/// <summary>
			/// Gets the argument type.
			/// </summary>
			property System::String^ Argument
			{
				System::String^ __clrcall get();
			}

			/// <summary>
			/// Gets the handler function pointer.
			/// </summary>
			property System::IntPtr HandlerFunc
			{
				System::IntPtr __clrcall get();
			}

			/// <summary>
			/// Gets the argument parser function pointer.
			/// </summary>
			property System::IntPtr ParserFunc
			{
				System::IntPtr __clrcall get();
			}

			/// <summary>
			/// Gets the native function pointer. This is not set for all functions!
			/// </summary>
			property System::IntPtr NativeFunc
			{
				System::IntPtr __clrcall get();
			}
		};

		public interface class GrassManager : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Byte GenerateGrassDataFiles
			{
				System::Byte __clrcall get();

				void __clrcall set(System::Byte value);
			}

			property System::Byte EnableGrass
			{
				System::Byte __clrcall get();

				void __clrcall set(System::Byte value);
			}
		};

		public enum class UserEventFlags : System::UInt32
		{
			None = 0,
			Movement = 1,
			Looking = 2,
			Activate = 4,
			Menu = 8,
			Console = 0x10,
			POVSwitch = 0x20,
			Fighting = 0x40,
			Sneaking = 0x80,
			MainFour = 0x100,
			WheelZoom = 0x200,
			Jumping = 0x400,
			VATS = 0x800,
			Invalid = 0x80000000,
		};

		public enum class PcGamepadTypes : System::Int32
		{
			DirectX = 0,
			Orbis = 1,
		};

		public interface class JobListEntry : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::IntPtr Func
			{
				System::IntPtr __clrcall get();
			}

			property System::IntPtr Argument
			{
				System::IntPtr __clrcall get();
			}
		};

		/// <summary>
		/// List of reasons for removing a magic effect.
		/// </summary>
		public enum class MagicEffectRemovalReasons : System::Int32
		{
			Unknown = 0,
			Expired = 1,
			Activation = 2,
			CastSpellOrUseMagicItem = 3,
			Attacking = 4,
			Attacked = 5,
			Dialogue = 6,
		};

		public interface class BSTimer : public NetScriptFramework::IMemoryObject { };

		public interface class MenuScreenData : public NetScriptFramework::IMemoryObject
		{
		public:
			/// <summary>
			/// Gets the mouse X position in menu screen. This only changes if menu mode is set.
			/// </summary>
			property System::Single MouseXPosition
			{
				System::Single __clrcall get();
			}

			/// <summary>
			/// Gets the mouse Y position in menu screen. This only changes if menu mode is set.
			/// </summary>
			property System::Single MouseYPosition
			{
				System::Single __clrcall get();
			}

			/// <summary>
			/// Gets the screen width.
			/// </summary>
			property System::Single ScreenWidth
			{
				System::Single __clrcall get();
			}

			/// <summary>
			/// Gets the screen height.
			/// </summary>
			property System::Single ScreenHeight
			{
				System::Single __clrcall get();
			}

			/// <summary>
			/// Gets the menu screen data instance.
			/// </summary>
			static property MenuScreenData^ Instance
			{
				MenuScreenData^ __clrcall get()
				{
					return NetScriptFramework::MemoryObject::FromAddress<MenuScreenData^>(NetScriptFramework::Memory::ReadPointer(__VIDS::VID517043.Value, false));
				}
			}
		};

		public interface class NiObjectUpdateContext : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Single Amount
			{
				System::Single __clrcall get();
			}

			property System::UInt32 Flags
			{
				System::UInt32 __clrcall get();
			}
		};

		public enum class PackageTypes : System::Int32
		{
			Find = 0,
			Follow = 1,
			Escort = 2,
			Eat = 3,
			Sleep = 4,
			Wander = 5,
			Travel = 6,
			Accompany = 7,
			UseItemAt = 8,
			Ambush = 9,
			FleeNotCombat = 0xA,
			CastMagic = 0xB,
			Sandbox = 0xC,
			Patrol = 0xD,
			Guard = 0xE,
			Dialogue = 0xF,
			UseWeapon = 0x10,
			Find2 = 0x11,
			Package = 0x12,
			PackageTemplate = 0x13,
			Activate = 0x14,
			Alarm = 0x15,
			Flee = 0x16,
			Trespass = 0x17,
			Spectator = 0x18,
			ReactToDead = 0x19,
			GetUpFromChair = 0x1A,
			DoNothing = 0x1B,
			InGameDialogue = 0x1C,
			Surface = 0x1D,
			SearchForAttacker = 0x1E,
			AvoidPlayer = 0x1F,
			ReactToDestroyedObject = 0x20,
			ReactToGrenadeOrMine = 0x21,
			StealWarning = 0x22,
			PickPocketWarning = 0x23,
			MovementBlocked = 0x24,
		};

		public enum class PerkEntryPoints : System::Int32
		{
			CalculateWeaponDamage = 0,
			CalculateMyCriticalHitChance = 1,
			CalculateMyCriticalHitDamage = 2,
			CalculateMineExplodeChance = 3,
			AdjustLimbDamage = 4,
			AdjustBookSkillPoints = 5,
			ModRecoveredHealth = 6,
			GetShouldAttack = 7,
			ModBuyPrices = 8,
			AddLeveledListOnDeath = 9,
			GetMaxCarryWeight = 0xA,
			ModAddictionChance = 0xB,
			ModAddictionDuration = 0xC,
			ModPositiveChemDuration = 0xD,
			Activate = 0xE,
			IgnoreRunningDuringDetection = 0xF,
			IgnoreBrokenLock = 0x10,
			ModEnemyCriticalHitChance = 0x11,
			ModSneakAttackMult = 0x12,
			ModMaxPlaceableMines = 0x13,
			ModBowZoom = 0x14,
			ModRecoverArrowChance = 0x15,
			ModSkillUse = 0x16,
			ModTelekinesisDistance = 0x17,
			ModTelekinesisDamageMult = 0x18,
			ModTelekinesisDamage = 0x19,
			ModBashingDamage = 0x1A,
			ModPowerAttackStamina = 0x1B,
			ModPowerAttackDamage = 0x1C,
			ModSpellMagnitude = 0x1D,
			ModSpellDuration = 0x1E,
			ModSecondaryValueWeight = 0x1F,
			ModArmorWeight = 0x20,
			ModIncomingStagger = 0x21,
			ModTargetStagger = 0x22,
			ModAttackDamage = 0x23,
			ModIncomingDamage = 0x24,
			ModTargetDamageResistance = 0x25,
			ModSpellCost = 0x26,
			ModPercentBlocked = 0x27,
			ModShieldDeflectArrowChance = 0x28,
			ModIncomingSpellMagnitude = 0x29,
			ModIncomingSpellDuration = 0x2A,
			ModPlayerIntimidation = 0x2B,
			ModPlayerReputation = 0x2C,
			ModFavorPoints = 0x2D,
			ModBribeAmount = 0x2E,
			ModDetectionLight = 0x2F,
			ModDetectionMovement = 0x30,
			ModSoulGemRecharge = 0x31,
			SetSweepAttack = 0x32,
			ApplyCombatHitSpell = 0x33,
			ApplyBashingSpell = 0x34,
			ApplyReanimateSpell = 0x35,
			SetBooleanGraphVariable = 0x36,
			ModSpellCastingSoundEvent = 0x37,
			ModPickpocketChance = 0x38,
			ModDetectionSneakSkill = 0x39,
			ModFallingDamage = 0x3A,
			ModLockpickSweetSpot = 0x3B,
			ModSellPrices = 0x3C,
			CanPickpocketEquippedItem = 0x3D,
			ModLockpickLevelAllowed = 0x3E,
			SetLockpickStartingArc = 0x3F,
			SetProgressionPicking = 0x40,
			MakeLockpicksUnbreakable = 0x41,
			ModAlchemyEffectiveness = 0x42,
			ApplyWeaponSwingSpell = 0x43,
			ModCommandedActorLimit = 0x44,
			ApplySneakingSpell = 0x45,
			ModPlayerMagicSlowdown = 0x46,
			ModWardMagickaAbsorptionPct = 0x47,
			ModInitialIngredientEffectsLearned = 0x48,
			PurifyAlchemyIngredients = 0x49,
			FilterActivation = 0x4A,
			CanDualCastSpell = 0x4B,
			ModTemperingHealth = 0x4C,
			ModEnchantmentPower = 0x4D,
			ModSoulPctCapturedToWeapon = 0x4E,
			ModSoulGemEnchanting = 0x4F,
			ModNumberAppliedEnchantmentsAllowed = 0x50,
			SetActivateLabel = 0x51,
			ModShoutOK = 0x52,
			ModPoisonDoseCount = 0x53,
			ShouldApplyPlacedItem = 0x54,
			ModArmorRating = 0x55,
			ModLockpickingCrimeChance = 0x56,
			ModIngredientsHarvested = 0x57,
			ModSpellRange_TargetLoc = 0x58,
			ModPotionsCreated = 0x59,
			ModLockpickingKeyRewardChance = 0x5A,
			AllowMountActor = 0x5B,
		};

		public enum class RaceFlags : System::UInt32
		{
			Playable = 1,
			FaceGenHead = 2,
			Child = 4,
			TiltFrontBack = 8,
			TiltLeftRight = 0x10,
			NoShadow = 0x20,
			Swims = 0x40,
			Flies = 0x80,
			Walks = 0x100,
			Immobile = 0x200,
			NotPushable = 0x400,
			NoCombatInWater = 0x800,
			NoRotatingToHeadTrack = 0x1000,
			UseHeadTrackAnim = 0x8000,
			SpellsAlignWithMagicNode = 0x10000,
			UseWorldRaycasts = 0x20000,
			AllowRagdollCollision = 0x40000,
			CantOpenDoors = 0x100000,
			AllowPCDialogue = 0x200000,
			NoKnockdowns = 0x400000,
			AllowPickpocket = 0x800000,
			AlwaysUseProxyController = 0x1000000,
			OverlayHeadParts = 0x4000000,
			OverrideHeadParts = 0x8000000,
			AllowMultipleMembraneShaders = 0x20000000,
			CanDualWield = 0x40000000,
			AvoidsRoads = 0x80000000,
		};

		public enum class ActorFlyStates : System::Int32
		{
			None = 0,
			TakeOff = 1,
			Cruising = 2,
			Hovering = 3,
			Landing = 4,
			Perching = 5,
			Action = 6,
		};

		public enum class ActorSitSleepStates : System::Int32
		{
			Normal = 0,
			WantToSit = 1,
			WaitingForSitAnim = 2,
			IsSittingOrMounted = 3,
			WantToStand = 4,
			WantToSleep = 5,
			WaitingForSleepAnim = 6,
			IsSleeping = 7,
			WantToWake = 8,
		};

		public enum class BGSDefaultObjectsEnum : System::Int32
		{
			WerewolfSpell = 0,
			SittingAngleLimit = 1,
			AllowPlayerShout = 2,
			Gold = 3,
			Lockpick = 4,
			SkeletonKey = 5,
			PlayerFaction = 6,
			GuardFaction = 7,
			DefaultMusic = 8,
			BattleMusic = 9,
			DeathMusic = 0xA,
			SuccessMusic = 0xB,
			LevelUpMusic = 0xC,
			DungeonClearedMusic = 0xD,
			PlayerVoiceMale = 0xE,
			PlayerVoiceMaleChild = 0xF,
			PlayerVoiceFemale = 0x10,
			PlayerVoiceFemaleChild = 0x11,
			EatPackageDefaultFood = 0x12,
			LeftHandEquip = 0x13,
			RightHandEquip = 0x14,
			EitherHandEquip = 0x15,
			VoiceEquip = 0x16,
			PotionEquip = 0x17,
			EveryActorAbility = 0x18,
			CommandedActorAbility = 0x19,
			DrugWearsOffImageSpace = 0x1A,
			FootstepSet = 0x1B,
			LandscapeMaterial = 0x1C,
			DragonLandZoneMarker = 0x1D,
			DragonCrashZoneMarker = 0x1E,
			CombatStyle = 0x1F,
			DefaultPackList = 0x20,
			WaitForDialoguePackage = 0x21,
			LocRefTypeBoss = 0x22,
			VirtualLocation = 0x23,
			PersistAllLocation = 0x24,
			InventoryPlayer = 0x25,
			PathingTestNPC = 0x26,
			FavorCostSmall = 0x27,
			FavorCostMedium = 0x28,
			FavorCostLarge = 0x29,
			FavorGiftsPerDay = 0x2A,
			ActionSwimStateChange = 0x2B,
			ActionLook = 0x2C,
			ActionLeftAttack = 0x2D,
			ActionLeftReady = 0x2E,
			ActionLeftRelease = 0x2F,
			ActionLeftInterrupt = 0x30,
			ActionRightAttack = 0x31,
			ActionRightReady = 0x32,
			ActionRightRelease = 0x33,
			ActionRightInterrupt = 0x34,
			ActionDualAttack = 0x35,
			ActionDualRelease = 0x36,
			ActionActivate = 0x37,
			ActionJump = 0x38,
			ActionFall = 0x39,
			ActionLand = 0x3A,
			ActionSneak = 0x3B,
			ActionVoice = 0x3C,
			ActionVoiceReady = 0x3D,
			ActionVoiceRelease = 0x3E,
			ActionVoiceInterrupt = 0x3F,
			ActionIdle = 0x40,
			ActionSprintStart = 0x41,
			ActionSprintStop = 0x42,
			ActionDraw = 0x43,
			ActionSheath = 0x44,
			ActionLeftPowerAttack = 0x45,
			ActionRightPowerAttack = 0x46,
			ActionDualPowerAttack = 0x47,
			ActionStaggerStart = 0x48,
			ActionBlockHit = 0x49,
			ActionBlockAnticipate = 0x4A,
			ActionRecoil = 0x4B,
			ActionLargeRecoil = 0x4C,
			ActionBleedoutStart = 0x4D,
			ActionBleedoutStop = 0x4E,
			ActionIdleStop = 0x4F,
			ActionWardHit = 0x50,
			ActionForceEquip = 0x51,
			ActionShieldChange = 0x52,
			ActionPathStart = 0x53,
			ActionPathEnd = 0x54,
			ActionLargeMovementDelta = 0x55,
			ActionFlyStart = 0x56,
			ActionFlyStop = 0x57,
			ActionHoverStart = 0x58,
			ActionHoverStop = 0x59,
			ActionBumpedInto = 0x5A,
			ActionSummonedStart = 0x5B,
			ActionTalkingIdle = 0x5C,
			ActionListenIdle = 0x5D,
			ActionDeath = 0x5E,
			ActionDeathWait = 0x5F,
			ActionIdleWarn = 0x60,
			ActionMoveStart = 0x61,
			ActionMoveStop = 0x62,
			ActionTurnRight = 0x63,
			ActionTurnLeft = 0x64,
			ActionTurnStop = 0x65,
			ActionMoveForward = 0x66,
			ActionMoveBackward = 0x67,
			ActionMoveLeft = 0x68,
			ActionMoveRight = 0x69,
			ActionResetAnimationGraph = 0x6A,
			ActionKnockdown = 0x6B,
			ActionGetUp = 0x6C,
			ActionIdleStopInstant = 0x6D,
			ActionRagdollInstant = 0x6E,
			ActionWaterwalkStart = 0x6F,
			ActionReload = 0x70,
			PickupSoundGeneric = 0x71,
			PutdownSoundGeneric = 0x72,
			PickupSoundWeapon = 0x73,
			PutdownSoundWeapon = 0x74,
			PickupSoundArmor = 0x75,
			PutdownSoundArmor = 0x76,
			PickupSoundBook = 0x77,
			PutdownSoundBook = 0x78,
			PickupSoundIngredient = 0x79,
			PutdownSoundIngredient = 0x7A,
			HarvestSound = 0x7B,
			HarvestFailedSound = 0x7C,
			WardBreakSound = 0x7D,
			WardAbsorbSound = 0x7E,
			WardDeflectSound = 0x7F,
			MagicFailSound = 0x80,
			ShoutFailSound = 0x81,
			HeartbeatSoundFast = 0x82,
			HeartbeatSoundSlow = 0x83,
			ImagespaceLowHealth = 0x84,
			SoulCapturedSound = 0x85,
			NoActivationSound = 0x86,
			MapMenuLoopingSound = 0x87,
			DialogueVoiceCategory = 0x88,
			NonDialogueVoiceCategory = 0x89,
			SFXToFadeInDialogueCategory = 0x8A,
			PauseDuringMenuCategoryFade = 0x8B,
			PauseDuringMenuCategoryImmediate = 0x8C,
			PauseDuringLoadingMenuCategory = 0x8D,
			MusicSoundCategory = 0x8E,
			StatsMuteCategory = 0x8F,
			StatsMusic = 0x90,
			MasterSoundCategory = 0x91,
			TimeSensitiveSoundCategory = 0x92,
			DialogueOutputModel3D = 0x93,
			DialogueOutputModel2D = 0x94,
			PlayersOutputModel1stPerson = 0x95,
			PlayersOutputModel3rdPerson = 0x96,
			InterfaceOutputModel = 0x97,
			ReverbType = 0x98,
			UnderwaterLoopSound = 0x99,
			UnderwaterReverbType = 0x9A,
			KeywordHorse = 0x9B,
			KeywordUndead = 0x9C,
			KeywordNPC = 0x9D,
			KeywordBeastRace = 0x9E,
			KeywordDummyObject = 0x9F,
			KeywordUseGeometryEmitter = 0xA0,
			KeywordMustStop = 0xA1,
			KeywordUpdateDuringArchery = 0xA2,
			KeywordSkipOutfitItems = 0xA3,
			MaleFaceTextureSetHead = 0xA4,
			MaleFaceTextureSetMouth = 0xA5,
			MaleFaceTextureSetEyes = 0xA6,
			FemaleFaceTextureSetHead = 0xA7,
			FemaleFaceTextureSetMouth = 0xA8,
			FemaleFaceTextureSetEyes = 0xA9,
			ImageSpaceModifierforinventorymenu = 0xAA,
			Packagetemplate = 0xAB,
			MainMenuCell = 0xAC,
			DefaultMovementTypeWalk = 0xAD,
			DefaultMovementTypeRun = 0xAE,
			DefaultMovementTypeSwim = 0xAF,
			DefaultMovementTypeFly = 0xB0,
			DefaultMovementTypeSneak = 0xB1,
			DefaultMovementTypeSprint = 0xB2,
			KeywordSpecialFurniture = 0xB3,
			KeywordFurnitureForces1stPerson = 0xB4,
			KeywordFurnitureForces3rdPerson = 0xB5,
			KeywordActivatorFurnitureNoPlayer = 0xB6,
			TelekinesisGrabSound = 0xB7,
			TelekinesisThrowSound = 0xB8,
			WorldMapWeather = 0xB9,
			HelpManualPC = 0xBA,
			HelpManualXBox = 0xBB,
			KeywordTypeAmmo = 0xBC,
			KeywordTypeArmor = 0xBD,
			KeywordTypeBook = 0xBE,
			KeywordTypeIngredient = 0xBF,
			KeywordTypeKey = 0xC0,
			KeywordTypeMisc = 0xC1,
			KeywordTypeSoulGem = 0xC2,
			KeywordTypeWeapon = 0xC3,
			KeywordTypePotion = 0xC4,
			BaseWeaponEnchantment = 0xC5,
			BaseArmorEnchantment = 0xC6,
			BasePotion = 0xC7,
			BasePoison = 0xC8,
			KeywordDragon = 0xC9,
			KeywordMovable = 0xCA,
			ArtObjectAbsorbEffect = 0xCB,
			WeaponMaterialList = 0xCC,
			ArmorMaterialList = 0xCD,
			KeywordDisallowEnchanting = 0xCE,
			Favortravelmarkerlocation = 0xCF,
			KeywordHoldLocation = 0xD0,
			KeywordCivilWarOwner = 0xD1,
			KeywordCivilWarNeutral = 0xD2,
			LocRefTypeCivilWarSoldier = 0xD3,
			KeywordClearableLocation = 0xD4,
			LocRefTypeResourceDestructible = 0xD5,
			FormListHairColorList = 0xD6,
			ComplexSceneObject = 0xD7,
			KeywordReusableSoulGem = 0xD8,
			KeywordAnimal = 0xD9,
			KeywordDaedra = 0xDA,
			KeywordRobot = 0xDB,
			KeywordNirnroot = 0xDC,
			FightersGuildFaction = 0xDD,
			MagesGuildFaction = 0xDE,
			ThievesGuildFaction = 0xDF,
			DarkBrotherhoodFaction = 0xE0,
			JarlFaction = 0xE1,
			BunnyFaction = 0xE2,
			PlayerIsVampireVariable = 0xE3,
			PlayerIsWerewolfVariable = 0xE4,
			RoadMarker = 0xE5,
			KeywordScaleActorTo10 = 0xE6,
			KeywordVampire = 0xE7,
			KeywordForge = 0xE8,
			KeywordCookingPot = 0xE9,
			KeywordSmelter = 0xEA,
			KeywordTanningRack = 0xEB,
			HelpBasicLockpickingPC = 0xEC,
			HelpBasicLockpickingConsole = 0xED,
			HelpBasicForging = 0xEE,
			HelpBasicCooking = 0xEF,
			HelpBasicSmelting = 0xF0,
			HelpBasicTanning = 0xF1,
			HelpBasicObjectCreation = 0xF2,
			HelpBasicEnchanting = 0xF3,
			HelpBasicSmithingWeapon = 0xF4,
			HelpBasicSmithingArmor = 0xF5,
			HelpBasicAlchemy = 0xF6,
			HelpBarter = 0xF7,
			HelpLevelingup = 0xF8,
			HelpSkillsMenu = 0xF9,
			HelpMapMenu = 0xFA,
			HelpJournal = 0xFB,
			HelpLowHealth = 0xFC,
			HelpLowMagicka = 0xFD,
			HelpLowStamina = 0xFE,
			HelpJail = 0xFF,
			HelpTeamateFavor = 0x100,
			HelpWeaponCharge = 0x101,
			HelpFavorites = 0x102,
			KinectHelpFormList = 0x103,
			HelpFlyingMount = 0x104,
			HelpTargetLock = 0x105,
			HelpAttackTarget = 0x106,
			ImagespaceLoadscreen = 0x107,
			KeywordWeaponMaterialDaedric = 0x108,
			KeywordWeaponMaterialDraugr = 0x109,
			KeywordWeaponMaterialDraugrHoned = 0x10A,
			KeywordWeaponMaterialDwarven = 0x10B,
			KeywordWeaponMaterialEbony = 0x10C,
			KeywordWeaponMaterialElven = 0x10D,
			KeywordWeaponMaterialFalmer = 0x10E,
			KeywordWeaponMaterialFalmerHoned = 0x10F,
			KeywordWeaponMaterialGlass = 0x110,
			KeywordWeaponMaterialImperial = 0x111,
			KeywordWeaponMaterialIron = 0x112,
			KeywordWeaponMaterialOrcish = 0x113,
			KeywordWeaponMaterialSteel = 0x114,
			KeywordWeaponMaterialWood = 0x115,
			KeywordWeaponTypeBoundArrow = 0x116,
			KeywordArmorMaterialDaedric = 0x117,
			KeywordArmorMaterialDragonplate = 0x118,
			KeywordArmorMaterialDragonscale = 0x119,
			KeywordArmorMaterialDragonbone = 0x11A,
			KeywordArmorMaterialDwarven = 0x11B,
			KeywordArmorMaterialEbony = 0x11C,
			KeywordArmorMaterialElven = 0x11D,
			KeywordArmorMaterialElvenSplinted = 0x11E,
			KeywordArmorMaterialFullLeather = 0x11F,
			KeywordArmorMaterialGlass = 0x120,
			KeywordArmorMaterialHide = 0x121,
			KeywordArmorMaterialImperial = 0x122,
			KeywordArmorMaterialImperialHeavy = 0x123,
			KeywordArmorMaterialImperialReinforced = 0x124,
			KeywordArmorMaterialIron = 0x125,
			KeywordArmorMaterialIronBanded = 0x126,
			KeywordArmorMaterialOrcish = 0x127,
			KeywordArmorMaterialScaled = 0x128,
			KeywordArmorMaterialSteel = 0x129,
			KeywordArmorMaterialSteelPlate = 0x12A,
			KeywordArmorMaterialStormcloak = 0x12B,
			KeywordArmorMaterialStudded = 0x12C,
			KeywordGenericCraftableKeyword01 = 0x12D,
			KeywordGenericCraftableKeyword02 = 0x12E,
			KeywordGenericCraftableKeyword03 = 0x12F,
			KeywordGenericCraftableKeyword04 = 0x130,
			KeywordGenericCraftableKeyword05 = 0x131,
			KeywordGenericCraftableKeyword06 = 0x132,
			KeywordGenericCraftableKeyword07 = 0x133,
			KeywordGenericCraftableKeyword08 = 0x134,
			KeywordGenericCraftableKeyword09 = 0x135,
			KeywordGenericCraftableKeyword10 = 0x136,
			KeywordJewelry = 0x137,
			KeywordCuirass = 0x138,
			LocalMapHidePlane = 0x139,
			SnowLODMaterial = 0x13A,
			SnowLODMaterialHD = 0x13B,
			AshLODMaterial = 0x13C,
			AshLODMaterialHD = 0x13D,
			DialogueFollowerQuest = 0x13E,
			PotentialFollowerFaction = 0x13F,
			WerewolfAvailablePerks = 0x140,
			VampireAvailablePerks = 0x141,
			SurvivalModeToggle = 0x142,
			SurvivalModeEnabled = 0x143,
			SurvivalModeShowOption = 0x144,
			SurvivalTemperature = 0x145,
			SurvivalColdPenalty = 0x146,
			SurvivalHungerPenalty = 0x147,
			SurvivalSleepPenalty = 0x148,
			SurvivalKeywordCold = 0x149,
			SurvivalKeywordWarm = 0x14A,
			SurvivalKeywordArmorHands = 0x14B,
			SurvivalKeywordClothingHands = 0x14C,
			SurvivalKeywordArmorFeet = 0x14D,
			SurvivalKeywordClothingFeet = 0x14E,
			SurvivalKeywordArmorBody = 0x14F,
			SurvivalKeywordClothingBody = 0x150,
			SurvivalKeywordArmorHead = 0x151,
			SurvivalKeywordClothingHead = 0x152,
			WerewolfRace = 0x153,
			VampireRace = 0x154,
			VampireSpells = 0x155,
			DragonMountNoLandList = 0x156,
			PlayerCanMountDragonHereList = 0x157,
			FlyingMountAllowedSpells = 0x158,
			FlyingMountDisallowedSpells = 0x159,
			KeywordMount = 0x15A,
			VerletCape = 0x15B,
			FurnitureTestNPC = 0x15C,
			KeywordConditionalExplosion = 0x15D,
			VampireFeedNoCrimeFaction = 0x15E,
			SkyrimWorldspace = 0x15F,
			KeywordArmorMaterialLightBonemold = 0x160,
			KeywordArmorMaterialLightChitin = 0x161,
			KeywordArmorMaterialLightNordic = 0x162,
			KeywordArmorMaterialLightStalhrim = 0x163,
			FlyingMountFlyFastWorldspaces = 0x164,
			KeywordArmorMaterialHeavyBonemold = 0x165,
			KeywordArmorMaterialHeavyChitin = 0x166,
			KeywordArmorMaterialHeavyNordic = 0x167,
			KeywordArmorMaterialHeavyStalhrim = 0x168,
			KeywordWeaponMaterialNordic = 0x169,
			KeywordWeaponMaterialStalhrim = 0x16A,
			ModsHelpFormList = 0x16B,
		};

		public enum class TextureSetTypes : System::Int32
		{
			Diffuse = 0,
			NormalOrGloss = 1,
			EnvironmentMaskOrSubsurfaceTing = 2,
			GlowMapOrDetailMap = 3,
			Height = 4,
			Environment = 5,
			Multilayer = 6,
			BacklightMaskOrSpecular = 7,
		};

		public interface class BSAudioManager : public NetScriptFramework::IMemoryObject
		{
		public:
			/// <summary>
			/// Gets the audio manager instance.
			/// </summary>
			static property BSAudioManager^ Instance
			{
				BSAudioManager^ __clrcall get()
				{
					return NetScriptFramework::MemoryObject::FromAddress<BSAudioManager^>(NetScriptFramework::Memory::InvokeCdecl(__VIDS::VID66391.Value));
				}
			}
		};

		public interface class BSBitFieldHeapAllocator : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::IntPtr Data
			{
				System::IntPtr __clrcall get();
			}
		};

		public interface class GFxDrawTextManager : public NetScriptFramework::IMemoryObject { };

		public interface class GFxRenderConfig : public NetScriptFramework::IMemoryObject { };

		public enum class ScriptParameterTypes : System::Int32
		{
			Char = 0,
			Int = 1,
			Float = 2,
			InventoryObject = 3,
			ObjectRef = 4,
			ActorValue = 5,
			Actor = 6,
			SpellItem = 7,
			Axis = 8,
			Cell = 9,
			AnimGroup = 0xA,
			MagicItem = 0xB,
			Sound = 0xC,
			Topic = 0xD,
			Quest = 0xE,
			Race = 0xF,
			Class = 0x10,
			Faction = 0x11,
			Sex = 0x12,
			Global = 0x13,
			FurnitureOrFormList = 0x14,
			Object = 0x15,
			ScriptVar = 0x16,
			Stage = 0x17,
			MapMarker = 0x18,
			ActorBase = 0x19,
			CoontainerRef = 0x1A,
			WorldOrList = 0x1B,
			CrimeType = 0x1C,
			Package = 0x1D,
			CombatStyle = 0x1E,
			MagicEffect = 0x1F,
			FormType = 0x20,
			Weather = 0x21,
			NPC = 0x22,
			Owner = 0x23,
			ShaderEffect = 0x24,
			FormList = 0x25,
			MenuIcon = 0x26,
			Perk = 0x27,
			Note = 0x28,
			MiscStat = 0x29,
			ImagespaceMod = 0x2A,
			Imagespace = 0x2B,
			VATSValue = 0x2C,
			VATSValueData = 0x2D,
			EventFunction = 0x2E,
			EventFunctionMember = 0x2F,
			EventFunctionData = 0x30,
			VoiceType = 0x31,
			EncounterZone = 0x32,
			IdleForm = 0x33,
			Message = 0x34,
			InvObjectOrFormList = 0x35,
			Alignment = 0x36,
			EquipType = 0x37,
			ObjectOrFormList = 0x38,
			Music = 0x39,
			CritStage = 0x3A,
			Keyword = 0x3B,
			RefType = 0x3C,
			Location = 0x3D,
			Form = 0x3E,
			Alias = 0x3F,
			Shout = 0x40,
			WordOfPower = 0x41,
			RelationshipRank = 0x42,
			BGSScene = 0x43,
			CastingSource = 0x44,
			AssociationType = 0x45,
			WardState = 0x46,
			PackageDataCanBeNull = 0x47,
			PackageDataNumeric = 0x48,
			FurnitureAnimType = 0x49,
			FurnitureEntryType = 0x4A,
			VMScriptVar = 0x4C,
			ReferenceEffect = 0x4D,
			PackageData = 0x4E,
			SoundCategory = 0x50,
			KnowableForm = 0x51,
			Region = 0x52,
		};

		public interface class ScriptEffectData : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Boolean ScriptEffectStart
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean ScriptEffectFinish
			{
				System::Boolean __clrcall get();
			}

			property System::Single SecondsElapsed
			{
				System::Single __clrcall get();
			}
		};

		public interface class ScriptLine : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Int32 LineNumber
			{
				System::Int32 __clrcall get();
			}

			property System::IntPtr Line
			{
				System::IntPtr __clrcall get();
			}

			property System::Int32 Size
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 Offset
			{
				System::Int32 __clrcall get();
			}

			property System::IntPtr Output
			{
				System::IntPtr __clrcall get();
			}

			property System::Int32 OutputSize
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 Expression
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 RefObjectIndex
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 ScriptError
			{
				System::Int32 __clrcall get();
			}
		};

		public enum class CrimeTypes : System::Int32
		{
			None = -1,
			Steal = 0,
			Pickpocket = 1,
			Trespass = 2,
			Attack = 3,
			Murder = 4,
			Escape = 5,
			Unused = 6,
		};

		public enum class DetectionPriorities : System::Int32
		{
			None = 0,
			VeryLow = 1,
			Low = 2,
			Normal = 3,
			High = 4,
			Critical = 5,
		};

		public enum class UIMessageResults : System::Int32
		{
			Handled = 0,
			Ignore = 1,
			PassOn = 2,
		};

		public enum class SkillsEnum : System::Int32
		{
			OneHanded = 0,
			TwoHanded = 1,
			Archery = 2,
			Block = 3,
			Smithing = 4,
			HeavyArmor = 5,
			LightArmor = 6,
			Pickpocket = 7,
			Lockpicking = 8,
			Sneak = 9,
			Alchemy = 0xA,
			Speech = 0xB,
			Alteration = 0xC,
			Conjuration = 0xD,
			Destruction = 0xE,
			Illusion = 0xF,
			Restoration = 0x10,
			Enchanting = 0x11,
		};

		public enum class ActorAggroRadiusTypes : System::Int32
		{
			Warn = 0,
			WarnAndAttack = 1,
			Attack = 2,
		};

		generic <typename BSStaticArray_T1>
		public interface class BSStaticArray : public NetScriptFramework::IMemoryObject, public System::Collections::Generic::IEnumerable<BSStaticArray_T1>
		{
		public:
			property System::IntPtr Data
			{
				System::IntPtr __clrcall get();
			}

			property System::Int32 Length
			{
				System::Int32 __clrcall get();
			}

			/// <summary>
			/// Gets or sets the value at specified index.
			/// </summary>
			property BSStaticArray_T1 default[System::Int32]
			{
				BSStaticArray_T1 get(System::Int32 index);
				void set(System::Int32 index, BSStaticArray_T1 value);
			}
		};

		public enum class ItemRemoveReasons : System::Int32
		{
			Remove = 0,
			Steal = 1,
			Selling = 2,
			Dropping = 3,
			StoreInContainer = 4,
			StoreInTeammate = 5,
		};

		public enum class WeaponTypes : System::Int32
		{
			HandToHandMelee = 0,
			OneHandSword = 1,
			OneHandDagger = 2,
			OneHandAxe = 3,
			OneHandMace = 4,
			TwoHandSword = 5,
			TwoHandAxe = 6,
			Bow = 7,
			Staff = 8,
			Crossbow = 9,
		};

		public interface class int128 : public NetScriptFramework::IMemoryObject { };

		public interface class uint128 : public NetScriptFramework::IMemoryObject { };

		public interface class struct8 : public NetScriptFramework::IMemoryObject { };

		public interface class struct16 : public NetScriptFramework::IMemoryObject { };

		public interface class struct32 : public NetScriptFramework::IMemoryObject { };

		public interface class struct64 : public NetScriptFramework::IMemoryObject { };

		public interface class struct128 : public NetScriptFramework::IMemoryObject { };

		public interface class notype : public NetScriptFramework::IMemoryObject { };

		public interface class __crt_fast_encoded_nullptr_t : public NetScriptFramework::IMemoryObject { };

		public interface class __crt_locale_data : public NetScriptFramework::IMemoryObject { };

		public interface class __crt_locale_data_public : public NetScriptFramework::IMemoryObject { };

		public interface class __crt_multibyte_data : public NetScriptFramework::IMemoryObject { };

		public interface class __m64 : public NetScriptFramework::IMemoryObject { };

		public enum class __MIDL_ICodeInstall_0001 : System::Int32
		{
			CIP_DISK_FULL = 0,
			CIP_ACCESS_DENIED = 1,
			CIP_NEWER_VERSION_EXISTS = 2,
			CIP_OLDER_VERSION_EXISTS = 3,
			CIP_NAME_CONFLICT = 4,
			CIP_TRUST_VERIFICATION_COMPONENT_MISSING = 5,
			CIP_EXE_SELF_REGISTERATION_TIMEOUT = 6,
			CIP_UNSAFE_TO_ABORT = 7,
			CIP_NEED_REBOOT = 8,
			CIP_NEED_REBOOT_UI_PERMISSION = 9,
		};

		public enum class __MIDL_IGetBindHandle_0001 : System::Int32
		{
			BINDHANDLETYPES_APPCACHE = 0,
			BINDHANDLETYPES_DEPENDENCY = 1,
			BINDHANDLETYPES_COUNT = 2,
		};

		public enum class __MIDL_IUri_0001 : System::Int32
		{
			Uri_PROPERTY_ABSOLUTE_URI = 0,
			Uri_PROPERTY_STRING_START = 0,
			Uri_PROPERTY_AUTHORITY = 1,
			Uri_PROPERTY_DISPLAY_URI = 2,
			Uri_PROPERTY_DOMAIN = 3,
			Uri_PROPERTY_EXTENSION = 4,
			Uri_PROPERTY_FRAGMENT = 5,
			Uri_PROPERTY_HOST = 6,
			Uri_PROPERTY_PASSWORD = 7,
			Uri_PROPERTY_PATH = 8,
			Uri_PROPERTY_PATH_AND_QUERY = 9,
			Uri_PROPERTY_QUERY = 0xA,
			Uri_PROPERTY_RAW_URI = 0xB,
			Uri_PROPERTY_SCHEME_NAME = 0xC,
			Uri_PROPERTY_USER_INFO = 0xD,
			Uri_PROPERTY_USER_NAME = 0xE,
			Uri_PROPERTY_STRING_LAST = 0xE,
			Uri_PROPERTY_HOST_TYPE = 0xF,
			Uri_PROPERTY_DWORD_START = 0xF,
			Uri_PROPERTY_PORT = 0x10,
			Uri_PROPERTY_SCHEME = 0x11,
			Uri_PROPERTY_ZONE = 0x12,
			Uri_PROPERTY_DWORD_LAST = 0x12,
		};

		public enum class __MIDL_IUri_0002 : System::Int32
		{
			Uri_HOST_UNKNOWN = 0,
			Uri_HOST_DNS = 1,
			Uri_HOST_IPV4 = 2,
			Uri_HOST_IPV6 = 3,
			Uri_HOST_IDN = 4,
		};

		public interface class __scrt_main_policy : public NetScriptFramework::IMemoryObject { };

		public enum class __scrt_module_type : System::Int32
		{
			dll = 0,
			exe = 1,
		};

		public interface class __scrt_narrow_argv_policy : public NetScriptFramework::IMemoryObject { };

		public enum class __scrt_native_startup_state : System::Int32
		{
			uninitialized = 0,
			initializing = 1,
			initialized = 2,
		};

		public interface class __scrt_wide_argv_policy : public NetScriptFramework::IMemoryObject { };

		public interface class __scrt_winmain_policy : public NetScriptFramework::IMemoryObject { };

		public interface class __std_exception_data : public NetScriptFramework::IMemoryObject { };

		public interface class __std_type_info_data : public NetScriptFramework::IMemoryObject { };

		public interface class _SLIST_HEADER : public NetScriptFramework::IMemoryObject { };

		public interface class __vc_attributes : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class aggregatableAttribute : public NetScriptFramework::IMemoryObject
			{
			public:
				enum class type_e : System::Int32
				{
					never = 0,
					allowed = 1,
					always = 2,
				};
			};

			interface class event_receiverAttribute : public NetScriptFramework::IMemoryObject
			{
			public:
				enum class type_e : System::Int32
				{
					native = 0,
					com = 1,
					managed = 2,
				};
			};

			interface class event_sourceAttribute : public NetScriptFramework::IMemoryObject
			{
			public:
				enum class type_e : System::Int32
				{
					native = 0,
					com = 1,
					managed = 2,
				};

				enum class optimize_e : System::Int32
				{
					speed = 0,
					size = 1,
				};
			};

			interface class helper_attributes : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class usageAttribute : public NetScriptFramework::IMemoryObject
				{
				public:
					enum class usage_e : System::Int32
					{
						eAnyUsage = 0,
						eCoClassUsage = 1,
						eCOMInterfaceUsage = 2,
						eInterfaceUsage = 6,
						eMemberUsage = 8,
						eMethodUsage = 0x10,
						eInterfaceMethodUsage = 0x20,
						eInterfaceMemberUsage = 0x40,
						eCoClassMemberUsage = 0x80,
						eCoClassMethodUsage = 0x100,
						eGlobalMethodUsage = 0x300,
						eGlobalDataUsage = 0x400,
						eClassUsage = 0x800,
						eInterfaceParameterUsage = 0x1000,
						eMethodParameterUsage = 0x3000,
						eIDLModuleUsage = 0x4000,
						eAnonymousUsage = 0x8000,
						eTypedefUsage = 0x10000,
						eUnionUsage = 0x20000,
						eEnumUsage = 0x40000,
						eDefineTagUsage = 0x80000,
						eStructUsage = 0x100000,
						eLocalUsage = 0x200000,
						ePropertyUsage = 0x400000,
						eEventUsage = 0x800000,
						eTemplateUsage = 0x1000000,
						eModuleUsage = 0x1000000,
						eIllegalUsage = 0x2000000,
						eAsynchronousUsage = 0x4000000,
						eAnyIDLUsage = 0x3F7FFF,
					};
				};

				interface class v1_alttypeAttribute : public NetScriptFramework::IMemoryObject
				{
				public:
					enum class type_e : System::Int32
					{
						eBoolean = 0,
						eInteger = 1,
						eFloat = 2,
						eDouble = 3,
					};
				};
			};

			interface class moduleAttribute : public NetScriptFramework::IMemoryObject
			{
			public:
				enum class type_e : System::Int32
				{
					dll = 1,
					exe = 2,
					service = 3,
					unspecified = 4,
					EXE = 2,
					SERVICE = 3,
				};
			};

			interface class threadingAttribute : public NetScriptFramework::IMemoryObject
			{
			public:
				enum class threading_e : System::Int32
				{
					apartment = 1,
					single = 2,
					free = 3,
					neutral = 4,
					both = 5,
				};
			};
		};

		generic <typename __vcrt_va_list_is_reference_T1>
		public interface class __vcrt_va_list_is_reference : public NetScriptFramework::IMemoryObject { };

		public interface class _ACTIVATION_CONTEXT : public NetScriptFramework::IMemoryObject { };

		public interface class _Cnd_internal_imp_t : public NetScriptFramework::IMemoryObject { };

		public interface class _Collvec : public NetScriptFramework::IMemoryObject { };

		public interface class _M128A : public NetScriptFramework::IMemoryObject { };

		public enum class _crt_app_type : System::Int32
		{
			_crt_unknown_app = 0,
			_crt_console_app = 1,
			_crt_gui_app = 2,
		};

		public enum class _crt_argv_mode : System::Int32
		{
			_crt_argv_no_arguments = 0,
			_crt_argv_unexpanded_arguments = 1,
			_crt_argv_expanded_arguments = 2,
		};

		public interface class _Ctypevec : public NetScriptFramework::IMemoryObject { };

		public interface class _Cvtvec : public NetScriptFramework::IMemoryObject { };

		public interface class _EVENT_DATA_DESCRIPTOR : public NetScriptFramework::IMemoryObject { };

		public interface class _EVENT_DESCRIPTOR : public NetScriptFramework::IMemoryObject { };

		public interface class _exception : public NetScriptFramework::IMemoryObject { };

		public enum class _EXCEPTION_DISPOSITION : System::Int32
		{
			ExceptionContinueExecution = 0,
			ExceptionContinueSearch = 1,
			ExceptionNestedException = 2,
			ExceptionCollidedUnwind = 3,
		};

		public interface class _EXCEPTION_RECORD : public NetScriptFramework::IMemoryObject { };

		public interface class _EXCEPTION_REGISTRATION_RECORD : public NetScriptFramework::IMemoryObject { };

		public interface class _GUID : public NetScriptFramework::IMemoryObject { };

		public interface class _IMAGE_DATA_DIRECTORY : public NetScriptFramework::IMemoryObject { };

		public interface class _IMAGE_DOS_HEADER : public NetScriptFramework::IMemoryObject { };

		public interface class _IMAGE_FILE_HEADER : public NetScriptFramework::IMemoryObject { };

		public interface class _IMAGE_LOAD_CONFIG_DIRECTORY64 : public NetScriptFramework::IMemoryObject { };

		public interface class _IMAGE_RUNTIME_FUNCTION_ENTRY : public NetScriptFramework::IMemoryObject { };

		public interface class _IMAGE_SECTION_HEADER : public NetScriptFramework::IMemoryObject { };

		public interface class _LARGE_INTEGER : public NetScriptFramework::IMemoryObject { };

		public interface class _ldiv_t : public NetScriptFramework::IMemoryObject { };

		public interface class _lldiv_t : public NetScriptFramework::IMemoryObject { };

		public interface class _Mbstatet : public NetScriptFramework::IMemoryObject { };

		public interface class _Mtx_internal_imp_t : public NetScriptFramework::IMemoryObject { };

		public interface class _onexit_table_t : public NetScriptFramework::IMemoryObject { };

		public interface class _PMD : public NetScriptFramework::IMemoryObject { };

		public enum class _RTC_ErrorNumber : System::Int32
		{
			_RTC_CHKSTK = 0,
			_RTC_CVRT_LOSS_INFO = 1,
			_RTC_CORRUPT_STACK = 2,
			_RTC_UNINIT_LOCAL_USE = 3,
			_RTC_CORRUPTED_ALLOCA = 4,
			_RTC_ILLEGAL = 5,
		};

		public interface class _TypeDescriptor : public NetScriptFramework::IMemoryObject { };

		public interface class _s_ThrowInfo : public NetScriptFramework::IMemoryObject { };

		public interface class _STARTUPINFOW : public NetScriptFramework::IMemoryObject { };

		public interface class _stat64i32 : public NetScriptFramework::IMemoryObject { };

		public enum class _tagINTERNETFEATURELIST : System::Int32
		{
			FEATURE_OBJECT_CACHING = 0,
			FEATURE_ZONE_ELEVATION = 1,
			FEATURE_MIME_HANDLING = 2,
			FEATURE_MIME_SNIFFING = 3,
			FEATURE_WINDOW_RESTRICTIONS = 4,
			FEATURE_WEBOC_POPUPMANAGEMENT = 5,
			FEATURE_BEHAVIORS = 6,
			FEATURE_DISABLE_MK_PROTOCOL = 7,
			FEATURE_LOCALMACHINE_LOCKDOWN = 8,
			FEATURE_SECURITYBAND = 9,
			FEATURE_RESTRICT_ACTIVEXINSTALL = 0xA,
			FEATURE_VALIDATE_NAVIGATE_URL = 0xB,
			FEATURE_RESTRICT_FILEDOWNLOAD = 0xC,
			FEATURE_ADDON_MANAGEMENT = 0xD,
			FEATURE_PROTOCOL_LOCKDOWN = 0xE,
			FEATURE_HTTP_USERNAME_PASSWORD_DISABLE = 0xF,
			FEATURE_SAFE_BINDTOOBJECT = 0x10,
			FEATURE_UNC_SAVEDFILECHECK = 0x11,
			FEATURE_GET_URL_DOM_FILEPATH_UNENCODED = 0x12,
			FEATURE_TABBED_BROWSING = 0x13,
			FEATURE_SSLUX = 0x14,
			FEATURE_DISABLE_NAVIGATION_SOUNDS = 0x15,
			FEATURE_DISABLE_LEGACY_COMPRESSION = 0x16,
			FEATURE_FORCE_ADDR_AND_STATUS = 0x17,
			FEATURE_XMLHTTP = 0x18,
			FEATURE_DISABLE_TELNET_PROTOCOL = 0x19,
			FEATURE_FEEDS = 0x1A,
			FEATURE_BLOCK_INPUT_PROMPTS = 0x1B,
			FEATURE_ENTRY_COUNT = 0x1C,
		};

		public enum class _tagPARSEACTION : System::Int32
		{
			PARSE_CANONICALIZE = 1,
			PARSE_FRIENDLY = 2,
			PARSE_SECURITY_URL = 3,
			PARSE_ROOTDOCUMENT = 4,
			PARSE_DOCUMENT = 5,
			PARSE_ANCHOR = 6,
			PARSE_ENCODE_IS_UNESCAPE = 7,
			PARSE_DECODE_IS_ESCAPE = 8,
			PARSE_PATH_FROM_URL = 9,
			PARSE_URL_FROM_PATH = 0xA,
			PARSE_MIME = 0xB,
			PARSE_SERVER = 0xC,
			PARSE_SCHEMA = 0xD,
			PARSE_SITE = 0xE,
			PARSE_DOMAIN = 0xF,
			PARSE_LOCATION = 0x10,
			PARSE_SECURITY_DOMAIN = 0x11,
			PARSE_ESCAPE = 0x12,
			PARSE_UNESCAPE = 0x13,
		};

		public enum class _tagPSUACTION : System::Int32
		{
			PSU_DEFAULT = 1,
			PSU_SECURITY_URL_ONLY = 2,
		};

		public enum class _tagQUERYOPTION : System::Int32
		{
			QUERY_EXPIRATION_DATE = 1,
			QUERY_TIME_OF_LAST_CHANGE = 2,
			QUERY_CONTENT_ENCODING = 3,
			QUERY_CONTENT_TYPE = 4,
			QUERY_REFRESH = 5,
			QUERY_RECOMBINE = 6,
			QUERY_CAN_NAVIGATE = 7,
			QUERY_USES_NETWORK = 8,
			QUERY_IS_CACHED = 9,
			QUERY_IS_INSTALLEDENTRY = 0xA,
			QUERY_IS_CACHED_OR_MAPPED = 0xB,
			QUERY_USES_CACHE = 0xC,
			QUERY_IS_SECURE = 0xD,
			QUERY_IS_SAFE = 0xE,
			QUERY_USES_HISTORYFOLDER = 0xF,
			QUERY_IS_CACHED_AND_USABLE_OFFLINE = 0x10,
		};

		public interface class _TEB : public NetScriptFramework::IMemoryObject { };

		public interface class _Thrd_imp_t : public NetScriptFramework::IMemoryObject { };

		public interface class _timespec64 : public NetScriptFramework::IMemoryObject { };

		public interface class _TP_POOL : public NetScriptFramework::IMemoryObject { };

		public interface class _TP_CLEANUP_GROUP : public NetScriptFramework::IMemoryObject { };

		public enum class _TP_CALLBACK_PRIORITY : System::Int32
		{
			TP_CALLBACK_PRIORITY_HIGH = 0,
			TP_CALLBACK_PRIORITY_NORMAL = 1,
			TP_CALLBACK_PRIORITY_LOW = 2,
			TP_CALLBACK_PRIORITY_INVALID = 3,
			TP_CALLBACK_PRIORITY_COUNT = 3,
		};

		public interface class _TP_CALLBACK_INSTANCE : public NetScriptFramework::IMemoryObject { };

		public interface class _ULARGE_INTEGER : public NetScriptFramework::IMemoryObject { };

		public enum class _URLZONEREG : System::Int32
		{
			URLZONEREG_DEFAULT = 0,
			URLZONEREG_HKLM = 1,
			URLZONEREG_HKCU = 2,
		};

		public enum class _USER_ACTIVITY_PRESENCE : System::Int32
		{
			PowerUserPresent = 0,
			PowerUserNotPresent = 1,
			PowerUserInactive = 2,
			PowerUserMaximum = 3,
			PowerUserInvalid = 3,
		};

		public enum class DISPLAYCONFIG_SCANLINE_ORDERING : System::Int32
		{
			DISPLAYCONFIG_SCANLINE_ORDERING_UNSPECIFIED = 0,
			DISPLAYCONFIG_SCANLINE_ORDERING_PROGRESSIVE = 1,
			DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED = 2,
			DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_UPPERFIELDFIRST = 2,
			DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_LOWERFIELDFIRST = 3,
			DISPLAYCONFIG_SCANLINE_ORDERING_FORCE_UINT32 = -1,
		};

		public enum class ISA_AVAILABILITY : System::Int32
		{
			__ISA_AVAILABLE_X86 = 0,
			__ISA_AVAILABLE_SSE2 = 1,
			__ISA_AVAILABLE_SSE42 = 2,
			__ISA_AVAILABLE_AVX = 3,
			__ISA_AVAILABLE_ENFSTRG = 4,
			__ISA_AVAILABLE_AVX2 = 5,
			__ISA_AVAILABLE_ARMNT = 0,
			__ISA_AVAILABLE_NEON = 1,
		};

		public interface class lconv : public NetScriptFramework::IMemoryObject { };

		public enum class PIDMSI_STATUS_VALUE : System::Int32
		{
			PIDMSI_STATUS_NORMAL = 0,
			PIDMSI_STATUS_NEW = 1,
			PIDMSI_STATUS_PRELIM = 2,
			PIDMSI_STATUS_DRAFT = 3,
			PIDMSI_STATUS_INPROGRESS = 4,
			PIDMSI_STATUS_EDIT = 5,
			PIDMSI_STATUS_REVIEW = 6,
			PIDMSI_STATUS_PROOF = 7,
			PIDMSI_STATUS_FINAL = 8,
			PIDMSI_STATUS_OTHER = 0x7FFF,
		};

		public enum class ReplacesCorHdrNumericDefines : System::Int32
		{
			COMIMAGE_FLAGS_ILONLY = 1,
			COMIMAGE_FLAGS_32BITREQUIRED = 2,
			COMIMAGE_FLAGS_IL_LIBRARY = 4,
			COMIMAGE_FLAGS_STRONGNAMESIGNED = 8,
			COMIMAGE_FLAGS_NATIVE_ENTRYPOINT = 0x10,
			COMIMAGE_FLAGS_TRACKDEBUGDATA = 0x10000,
			COR_VERSION_MAJOR_V2 = 2,
			COR_VERSION_MAJOR = 2,
			COR_VERSION_MINOR = 5,
			COR_DELETED_NAME_LENGTH = 8,
			COR_VTABLEGAP_NAME_LENGTH = 8,
			NATIVE_TYPE_MAX_CB = 1,
			COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE = 0xFF,
			IMAGE_COR_MIH_METHODRVA = 1,
			IMAGE_COR_MIH_EHRVA = 2,
			IMAGE_COR_MIH_BASICBLOCK = 8,
			COR_VTABLE_32BIT = 1,
			COR_VTABLE_64BIT = 2,
			COR_VTABLE_FROM_UNMANAGED = 4,
			COR_VTABLE_FROM_UNMANAGED_RETAIN_APPDOMAIN = 8,
			COR_VTABLE_CALL_MOST_DERIVED = 0x10,
			IMAGE_COR_EATJ_THUNK_SIZE = 0x20,
			MAX_CLASS_NAME = 0x400,
			MAX_PACKAGE_NAME = 0x400,
		};

		public interface class stat : public NetScriptFramework::IMemoryObject { };

		public enum class tagApplicationType : System::Int32
		{
			ServerApplication = 0,
			LibraryApplication = 1,
		};

		public enum class tagAR_STATE : System::Int32
		{
			AR_ENABLED = 0,
			AR_DISABLED = 1,
			AR_SUPPRESSED = 2,
			AR_REMOTESESSION = 4,
			AR_MULTIMON = 8,
			AR_NOSENSOR = 0x10,
			AR_NOT_SUPPORTED = 0x20,
			AR_DOCKED = 0x40,
			AR_LAPTOP = 0x80,
		};

		public interface class tagTYPEDESC0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagSAFEARRAYBOUND0 : public NetScriptFramework::IMemoryObject { };

		public enum class tagBINDSTATUS : System::Int32
		{
			BINDSTATUS_FINDINGRESOURCE = 1,
			BINDSTATUS_CONNECTING = 2,
			BINDSTATUS_REDIRECTING = 3,
			BINDSTATUS_BEGINDOWNLOADDATA = 4,
			BINDSTATUS_DOWNLOADINGDATA = 5,
			BINDSTATUS_ENDDOWNLOADDATA = 6,
			BINDSTATUS_BEGINDOWNLOADCOMPONENTS = 7,
			BINDSTATUS_INSTALLINGCOMPONENTS = 8,
			BINDSTATUS_ENDDOWNLOADCOMPONENTS = 9,
			BINDSTATUS_USINGCACHEDCOPY = 0xA,
			BINDSTATUS_SENDINGREQUEST = 0xB,
			BINDSTATUS_CLASSIDAVAILABLE = 0xC,
			BINDSTATUS_MIMETYPEAVAILABLE = 0xD,
			BINDSTATUS_CACHEFILENAMEAVAILABLE = 0xE,
			BINDSTATUS_BEGINSYNCOPERATION = 0xF,
			BINDSTATUS_ENDSYNCOPERATION = 0x10,
			BINDSTATUS_BEGINUPLOADDATA = 0x11,
			BINDSTATUS_UPLOADINGDATA = 0x12,
			BINDSTATUS_ENDUPLOADDATA = 0x13,
			BINDSTATUS_PROTOCOLCLASSID = 0x14,
			BINDSTATUS_ENCODING = 0x15,
			BINDSTATUS_VERIFIEDMIMETYPEAVAILABLE = 0x16,
			BINDSTATUS_CLASSINSTALLLOCATION = 0x17,
			BINDSTATUS_DECODING = 0x18,
			BINDSTATUS_LOADINGMIMEHANDLER = 0x19,
			BINDSTATUS_CONTENTDISPOSITIONATTACH = 0x1A,
			BINDSTATUS_FILTERREPORTMIMETYPE = 0x1B,
			BINDSTATUS_CLSIDCANINSTANTIATE = 0x1C,
			BINDSTATUS_IUNKNOWNAVAILABLE = 0x1D,
			BINDSTATUS_DIRECTBIND = 0x1E,
			BINDSTATUS_RAWMIMETYPE = 0x1F,
			BINDSTATUS_PROXYDETECTING = 0x20,
			BINDSTATUS_ACCEPTRANGES = 0x21,
			BINDSTATUS_COOKIE_SENT = 0x22,
			BINDSTATUS_COMPACT_POLICY_RECEIVED = 0x23,
			BINDSTATUS_COOKIE_SUPPRESSED = 0x24,
			BINDSTATUS_COOKIE_STATE_UNKNOWN = 0x25,
			BINDSTATUS_COOKIE_STATE_ACCEPT = 0x26,
			BINDSTATUS_COOKIE_STATE_REJECT = 0x27,
			BINDSTATUS_COOKIE_STATE_PROMPT = 0x28,
			BINDSTATUS_COOKIE_STATE_LEASH = 0x29,
			BINDSTATUS_COOKIE_STATE_DOWNGRADE = 0x2A,
			BINDSTATUS_POLICY_HREF = 0x2B,
			BINDSTATUS_P3P_HEADER = 0x2C,
			BINDSTATUS_SESSION_COOKIE_RECEIVED = 0x2D,
			BINDSTATUS_PERSISTENT_COOKIE_RECEIVED = 0x2E,
			BINDSTATUS_SESSION_COOKIES_ALLOWED = 0x2F,
			BINDSTATUS_CACHECONTROL = 0x30,
			BINDSTATUS_CONTENTDISPOSITIONFILENAME = 0x31,
			BINDSTATUS_MIMETEXTPLAINMISMATCH = 0x32,
			BINDSTATUS_PUBLISHERAVAILABLE = 0x33,
			BINDSTATUS_DISPLAYNAMEAVAILABLE = 0x34,
			BINDSTATUS_SSLUX_NAVBLOCKED = 0x35,
			BINDSTATUS_SERVER_MIMETYPEAVAILABLE = 0x36,
			BINDSTATUS_SNIFFED_CLASSIDAVAILABLE = 0x37,
			BINDSTATUS_64BIT_PROGRESS = 0x38,
			BINDSTATUS_LAST = 0x38,
			BINDSTATUS_RESERVED_0 = 0x39,
			BINDSTATUS_RESERVED_1 = 0x3A,
			BINDSTATUS_RESERVED_2 = 0x3B,
			BINDSTATUS_RESERVED_3 = 0x3C,
			BINDSTATUS_RESERVED_4 = 0x3D,
			BINDSTATUS_RESERVED_5 = 0x3E,
			BINDSTATUS_RESERVED_6 = 0x3F,
			BINDSTATUS_RESERVED_7 = 0x40,
			BINDSTATUS_RESERVED_8 = 0x41,
			BINDSTATUS_RESERVED_9 = 0x42,
			BINDSTATUS_RESERVED_A = 0x43,
			BINDSTATUS_RESERVED_B = 0x44,
			BINDSTATUS_RESERVED_C = 0x45,
			BINDSTATUS_RESERVED_D = 0x46,
			BINDSTATUS_RESERVED_E = 0x47,
			BINDSTATUS_LAST_PRIVATE = 0x47,
		};

		public enum class tagBINDSTRING : System::Int32
		{
			BINDSTRING_HEADERS = 1,
			BINDSTRING_ACCEPT_MIMES = 2,
			BINDSTRING_EXTRA_URL = 3,
			BINDSTRING_LANGUAGE = 4,
			BINDSTRING_USERNAME = 5,
			BINDSTRING_PASSWORD = 6,
			BINDSTRING_UA_PIXELS = 7,
			BINDSTRING_UA_COLOR = 8,
			BINDSTRING_OS = 9,
			BINDSTRING_USER_AGENT = 0xA,
			BINDSTRING_ACCEPT_ENCODINGS = 0xB,
			BINDSTRING_POST_COOKIE = 0xC,
			BINDSTRING_POST_DATA_MIME = 0xD,
			BINDSTRING_URL = 0xE,
			BINDSTRING_IID = 0xF,
			BINDSTRING_FLAG_BIND_TO_OBJECT = 0x10,
			BINDSTRING_PTR_BIND_CONTEXT = 0x11,
			BINDSTRING_XDR_ORIGIN = 0x12,
			BINDSTRING_DOWNLOADPATH = 0x13,
			BINDSTRING_ROOTDOC_URL = 0x14,
			BINDSTRING_INITIAL_FILENAME = 0x15,
			BINDSTRING_PROXY_USERNAME = 0x16,
			BINDSTRING_PROXY_PASSWORD = 0x17,
		};

		public interface class tagBLOB0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagBSTRBLOB0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagCABOOL0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagCABSTR0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagCAC0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagCLIPDATA0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagCY : public NetScriptFramework::IMemoryObject { };

		public interface class tagCADATE0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagCADBL0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagCAFLT0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagCAI0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagCAL0 : public NetScriptFramework::IMemoryObject { };

		public enum class tagCALLCONV : System::Int32
		{
			CC_FASTCALL = 0,
			CC_CDECL = 1,
			CC_MSCPASCAL = 2,
			CC_PASCAL = 2,
			CC_MACPASCAL = 3,
			CC_STDCALL = 4,
			CC_FPFASTCALL = 5,
			CC_SYSCALL = 6,
			CC_MPWCDECL = 7,
			CC_MPWPASCAL = 8,
			CC_MAX = 9,
		};

		public interface class tagCALPSTR0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagCALPWSTR0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagCASCODE0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagCAUB0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagCAUI0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagCAUL0 : public NetScriptFramework::IMemoryObject { };

		public enum class tagCHANGEKIND : System::Int32
		{
			CHANGEKIND_ADDMEMBER = 0,
			CHANGEKIND_DELETEMEMBER = 1,
			CHANGEKIND_SETNAMES = 2,
			CHANGEKIND_SETDOCUMENTATION = 3,
			CHANGEKIND_GENERAL = 4,
			CHANGEKIND_INVALIDATE = 5,
			CHANGEKIND_CHANGEFAILED = 6,
			CHANGEKIND_MAX = 7,
		};

		public enum class tagCOINITBASE : System::Int32
		{
			COINITBASE_MULTITHREADED = 0,
		};

		public interface class tagDEC0 : public NetScriptFramework::IMemoryObject { };

		public enum class tagDESCKIND : System::Int32
		{
			DESCKIND_NONE = 0,
			DESCKIND_FUNCDESC = 1,
			DESCKIND_VARDESC = 2,
			DESCKIND_TYPECOMP = 3,
			DESCKIND_IMPLICITAPPOBJ = 4,
			DESCKIND_MAX = 5,
		};

		public enum class tagDOMNodeType : System::Int32
		{
			NODE_INVALID = 0,
			NODE_ELEMENT = 1,
			NODE_ATTRIBUTE = 2,
			NODE_TEXT = 3,
			NODE_CDATA_SECTION = 4,
			NODE_ENTITY_REFERENCE = 5,
			NODE_ENTITY = 6,
			NODE_PROCESSING_INSTRUCTION = 7,
			NODE_COMMENT = 8,
			NODE_DOCUMENT = 9,
			NODE_DOCUMENT_TYPE = 0xA,
			NODE_DOCUMENT_FRAGMENT = 0xB,
			NODE_NOTATION = 0xC,
		};

		public interface class tagEXCEPINFO0 : public NetScriptFramework::IMemoryObject { };

		public enum class tagFUNCKIND : System::Int32
		{
			FUNC_VIRTUAL = 0,
			FUNC_PUREVIRTUAL = 1,
			FUNC_NONVIRTUAL = 2,
			FUNC_STATIC = 3,
			FUNC_DISPATCH = 4,
		};

		public enum class tagINVOKEKIND : System::Int32
		{
			INVOKE_FUNC = 1,
			INVOKE_PROPERTYGET = 2,
			INVOKE_PROPERTYPUT = 4,
			INVOKE_PROPERTYPUTREF = 8,
		};

		public enum class tagGLOBALOPT_EH_VALUES : System::Int32
		{
			COMGLB_EXCEPTION_HANDLE = 0,
			COMGLB_EXCEPTION_DONOT_HANDLE_FATAL = 1,
			COMGLB_EXCEPTION_DONOT_HANDLE = 1,
			COMGLB_EXCEPTION_DONOT_HANDLE_ANY = 2,
		};

		public interface class tagIDLDESC0 : public NetScriptFramework::IMemoryObject { };

		public enum class tagShutdownType : System::Int32
		{
			IdleShutdown = 0,
			ForcedShutdown = 1,
		};

		public enum class tagSYSKIND : System::Int32
		{
			SYS_WIN16 = 0,
			SYS_WIN32 = 1,
			SYS_MAC = 2,
			SYS_WIN64 = 3,
		};

		public enum class tagTYPEKIND : System::Int32
		{
			TKIND_ENUM = 0,
			TKIND_RECORD = 1,
			TKIND_MODULE = 2,
			TKIND_INTERFACE = 3,
			TKIND_DISPATCH = 4,
			TKIND_COCLASS = 5,
			TKIND_ALIAS = 6,
			TKIND_UNION = 7,
			TKIND_MAX = 8,
		};

		public enum class tagTYSPEC : System::Int32
		{
			TYSPEC_CLSID = 0,
			TYSPEC_FILEEXT = 1,
			TYSPEC_MIMETYPE = 2,
			TYSPEC_FILENAME = 3,
			TYSPEC_PROGID = 4,
			TYSPEC_PACKAGENAME = 5,
			TYSPEC_OBJECTID = 6,
		};

		public enum class tagURLZONE : System::Int32
		{
			URLZONE_INVALID = -1,
			URLZONE_PREDEFINED_MIN = 0,
			URLZONE_LOCAL_MACHINE = 0,
			URLZONE_INTRANET = 1,
			URLZONE_TRUSTED = 2,
			URLZONE_INTERNET = 3,
			URLZONE_UNTRUSTED = 4,
			URLZONE_PREDEFINED_MAX = 0x3E7,
			URLZONE_USER_MIN = 0x3E8,
			URLZONE_USER_MAX = 0x2710,
		};

		public enum class tagVARKIND : System::Int32
		{
			VAR_PERINSTANCE = 0,
			VAR_STATIC = 1,
			VAR_CONST = 2,
			VAR_DISPATCH = 3,
		};

		public enum class tagXMLEMEM_TYPE : System::Int32
		{
			XMLELEMTYPE_ELEMENT = 0,
			XMLELEMTYPE_TEXT = 1,
			XMLELEMTYPE_COMMENT = 2,
			XMLELEMTYPE_DOCUMENT = 3,
			XMLELEMTYPE_DTD = 4,
			XMLELEMTYPE_PI = 5,
			XMLELEMTYPE_OTHER = 6,
		};

		public interface class timespec : public NetScriptFramework::IMemoryObject { };

		public interface class tm : public NetScriptFramework::IMemoryObject { };

		public enum class VARENUM : System::Int32
		{
			VT_EMPTY = 0,
			VT_NULL = 1,
			VT_I2 = 2,
			VT_I4 = 3,
			VT_R4 = 4,
			VT_R8 = 5,
			VT_CY = 6,
			VT_DATE = 7,
			VT_BSTR = 8,
			VT_DISPATCH = 9,
			VT_ERROR = 0xA,
			VT_BOOL = 0xB,
			VT_VARIANT = 0xC,
			VT_UNKNOWN = 0xD,
			VT_DECIMAL = 0xE,
			VT_I1 = 0x10,
			VT_UI1 = 0x11,
			VT_UI2 = 0x12,
			VT_UI4 = 0x13,
			VT_I8 = 0x14,
			VT_UI8 = 0x15,
			VT_INT = 0x16,
			VT_UINT = 0x17,
			VT_VOID = 0x18,
			VT_HRESULT = 0x19,
			VT_PTR = 0x1A,
			VT_SAFEARRAY = 0x1B,
			VT_CARRAY = 0x1C,
			VT_USERDEFINED = 0x1D,
			VT_LPSTR = 0x1E,
			VT_LPWSTR = 0x1F,
			VT_RECORD = 0x24,
			VT_INT_PTR = 0x25,
			VT_UINT_PTR = 0x26,
			VT_FILETIME = 0x40,
			VT_BLOB = 0x41,
			VT_STREAM = 0x42,
			VT_STORAGE = 0x43,
			VT_STREAMED_OBJECT = 0x44,
			VT_STORED_OBJECT = 0x45,
			VT_BLOB_OBJECT = 0x46,
			VT_CF = 0x47,
			VT_CLSID = 0x48,
			VT_VERSIONED_STREAM = 0x49,
			VT_BSTR_BLOB = 0xFFF,
			VT_VECTOR = 0x1000,
			VT_ARRAY = 0x2000,
			VT_BYREF = 0x4000,
			VT_RESERVED = 0x8000,
			VT_ILLEGAL = 0xFFFF,
			VT_ILLEGALMASKED = 0xFFF,
			VT_TYPEMASK = 0xFFF,
		};

		public interface class xtime : public NetScriptFramework::IMemoryObject { };

		public interface class _LIST_ENTRY : public NetScriptFramework::IMemoryObject { };

		public interface class BSSoundHandle : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::UInt32 SoundID
			{
				System::UInt32 __clrcall get();
			}

			property System::Boolean AssumeSuccess
			{
				System::Boolean __clrcall get();
			}

			property BSSoundStates State
			{
				BSSoundStates __clrcall get();
			}
		};

		public interface class IMemoryStore : public IMemoryStoreBase, public NetScriptFramework::IVirtualObject { };

		generic <typename IHandlerFunctor_T1, typename IHandlerFunctor_T2>
		public interface class IHandlerFunctor : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

		public interface class HeldStateHandler : public PlayerInputHandler, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Boolean IsHeld
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class BSHandleRefObject : public NiRefObject, public NetScriptFramework::IVirtualObject { };

		/// <summary>
		/// Inventory data.
		/// </summary>
		public interface class ExtraContainerChanges : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data;

			interface class ItemEntry;

			/// <summary>
			/// Gets the container data.
			/// </summary>
			property ExtraContainerChanges::Data^ ContainerData
			{
				ExtraContainerChanges::Data^ __clrcall get();
			}
		};

		public interface class ExtraLock : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data;

			/// <summary>
			/// Gets the data of lock.
			/// </summary>
			property ExtraLock::Data^ LockData
			{
				ExtraLock::Data^ __clrcall get();
			}
		};

		public interface class ActorValueOwner : public NetScriptFramework::IVirtualObject
		{
		public:
			/// <summary>
			/// Damages the actor value.
			/// </summary>
			/// <param name="id">The actor value type.</param>
			/// <param name="amount">The amount to damage by.</param>
			void DamageActorValue(ActorValueIndices id, System::Single amount);

			/// <summary>
			/// Forces the actor value to specified amount.
			/// </summary>
			/// <param name="id">The actor value type to force.</param>
			/// <param name="amount">The amount to force to.</param>
			void ForceActorValue(ActorValueIndices id, System::Single amount);

			/// <summary>
			/// Gets the current actor value.
			/// </summary>
			/// <param name="id">The type of actor value to get.</param>
			System::Single GetActorValue(ActorValueIndices id);

			/// <summary>
			/// Gets the maximum actor value.
			/// </summary>
			/// <param name="id">The type of actor value to get.</param>
			System::Single GetActorValueMax(ActorValueIndices id);

			/// <summary>
			/// Gets the base actor value.
			/// </summary>
			/// <param name="id">The type of actor value to get.</param>
			System::Single GetBaseActorValue(ActorValueIndices id);

			/// <summary>
			/// Modifies the actor value permanently.
			/// </summary>
			/// <param name="id">The type of value to modify.</param>
			/// <param name="amount">The amount to modify by.</param>
			void ModActorValue(ActorValueIndices id, System::Single amount);

			/// <summary>
			/// Restores an actor value by amount.
			/// </summary>
			/// <param name="id">The actor value type.</param>
			/// <param name="amount">The amount to restore.</param>
			void RestoreActorValue(ActorValueIndices id, System::Single amount);

			/// <summary>
			/// Sets the actor value.
			/// </summary>
			/// <param name="id">The actor value type to set.</param>
			/// <param name="amount">The amount to set.</param>
			void SetActorValue(ActorValueIndices id, System::Single amount);
		};

		public interface class IMovementState : public IMovementInterface, public NetScriptFramework::IVirtualObject { };

		generic <typename BSTArray_T1, typename BSTArray_T2>
		public interface class BSTArray : /* BSTArray_T2 */ public BSTArrayBase, public NetScriptFramework::IMemoryObject, public System::Collections::Generic::IEnumerable<BSTArray_T1>
		{
		public:
			/// <summary>
			/// Gets the value at specified index.
			/// </summary>
			property BSTArray_T1 default[System::Int32]
			{
				BSTArray_T1 get(System::Int32 index);
			}
		};

		public interface class DetectionState : public NiRefObject, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Int32 DetectionCalculatedValue
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class DetectionListener : public NiRefObject, public NetScriptFramework::IVirtualObject { };

		public interface class BSLight : public NiRefObject, public NetScriptFramework::IVirtualObject { };

		generic <typename BSTSingletonSDM_T1, typename BSTSingletonSDM_T2>
		public interface class BSTSingletonSDM : public BSTSingletonSDMBase<BSTSDMTraits<BSTSingletonSDM_T1, BSTSingletonSDMOpStaticBuffer1<BSTSingletonSDM_T1>^>^>, public NetScriptFramework::IMemoryObject { };

		public interface class MovementMessage : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

		public interface class TESFullName : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			/// <summary>
			/// Gets the text of this name instance.
			/// </summary>
			property BSFixedString^ Text
			{
				BSFixedString^ __clrcall get();
			}
		};

		public interface class TESDescription : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::UInt32 FileOffset
			{
				System::UInt32 __clrcall get();
			}

			property BGSLocalizedStringDL^ DescriptionText
			{
				BGSLocalizedStringDL^ __clrcall get();
			}
		};

		public interface class TESTexture : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSFixedString^ TextureName
			{
				BSFixedString^ __clrcall get();
			}
		};

		public interface class IOTask : public BSTask, public NetScriptFramework::IVirtualObject { };

		public interface class hkReferencedObject : public hkBaseObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			enum class LockMode : System::Int32
			{
				LOCK_MODE_NONE = 0,
				LOCK_MODE_AUTO = 1,
				LOCK_MODE_MANUAL = 2,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkVector4 : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class PackageLocation : public IAIWorldLocationHandle, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class LocationTypes : System::SByte
			{
				None = -1,
				NearReference = 0,
				InCell = 1,
				NearPackageStartLocation = 2,
				NearEditorLocation = 3,
				ObjectID = 4,
				ObjectType = 5,
				NearLinkedReference = 6,
				AtPackagelocation = 7,
				Alias_Reference = 8,
				Alias_Location = 9,
				NearSelf = 0xC,
			};

			interface class Data;

			property PackageLocation::LocationTypes LocationType
			{
				PackageLocation::LocationTypes __clrcall get();
			}

			property System::UInt32 Rad
			{
				System::UInt32 __clrcall get();
			}

			property PackageLocation::Data^ LocationData
			{
				PackageLocation::Data^ __clrcall get();
			}
		};

		public interface class TESModel : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSFixedString^ ModelName
			{
				BSFixedString^ __clrcall get();
			}

			property BSResource::ID^ Textures
			{
				BSResource::ID^ __clrcall get();
			}

			property System::IntPtr Addons
			{
				System::IntPtr __clrcall get();
			}

			property System::UInt16 NumTextures
			{
				System::UInt16 __clrcall get();
			}

			property System::UInt16 NumAddons
			{
				System::UInt16 __clrcall get();
			}
		};

		public interface class TESWeightForm : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			/// <summary>
			/// Gets or sets the weight value.
			/// </summary>
			property System::Single WeightValue
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}
		};

		public interface class BGSDestructibleObjectForm : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DestructibleObjectDataFlags : System::Byte
			{
				None = 0,
				VatsTargetable = 1,
			};

			enum class DestructibleObjectStageFlags : System::Byte
			{
				None = 0,
				CapDamage = 1,
				DisableObject = 2,
				DestroyObject = 4,
				IgnoreExternalDamage = 8,
				BecomesDynamic = 0x10,
			};

			interface class DestructibleObjectData;

			interface class DestructibleObjectStage;

			property BGSDestructibleObjectForm::DestructibleObjectData^ Data
			{
				BGSDestructibleObjectForm::DestructibleObjectData^ __clrcall get();
			}
		};

		public interface class AnimationStreamLoadGame : public IAnimationStreamRead, public NetScriptFramework::IVirtualObject { };

		public interface class AnimationStreamSaveGame : public IAnimationStreamWrite, public NetScriptFramework::IVirtualObject { };

		public interface class IMessageBoxCallback : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::ActiveMagicEffectEventArguments : public BSScript::IFunctionArguments, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::ActorEquipArguments : public BSScript::IFunctionArguments, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::ActorLocationChangeArguments : public BSScript::IFunctionArguments, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::ActorValueFormFactory : public IFormFactory, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::AddExtraMissingRefIDFunctor : public TESObjectREFRDef::ILinkedReferenceFunctor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::AddPackagesToListFunc : public PackageList::IPackageVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::AliasAddPackagesToListFunc : public TESObjectREFRDef::IAliasFunctor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::AnimationEventArguments : public BSScript::IFunctionArguments, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::anonymous_namespace_::MobDialogueFlagResetter : public MobIterOperator, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::ApparelUnequipper : public InventoryChanges::IItemChangeVisitor, public NetScriptFramework::IVirtualObject { };

		public interface class IFadeDoneCallback : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

		public interface class CombatObject : public NiRefObject, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::bhkLifoAllocator : public hkMemoryAllocator, public NetScriptFramework::IVirtualObject { };

		public interface class NiObject : public NiRefObject, public NetScriptFramework::IVirtualObject
		{
		public:
			/// <summary>
			/// Create and return a clone of this object.
			/// </summary>
			NiObject^ Clone();

			/// <summary>
			/// Loads a NiObject from NIF file.
			/// </summary>
			/// <param name="p">The parameters to load with.</param>
			static void LoadFromFile(NiObjectLoadParameters^ p);

			/// <summary>
			/// Queues a load operation of a NiObject from NIF file.
			/// </summary>
			/// <param name="p">The parameters to load with.</param>
			static void LoadFromFileAsync(NiObjectLoadParameters^ p);
		};

		interface class anonymous_namespace::BookReadToMiscStatHandler : public BSTEventSink<BooksRead::Event^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::BountyToMiscStatHandler : public BSTEventSink<Bounty::Event^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::BSHashMapEventFindFunctor : public BSSynchronizedClipGeneratorUtils::FindEventFunctor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::BShkbAnimationGraphLoadScrapper : public BSAnimationGraphLoadScrapper, public NetScriptFramework::IVirtualObject { };

		public interface class GSysAllocPaged : public GSysAllocBase, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::BSScaleformSysMemMapper : public GSysMemoryMap, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::CastAliasSpellVisitor : public TESObjectREFRDef::IAliasFunctor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::CastWornEnchantmentsVisitor : public InventoryChanges::IItemChangeVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::CellAcousticSpaceListener : public BSTEventSink<BGSActorCellEvent^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::CheckEndReachedFunctorMapper : public ICheckEndReachedFunctorMapper, public NetScriptFramework::IVirtualObject { };

		public interface class BSPathing : public BSTSingletonExplicit<BSPathing^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class CheckLineOfSightFilter : public NetScriptFramework::IVirtualObject { };

			interface class EdgeFoundVisitor : public NetScriptFramework::IVirtualObject { };
		};

		public interface class BSNavmeshInfoMap : public BSTSingletonExplicit<BSNavmeshInfoMap^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class IVisitor : public NetScriptFramework::IVirtualObject { };

			interface class IRecursiveVisitor : public NetScriptFramework::IVirtualObject { };
		};

		interface class anonymous_namespace::ClipAddingFunctor : public BShkbUtils::GraphInspectionFunctor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::CollectUsedUniqueIDsVisitor : public InventoryChanges::IItemChangeVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::CompileExpressionFunctor : public BShkbUtils::GraphInspectionFunctor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::ConsoleLogPrinter : public IStringForwarder, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::ContainerChangedEventArguments : public BSScript::IFunctionArguments, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::ContainerEventArguments : public BSScript::IFunctionArguments, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::CountObjectsWithKeywordFunctor : public InventoryChanges::IItemChangeVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::CriticalHitToMiscStatHandler : public BSTEventSink<CriticalHitEvent::Event^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::DaysJailedToMiscStatHandler : public BSTEventSink<DaysJailed::Event^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::DaysPassedToMiscStatHandler : public BSTEventSink<DaysPassed::Event^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::DecalApplier : public BSTEventSink<TESCellReadyToApplyDecalsEvent^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::DeepCopyStream : public NiStream, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::DefaultObjectInitListener : public BSTEventSink<DefaultObjectsReadyEvent::Event^>, public NetScriptFramework::IVirtualObject { };

		generic <typename BSTCommonMessageQueue_T1>
		public interface class BSTCommonMessageQueue : public BSTMessageQueue<BSTCommonMessageQueue_T1>, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Int32 Lock
			{
				System::Int32 __clrcall get();
			}
		};

		interface class anonymous_namespace::DestructionStageChangedArguments : public BSScript::IFunctionArguments, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::DisarmedToMiscStatHandler : public BSTEventSink<DisarmedEvent::Event^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::DispelAliasSpellVisitor : public TESObjectREFRDef::IAliasFunctor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::DispelFirstOnlyFunctor : public MagicItemTraversalFunctor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::DispelWornItemEnchantsVisitor : public InventoryChanges::IItemChangeVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::EmptyCallbackFunctor : public IAnimationSetCallbackFunctor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::EventCallbackAdapter : public BSScript::IStackCallbackFunctor, public NetScriptFramework::IVirtualObject { };

		public interface class TESValueForm : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::UInt32 ValueAmount
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class TESAttackDamageForm : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::UInt16 AttackDamage
			{
				System::UInt16 __clrcall get();
			}
		};

		public interface class BGSPreloadable : public BaseFormComponent, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::FindFormTypeHelper : public IFormFactory::IFactoryVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::FinesPaidToMiscStatHandler : public BSTEventSink<FinePaid::Event^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::GetArmorInSlotFunctor : public InventoryChanges::IItemChangeVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::GetClothingValueVisitor : public InventoryChanges::IItemChangeVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::GetMagicItemDescriptionFunctor : public MagicItemTraversalFunctor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::GetMiscStatInfoFunc : public MiscStatManager::IMiscStatVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::GetVMConditionalVariableValueFunc : public BSScript::IForEachScriptObjectFunctor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::GraphPhysicsStepListener : public bhkIWorldStepListener, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::GraphVarTypeQuery : public BSAnimGraphVisit::BShkbVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::HandleEntryPointVisitor : public PerkEntryVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::HarvestToMiscStatHandler : public BSTEventSink<TESHarvestEvent::ItemHarvested^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::HitArguments : public BSScript::IFunctionArguments, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::hkEntitySelectorAll : public hkpSaveContactPointsUtil::EntitySelector, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::hkEntitySelectorListed : public hkpSaveContactPointsUtil::EntitySelector, public NetScriptFramework::IVirtualObject { };

		public interface class hkpNamedMeshMaterial : public hkpMeshMaterial, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class anonymous_namespace::HoursPassedToMiscStatHandler : public BSTEventSink<HoursPassed::Event^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::InitItemPerkRankDataVisitor : public PerkRankVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::InitWornVisitor : public InventoryChanges::IItemChangeVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::InventoryToMiscStatHandler : public BSTEventSink<Inventory::Event^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::iStateTaggingFunctor : public BShkbUtils::GraphInspectionFunctor, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementQueryPathFollowing : public IMovementInterface, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class INodeVisitor : public NetScriptFramework::IVirtualObject { };
		};

		interface class anonymous_namespace::ItemCraftedToMiscStatHandler : public BSTEventSink<ItemCrafted::Event^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::ItemsPickpocketedToMiscStatHandler : public BSTEventSink<ItemsPickpocketed::Event^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::ItemsStolenToMiscStatHandler : public BSTEventSink<ItemSteal::Event^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::LevelIncreaseToMiscStatHandler : public BSTEventSink<LevelIncrease::Event^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::LocationDiscoveryToMiscStatHandler : public BSTEventSink<LocationDiscovery::Event^>, public NetScriptFramework::IVirtualObject { };

		public interface class GRefCountImpl : public GRefCountImplCore, public NetScriptFramework::IVirtualObject { };

		generic <typename GFxLogBase_T1>
		public interface class GFxLogBase : public GFxLogConstants, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::LOSEventArguments : public BSScript::IFunctionArguments, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::MagicEffectApplyArguments : public BSScript::IFunctionArguments, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::MagicWardHitArguments : public BSScript::IFunctionArguments, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::MapEventFindFunctor : public BSSynchronizedClipGeneratorUtils::FindEventFunctor, public NetScriptFramework::IVirtualObject { };

		public interface class IMemoryManagerFileFactory : public BSTSingletonExplicit<IMemoryManagerFileFactory^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::MenuModeChangeListener : public BSTEventSink<MenuModeChangeEvent^>, public NetScriptFramework::IVirtualObject { };

		public interface class IXAPO : public IUnknown0, public NetScriptFramework::IMemoryObject { };

		interface class anonymous_namespace::MovementControllerAIAdapter : public IMovementControllerNPCFunctor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::NearestHitCollector : public hkpRayHitCollector, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::NonDialogSubCategory : public BSISoundCategory, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::NullCallbackFunctor : public IAnimationSetCallbackFunctor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::NullMapCameraCallbacks : public IMapCameraCallbacks, public BSTSingletonImplicit1<anonymous_namespace::NullMapCameraCallbacks^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::ObjectFactoryVisitor : public IFormFactory::IFactoryVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::ObjectiveStateToMiscStatHandler : public BSTEventSink<ObjectiveState::Event^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::ObjectTypeFinder : public IFormFactory::IFactoryVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::OnCombatStateChangedArguments : public BSScript::IFunctionArguments, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::OutputInfoStream : public NiBinaryStream, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::PathSmootherRayCastBuildNodesForLargeZDelta : public IPathSmootherRayCast, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::PerkFragmentArguments : public BSScript::IFunctionArguments, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::PickpocketToMiscStatHandler : public BSTEventSink<Pickpocket::Event^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::PlayerBowShotArguments : public BSScript::IFunctionArguments, public NetScriptFramework::IVirtualObject { };

		public interface class IAllowEGMCacheClear : public BSTSingletonExplicit<IAllowEGMCacheClear^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::PlayerParentCellListener : public BSTEventSink<BGSActorCellEvent^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::PreloadWornItemEnchantsVisitor : public InventoryChanges::IItemChangeVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::PrintPapyrusObjectsOnAliasToConsole : public TESObjectREFRDef::IAliasFunctor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::PrintPapyrusObjectsToConsole : public BSScript::IForEachScriptObjectFunctor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::QualifyAsCurrentPackage : public PackageList::IPackageVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::QuestStatusToMiscStatHandler : public BSTEventSink<QuestStatus::Event^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::RandomDialogueStoryEventProcessor : public BSTEventSink<BGSEventProcessedEvent^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::RefreshEnchantedWeaponsVisitor : public InventoryChanges::IItemChangeVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::ReverbModCallback : public IXAudio2EngineCallback, public NetScriptFramework::IMemoryObject { };

		interface class anonymous_namespace::RotateNormalHitCollector : public hkpRayHitCollector, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::SceneActionResultsCallBack : public REFREventCallbacks::IEventCallback, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::ScenePhaseResultsCallBack : public REFREventCallbacks::IEventCallback, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::SceneResultsCallBack : public REFREventCallbacks::IEventCallback, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::ScriptFoundCallback : public BSResource::ArchiveFoundStreamCB, public BSTSingletonImplicit1<anonymous_namespace::ScriptFoundCallback^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::SetPapyrusVarFunctor : public BSScript::IForEachScriptObjectFunctor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::ShouldRunDefaultWornVisitor : public InventoryChanges::IItemChangeVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::SingleActorArgument : public BSScript::IFunctionArguments, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::SingleObjectRefrHandleArgument : public BSScript::IFunctionArguments, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::SinglePackageArgument : public BSScript::IFunctionArguments, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::SingleRefAliasFunctionArguments : public BSScript::IFunctionArguments, public NetScriptFramework::IVirtualObject { };

		generic <typename SingleSimpleArgument_T1>
		interface class anonymous_namespace::SingleSimpleArgument : public BSScript::IFunctionArguments, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::SkillIncreaseToMiscStatHandler : public BSTEventSink<SkillIncrease::Event^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::SpellCastArguments : public BSScript::IFunctionArguments, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::StageItemFinishedCallback : public REFREventCallbacks::IEventCallback, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::StopStartEquipabilityFunctor : public MagicItemTraversalFunctor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::StoreEnchantedItemsVisitor : public InventoryChanges::IItemChangeVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::SynchronizedClipGenVisitor : public BSAnimGraphVisit::BShkbVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::SynchronizedClipNameVisitor : public BSAnimGraphVisit::BShkbVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::TESObjectREFRFactory : public IFormFactory, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::TopicResultCallBack : public REFREventCallbacks::IEventCallback, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::TrackedStatsEventFunctor : public BSScript::IFunctionArguments, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::TrapHitArguments : public BSScript::IFunctionArguments, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::TrespassToMiscStatHandler : public BSTEventSink<Trespass::Event^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::UnequipAllVisitor : public InventoryChanges::IItemChangeVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::UnequipArmorFunctor : public InventoryChanges::IItemChangeVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::UnloadWornItemEnchantsVisitor : public InventoryChanges::IItemChangeVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::UpdateArmorWornVisitor : public InventoryChanges::IItemChangeVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::WarmthCalcFunc : public InventoryChanges::IItemChangeVisitor, public NetScriptFramework::IVirtualObject { };

		public interface class NiFile : public NiBinaryStream, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class OpenModes : System::Int32
			{
				ReadOnly = 0,
				WriteOnly = 1,
				AppendOnly = 2,
			};

			property System::Int32 BufferAllocSize
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 BufferReadSize
			{
				System::Int32 __clrcall get();
			}

			property System::UInt32 Position
			{
				System::UInt32 __clrcall get();
			}

			property System::IntPtr Buffer
			{
				System::IntPtr __clrcall get();
			}

			property System::IntPtr File
			{
				System::IntPtr __clrcall get();
			}

			property NiFile::OpenModes Mode
			{
				NiFile::OpenModes __clrcall get();
			}

			property System::Boolean IsGood
			{
				System::Boolean __clrcall get();
			}
		};

		interface class anonymous_namespace::WordLearnedToMiscStatHandler : public BSTEventSink<WordLearned::Event^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::WordUnlockedToMiscStatHandler : public BSTEventSink<WordUnlocked::Event^>, public NetScriptFramework::IVirtualObject { };

		public interface class BSArchive : public BSArchiveHeader, public NetScriptFramework::IMemoryObject { };

		public interface class hkDataArrayImpl : public hkDataRefCounted, public NetScriptFramework::IVirtualObject { };

		public interface class BSPathingDoor : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

		generic <typename BSTDefaultScatterTable_T1, typename BSTDefaultScatterTable_T2>
		public interface class BSTDefaultScatterTable2 : public BSTScatterTable<BSTDefaultScatterTable_T1, BSTDefaultScatterTable_T2, BSTScatterTableDefaultKVStorage^, BSTScatterTableDefaultHashPolicy0^, BSTScatterTableHeapAllocator0^, UnknownGenArg_8^>, public NetScriptFramework::IMemoryObject { };

		public interface class AutoMoveHandler : public PlayerInputHandler, public NetScriptFramework::IVirtualObject { };

		public interface class CombatPathDestinationLocation : public CombatPathDestination, public NetScriptFramework::IMemoryObject { };

		public interface class CombatPathDestinationRef : public CombatPathDestination, public NetScriptFramework::IMemoryObject { };

		public interface class CombatPathDestinationNone : public CombatPathDestination, public NetScriptFramework::IMemoryObject { };

		public interface class CombatPathingGoalPolicyExitWater : public CombatPathingGoalPolicy, public NetScriptFramework::IMemoryObject { };

		public interface class CombatPathingSearchPolicyStandard : public CombatPathingSearchPolicy, public NetScriptFramework::IMemoryObject { };

		public interface class CombatPathingGoalPolicyFindAttackLocation : public CombatPathingGoalPolicy, public NetScriptFramework::IMemoryObject { };

		public interface class CombatPathingGoalPolicyFindCover : public CombatPathingGoalPolicy, public NetScriptFramework::IMemoryObject { };

		public interface class CombatPathingGoalPolicyFindHideCover : public CombatPathingGoalPolicy, public NetScriptFramework::IMemoryObject { };

		public interface class CombatPathingGoalPolicyLocation : public CombatPathingGoalPolicy, public NetScriptFramework::IMemoryObject { };

		public interface class CombatPathingGoalPolicyFlankDistant : public CombatPathingGoalPolicy, public NetScriptFramework::IMemoryObject { };

		public interface class CombatPathingGoalPolicyRetreat : public CombatPathingGoalPolicy, public NetScriptFramework::IMemoryObject { };

		public interface class CombatPathingGoalPolicySearch : public CombatPathingGoalPolicy, public NetScriptFramework::IMemoryObject { };

		public interface class CombatPathingGoalPolicySearchWander : public CombatPathingGoalPolicy, public NetScriptFramework::IMemoryObject { };

		public interface class CombatPathDestinationLocations : public CombatPathDestination, public NetScriptFramework::IMemoryObject { };

		generic <typename AutoRegisterPathBuilderFactory_T1, typename AutoRegisterPathBuilderFactory_T2>
		public interface class AutoRegisterPathBuilderFactory : public IPathBuilderFactoryBase /* AutoRegisterPathBuilderFactory_T2 */, public NetScriptFramework::IVirtualObject { };

		public interface class BGSAIWorldLocation : public IAIWorldLocation, public NetScriptFramework::IVirtualObject { };

		public interface class BShkFloatController : public BShkNonTransformController, public NetScriptFramework::IVirtualObject { };

		public interface class BGSMusicTrack : public BSIMusicTrack, public NetScriptFramework::IVirtualObject
		{
		public:
			property TESCondition^ Conditions
			{
				TESCondition^ __clrcall get();
			}
		};

		public interface class BGSPackageDataBool : public BGSNamedPackageData<IPackageData^>, public NetScriptFramework::IVirtualObject { };

		generic <typename BGSPackageDataBasicTemplate_T1, typename BGSPackageDataBasicTemplate_T2, typename BGSPackageDataBasicTemplate_T3, typename BGSPackageDataBasicTemplate_T4>
		public interface class BGSPackageDataBasicTemplate : public BGSNamedPackageData<BGSPackageDataBasicTemplate_T1>, public NetScriptFramework::IVirtualObject { };

		public interface class IPackageDataAIWorldLocationHandle : public IAIWorldLocationHandle, public IPackageData, public NetScriptFramework::IVirtualObject { };

		public interface class BGSPackageDataTopic : public BGSNamedPackageData<IPackageData^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureBase : public IProcedure, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureAcquireExecState : public BGSTypedItem<BGSProcedureAcquireExecState^, IProcedureTreeExecState^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureActivateExecState : public BGSTypedItem<BGSProcedureActivateExecState^, IProcedureTreeExecState^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureDialogueActivateExecState : public BGSTypedItem<BGSProcedureDialogueActivateExecState^, IProcedureTreeExecState^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureDialogueExecState : public BGSTypedItem<BGSProcedureDialogueExecState^, IProcedureTreeExecState^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureDoneExecState : public BGSTypedItem<BGSProcedureDoneExecState^, IProcedureTreeExecState^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureEatExecState : public BGSTypedItem<BGSProcedureEatExecState^, IProcedureTreeExecState^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureEscortExecState : public BGSTypedItem<BGSProcedureEscortExecState^, IProcedureTreeExecState^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureFindExecState : public BGSTypedItem<BGSProcedureFindExecState^, IProcedureTreeExecState^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureFleeExecState : public BGSTypedItem<BGSProcedureFleeExecState^, IProcedureTreeExecState^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureFlightGrabExecState : public BGSTypedItem<BGSProcedureFlightGrabExecState^, IProcedureTreeExecState^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureFollowExecState : public BGSTypedItem<BGSProcedureFollowExecState^, IProcedureTreeExecState^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureGuardExecState : public BGSTypedItem<BGSProcedureGuardExecState^, IProcedureTreeExecState^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureHoldPositionExecState : public BGSTypedItem<BGSProcedureHoldPositionExecState^, IProcedureTreeExecState^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureHoverExecState : public BGSTypedItem<BGSProcedureHoverExecState^, IProcedureTreeExecState^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureKeepAnEyeOnExecState : public BGSTypedItem<BGSProcedureKeepAnEyeOnExecState^, IProcedureTreeExecState^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureLockUnlockExecState : public BGSTypedItem<BGSProcedureLockUnlockExecState^, IProcedureTreeExecState^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureOrbitExecState : public BGSTypedItem<BGSProcedureOrbitExecState^, IProcedureTreeExecState^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedurePatrolExecState : public BGSTypedItem<BGSProcedurePatrolExecState^, IProcedureTreeExecState^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureSandboxExecState : public BGSTypedItem<BGSProcedureSandboxExecState^, IProcedureTreeExecState^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureSayExecState : public BGSTypedItem<BGSProcedureSayExecState^, IProcedureTreeExecState^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureShoutExecState : public BGSTypedItem<BGSProcedureShoutExecState^, IProcedureTreeExecState^>, public BSTEventSink<TESSpellCastEvent^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureSitSleepExecState : public BGSTypedItem<BGSProcedureSitSleepExecState^, IProcedureTreeExecState^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureTravelExecState : public BGSTypedItem<BGSProcedureTravelExecState^, IProcedureTreeExecState^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureTreeConditionalItem : public IProcedureTreeItem, public NetScriptFramework::IVirtualObject
		{
		public:
			property TESCondition^ Conditions
			{
				TESCondition^ __clrcall get();
			}
		};

		public interface class BGSProcedureTreeOneChildExecState : public IProcedureTreeExecState, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureTreeSimultaneousExecState : public BGSTypedItem<BGSProcedureTreeSimultaneousExecState^, IProcedureTreeExecState^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureUseIdleMarkerExecState : public BGSTypedItem<BGSProcedureUseIdleMarkerExecState^, IProcedureTreeExecState^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureUseMagicExecState : public BGSTypedItem<BGSProcedureUseMagicExecState^, IProcedureTreeExecState^>, public BSTEventSink<TESSpellCastEvent^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureUseWeaponExecState : public BGSTypedItem<BGSProcedureUseWeaponExecState^, IProcedureTreeExecState^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureWaitExecState : public BGSTypedItem<BGSProcedureWaitExecState^, IProcedureTreeExecState^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureWanderExecState : public BGSTypedItem<BGSProcedureWanderExecState^, IProcedureTreeExecState^>, public NetScriptFramework::IVirtualObject { };

		public interface class BSNullImplAudio : public BSAudio, public NetScriptFramework::IVirtualObject { };

		public interface class BSPathingRequest : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

		public interface class BSPathingSolution : public BSIntrusiveRefCounted, public NetScriptFramework::IMemoryObject { };

		public interface class BSUIMessageData : public IUIMessageData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Boolean BoolValue
				{
					System::Boolean __clrcall get();
				}

				property System::Int32 IntValue
				{
					System::Int32 __clrcall get();
				}

				property System::Single FloatValue
				{
					System::Single __clrcall get();
				}

				property System::IntPtr PointerValue
				{
					System::IntPtr __clrcall get();
				}
			};

			property BSString^ Str
			{
				BSString^ __clrcall get();
			}

			property BSFixedString^ FixedStr
			{
				BSFixedString^ __clrcall get();
			}

			property BSUIMessageData::Data^ MessageData
			{
				BSUIMessageData::Data^ __clrcall get();
			}
		};

		public interface class BSUIScaleformData : public IUIMessageData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::IntPtr ScaleformEvent
			{
				System::IntPtr __clrcall get();
			}
		};

		public interface class BSXAudio2Audio : public BSAudio, public NetScriptFramework::IVirtualObject { };

		public interface class BSPathingLockData : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

		public interface class ConsoleData : public IUIMessageData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSString^ Text
			{
				BSString^ __clrcall get();
			}

			property System::UInt32 PickRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property NiBinaryStream^ File
			{
				NiBinaryStream^ __clrcall get();
			}

			property System::UInt32 Type
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class FaderData : public IUIMessageData, public NetScriptFramework::IVirtualObject { };

		public interface class HUDData : public IUIMessageData, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class Types : System::Int32
			{
				Notification = 1,
				SetBlinking = 0xB,
				SetFadeOut = 0xC,
				SetPct = 0xD,
				QuestStarted = 0xE,
				QuestComplete = 0xF,
				QuestFailed = 0x10,
				SkillIncrease = 0x14,
				WordOfPower1 = 0x15,
				WordOfPower2 = 0x16,
			};

			enum class DiscoveryTypes : System::Int32
			{
				City = 1,
				Town = 2,
				Dungeon4 = 4,
				Dungeon7 = 7,
				Dungeon8 = 8,
				Dungeon12 = 0xC,
				Dungeon15 = 0xF,
			};

			property HUDData::Types Type
			{
				HUDData::Types __clrcall get();
			}

			property BSString^ Text
			{
				BSString^ __clrcall get();
			}

			property HUDData::DiscoveryTypes Discovery
			{
				HUDData::DiscoveryTypes __clrcall get();
			}
		};

		public interface class InventoryUpdateData : public IUIMessageData, public NetScriptFramework::IVirtualObject { };

		public interface class KinectStateChangeData : public IUIMessageData, public NetScriptFramework::IVirtualObject { };

		public interface class KinectUserEventData : public IUIMessageData, public NetScriptFramework::IVirtualObject { };

		public interface class LoadingMenuData : public IUIMessageData, public NetScriptFramework::IVirtualObject { };

		public interface class SyncQueueObj : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

		public interface class MovementAgent : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementPlannerAgent : public IPipelineStageInterface, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementPathManagerAgent : public IPipelineStageInterface, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementQueryActorAvoidance : public IMovementInterface, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementSetState : public IMovementInterface, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementQueryState : public IMovementInterface, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementQueryFlight : public IMovementInterface, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementSetPathFollowing : public IMovementInterface, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementHandlerAgent : public IPipelineStageInterface, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementSetPlayerControls : public IMovementInterface, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementSetSprinting : public IMovementInterface, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementSetTranslationControllerType : public IMovementInterface, public NetScriptFramework::IVirtualObject { };

		public interface class MovementArbiter : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementParameters : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementQueryStaticAvoider : public IMovementInterface, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementSetStaticAvoider : public IMovementInterface, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementSetGoal : public IMovementInterface, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementQueryPathingState : public IMovementInterface, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementSetKeepOffsetFromActor : public IMovementInterface, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementSetWarp : public IMovementInterface, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementPlannerSetArbitration : public IMovementInterface, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementQueryDeltas : public IMovementInterface, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementTweenerAgent : public IPipelineStageInterface, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementSetCorrectionData : public IMovementInterface, public NetScriptFramework::IVirtualObject { };

		public interface class ITweenerNodeFollowerSetup : public IMovementInterface, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementSetTweener : public IMovementInterface, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementQueryTweener : public IMovementInterface, public NetScriptFramework::IVirtualObject { };

		public interface class BSPathingCell : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

		public interface class RefHandleUIData : public IUIMessageData, public NetScriptFramework::IVirtualObject { };

		public interface class TESFormUIData : public IUIMessageData, public NetScriptFramework::IVirtualObject { };

		public interface class BottomBar : public NetScriptFramework::IMemoryObject
		{
		public:
			property GFxValue^ UiObject
			{
				GFxValue^ __clrcall get();
			}
		};

		public interface class hkDataObjectImpl : public hkDataRefCounted, public NetScriptFramework::IVirtualObject { };

		public interface class bhkEntityListener : public hkpEntityListener, public NetScriptFramework::IVirtualObject { };

		public interface class BGSActionData : public ActionInput, public ActionOutput, public NetScriptFramework::IVirtualObject { };

		public interface class TESQualityForm : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class QualityEnum : System::Int32
			{
				Novice = 0,
				Apprentice = 1,
				Journeyman = 2,
				Expert = 3,
				Master = 4,
			};

			property TESQualityForm::QualityEnum Quality
			{
				TESQualityForm::QualityEnum __clrcall get();
			}
		};

		public interface class BGSAttackData : public NiRefObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class AttackFlags : System::UInt32
			{
				None = 0,
				IgnoreWeapon = 1,
				BashAttack = 2,
				PowerAttack = 4,
				ChargeAttack = 8,
				RotatingAttack = 0x10,
				ContinuousAttack = 0x20,
				OverrideData = 0x80000000,
			};

			interface class Data;

			property BSFixedString^ EventName
			{
				BSFixedString^ __clrcall get();
			}

			property BGSAttackData::Data^ AttackData
			{
				BGSAttackData::Data^ __clrcall get();
			}
		};

		public interface class BGSBipedModelList : public BaseFormComponent, public NetScriptFramework::IVirtualObject { };

		public interface class BGSBipedObjectForm : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class BipedObjectSlots : System::UInt32
			{
				None = 0,
				Head = 1,
				Hair = 2,
				Body = 4,
				Hands = 8,
				Forearms = 0x10,
				Amulet = 0x20,
				Ring = 0x40,
				Feet = 0x80,
				Calves = 0x100,
				Shield = 0x200,
				Tail = 0x400,
				LongHair = 0x800,
				Circlet = 0x1000,
				Ears = 0x2000,
				DecapitateHead = 0x100000,
				Decapitate = 0x200000,
				FX01 = 0x80000000,
			};

			enum class ArmorTypes : System::Int32
			{
				LightArmor = 0,
				HeavyArmor = 1,
				Clothing = 2,
			};

			interface class BipedData : public NetScriptFramework::IMemoryObject
			{
			public:
				property BGSBipedObjectForm::BipedObjectSlots Slots
				{
					BGSBipedObjectForm::BipedObjectSlots __clrcall get();

					void __clrcall set(BGSBipedObjectForm::BipedObjectSlots value);
				}

				property BGSBipedObjectForm::ArmorTypes ArmorType
				{
					BGSBipedObjectForm::ArmorTypes __clrcall get();

					void __clrcall set(BGSBipedObjectForm::ArmorTypes value);
				}
			};

			property BGSBipedObjectForm::BipedData^ ModelData
			{
				BGSBipedObjectForm::BipedData^ __clrcall get();
			}
		};

		public interface class TESContainer : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Entry;

			interface class Data;

			property System::IntPtr ContainerEntries
			{
				System::IntPtr __clrcall get();

				void __clrcall set(System::IntPtr value);
			}

			/// <summary>
			/// Gets the count of container entries.
			/// </summary>
			property System::Int32 ContainerEntriesCount
			{
				System::Int32 __clrcall get();

				void __clrcall set(System::Int32 value);
			}

			/// <summary>
			/// Gets the value at specified index.
			/// </summary>
			property TESContainer::Entry^ default[System::Int32]
			{
				TESContainer::Entry^ get(System::Int32 i);
			}
		};

		generic <typename NiTObjectArray_T1>
		public interface class NiTObjectArray : public NiTArray<NiTObjectArray_T1, NiTNewInterface<NiTObjectArray_T1>^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSEntryPointFunctionDataBooleanGraphVariable : public BGSEntryPointFunctionData, public NetScriptFramework::IVirtualObject { };

		public interface class BGSEntryPointFunctionDataLeveledList : public BGSEntryPointFunctionData, public NetScriptFramework::IVirtualObject { };

		public interface class BGSEntryPointFunctionDataOneValue : public BGSEntryPointFunctionData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Single Value
			{
				System::Single __clrcall get();
			}
		};

		public interface class BGSEntryPointFunctionDataSpellItem : public BGSEntryPointFunctionData, public NetScriptFramework::IVirtualObject { };

		public interface class BGSEntryPointFunctionDataText : public BGSEntryPointFunctionData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSFixedString^ Value
			{
				BSFixedString^ __clrcall get();
			}
		};

		public interface class BGSEntryPointFunctionDataTwoValue : public BGSEntryPointFunctionData, public NetScriptFramework::IVirtualObject { };

		public interface class BGSFootstepEvent : public BGSActorEvent, public NetScriptFramework::IMemoryObject
		{
		public:
			property BSFixedString^ Tag
			{
				BSFixedString^ __clrcall get();
			}
		};

		public interface class BGSHavokGeometryAttach : public BSAttachTechniques::BSAttachTechnique, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class ActionPolicy : public NetScriptFramework::IVirtualObject { };

			interface class AttachPolicy : public BGSHavokGeometryAttach::ActionPolicy, public NetScriptFramework::IVirtualObject { };

			interface class DetachPolicy : public BGSHavokGeometryAttach::ActionPolicy, public NetScriptFramework::IVirtualObject { };
		};

		public interface class DecalData : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class DecalDataFlags : System::Byte
			{
				None = 0,
				Parallax = 1,
				AlphaBlending = 2,
				AlphaTesting = 4,
				NoSubtextures = 8,
			};

			property System::Single DecalMinWidth
			{
				System::Single __clrcall get();
			}

			property System::Single DecalMaxWidth
			{
				System::Single __clrcall get();
			}

			property System::Single DecalMinHeight
			{
				System::Single __clrcall get();
			}

			property System::Single DecalMaxHeight
			{
				System::Single __clrcall get();
			}

			property System::Single Depth
			{
				System::Single __clrcall get();
			}

			property System::Single Shininess
			{
				System::Single __clrcall get();
			}

			property System::Single ParallaxScale
			{
				System::Single __clrcall get();
			}

			property System::SByte ParallaxPasses
			{
				System::SByte __clrcall get();
			}

			property DecalData::DecalDataFlags Flags
			{
				DecalData::DecalDataFlags __clrcall get();
			}

			property Color^ DecalColor
			{
				Color^ __clrcall get();
			}
		};

		public interface class BSLensFlareSpriteRenderData : public NiRefObject, public NetScriptFramework::IVirtualObject { };

		public interface class BGSDirectionalAmbientLightingColors : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Directional : public NetScriptFramework::IMemoryObject
			{
			public:
				property Color^ x_max
				{
					Color^ __clrcall get();
				}

				property Color^ x_min
				{
					Color^ __clrcall get();
				}

				property Color^ y_max
				{
					Color^ __clrcall get();
				}

				property Color^ y_min
				{
					Color^ __clrcall get();
				}

				property Color^ z_max
				{
					Color^ __clrcall get();
				}

				property Color^ z_min
				{
					Color^ __clrcall get();
				}
			};

			property BGSDirectionalAmbientLightingColors::Directional^ DirectionalData
			{
				BGSDirectionalAmbientLightingColors::Directional^ __clrcall get();
			}

			property Color^ Specular
			{
				Color^ __clrcall get();
			}

			property System::Single FresnelPower
			{
				System::Single __clrcall get();
			}
		};

		public interface class BGSLoadFormBuffer : public BGSLoadGameBuffer, public BGSLoadFormData, public NetScriptFramework::IVirtualObject { };

		public interface class BGSLOSData : public NiRefObject, public NetScriptFramework::IVirtualObject { };

		public interface class BGSMultiTechniqueAttach : public BSAttachTechniques::BSAttachTechnique, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class ActionPolicy : public NetScriptFramework::IVirtualObject { };

			interface class AttachPolicy : public BGSMultiTechniqueAttach::ActionPolicy, public NetScriptFramework::IVirtualObject { };

			interface class DetachPolicy : public BGSMultiTechniqueAttach::ActionPolicy, public NetScriptFramework::IVirtualObject { };
		};

		public interface class BGSNamedNodeAttach : public BSAttachTechniques::BSAttachTechnique, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class ActionPolicy : public NetScriptFramework::IVirtualObject { };

			interface class AttachPolicy : public BGSNamedNodeAttach::ActionPolicy, public NetScriptFramework::IVirtualObject { };

			interface class DetachPolicy : public BGSNamedNodeAttach::ActionPolicy, public NetScriptFramework::IVirtualObject { };
		};

		generic <typename BGSPackageDataTypeCheck_T1, typename BGSPackageDataTypeCheck_T2>
		public interface class BGSPackageDataTypeCheck : public IPackageDataTypeCheck, public NetScriptFramework::IVirtualObject { };

		public interface class BGSParticleArrayAttach : public BSAttachTechniques::BSAttachTechnique, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class EmitterPolicy : public NetScriptFramework::IVirtualObject { };

			interface class ClearEmitterPolicy : public BGSParticleArrayAttach::EmitterPolicy, public NetScriptFramework::IVirtualObject { };

			interface class CollectEmitterPolicy : public BGSParticleArrayAttach::EmitterPolicy, public NetScriptFramework::IVirtualObject { };
		};

		public interface class BGSPerkRankArray : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data;

			property System::IntPtr RankArray
			{
				System::IntPtr __clrcall get();
			}

			property System::Int32 PerkCount
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class BGSPrimitiveBox : public BGSPrimitive, public NetScriptFramework::IVirtualObject { };

		public interface class BGSPrimitivePlane : public BGSPrimitive, public NetScriptFramework::IVirtualObject { };

		public interface class BGSPrimitiveSphere : public BGSPrimitive, public NetScriptFramework::IVirtualObject { };

		public interface class BGSQuestPerkEntry : public BGSPerkEntry, public NetScriptFramework::IVirtualObject { };

		public interface class BGSQueuedObjectDowngrade : public BGSQueuedTerrainUpdate, public NetScriptFramework::IVirtualObject { };

		public interface class BGSQueuedObjectInitialLoad : public BGSQueuedTerrainUpdate, public NetScriptFramework::IVirtualObject { };

		public interface class BGSQueuedObjectUpgrade : public BGSQueuedTerrainUpdate, public NetScriptFramework::IVirtualObject { };

		public interface class BGSQueuedTerrainDowngrade : public BGSQueuedTerrainUpdate, public NetScriptFramework::IVirtualObject { };

		public interface class BGSQueuedTerrainInitialLoad : public BGSQueuedTerrainUpdate, public NetScriptFramework::IVirtualObject { };

		public interface class BGSQueuedTerrainUpgrade : public BGSQueuedTerrainUpdate, public NetScriptFramework::IVirtualObject { };

		public interface class BGSSaveFormBuffer : public BGSSaveGameBuffer, public NetScriptFramework::IVirtualObject { };

		public interface class BGSSceneActionTimer : public BGSSceneAction, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Single TimerSeconds
			{
				System::Single __clrcall get();
			}
		};

		public interface class hkpProperty : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class BGSVisitProceduresCheckGuardWarnTarget : public IVisitProcedures, public NetScriptFramework::IVirtualObject { };

		public interface class BGSVisitProceduresInitActorAnimPose : public IVisitProcedures, public NetScriptFramework::IVirtualObject { };

		public interface class BGSVisitProceduresInitActorLocation : public IVisitProcedures, public NetScriptFramework::IVirtualObject { };

		public interface class BGSVisitProceduresProcess : public IVisitProcedures, public NetScriptFramework::IVirtualObject { };

		public interface class bhkContactListener : public hkpContactListener, public NetScriptFramework::IVirtualObject { };

		public interface class bhkCharacterCollisionHandler : public BSTSingletonExplicit<bhkCharacterCollisionHandler^>, public NetScriptFramework::IVirtualObject { };

		public interface class bhkCharProxyControllerCinfo : public bhkCharacterControllerCinfo, public NetScriptFramework::IVirtualObject { };

		public interface class bhkCharRigidBodyControllerCinfo : public bhkCharacterControllerCinfo, public NetScriptFramework::IVirtualObject { };

		public interface class hkpCdBodyPairCollector : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class bhkMemorySystem : public hkMemorySystem, public NetScriptFramework::IVirtualObject { };

		public interface class bhkObstacleDeactivationListener : public hkpEntityActivationListener, public NetScriptFramework::IVirtualObject { };

		public interface class bhkObstacleRemovalListener : public hkpEntityListener, public NetScriptFramework::IVirtualObject { };

		public interface class bhkTaskletManagerCallback : public BSTaskletManagerCallback, public NetScriptFramework::IVirtualObject { };

		public interface class bhkQuadOrientationController : public bhkICharOrientationController, public NetScriptFramework::IVirtualObject { };

		public interface class bhkRagdollController : public hkaRaycastInterface, public NetScriptFramework::IVirtualObject { };

		public interface class bhkRagdollPenetrationUtil : public hkaRagdollRaycastInterface, public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

		interface class bnet::_detail::Composite : public bnet::Job, public bnet::IJobCollection, public NetScriptFramework::IVirtualObject { };

		interface class bnet::AccountDeletionRequest : public bnet::HttpRequest<bnet::Callback<bnet_std::void_t^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::AccountUnlinkingRequest : public bnet::HttpRequest<bnet::Callback<bnet_std::void_t^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::AddFingerprintRequest : public bnet::HttpRequest<bnet::Callback<bnet_std::void_t^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::Notification::ReceiveJob : public bnet::Job, public bnet::_impl::Observable<bnet::_impl::AsyncOperation^, bnet::BNetError^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::Notification::UserWebSocket::OnSystemIdFetchedSend : public bnet::Job, public bnet::_impl::Observable<bnet::_impl::AsyncOperation^, bnet::BNetError^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::CMS::ListMessagesRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::_impl::FixedVector<bnet::CMS::Message^, UnknownGenArg_5^, UnknownGenArg_1^, bnet::_impl::StdAllocator<bnet::CMS::Message^>^>^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::Entitlements::ConsumeRequest : public bnet::HttpRequest<bnet::Callback<bnet::Entitlements::ConsumeResponse^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::Entitlements::ListRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::_impl::FixedVector<bnet::Entitlements::Item^, UnknownGenArg_4^, UnknownGenArg_1^, bnet::_impl::StdAllocator<bnet::Entitlements::Item^>^>^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::EventLog::anonymous_namespace::CollectErrorRequest : public bnet::HttpRequest<bnet::Callback<bnet_std::void_t^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::EventLog::anonymous_namespace::CollectLogRequest : public bnet::HttpRequest<bnet::Callback<bnet_std::void_t^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::Notification::anonymous_namespace::OnReadFrame : public bnet::Callback<bnet::WebSocketReadResult^, bnet::WebSocketStatus^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::Notification::Context::OnSystemFetched : public bnet::Callback<bnet::UniquePtr<bnet::_impl::FixedVector<bnet::Notification::SystemModel^, UnknownGenArg_8^, UnknownGenArg_1^, bnet::_impl::StdAllocator<bnet::Notification::SystemModel^>^>^>^, bnet::HttpResponseInfo^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::Notification::ListSystemRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::_impl::FixedVector<bnet::Notification::SystemModel^, UnknownGenArg_8^, UnknownGenArg_1^, bnet::_impl::StdAllocator<bnet::Notification::SystemModel^>^>^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::Notification::UserData::OnSystemIdFetchedRegister : public bnet::Callback<bnet::UniquePtr<bnet::_impl::FixedVector<bnet::Notification::SystemModel^, UnknownGenArg_8^, UnknownGenArg_1^, bnet::_impl::StdAllocator<bnet::Notification::SystemModel^>^>^>^, bnet::HttpResponseInfo^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::Notification::UserWebSocket::OnConnected : public bnet::Callback<bnet_std::void_t^, bnet::WebSocketStatus^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::Presence::UpdateRequest : public bnet::HttpRequest<bnet::Callback<bnet_std::void_t^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::RecoverPasswordRequest : public bnet::HttpRequest<bnet::Callback<bnet_std::void_t^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::RecoverUsernameRequest : public bnet::HttpRequest<bnet::Callback<bnet_std::void_t^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::ResendVerificationRequest : public bnet::HttpRequest<bnet::Callback<bnet_std::void_t^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::SessionLogoutRequest : public bnet::HttpRequest<bnet::Callback<bnet_std::void_t^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::Status::GetExtServerStatusRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::Status::ExtServerStatusResult^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::Ugc::ListPlatformsRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::_impl::FixedVector<bnet::Platform^, UnknownGenArg_10^, UnknownGenArg_1^, bnet::_impl::StdAllocator<bnet::Platform^>^>^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::Ugc::ListProductsRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::_impl::FixedVector<bnet::_impl::FixedString<UnknownGenArg_128^, UnknownGenArg_1^, UnknownGenArg_1^, bnet::_impl::StdAllocator<System::SByte>^>^, UnknownGenArg_8^, UnknownGenArg_1^, bnet::_impl::StdAllocator<bnet::_impl::FixedString<UnknownGenArg_128^, UnknownGenArg_1^, UnknownGenArg_1^, bnet::_impl::StdAllocator<System::SByte>^>^>^>^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::Ugc::RefreshEntitlementRequest : public bnet::HttpRequest<bnet::Callback<bnet_std::void_t^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::UgcAddVideoRequest : public bnet::HttpRequest<bnet::Callback<bnet_std::void_t^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::UgcArgLessRequest : public bnet::HttpRequest<bnet::Callback<bnet_std::void_t^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::UgcCancelUploadRequest : public bnet::HttpRequest<bnet::Callback<bnet_std::void_t^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::UgcChunkedUploadCompletionRequest : public bnet::HttpRequest<bnet::Callback<bnet_std::void_t^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::UgcCommentCreationRequest : public bnet::HttpRequest<bnet::Callback<bnet_std::void_t^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::UgcEditRequest : public bnet::HttpRequest<bnet::Callback<bnet_std::void_t^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::UgcFlagRequest : public bnet::HttpRequest<bnet::Callback<bnet_std::void_t^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::UgcLikeCommentRequest : public bnet::HttpRequest<bnet::Callback<bnet_std::void_t^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::UgcNotificationAcknowledgeRequest : public bnet::HttpRequest<bnet::Callback<bnet_std::void_t^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::UgcQueryRequest : public bnet::HttpRequest<bnet::Callback<bnet_std::void_t^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::UgcRateRequest : public bnet::HttpRequest<bnet::Callback<bnet_std::void_t^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::UgcRemoveReleaseNoteRequest : public bnet::HttpRequest<bnet::Callback<bnet_std::void_t^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::UgcUpdateReleaseNoteRequest : public bnet::HttpRequest<bnet::Callback<bnet_std::void_t^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::VCCS::Catalog::GetItemRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::VCCS::Catalog::Item^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::VCCS::Catalog::ListItemsRequest : public bnet::HttpRequest<bnet::Callback<bnet::VCCS::Catalog::ListItemsResult^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::VCCS::Fulfillment::UpdateFirstPartyEntitlementRequest : public bnet::HttpRequest<bnet::Callback<bnet_std::void_t^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::VCCS::Wallet::BalanceRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::VCCS::Wallet::Balance^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::VCCS::Wallet::PurchaseRequest : public bnet::HttpRequest<bnet::Callback<bnet::UniquePtr<bnet::_impl::FixedString<UnknownGenArg_37^, UnknownGenArg_1^, UnknownGenArg_1^, bnet::_impl::StdAllocator<System::SByte>^>^>^, bnet::HttpResponseInfo^>^>, public NetScriptFramework::IVirtualObject { };

		public interface class BSAnimationGraphChannel : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSFixedString^ ChannelName
			{
				BSFixedString^ __clrcall get();
			}

			property System::Int32 ChannelValue
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class BSAnimNoteReceiver : public IBSAnimNoteReceiver, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class BSAnimNoteReceiverType : public NetScriptFramework::IMemoryObject { };
		};

		public interface class BSArrowConstructor : public BSShapeConstructor, public NetScriptFramework::IVirtualObject { };

		generic <typename BSAudioDataSrc_T1>
		public interface class BSAudioDataSrc : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

		public interface class BSShader : public NiRefObject, public NiBoneMatrixSetterI, public BSReloadShaderI, public NetScriptFramework::IVirtualObject { };

		public interface class BSShaderMaterial : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class ShaderFeatures : System::Int32
			{
				None = -1,
				Default = 0,
				EnvironmentMap = 1,
				GlowMap = 2,
				Parallax = 3,
				FaceGen = 4,
				FaceGenRGBTint = 5,
				HairTint = 6,
				ParallaxOcc = 7,
				MultiTexLand = 8,
				LODLand = 9,
				MultilayerParallax = 0xB,
				TreeAnim = 0xC,
				MultiIndexTriShapeSnow = 0xE,
				LODObjectsHD = 0xF,
				Eye = 0x10,
				Cloud = 0x11,
				LODLandNoise = 0x12,
				MultiTexLandLODBlend = 0x13,
			};

			enum class ShaderTypes : System::Int32
			{
				Base = 0,
				Effect = 1,
				Lighting = 2,
				Water = 3,
			};

			property NetScriptFramework::FixedMemoryArray<NiPoint2^>^ TexCoordOffset
			{
				NetScriptFramework::FixedMemoryArray<NiPoint2^>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<NiPoint2^>^ TexCoordScale
			{
				NetScriptFramework::FixedMemoryArray<NiPoint2^>^ __clrcall get();
			}

			property System::UInt32 HashKey
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class BSBoxConstructor : public BSShapeConstructor, public NetScriptFramework::IVirtualObject { };

		public interface class BSCapsuleConstructor : public BSShapeConstructor, public NetScriptFramework::IVirtualObject { };

		public interface class BSCircleConstructor : public BSShapeConstructor, public NetScriptFramework::IVirtualObject { };

		public interface class BSComputeShader : public NiRefObject, public BSReloadShaderI, public NetScriptFramework::IVirtualObject { };

		public interface class BSStorage : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

		public interface class BSCylinderConstructor : public BSShapeConstructor, public NetScriptFramework::IVirtualObject { };

		public interface class BSDiskConstructor : public BSShapeConstructor, public NetScriptFramework::IVirtualObject { };

		public interface class BSFaceGenKeyframeMultiple : public BSFaceGenKeyframe, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::IntPtr Values
			{
				System::IntPtr __clrcall get();
			}

			property System::Int32 Count
			{
				System::Int32 __clrcall get();
			}

			property System::Boolean IsUpdated
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class BSFaceGenKeyframeExclusive : public BSFaceGenKeyframe, public NetScriptFramework::IVirtualObject { };

		public interface class BSFaceGenModel : public NiRefObject, public NetScriptFramework::IVirtualObject { };

		public interface class BSFaceGenMorphData : public NiRefObject, public NetScriptFramework::IVirtualObject { };

		public interface class BSFlatQuadConstructor : public BSShapeConstructor, public NetScriptFramework::IVirtualObject { };

		public interface class BSInputDevice : public BSIInputDevice, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class InputButton : public NetScriptFramework::IMemoryObject
			{
			public:
				property BSFixedString^ Name
				{
					BSFixedString^ __clrcall get();
				}

				property System::Single HeldDownSecs
				{
					System::Single __clrcall get();
				}

				property System::UInt32 Keycode
				{
					System::UInt32 __clrcall get();
				}
			};

			property InputDevices Device
			{
				InputDevices __clrcall get();
			}

			property BSTHashMap2<System::UInt32, System::IntPtr>^ DeviceButtons
			{
				BSTHashMap2<System::UInt32, System::IntPtr>^ __clrcall get();
			}

			property BSTHashMap2<BSFixedString^, System::UInt32>^ ButtonNameIdMap
			{
				BSTHashMap2<BSFixedString^, System::UInt32>^ __clrcall get();
			}
		};

		public interface class BSIStream : public BSTIOStream::TIStream<BSIOStreamTraits^>, public NetScriptFramework::IVirtualObject { };

		public interface class BSLimbIKModifierUtilityCastInfo : public BSLimbIKModifierCastInfo, public NetScriptFramework::IVirtualObject { };

		generic <typename BSPointerListBase_T1>
		public interface class BSPointerListBase : public BSListBase<BSPointerListBase_T1>, public NetScriptFramework::IVirtualObject { };

		generic <typename BSMap_T1, typename BSMap_T2>
		public interface class BSMap : public BSMapBase<BSMap_T1, BSMap_T2>, public NetScriptFramework::IVirtualObject { };

		interface class BSModelDB::BSModelProcessor : public BSTSingletonExplicit<BSModelDB::BSModelProcessor^>, public NetScriptFramework::IVirtualObject { };

		public interface class BSNavmeshObstacleUndoData : public NiRefObject, public NetScriptFramework::IVirtualObject { };

		public interface class BSNavmeshObstacleData : public NiRefObject, public NetScriptFramework::IVirtualObject { };

		public interface class BSNavmeshReferenceObstacleArray : public NiRefObject, public NetScriptFramework::IVirtualObject { };

		public interface class BSNavmeshSearch : public AStarSearch<BSFastNavmeshTriLocation^, BSFastNavmeshEdgeHandle^, UnknownGenArg_3^>, public NetScriptFramework::IVirtualObject { };

		public interface class BSNavmeshSearchFilters : public INavmeshSearchFilterSet, public NetScriptFramework::IVirtualObject { };

		public interface class BSNiAllocator : public NiAllocator, public NetScriptFramework::IVirtualObject { };

		public interface class BSNullImplAudioListener : public BSAudioListener, public NetScriptFramework::IVirtualObject { };

		public interface class BSNullImplGameSound : public BSGameSound, public NetScriptFramework::IVirtualObject { };

		public interface class BSOrientedBoxConstructor : public BSShapeConstructor, public NetScriptFramework::IVirtualObject { };

		public interface class BSOStream : public BSTIOStream::TOStream<BSIOStreamTraits^>, public NetScriptFramework::IVirtualObject { };

		public interface class BSParticleShaderEmitter : public NiRefObject, public NetScriptFramework::IVirtualObject { };

		public interface class BSPathBuilder : public IPathBuilder, public NetScriptFramework::IVirtualObject { };

		public interface class BSPathingCellManager : public BSTSingletonExplicit<BSPathingCellManager^>, public NetScriptFramework::IVirtualObject { };

		public interface class BSPathingSpace : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

		public interface class BSPathingStreamSimpleBufferRead : public BSPathingStreamRead, public NetScriptFramework::IVirtualObject { };

		public interface class BSPathingStreamSimpleBufferWrite : public BSPathingStreamWrite, public NetScriptFramework::IVirtualObject { };

		public interface class BSPathSmootherPOVSearch : public AStarSearch<BSPathSmootherPOVNode^, BSPathSmootherPOVLink^, UnknownGenArg_12^>, public NetScriptFramework::IVirtualObject { };

		interface class BSPlatform::BSDownloadRequest : public BSPlatform::BSAsyncRequest<std0::function<System::IntPtr>^>, public NetScriptFramework::IVirtualObject { };

		interface class BSPlatform::BSUploadRequest : public BSPlatform::BSAsyncRequest<std0::function<System::IntPtr>^>, public NetScriptFramework::IVirtualObject { };

		public interface class BSPortalGraph : public NiRefObject, public NetScriptFramework::IVirtualObject { };

		public interface class BSPortalGraphEntry : public NiRefObject, public NetScriptFramework::IVirtualObject { };

		public interface class BSWin32TaskletData : public BSTaskletData, public NetScriptFramework::IVirtualObject { };

		generic <typename EntryDBBase_T1>
		interface class BSResource::EntryDBBase : /* EntryDBBase_T1 */ /* BSResource::Directory<System::UInt32, BSResource::Directory<BSResource::FileID^, BSResource::Entry<BGSDistantObjectBlock^, EntryDBBase_T1::CArgs>^>^> */ public BGSBtoDB::DBTraits, public NetScriptFramework::IMemoryObject { };

		interface class BSResource::anonymous_namespace::AsyncArchiveStream : public BSResource::AsyncStream, public NetScriptFramework::IVirtualObject { };

		interface class BSResource::anonymous_namespace::LocationTree : public BSResource::Location, public NetScriptFramework::IVirtualObject { };

		interface class BSResource::anonymous_namespace::LooseFileAsyncBase::FunctorType : public BSSystemFileAsyncFunctor, public NetScriptFramework::IVirtualObject { };

		interface class BSResource::anonymous_namespace::LooseFileAsyncChild : public BSResource::AsyncStream, public BSResource::anonymous_namespace::LooseFileAsyncBase, public NetScriptFramework::IVirtualObject { };

		interface class BSResource::anonymous_namespace::LooseFileAsyncStream : public BSResource::AsyncStream, public BSResource::anonymous_namespace::LooseFileStreamBase, public BSResource::anonymous_namespace::LooseFileAsyncBase, public NetScriptFramework::IVirtualObject { };

		interface class BSResource::anonymous_namespace::LooseFileSBTraits::AsyncFunctor : public BSSystemFileAsyncFunctor, public NetScriptFramework::IVirtualObject { };

		interface class BSResource::anonymous_namespace::LooseFileStream : public BSResource::Stream, public BSResource::anonymous_namespace::LooseFileStreamBase, public NetScriptFramework::IVirtualObject { };

		interface class BSResource::ArchiveManager : public BSTSingletonImplicit1<BSResource::ArchiveManager^>, public NetScriptFramework::IVirtualObject { };

		public interface class BSResourceFaceGenBinaryFile : public FutBinaryFileC, public NetScriptFramework::IVirtualObject { };

		generic <typename BSResponse_T1, typename BSResponse_T2, typename BSResponse_T3, typename BSResponse_T4>
		public interface class BSResponse : public DoNothingUnhandledPolicy1<BSResponse_T1>, public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

		public interface class BSRingConstructor : public BSShapeConstructor, public NetScriptFramework::IVirtualObject { };

		public interface class BSTranslator : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSTHashMap2<unknown^, unknown^>^ TranslationMap
			{
				BSTHashMap2<unknown^, unknown^>^ __clrcall get();
			}
		};

		generic <typename BSScrapMap_T1, typename BSScrapMap_T2>
		public interface class BSScrapMap : public BSMapBase<BSScrapMap_T1, BSScrapMap_T2>, public NetScriptFramework::IVirtualObject { };

		interface class BSScript::anonymous_namespace::LinkerConvertTypeFunctor : public BSScript::UnlinkedTypes::Function::ConvertTypeFunctor, public NetScriptFramework::IVirtualObject { };

		interface class BSScript::anonymous_namespace::VMTypeResolveFunctor : public BSScript::UnlinkedTypes::Function::ConvertTypeFunctor, public NetScriptFramework::IVirtualObject { };

		interface class BSScript::Internal::CodeTasklet : public BSScript::Internal::IFuncCallQuery, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class ResumeReasons : System::Int32
			{
				NotResuming = 0,
				NotResumingNoIncrement = 1,
				InitialStart = 2,
				FunctionReturn = 3,
				RetryInstruction = 4,
				FunctionCall = 5,
			};

			property BSScript::Stack^ CurrentStack
			{
				BSScript::Stack^ __clrcall get();
			}

			property BSScript::Internal::VirtualMachine^ Vm
			{
				BSScript::Internal::VirtualMachine^ __clrcall get();
			}

			property BSScript::ErrorLogger^ ErrorLog
			{
				BSScript::ErrorLogger^ __clrcall get();
			}

			property BSScript::Internal::CodeTasklet::ResumeReasons ResumeReason
			{
				BSScript::Internal::CodeTasklet::ResumeReasons __clrcall get();
			}

			property BSScript::StackFrame^ TopFrame
			{
				BSScript::StackFrame^ __clrcall get();
			}

			property System::UInt32 FrameMemoryPage
			{
				System::UInt32 __clrcall get();
			}

			property System::SByte JumpBitCount
			{
				System::SByte __clrcall get();
			}

			property System::SByte LocalVarBitCount
			{
				System::SByte __clrcall get();
			}

			property System::SByte MemberVarBitCount
			{
				System::SByte __clrcall get();
			}

			property System::UInt32 InstructionDataBitCount
			{
				System::UInt32 __clrcall get();
			}

			property System::IntPtr InstructionDataStart
			{
				System::IntPtr __clrcall get();
			}
		};

		interface class BSScript::NF_util::NativeFunctionBase : public BSScript::IFunction, public NetScriptFramework::IVirtualObject
		{
		public:
			/// <summary>
			/// Gets the name of function.
			/// </summary>
			property BSFixedString^ FuncName
			{
				BSFixedString^ __clrcall get();
			}

			/// <summary>
			/// Gets the name of owner type.
			/// </summary>
			property BSFixedString^ ClassName
			{
				BSFixedString^ __clrcall get();
			}

			property BSFixedString^ StateName
			{
				BSFixedString^ __clrcall get();
			}

			property BSScript::TypeInfo^ ReturnType
			{
				BSScript::TypeInfo^ __clrcall get();
			}

			property BSScript::Internal::VDescTable^ DescTable
			{
				BSScript::Internal::VDescTable^ __clrcall get();
			}

			property System::Boolean IsStatic
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean IsCallableFromTasklet
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean IsLatent
			{
				System::Boolean __clrcall get();
			}

			property System::UInt32 UserFlags
			{
				System::UInt32 __clrcall get();
			}

			property BSFixedString^ DocString
			{
				BSFixedString^ __clrcall get();
			}
		};

		public interface class TESSpellList : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data;

			property TESSpellList::Data^ ActorEffects
			{
				TESSpellList::Data^ __clrcall get();
			}
		};

		public interface class TESAIForm : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::UInt32 Packed1
				{
					System::UInt32 __clrcall get();

					void __clrcall set(System::UInt32 value);
				}

				property System::UInt16 AggroRadiusWarn
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 AggroRadiusWarnAndAttack
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 AggroRadiusAttack
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 Packed2
				{
					System::UInt16 __clrcall get();

					void __clrcall set(System::UInt16 value);
				}

				/// <param name="index">The index of packed data.</param>
				/// <param name="size">The size of packed data.</param>
				System::Int32 GetValue(System::Int32 index, System::Int32 size);

				/// <param name="index">The index of packed data.</param>
				/// <param name="size">The size of packed data.</param>
				/// <param name="value">The value to set.</param>
				void SetValue(System::Int32 index, System::Int32 size, System::Int32 value);

				/// <summary>
				/// Gets or sets the base aggression level. Setting calm type is not supported here!
				/// </summary>
				property ActorAggressionTypes Aggression
				{
					ActorAggressionTypes __clrcall get();

					void __clrcall set(ActorAggressionTypes value);
				}

				/// <summary>
				/// Gets or sets the actor's base confidence level.
				/// </summary>
				property ActorConfidenceTypes Confidence
				{
					ActorConfidenceTypes __clrcall get();

					void __clrcall set(ActorConfidenceTypes value);
				}

				/// <summary>
				/// Gets or sets the actor base energy level.
				/// </summary>
				property System::Int32 Energy
				{
					System::Int32 __clrcall get();

					void __clrcall set(System::Int32 value);
				}

				/// <summary>
				/// Gets or sets the base morality of actor.
				/// </summary>
				property ActorMoralityTypes Morality
				{
					ActorMoralityTypes __clrcall get();

					void __clrcall set(ActorMoralityTypes value);
				}

				/// <summary>
				/// Gets or sets the base mood of actor.
				/// </summary>
				property ActorMoodTypes Mood
				{
					ActorMoodTypes __clrcall get();

					void __clrcall set(ActorMoodTypes value);
				}

				/// <summary>
				/// Gets or sets the base actor assistance type.
				/// </summary>
				property ActorAssistanceTypes Assistance
				{
					ActorAssistanceTypes __clrcall get();

					void __clrcall set(ActorAssistanceTypes value);
				}

				/// <summary>
				/// Gets or sets the aggro radius behavior.
				/// </summary>
				property System::Boolean AggroRadiusBehavior
				{
					System::Boolean __clrcall get();

					void __clrcall set(System::Boolean value);
				}

				/// <summary>
				/// Gets or sets the no slow approach.
				/// </summary>
				property System::Boolean NoSlowApproach
				{
					System::Boolean __clrcall get();

					void __clrcall set(System::Boolean value);
				}
			};

			interface class PackageList;

			property TESAIForm::Data^ AIData
			{
				TESAIForm::Data^ __clrcall get();
			}

			property TESAIForm::PackageList^ AIPackages
			{
				TESAIForm::PackageList^ __clrcall get();
			}
		};

		public interface class BGSLargeRefData : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSTHashMap2<System::UInt32, System::IntPtr>^ CellIdToFormIdMap
			{
				BSTHashMap2<System::UInt32, System::IntPtr>^ __clrcall get();
			}

			property BSTHashMap2<System::UInt32, System::UInt32>^ FormIdToCellIdMap
			{
				BSTHashMap2<System::UInt32, System::UInt32>^ __clrcall get();
			}

			property BSTHashMap2<System::UInt32, System::IntPtr>^ CellIdToFormIdMapFiltered
			{
				BSTHashMap2<System::UInt32, System::IntPtr>^ __clrcall get();
			}
		};

		interface class BSScript::UnlinkedTypes::anonymous_namespace::BuildInstructionOffsetMapFunctor : public BSScript::ByteCode::PackedInstructionStream::InstructionFunctor, public NetScriptFramework::IVirtualObject { };

		interface class BSScript::UnlinkedTypes::anonymous_namespace::CollectStringsFunctor : public BSScript::UnlinkedTypes::InstructionStream::InstructionFunctor, public NetScriptFramework::IVirtualObject { };

		interface class BSScript::UnlinkedTypes::anonymous_namespace::CountInstructionInfo : public BSScript::UnlinkedTypes::InstructionStream::InstructionFunctor, public NetScriptFramework::IVirtualObject { };

		interface class BSScript::UnlinkedTypes::anonymous_namespace::UnpackInstructionsFunctor : public BSScript::ByteCode::PackedInstructionStream::InstructionFunctor, public NetScriptFramework::IVirtualObject { };

		interface class BSScript::UnlinkedTypes::anonymous_namespace::WriteInstructionsFunctor : public BSScript::UnlinkedTypes::InstructionStream::InstructionFunctor, public NetScriptFramework::IVirtualObject { };

		public interface class BSSearchPath : public NiSearchPath, public NetScriptFramework::IVirtualObject { };

		public interface class BSShaderResourceManager : public IRendererResourceManager, public NetScriptFramework::IVirtualObject { };

		public interface class TESRegionGrassObject : public TESRegionObjectBase, public NetScriptFramework::IVirtualObject { };

		public interface class TESRegionObject : public TESRegionObjectBase, public NetScriptFramework::IVirtualObject { };

		public interface class BSSocketServer : public BSSocket, public NetScriptFramework::IVirtualObject { };

		public interface class BSSphereConstructor : public BSShapeConstructor, public NetScriptFramework::IVirtualObject { };

		public interface class BSStream : public NiStream, public NetScriptFramework::IVirtualObject { };

		public interface class BSTableCurve : public NiRefObject, public NetScriptFramework::IVirtualObject { };

		generic <typename BSTAlignedHeapArrayAllocator_T1>
		public interface class BSTAlignedHeapArrayAllocator : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class AllocatorFunctor : public BSTArrayBase::IAllocatorFunctor, public NetScriptFramework::IVirtualObject { };
		};

		generic <typename BSTArrayAllocatorFunctor_T1>
		public interface class BSTArrayAllocatorFunctor : public BSTArrayBase::IAllocatorFunctor, public NetScriptFramework::IVirtualObject { };

		generic <typename SynchronizedMap_T1, typename SynchronizedMap_T2>
		public interface class SynchronizedMap : public InterfacedClass, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class SynchronizedMapIterator : public NetScriptFramework::IVirtualObject { };
		};

		/// <summary>
		/// INI setting.
		/// </summary>
		public interface class Setting : public NetScriptFramework::IVirtualObject
		{
		public:
			/// <summary>
			/// Gets the name of setting. For example "fMouseHeadingSensitivity:Controls".
			/// </summary>
			property System::String^ Name
			{
				System::String^ __clrcall get();
			}

			/// <summary>
			/// Gets the type of this setting.
			/// </summary>
			property SettingTypes SettingType
			{
				SettingTypes __clrcall get();
			}

			/// <param name="name">The name. This is not case sensitive but must include the section as well.</param>
			/// <param name="searchIni">Search in Skyrim.ini file.</param>
			/// <param name="searchPrefIni">Search in SkyrimPrefs.ini file.</param>
			static Setting^ FindSettingByName(System::String^ name, System::Boolean searchIni, System::Boolean searchPrefIni)
			{
				if(name == nullptr)
					throw gcnew System::ArgumentNullException("name");

				auto func = __VIDS::VID22315.Value;
				auto str = NetScriptFramework::Memory::AllocateString(name, false);

				try
				{
					if(searchIni)
					{
						auto ptr = NetScriptFramework::Memory::ReadPointer(__VIDS::VID524557.Value, false);
						if(ptr != System::IntPtr::Zero)
						{
							auto result = NetScriptFramework::MemoryObject::FromAddress<Setting^>(NetScriptFramework::Memory::InvokeCdecl(func, ptr, str->Address));
							if(result != nullptr) return result;
						}
					}
					if(searchPrefIni)
					{
						auto ptr = NetScriptFramework::Memory::ReadPointer(__VIDS::VID523673.Value, false);
						if(ptr != System::IntPtr::Zero)
						{
							auto result = NetScriptFramework::MemoryObject::FromAddress<Setting^>(Memory::InvokeCdecl(func, ptr, str->Address));
							if(result != nullptr) return result;
						}
					}
				}
				finally
				{
					delete str;
				}
				return nullptr;
			}

			/// <summary>
			/// Gets the value as bool. This is only valid if the type is bool.
			/// </summary>
			System::Boolean GetBool();

			/// <summary>
			/// Gets the value as float. This is only valid if the type is float.
			/// </summary>
			System::Single GetFloat();

			/// <summary>
			/// Gets the value as integer. This is only valid if the type is integer or unsigned integer.
			/// </summary>
			System::Int32 GetInt();

			/// <summary>
			/// Gets the value as string. This is only valid if the type is string.
			/// </summary>
			System::String^ GetString();

			/// <summary>
			/// Sets the value as bool. This is only valid if type is bool.
			/// </summary>
			/// <param name="value">The value to set.</param>
			System::Boolean SetBool(System::Boolean value);

			/// <summary>
			/// Sets the value as float. This is only valid if type is float.
			/// </summary>
			/// <param name="value">The value to set.</param>
			System::Boolean SetFloat(System::Single value);

			/// <summary>
			/// Sets the value as integer. This is only valid if type is integer or unsigned integer.
			/// </summary>
			/// <param name="value">The value to set.</param>
			System::Boolean SetInt(System::Int32 value);

			/// <summary>
			/// Sets the value as string. This is only valid if type is string.
			/// </summary>
			/// <param name="value">The value to set.</param>
			System::Boolean SetString(System::String^ value);
		};

		public interface class UIMessage : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSFixedString^ Menu
			{
				BSFixedString^ __clrcall get();
			}

			property UIMessageTypes MessageType
			{
				UIMessageTypes __clrcall get();
			}

			property IUIMessageData^ Data
			{
				IUIMessageData^ __clrcall get();
			}

			property System::Boolean IsPooled
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class InputEvent : public NetScriptFramework::IVirtualObject
		{
		public:
			property InputDevices DeviceType
			{
				InputDevices __clrcall get();
			}

			property InputEventTypes EventType
			{
				InputEventTypes __clrcall get();
			}

			property InputEvent^ Next
			{
				InputEvent^ __clrcall get();
			}
		};

		public interface class MenuOpenCloseEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSFixedString^ MenuName
			{
				BSFixedString^ __clrcall get();
			}

			property System::Boolean Opening
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class TESTrackedStatsEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSFixedString^ Stat
			{
				BSFixedString^ __clrcall get();
			}

			property System::Int32 Value
			{
				System::Int32 __clrcall get();
			}
		};

		interface class BSTextureDB::anonymous_namespace::NiTextureDBForwarded : public ITextureDB, public NetScriptFramework::IVirtualObject { };

		generic <typename BSTScatterTableKernel_T1>
		public interface class BSTScatterTableKernel : /* BSTScatterTableKernel_T1 */ public BSTScatterTableDefaultHashPolicy1<System::UInt32>, public NetScriptFramework::IMemoryObject { };

		public interface class MenuEventHandler : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Boolean Registered
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class IMovementAvoidanceManager : public BSTSingletonExplicit<IMovementAvoidanceManager^>, public NetScriptFramework::IVirtualObject { };

		public interface class MovementManager : public BSTSingletonExplicit<MovementManager^>, public NetScriptFramework::IMemoryObject { };

		public interface class MovementHandler : public PlayerInputHandler, public NetScriptFramework::IVirtualObject { };

		public interface class LookHandler : public PlayerInputHandler, public NetScriptFramework::IVirtualObject { };

		public interface class ReadyWeaponHandler : public PlayerInputHandler, public NetScriptFramework::IVirtualObject { };

		public interface class ToggleRunHandler : public PlayerInputHandler, public NetScriptFramework::IVirtualObject { };

		public interface class JumpHandler : public PlayerInputHandler, public NetScriptFramework::IVirtualObject { };

		public interface class ShoutHandler : public PlayerInputHandler, public NetScriptFramework::IVirtualObject { };

		public interface class SneakHandler : public PlayerInputHandler, public NetScriptFramework::IVirtualObject { };

		public interface class IStaticAvoidNodeManager : public BSTSingletonExplicit<IStaticAvoidNodeManager^>, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementFormIDManager : public BSTSingletonExplicit<IMovementFormIDManager^>, public NetScriptFramework::IVirtualObject { };

		public interface class RagdollFurnitureListener : public hkpContactListener, public hkpEntityListener, public BSTSingletonExplicit<RagdollFurnitureListener^>, public NetScriptFramework::IVirtualObject { };

		generic <typename MovementAgentNullTracker_T1, typename MovementAgentNullTracker_T2>
		public interface class MovementAgentNullTracker : public IMovementAgentDataTracker<MovementAgentNullTracker_T1, MovementAgentNullTracker_T2>, public BSTSingletonImplicit1<MovementAgentNullTracker<MovementAgentNullTracker_T1, MovementAgentNullTracker_T2>^>, public NetScriptFramework::IVirtualObject { };

		public interface class MovementControllerNullDataTracker : public IMovementControllerDataTracker, public BSTSingletonImplicit1<MovementControllerNullDataTracker^>, public NetScriptFramework::IVirtualObject { };

		interface class MovementSelectIdleUtils::SelectFirstIdleFilter : public ISelectIdleFilter, public BSTSingletonImplicit1<MovementSelectIdleUtils::SelectFirstIdleFilter^>, public NetScriptFramework::IVirtualObject { };

		public interface class NullPathBuilderTracker : public IPathBuilderTracker, public BSTSingletonImplicit1<NullPathBuilderTracker^>, public NetScriptFramework::IVirtualObject { };

		public interface class BSWin32AwardsSystemUtility : public BSAwardsSystemUtility, public NetScriptFramework::IVirtualObject { };

		public interface class BSWin32TaskletGroupData : public BSTaskletGroupData, public NetScriptFramework::IVirtualObject { };

		public interface class BSWin32TaskletManager : public BSTaskletManager, public NetScriptFramework::IVirtualObject { };

		public interface class BSXAudio2AudioListener : public BSAudioListener, public NetScriptFramework::IVirtualObject { };

		public interface class BSXAudio2GameSound : public BSGameSound, public IXAudio2VoiceCallback, public NetScriptFramework::IVirtualObject { };

		public interface class CachedRaycastData : public hkaRaycastInterface, public NetScriptFramework::IVirtualObject { };

		generic <typename CCallback_T1, typename CCallback_T2, typename CCallback_T3>
		public interface class CCallback : public CCallbackBase, public NetScriptFramework::IVirtualObject { };

		generic <typename CCallResult_T1, typename CCallResult_T2>
		public interface class CCallResult : public CCallbackBase, public NetScriptFramework::IVirtualObject { };

		public interface class CellMopp : public NiRefObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class HeightFieldWeldingTasklet : public BSWin32TaskletData, public NetScriptFramework::IVirtualObject { };
		};

		public interface class CharacterCollisionMessagePlayerAdapter : public BSTEventSink<PositionPlayerEvent^>, public NetScriptFramework::IVirtualObject { };

		public interface class CheckGoalReachedFunctor : public ICheckEndReachedFunctor, public NetScriptFramework::IVirtualObject { };

		public interface class CheckParameterReachedFunctor : public ICheckEndReachedFunctor, public NetScriptFramework::IVirtualObject { };

		public interface class CheckStoppedMovingFunctor : public ICheckEndReachedFunctor, public NetScriptFramework::IVirtualObject { };

		public interface class CombatBehaviorResource : public NiRefObject, public NetScriptFramework::IVirtualObject { };

		public interface class CombatBehaviorTreeAcquireWeapon : public CombatBehaviorTree, public NetScriptFramework::IVirtualObject { };

		public interface class CombatBehaviorTreeAction : public CombatBehaviorTree, public NetScriptFramework::IVirtualObject { };

		public interface class CombatBehaviorTreeActionEquipmentSelector : public CombatBehaviorTree, public NetScriptFramework::IVirtualObject { };

		public interface class CombatBehaviorTreeBlock : public CombatBehaviorTree, public NetScriptFramework::IVirtualObject { };

		public interface class CombatBehaviorTreeCheckUnreachableTarget : public CombatBehaviorTree, public NetScriptFramework::IVirtualObject { };

		public interface class CombatBehaviorTreeCloseMovement : public CombatBehaviorTree, public NetScriptFramework::IVirtualObject { };

		public interface class CombatBehaviorTreeCombat : public CombatBehaviorTree, public NetScriptFramework::IVirtualObject { };

		generic <typename CombatBehaviorTreeConditionalNode_T1>
		public interface class CombatBehaviorTreeConditionalNode : public CombatBehaviorTreeNode, public NetScriptFramework::IVirtualObject { };

		generic <typename CombatBehaviorTreeCreateContextNodeBase_T1>
		public interface class CombatBehaviorTreeCreateContextNodeBase : public CombatBehaviorTreeNode, public NetScriptFramework::IVirtualObject { };

		public interface class CombatBehaviorTreeDodgeThreat : public CombatBehaviorTree, public NetScriptFramework::IVirtualObject { };

		public interface class CombatBehaviorTreeExitWater : public CombatBehaviorTree, public NetScriptFramework::IVirtualObject { };

		public interface class CombatBehaviorTreeFindAttackLocation : public CombatBehaviorTree, public NetScriptFramework::IVirtualObject { };

		public interface class CombatBehaviorTreeFlankingMovement : public CombatBehaviorTree, public NetScriptFramework::IVirtualObject { };

		public interface class CombatBehaviorTreeFlee : public CombatBehaviorTree, public NetScriptFramework::IVirtualObject { };

		public interface class CombatBehaviorTreeFlight : public CombatBehaviorTree, public NetScriptFramework::IVirtualObject { };

		public interface class CombatBehaviorTreeHide : public CombatBehaviorTree, public NetScriptFramework::IVirtualObject { };

		public interface class CombatBehaviorTreeLinkNode : public CombatBehaviorTreeNode, public NetScriptFramework::IVirtualObject { };

		public interface class CombatBehaviorTreeLowCombat : public CombatBehaviorTree, public NetScriptFramework::IVirtualObject { };

		public interface class CombatBehaviorTreeMagic : public CombatBehaviorTree, public NetScriptFramework::IVirtualObject { };

		public interface class CombatBehaviorTreeMelee : public CombatBehaviorTree, public NetScriptFramework::IVirtualObject { };

		public interface class CombatBehaviorTreeMovement : public CombatBehaviorTree, public NetScriptFramework::IVirtualObject { };

		generic <typename CombatBehaviorTreeNodeCondition_T1>
		public interface class CombatBehaviorTreeNodeCondition : public CombatBehaviorTreeNode, public NetScriptFramework::IVirtualObject { };

		generic <typename CombatBehaviorTreeNodeEvaluateFunction_T1>
		public interface class CombatBehaviorTreeNodeEvaluateFunction : public CombatBehaviorTreeNode, public NetScriptFramework::IVirtualObject { };

		generic <typename CombatBehaviorTreeNodeObjectBase_T1>
		public interface class CombatBehaviorTreeNodeObjectBase : public CombatBehaviorTreeNode, public NetScriptFramework::IVirtualObject { };

		generic <typename CombatBlackboardKey_T1>
		public interface class CombatBlackboardKey : public CombatBlackboardKeyBase, public NetScriptFramework::IVirtualObject { };

		generic <typename CombatBehaviorTreeNodeUpdateFunction_T1>
		public interface class CombatBehaviorTreeNodeUpdateFunction : public CombatBehaviorTreeNode, public NetScriptFramework::IVirtualObject { };

		public interface class CombatBehaviorTreeRanged : public CombatBehaviorTree, public NetScriptFramework::IVirtualObject { };

		public interface class CombatBehaviorTreeRangedMovement : public CombatBehaviorTree, public NetScriptFramework::IVirtualObject { };

		public interface class CombatBehaviorTreeReturnToCombatArea : public CombatBehaviorTree, public NetScriptFramework::IVirtualObject { };

		public interface class CombatBehaviorTreeRootNode : public CombatBehaviorTreeNode, public NetScriptFramework::IVirtualObject { };

		public interface class CombatBehaviorTreeSearch : public CombatBehaviorTree, public NetScriptFramework::IVirtualObject { };

		public interface class CombatBehaviorTreeShout : public CombatBehaviorTree, public NetScriptFramework::IVirtualObject { };

		public interface class CombatBehaviorTreeUseCover : public CombatBehaviorTree, public NetScriptFramework::IVirtualObject { };

		public interface class CombatBehaviorTreeUsePotion : public CombatBehaviorTree, public NetScriptFramework::IVirtualObject { };

		public interface class CombatBehaviorTreeWrapperNode : public CombatBehaviorTreeNode, public NetScriptFramework::IVirtualObject { };

		public interface class CombatMagicItemData : public MagicItemTraversalFunctor, public NetScriptFramework::IVirtualObject { };

		public interface class CombatMagicItemSkillChecker : public MagicItemTraversalFunctor, public NetScriptFramework::IVirtualObject { };

		public interface class CombatNavmeshSearch : public AStarSearch<BSFastNavmeshTriLocation^, BSFastNavmeshEdgeHandle^, UnknownGenArg_3^>, public NetScriptFramework::IVirtualObject { };

		public interface class CombatPathBuilder : public IPathBuilder, public NetScriptFramework::IVirtualObject { };

		generic <typename ConcreteExplosionFactory_T1, typename ConcreteExplosionFactory_T2>
		public interface class ConcreteExplosionFactory : public IExplosionFactory, public NetScriptFramework::IVirtualObject { };

		generic <typename ConcreteFormFactory_T1, typename ConcreteFormFactory_T2>
		public interface class ConcreteFormFactory : public IFormFactory, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::String^ Name
			{
				System::String^ __clrcall get();
			}
		};

		public interface class ScriptVariable : public NetScriptFramework::IMemoryObject
		{
		public:
			property ScriptLocal^ Data
			{
				ScriptLocal^ __clrcall get();
			}

			property BSString^ Name
			{
				BSString^ __clrcall get();
			}
		};

		generic <typename ConcreteTempEffectFactory_T1, typename ConcreteTempEffectFactory_T2>
		public interface class ConcreteTempEffectFactory : public ITempEffectFactory, public NetScriptFramework::IVirtualObject { };

		public interface class RefAttachTechniqueInput : public BSAttachTechniques::AttachTechniqueInput, public NetScriptFramework::IVirtualObject { };

		public interface class ImageData : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSFixedString^ FilePath
			{
				BSFixedString^ __clrcall get();
			}
		};

		public interface class CustomActorPackageData : public ActorPackageData, public NetScriptFramework::IVirtualObject { };

		interface class CustomUtils::HasForceGreetVisitor : public IProcedureTreeVisitor, public NetScriptFramework::IVirtualObject { };

		public interface class DebugText : public IDebugText, public NetScriptFramework::IVirtualObject { };

		public interface class DetectSignOut : public BSTEventSink<BSSystemEvent^>, public NetScriptFramework::IVirtualObject { };

		public interface class DoorObstacleAdapter : public BSTEventSink<TESOpenCloseEvent^>, public NetScriptFramework::IVirtualObject { };

		public interface class EscortActorPackageData : public ActorPackageData, public NetScriptFramework::IVirtualObject { };

		public interface class ExtraAlphaCutoff : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::SByte Cutoff
			{
				System::SByte __clrcall get();
			}

			property System::SByte OriginalCutoff
			{
				System::SByte __clrcall get();
			}
		};

		public interface class ExtraAmmo : public BSExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class ExtraAnimNoteReceiver : public BSExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class ExtraAshPileRef : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::UInt32 AshPileRefHandle
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class ExtraAttachRef : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::UInt32 AttachRefHandle
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class ExtraBadPosition : public BSExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class ExtraCachedScale : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Single Scale3D
			{
				System::Single __clrcall get();
			}

			property System::Single RefScale
			{
				System::Single __clrcall get();
			}
		};

		public interface class ExtraCannotWear : public BSExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class ExtraCanTalkToPlayer : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Boolean Talk
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class ExtraCharge : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Single ChargeAmount
			{
				System::Single __clrcall get();
			}
		};

		public interface class ExtraCollisionData : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property CollisionLayers CollisionLayer
				{
					CollisionLayers __clrcall get();
				}
			};

			property ExtraCollisionData::Data^ CollisionData
			{
				ExtraCollisionData::Data^ __clrcall get();
			}
		};

		public interface class ExtraCount : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Int16 Count
			{
				System::Int16 __clrcall get();
			}
		};

		public interface class ExtraDetachTime : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Int32 Time
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class ExtraEditorID : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			/// <summary>
			/// Gets the editor name.
			/// </summary>
			property BSFixedString^ Name
			{
				BSFixedString^ __clrcall get();
			}
		};

		public interface class ExtraEnableStateParent : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::SByte Flags
			{
				System::SByte __clrcall get();
			}

			property System::UInt32 ParentRefHandle
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class ExtraFavorCost : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Single FavorCost
			{
				System::Single __clrcall get();
			}
		};

		public interface class ExtraFlags : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DataFlags : System::UInt32
			{
				None = 0,
				BlockActivate = 1,
				BlockPlayerActivate = 2,
				BlockLoadEvents = 4,
				BlockActivateText = 8,
				PlayerHasTaken = 0x20,
			};

			property ExtraFlags::DataFlags Flags
			{
				ExtraFlags::DataFlags __clrcall get();
			}
		};

		public interface class ExtraForcedLandingMarker : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::UInt32 LandingMarkerRefHandle
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class ExtraForcedTarget : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::UInt32 TargetRefHandle
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class ExtraGhost : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Boolean Ghost
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class ExtraGIDBuffer : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::IntPtr Buffer
			{
				System::IntPtr __clrcall get();
			}
		};

		public interface class ExtraHasNoRumors : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Boolean NoRumors
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class ExtraHeadingTarget : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::UInt32 TargetRefHandle
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class ExtraHeadTrackingWeight : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Single Weight
			{
				System::Single __clrcall get();
			}
		};

		public interface class ExtraHealth : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Single Health
			{
				System::Single __clrcall get();
			}
		};

		public interface class ExtraHealthPerc : public BSExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class ExtraHorse : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::UInt32 HorseRefHandle
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class ExtraHotkey : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class Hotkeys : System::SByte
			{
				Unbound = -1,
				Slot1 = 0,
				Slot2 = 1,
				Slot3 = 2,
				Slot4 = 3,
				Slot5 = 4,
				Slot6 = 5,
				Slot7 = 6,
				Slot8 = 7,
			};

			property ExtraHotkey::Hotkeys Hotkey
			{
				ExtraHotkey::Hotkeys __clrcall get();
			}
		};

		public interface class ExtraIgnoredBySandbox : public BSExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class ExtraInfoGeneralTopic : public BSExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class ExtraItemDropper : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::UInt32 DropperRefHandle
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class ExtraLastFinishedSequence : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSFixedString^ LastSequenceName
			{
				BSFixedString^ __clrcall get();
			}
		};

		public interface class ExtraLevCreaModifier : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class Modifiers : System::Int32
			{
				Easy = 0,
				Medium = 1,
				Hard = 2,
				VeryHard = 3,
				None = 4,
			};

			property ExtraLevCreaModifier::Modifiers Modifier
			{
				ExtraLevCreaModifier::Modifiers __clrcall get();
			}
		};

		public interface class ExtraLeveledItem : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::UInt32 LeveledItemFormId
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class ExtraLight : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data;

			property ExtraLight::Data^ LightData
			{
				ExtraLight::Data^ __clrcall get();
			}
		};

		public interface class ExtraLightData : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Single Fov
				{
					System::Single __clrcall get();
				}

				property System::Single Fade
				{
					System::Single __clrcall get();
				}

				property System::Single EndDistanceCap
				{
					System::Single __clrcall get();
				}

				property System::Single ShadowDepthBias
				{
					System::Single __clrcall get();
				}
			};

			property ExtraLightData::Data^ LightData
			{
				ExtraLightData::Data^ __clrcall get();
			}
		};

		public interface class ExtraMapMarker : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DataFlags : System::Byte
			{
				None = 0,
				Visible = 1,
				CanTravelTo = 2,
				ShowAllHidden = 4,
			};

			enum class MapMarkerTypes : System::Byte
			{
				None = 0,
				City = 1,
				Town = 2,
				Settlement = 3,
				Cave = 4,
				Camp = 5,
				Fort = 6,
				NordicRuins = 7,
				DwemerRuin = 8,
				Shipwreck = 9,
				Grove = 0xA,
				Landmark = 0xB,
				DragonLair = 0xC,
				Farm = 0xD,
				WoodMill = 0xE,
				Mine = 0xF,
				ImperialCamp = 0x10,
				StormcloakCamp = 0x11,
				Doomstone = 0x12,
				WheatMill = 0x13,
				Smelter = 0x14,
				Stable = 0x15,
				ImperialTower = 0x16,
				Clearing = 0x17,
				Pass = 0x18,
				Alter = 0x19,
				Rock = 0x1A,
				Lighthouse = 0x1B,
				OrcStronghold = 0x1C,
				GiantCamp = 0x1D,
				Shack = 0x1E,
				NordicTower = 0x1F,
				NordicDwelling = 0x20,
				Docks = 0x21,
				Shrine = 0x22,
				RiftenCastle = 0x23,
				RiftenCapitol = 0x24,
				WindhelmCastle = 0x25,
				WindhelmCapitol = 0x26,
				WhiterunCastle = 0x27,
				WhiterunCapitol = 0x28,
				SolitudeCastle = 0x29,
				SolitudeCapitol = 0x2A,
				MarkarthCastle = 0x2B,
				MarkarthCapitol = 0x2C,
				WinterholdCastle = 0x2D,
				WinterholdCapitol = 0x2E,
				MorthalCastle = 0x2F,
				MorthalCapitol = 0x30,
				FalkreathCastle = 0x31,
				FalkreathCapitol = 0x32,
				DawnstarCastle = 0x33,
				DawnstarCapitol = 0x34,
				DLC02_TempleOfMiraak = 0x35,
				DLC02_RavenRock = 0x36,
				DLC02_BeastStone = 0x37,
				DLC02_TelMithryn = 0x38,
				DLC02_ToSkyrim = 0x39,
				DLC02_ToSolstheim = 0x3A,
			};

			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESFullName^ LocationName
				{
					TESFullName^ __clrcall get();
				}

				property ExtraMapMarker::DataFlags MarkerFlags
				{
					ExtraMapMarker::DataFlags __clrcall get();
				}

				property ExtraMapMarker::MapMarkerTypes MarkerType
				{
					ExtraMapMarker::MapMarkerTypes __clrcall get();
				}
			};

			property ExtraMapMarker::Data^ MarkerData
			{
				ExtraMapMarker::Data^ __clrcall get();
			}
		};

		public interface class ExtraMissingLinkedRefIDs : public BSExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class ExtraMissingRefIDs : public BSExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class ExtraNavMeshPortal : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data;

			interface class DataTarget;

			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property ExtraNavMeshPortal::DataTarget^ NavMeshTarget
				{
					ExtraNavMeshPortal::DataTarget^ __clrcall get();
				}

				property System::UInt16 TriIndex
				{
					System::UInt16 __clrcall get();
				}
			};

			property ExtraNavMeshPortal::Data^ PortalData
			{
				ExtraNavMeshPortal::Data^ __clrcall get();
			}
		};

		public interface class ExtraNorthRotation : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Single NorthRotation
			{
				System::Single __clrcall get();
			}
		};

		public interface class ExtraObjectHealth : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Single Health
			{
				System::Single __clrcall get();
			}
		};

		public interface class ExtraOcclusionPlaneRefData : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property NetScriptFramework::FixedMemoryArray<System::UInt32>^ LinkedRefHandles
				{
					NetScriptFramework::FixedMemoryArray<System::UInt32>^ __clrcall get();
				}
			};

			property ExtraOcclusionPlaneRefData::Data^ RefData
			{
				ExtraOcclusionPlaneRefData::Data^ __clrcall get();
			}
		};

		public interface class ExtraOpenCloseActivateRef : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::UInt32 ActivateRefHandle
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class ExtraOriginalReference : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::UInt32 OriginalRefHandle
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class ExtraOutfitItem : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::UInt32 OutfitFormId
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class ExtraPackage : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Int32 Index
			{
				System::Int32 __clrcall get();
			}

			property System::UInt32 TargetRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property System::Boolean ActionComplete
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean Activated
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean DoneOnce
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class ExtraPackageData : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property ActorPackageData^ PackageData
			{
				ActorPackageData^ __clrcall get();
			}
		};

		public interface class ExtraPatrolRefData : public BSExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class ExtraPatrolRefInUseData : public BSExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class ExtraPortalRefData : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property NetScriptFramework::FixedMemoryArray<System::UInt32>^ RefHandles
				{
					NetScriptFramework::FixedMemoryArray<System::UInt32>^ __clrcall get();
				}
			};

			property ExtraPortalRefData::Data^ PortalData
			{
				ExtraPortalRefData::Data^ __clrcall get();
			}
		};

		public interface class ExtraPrimitive : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BGSPrimitive^ Primitive
			{
				BGSPrimitive^ __clrcall get();
			}
		};

		public interface class ExtraProcessMiddleLow : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Int32 RefCount
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class ExtraRadius : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Single Radius
			{
				System::Single __clrcall get();
			}
		};

		public interface class ExtraRagDollData : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class RagDollData;

			interface class RagDollBone;

			property ExtraRagDollData::RagDollData^ Data
			{
				ExtraRagDollData::RagDollData^ __clrcall get();
			}
		};

		public interface class ExtraRank : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Int32 Rank
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class ExtraReferenceHandle : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::UInt32 RefHandle
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class ExtraRefractionProperty : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Single RefractionPower
			{
				System::Single __clrcall get();
			}
		};

		public interface class MarkerUsedData : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::UInt32 ActorInMarkerRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 MarkerId
			{
				System::UInt32 __clrcall get();
			}

			property AITimeStamp^ Expiration
			{
				AITimeStamp^ __clrcall get();
			}
		};

		public interface class ExtraResourcesPreload : public BSExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class ExtraRoomRefData : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data;

			property ExtraRoomRefData::Data^ RoomRefData
			{
				ExtraRoomRefData::Data^ __clrcall get();
			}
		};

		public interface class BGSLoadGameSubBuffer : public NetScriptFramework::IMemoryObject
		{
		public:
			property BGSSaveLoadBuffer^ Buffer
			{
				BGSSaveLoadBuffer^ __clrcall get();
			}
		};

		public interface class ExtraScale : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Single Scale
			{
				System::Single __clrcall get();
			}
		};

		public interface class ExtraSeenData : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property SeenData^ Data
			{
				SeenData^ __clrcall get();
			}
		};

		public interface class ExtraShouldWear : public BSExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class ExtraSoul : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property SoulLevels SoulLevel
			{
				SoulLevels __clrcall get();
			}
		};

		public interface class ExtraSpawnContainer : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::UInt32 ContainerRefHandle
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class ExtraTeleport : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data;

			property ExtraTeleport::Data^ TeleportData
			{
				ExtraTeleport::Data^ __clrcall get();
			}
		};

		public interface class ExtraTerminalState : public BSExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class ExtraTimeLeft : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Single Time
			{
				System::Single __clrcall get();
			}
		};

		public interface class ExtraUniqueID : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::UInt32 BaseFormId
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt16 UniqueId
			{
				System::UInt16 __clrcall get();
			}
		};

		public interface class ExtraWaterData : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::IntPtr Buffer
				{
					System::IntPtr __clrcall get();
				}

				property System::Int32 BufferSize
				{
					System::Int32 __clrcall get();
				}

				property System::Int32 EffectiveSize
				{
					System::Int32 __clrcall get();
				}

				property System::Int32 Count
				{
					System::Int32 __clrcall get();
				}
			};

			property ExtraWaterData::Data^ CurrentArray
			{
				ExtraWaterData::Data^ __clrcall get();
			}
		};

		public interface class ExtraWorn : public BSExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class ExtraWornLeft : public BSExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class MagicItemFindFunctor : public MagicItemTraversalFunctor, public NetScriptFramework::IVirtualObject { };

		public interface class FindTriangleForLocationFilterCheckDeltaZ : public FindTriangleForLocationFilter, public NetScriptFramework::IVirtualObject { };

		public interface class FOIslandActivationListener : public hkpIslandActivationListener, public hkpEntityListener, public NetScriptFramework::IVirtualObject { };

		generic <typename FxResponseArgs_T1>
		public interface class FxResponseArgs : public FxResponseArgsBase, public NetScriptFramework::IVirtualObject
		{
		public:
			property GFxValue^ BaseValue
			{
				GFxValue^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<GFxValue^>^ Values
			{
				NetScriptFramework::FixedMemoryArray<GFxValue^>^ __clrcall get();
			}

			property System::Int32 Index
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class FxResponseArgsList : public FxResponseArgsBase, public NetScriptFramework::IVirtualObject { };

		public interface class GetCostliestEffectFunctor : public MagicItemTraversalFunctor, public NetScriptFramework::IVirtualObject { };

		public interface class GetMagicItemDescriptionFunctor : public MagicItemTraversalFunctor, public NetScriptFramework::IVirtualObject { };

		public interface class GroundPathPathingNodeGenerator : public IPathingNodeGenerator, public NetScriptFramework::IVirtualObject { };

		public interface class GroundPathRayValidator : public ISmoothingRayValidator, public NetScriptFramework::IVirtualObject { };

		public interface class GuardActorPackageData : public ActorPackageData, public NetScriptFramework::IVirtualObject { };

		public interface class GuardPackageData : public TESPackageData, public NetScriptFramework::IVirtualObject { };

		public interface class HealthDamageFunctor : public MagicItemTraversalFunctor, public NetScriptFramework::IVirtualObject { };

		public interface class HighActorCuller : public MobIterOperator, public NetScriptFramework::IVirtualObject { };

		public interface class hkaBone : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkConstraintCinfo : public hkSerializableCinfo, public NetScriptFramework::IVirtualObject { };

		public interface class hkClassEnum : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Item : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			enum class FlagValues : System::Int32
			{
				FLAGS_NONE = 0,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkContainerHeapAllocator::Allocator : public hkMemoryAllocator, public NetScriptFramework::IVirtualObject { };

		public interface class hkCpuWorldLinearCastCollector : public hkpBroadPhaseCastCollector, public hkKdTreeCastCollector, public hkAabbTreeQueryUtils<hkAabbTreeData::hkAabbTreeAabb^, System::UInt16>::Collector, public hkAabbTreeQueryUtils<hkAabbTreeData::hkAabbTreeAabb16^, System::UInt16>::Collector, public NetScriptFramework::IVirtualObject { };

		public interface class hkDataClassImpl : public hkDataRefCounted, public NetScriptFramework::IVirtualObject { };

		public interface class hkFreeList : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Element : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Block : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkDummyMemoryTrackerImpl : public hkMemoryTracker, public NetScriptFramework::IVirtualObject { };

		public interface class hkHeightFieldRayForwardingCollector : public hkpRayHitCollector, public NetScriptFramework::IVirtualObject { };

		public interface class hkLifoAllocator : public hkMemoryAllocator, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Implementation : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpAllCdPointTempCollector : public hkpCdPointCollector, public NetScriptFramework::IVirtualObject { };

		public interface class hkpAllRayHitTempCollector : public hkpRayHitCollector, public NetScriptFramework::IVirtualObject { };

		public interface class hkpMaterial : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class ResponseType : System::Int32
			{
				RESPONSE_INVALID = 0,
				RESPONSE_SIMPLE_CONTACT = 1,
				RESPONSE_REPORTING = 2,
				RESPONSE_NONE = 3,
				RESPONSE_MAX_ID = 4,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		generic <typename hkpSymmetricAgent_T1>
		public interface class hkpSymmetricAgent : public hkpSymmetricAgentLinearCast<hkpSymmetricAgent_T1>, public NetScriptFramework::IVirtualObject { };

		public interface class hkpSymmetricAgentFlipCollector : public hkpCdPointCollector, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkThreadMemory : public hkMemoryAllocator, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class FreeList : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class FreeElem : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkTrackerTypeTreeNode : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Type : System::Int32
			{
				TYPE_UNKNOWN = 0,
				TYPE_POINTER = 1,
				TYPE_REFERENCE = 2,
				TYPE_CLASS_TEMPLATE = 3,
				TYPE_INT8 = 4,
				TYPE_INT16 = 5,
				TYPE_INT32 = 6,
				TYPE_INT64 = 7,
				TYPE_UINT8 = 8,
				TYPE_UINT16 = 9,
				TYPE_UINT32 = 0xA,
				TYPE_UINT64 = 0xB,
				TYPE_FLOAT32 = 0xC,
				TYPE_FLOAT64 = 0xD,
				TYPE_BOOL = 0xE,
				TYPE_VOID = 0xF,
				TYPE_NAMED = 0x10,
				TYPE_ENUM = 0x11,
				TYPE_CLASS = 0x12,
				TYPE_ARRAY = 0x13,
				TYPE_INT_VALUE = 0x14,
				TYPE_END = 0x15,
			};
		};

		public interface class IGiftMenuScriptCallback : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

		public interface class ImageSpaceEffectBlur : public ImageSpaceEffect, public NetScriptFramework::IVirtualObject { };

		public interface class ImageSpaceEffectOption : public ImageSpaceEffect, public NetScriptFramework::IVirtualObject { };

		public interface class ImageSpaceEffectFullScreenBlur : public ImageSpaceEffect, public NetScriptFramework::IVirtualObject { };

		public interface class ImageSpaceEffectGetHit : public ImageSpaceEffect, public NetScriptFramework::IVirtualObject { };

		public interface class ImageSpaceEffectHDR : public ImageSpaceEffect, public NetScriptFramework::IVirtualObject { };

		public interface class ImageSpaceEffectMap : public ImageSpaceEffect, public NetScriptFramework::IVirtualObject { };

		public interface class ImageSpaceEffectNoise : public ImageSpaceEffect, public NetScriptFramework::IVirtualObject { };

		public interface class ImageSpaceEffectRadialBlur : public ImageSpaceEffect, public NetScriptFramework::IVirtualObject { };

		public interface class ImageSpaceEffectRefraction : public ImageSpaceEffect, public NetScriptFramework::IVirtualObject { };

		public interface class ImageSpaceEffectWaterDisplacement : public ImageSpaceEffect, public NetScriptFramework::IVirtualObject { };

		public interface class ImageSpaceEffectVolumetricLighting : public ImageSpaceEffect, public NetScriptFramework::IVirtualObject { };

		public interface class ImageSpaceEffectWorldMap : public ImageSpaceEffect, public NetScriptFramework::IVirtualObject { };

		public interface class ImageSpaceShaderParam : public ImageSpaceEffectParam, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementDirectControl : public IMovementInterface, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementMessageInterface : public IMovementInterface, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementMotionDrivenControl : public IMovementInterface, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementPlannerDirectControl : public IMovementInterface, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementSelectIdle : public IMovementInterface, public NetScriptFramework::IVirtualObject { };

		public interface class InstantInteractionCallback : public IAnimationSetCallbackFunctor, public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

		public interface class IntSeenData : public SeenData, public NetScriptFramework::IVirtualObject { };

		public interface class LargestAreaFunctor : public MagicItemTraversalFunctor, public NetScriptFramework::IVirtualObject { };

		public interface class LoadedAreaBound : public NiRefObject, public NetScriptFramework::IVirtualObject { };

		public interface class LoadGameMagicCasterVisitor : public SaveLoadMagicCasterVisitor, public NetScriptFramework::IVirtualObject { };

		public interface class LongestDurationFunctor : public MagicItemTraversalFunctor, public NetScriptFramework::IVirtualObject { };

		public interface class MagicItemDataCollector : public MagicItemTraversalFunctor, public NetScriptFramework::IVirtualObject { };

		public interface class MemoryManagerFile : public IMemoryManagerFile, public NetScriptFramework::IVirtualObject { };

		public interface class MessageHandler : public BSCoreMessage, public NetScriptFramework::IVirtualObject { };

		public interface class ModManagerData : public IUIMessageData, public NetScriptFramework::IVirtualObject { };

		generic <typename MovementArbitrationScheme_T1>
		public interface class MovementArbitrationScheme : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

		public interface class MovementAvoidBoxEventAdapter : public BSTEventSink<PositionPlayerEvent^>, public NetScriptFramework::IVirtualObject { };

		public interface class MovementControllerAI : public IMovementControllerRegisterInterface, public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

		interface class MovementSelectIdleUtils::SelectClosestIdleToPath : public ISelectIdleFilter, public NetScriptFramework::IVirtualObject { };

		public interface class NavMeshSearchClosePoint : public AStarSearch<BSFastNavmeshTriLocation^, BSFastNavmeshEdgeHandle^, UnknownGenArg_3^>, public NetScriptFramework::IVirtualObject { };

		public interface class NavMeshSearchFitSphere : public AStarSearch<BSFastNavmeshTriLocation^, System::IntPtr, UnknownGenArg_3^>, public NetScriptFramework::IVirtualObject { };

		public interface class NavMeshSearchFlee : public AStarSearch<BSFastNavmeshTriLocation^, BSFastNavmeshEdgeHandle^, UnknownGenArg_3^>, public NetScriptFramework::IVirtualObject { };

		public interface class NavMeshSearchLOS : public AStarSearch<BSFastNavmeshTriLocation^, BSFastNavmeshEdgeHandle^, UnknownGenArg_3^>, public NetScriptFramework::IVirtualObject { };

		public interface class NiBoxBV : public NiBoundingVolume, public NetScriptFramework::IVirtualObject { };

		public interface class NiBoxCapsuleIntersector : public NiIntersector, public NetScriptFramework::IVirtualObject { };

		public interface class NiBoxSphereIntersector : public NiIntersector, public NetScriptFramework::IVirtualObject { };

		public interface class NiCapsuleBV : public NiBoundingVolume, public NetScriptFramework::IVirtualObject { };

		public interface class NiCapsuleCapsuleIntersector : public NiIntersector, public NetScriptFramework::IVirtualObject { };

		public interface class NiCapsuleSphereIntersector : public NiIntersector, public NetScriptFramework::IVirtualObject { };

		public interface class NiCapsuleTriIntersector : public NiIntersector, public NetScriptFramework::IVirtualObject { };

		generic <typename NiTObjectSet_T1>
		public interface class NiTObjectSet : public NiTSet<NiTObjectSet_T1, NiTNewInterface<NiTObjectSet_T1>^>, public NetScriptFramework::IMemoryObject { };

		generic <typename NiTLargePrimitiveArray_T1>
		public interface class NiTLargePrimitiveArray : public NiTLargeArray<NiTLargePrimitiveArray_T1, NiTMallocInterface<NiTLargePrimitiveArray_T1>^>, public NetScriptFramework::IVirtualObject { };

		public interface class NiHalfSpaceBV : public NiBoundingVolume, public NetScriptFramework::IVirtualObject { };

		public interface class NiMemStream : public NiBinaryStream, public NetScriptFramework::IVirtualObject { };

		public interface class NiOBBLeaf : public NiOBBNode, public NetScriptFramework::IVirtualObject { };

		generic <typename NiTScrapArray_T1>
		public interface class NiTScrapArray : public NiTArray<NiTScrapArray_T1, NiTScrapHeapInterface<NiTScrapArray_T1>^>, public NetScriptFramework::IVirtualObject { };

		public interface class NiSphereBV : public NiBoundingVolume, public NetScriptFramework::IVirtualObject { };

		public interface class NiSphereTriIntersector : public NiIntersector, public NetScriptFramework::IVirtualObject { };

		public interface class NiStandardAllocator : public NiAllocator, public NetScriptFramework::IVirtualObject { };

		interface class NiStream::BackgroundLoadProcedure : public NiThreadProcedure, public NetScriptFramework::IVirtualObject { };

		generic <typename NiTPrimitiveSet_T1>
		public interface class NiTPrimitiveSet : public NiTSet<NiTPrimitiveSet_T1, NiTMallocInterface<NiTPrimitiveSet_T1>^>, public NetScriptFramework::IMemoryObject { };

		public interface class NiTextKeyMatch : public NiRefObject, public NetScriptFramework::IVirtualObject { };

		generic <typename NiTLargeObjectArray_T1>
		public interface class NiTLargeObjectArray : public NiTLargeArray<NiTLargeObjectArray_T1, NiTNewInterface<NiTLargeObjectArray_T1>^>, public NetScriptFramework::IVirtualObject { };

		generic <typename NiTPrimitiveArray_T1>
		public interface class NiTPrimitiveArray : public NiTArray<NiTPrimitiveArray_T1, NiTMallocInterface<NiTPrimitiveArray_T1>^>, public NetScriptFramework::IVirtualObject { };

		public interface class NiUnionBV : public NiBoundingVolume, public NetScriptFramework::IVirtualObject { };

		public interface class NullMovementSelectIdleResult : public IMovementPlayIdleResult, public NetScriptFramework::IVirtualObject { };

		public interface class OwnedController : public ReferenceEffectController, public NetScriptFramework::IVirtualObject { };

		public interface class PackageCreator : public IFormFactory, public NetScriptFramework::IVirtualObject { };

		public interface class PathFollowerStateFollowPathToParameter : public IPathFollowerState, public NetScriptFramework::IVirtualObject { };

		public interface class PathFollowerStateKeepLastDirection : public IPathFollowerState, public NetScriptFramework::IVirtualObject { };

		public interface class PathFollowerStatePlayIdle : public IPathFollowerState, public NetScriptFramework::IVirtualObject { };

		public interface class PathFollowerStateTurnToAngle : public IPathFollowerState, public NetScriptFramework::IVirtualObject { };

		public interface class PathingCoverLocation : public BSPathingLocation, public NetScriptFramework::IVirtualObject { };

		public interface class PathingNumericIDVisitor : public BSPathingNumericIDVisitor, public NetScriptFramework::IVirtualObject { };

		public interface class PathingStreamLoadGame : public BSPathingStreamRead, public NetScriptFramework::IVirtualObject { };

		public interface class PathingStreamMasterFileRead : public BSPathingStreamRead, public NetScriptFramework::IVirtualObject { };

		public interface class PathingStreamSaveGame : public BSPathingStreamWrite, public NetScriptFramework::IVirtualObject { };

		public interface class PathManagerPositionPlayerAdapter : public BSTEventSink<PositionPlayerEvent^>, public BSTEventSink<TESSleepStartEvent^>, public BSTEventSink<TESSleepStopEvent^>, public BSTEventSink<TESWaitStartEvent^>, public BSTEventSink<TESWaitStopEvent^>, public NetScriptFramework::IVirtualObject { };

		public interface class PathSmootherRayCastUsePreferredTris : public IPathSmootherRayCast, public NetScriptFramework::IVirtualObject { };

		public interface class PathSmootherRayCastUseTrianglePath : public IPathSmootherRayCast, public NetScriptFramework::IVirtualObject { };

		public interface class PatrolActorPackageData : public ActorPackageData, public NetScriptFramework::IVirtualObject { };

		public interface class PlayerActionObject : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Single Timer
			{
				System::Single __clrcall get();
			}

			property System::UInt32 ObjRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property PlayerActions Next
			{
				PlayerActions __clrcall get();
			}
		};

		public interface class PlayerSleepWaitMovementControllerAdapter : public BSTEventSink<TESSleepStartEvent^>, public BSTEventSink<TESSleepStopEvent^>, public BSTEventSink<TESWaitStartEvent^>, public BSTEventSink<TESWaitStopEvent^>, public BSTEventSink<PositionPlayerEvent^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class SwitchToLoadedSetControllerFunctor : public NetScriptFramework::IVirtualObject { };

			interface class SwitchToUnloadedSetControllerFunctor : public IMovementControllerNPCFunctor, public NetScriptFramework::IVirtualObject { };
		};

		public interface class ProcessCallbackAdapter : public IAnimationSetCallbackFunctor, public NetScriptFramework::IVirtualObject { };

		public interface class BSSemaphore : public BSSemaphoreBase, public NetScriptFramework::IMemoryObject { };

		public interface class ProjectilePickCache : public NiRefObject, public NetScriptFramework::IVirtualObject { };

		public interface class Reset3DMobIterator : public MobIterOperator, public NetScriptFramework::IVirtualObject { };

		public interface class RevertSelectedSpellFunctor : public SaveLoadMagicCasterVisitor, public NetScriptFramework::IVirtualObject { };

		public interface class RunActionAnimationLoadedCallback : public IAnimationSetCallbackFunctor, public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

		public interface class SandBoxActorPackageData : public ActorPackageData, public NetScriptFramework::IVirtualObject { };

		public interface class SaveGameMagicCasterVisitor : public SaveLoadMagicCasterVisitor, public NetScriptFramework::IVirtualObject { };

		public interface class SkyEffectController : public ReferenceEffectController, public NetScriptFramework::IVirtualObject { };

		interface class SkyrimScript::anonymous_namespace::ProfileCallQueryTranslator : public SkyrimScript::Internal::IProfileCallQuery, public NetScriptFramework::IVirtualObject { };

		interface class SkyrimScript::anonymous_namespace::RawProfileCallQuery : public SkyrimScript::Internal::IProfileCallQuery, public NetScriptFramework::IVirtualObject { };

		public interface class SumHostileEffectsFunctor : public MagicItemTraversalFunctor, public NetScriptFramework::IVirtualObject { };

		generic <typename SynchronizedQueue_T1>
		public interface class SynchronizedQueue : public InterfacedClass, public NetScriptFramework::IVirtualObject { };

		public interface class SystemEventAdapter : public BSTEventSink<BSSystemEvent^>, public NetScriptFramework::IVirtualObject { };

		public interface class WeaponAnimationGraphManagerHolder : public IAnimationGraphManagerHolder, public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

		public interface class TeleportDoorSearch : public AStarSearch<ParentSpaceNode^, TeleportLink^, UnknownGenArg_1^>, public NetScriptFramework::IVirtualObject { };

		public interface class TempLoadGameBuffer : public BGSLoadGameBuffer, public NetScriptFramework::IVirtualObject { };

		public interface class TESAmbushPackageData : public TESPackageData, public NetScriptFramework::IVirtualObject { };

		public interface class TESAnimGroup : public NiRefObject, public NetScriptFramework::IVirtualObject { };

		public interface class BGSPackageDataList : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::IntPtr Data
			{
				System::IntPtr __clrcall get();
			}

			property System::IntPtr Uids
			{
				System::IntPtr __clrcall get();
			}

			property System::UInt16 DataSize
			{
				System::UInt16 __clrcall get();
			}

			property System::SByte NextUID
			{
				System::SByte __clrcall get();
			}
		};

		public interface class TESDialoguePackageData : public TESPackageData, public NetScriptFramework::IVirtualObject { };

		public interface class TESEatPackageData : public TESPackageData, public NetScriptFramework::IVirtualObject { };

		public interface class TESEscortPackageData : public TESPackageData, public NetScriptFramework::IVirtualObject { };

		public interface class TESFollowPackageData : public TESPackageData, public NetScriptFramework::IVirtualObject { };

		public interface class TESHealthForm : public BaseFormComponent, public NetScriptFramework::IVirtualObject { };

		public interface class TESModelLODList : public BaseFormComponent, public NetScriptFramework::IVirtualObject { };

		public interface class TESPatrolPackageData : public TESPackageData, public NetScriptFramework::IVirtualObject { };

		public interface class TESRegionDataGrass : public TESRegionData, public NetScriptFramework::IVirtualObject { };

		public interface class TESRegionDataMap : public TESRegionData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSFixedString^ MapName
			{
				BSFixedString^ __clrcall get();
			}
		};

		public interface class TESRegionDataObjects : public TESRegionData, public NetScriptFramework::IVirtualObject { };

		public interface class TESUseItemPackageData : public TESPackageData, public NetScriptFramework::IVirtualObject { };

		public interface class TESUseWeaponPackageData : public TESPackageData, public NetScriptFramework::IVirtualObject { };

		public interface class TESWaterDisplacement : public NiRefObject, public NetScriptFramework::IVirtualObject { };

		public interface class TESWaterNormals : public NiRefObject, public NetScriptFramework::IVirtualObject { };

		public interface class TESWaterObject : public NiRefObject, public NetScriptFramework::IVirtualObject { };

		public interface class TESWaterReflections : public NiRefObject, public NetScriptFramework::IVirtualObject { };

		public interface class TrianglePathWaterAndLedgeSplitter : public ITrianglePathSplitter, public NetScriptFramework::IVirtualObject { };

		generic <typename UIMessageDataPtr_T1>
		public interface class UIMessageDataPtr : public IUIMessageData, public NetScriptFramework::IVirtualObject { };

		public interface class UnitTest_BSStreamParserData : public BSStreamParserData, public NetScriptFramework::IVirtualObject { };

		public interface class UnitTest_BSStreamParserStream : public NiBinaryStream, public NetScriptFramework::IVirtualObject { };

		public interface class UseWeaponActorPackageData : public ActorPackageData, public NetScriptFramework::IVirtualObject { };

		public interface class WaterPathPathingNodeGenerator : public IPathingNodeGenerator, public NetScriptFramework::IVirtualObject { };

		public interface class WaterPathRayValidator : public ISmoothingRayValidator, public NetScriptFramework::IVirtualObject { };

		public interface class WeaponAnimationLoadedCallback : public IAnimationSetCallbackFunctor, public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

		public interface class WeaponEnchantmentController : public ReferenceEffectController, public NetScriptFramework::IVirtualObject { };

		generic <typename VisitReturnData_T1, typename VisitReturnData_T2>
		public interface class VisitReturnData : public WeightedModifierVisitor<VisitReturnData_T1>, public NetScriptFramework::IVirtualObject { };

		interface class hk1AxisSweep::AabbInt : public hkAabbUint32, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkVector4Comparison : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Mask : System::Int32
			{
				MASK_NONE = 0,
				MASK_X = 1,
				MASK_Y = 2,
				MASK_XY = 3,
				MASK_Z = 4,
				MASK_XZ = 5,
				MASK_YZ = 6,
				MASK_XYZ = 7,
				MASK_W = 8,
				MASK_XW = 9,
				MASK_YW = 0xA,
				MASK_XYW = 0xB,
				MASK_ZW = 0xC,
				MASK_XZW = 0xD,
				MASK_YZW = 0xE,
				MASK_XYZW = 0xF,
			};
		};

		public interface class hkJob : public NetScriptFramework::IMemoryObject { };

		public interface class hkMonitorStreamFrameInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class AbsoluteTimeCounter : System::Int32
			{
				ABSOLUTE_TIME_TIMER_0 = 0,
				ABSOLUTE_TIME_TIMER_1 = 1,
				ABSOLUTE_TIME_NOT_TIMED = -1,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkInternalClassEnum : public NetScriptFramework::IMemoryObject { };

		public interface class hkpBroadPhaseHandlePair : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpTypedBroadPhaseHandle : public hkpBroadPhaseHandle, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkSimdReal : public NetScriptFramework::IMemoryObject { };

		public interface class hkPaddedAllocator : public hkMemoryAllocator, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Cinfo : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkArrayTypeAttribute : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class ArrayType : System::Int32
			{
				NONE = 0,
				POINTSOUP = 1,
				ENTITIES = 2,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaVertexDeformerInput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		generic <typename hkCachedHashMap_T1, typename hkCachedHashMap_T2>
		public interface class hkCachedHashMap : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Elem : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConstraintAtom : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class AtomType : System::Int32
			{
				TYPE_INVALID = 0,
				TYPE_BRIDGE = 1,
				TYPE_SET_LOCAL_TRANSFORMS = 2,
				TYPE_SET_LOCAL_TRANSLATIONS = 3,
				TYPE_SET_LOCAL_ROTATIONS = 4,
				TYPE_BALL_SOCKET = 5,
				TYPE_STIFF_SPRING = 6,
				TYPE_LIN = 7,
				TYPE_LIN_SOFT = 8,
				TYPE_LIN_LIMIT = 9,
				TYPE_LIN_FRICTION = 0xA,
				TYPE_LIN_MOTOR = 0xB,
				TYPE_2D_ANG = 0xC,
				TYPE_ANG = 0xD,
				TYPE_ANG_LIMIT = 0xE,
				TYPE_TWIST_LIMIT = 0xF,
				TYPE_CONE_LIMIT = 0x10,
				TYPE_ANG_FRICTION = 0x11,
				TYPE_ANG_MOTOR = 0x12,
				TYPE_RAGDOLL_MOTOR = 0x13,
				TYPE_PULLEY = 0x14,
				TYPE_RACK_AND_PINION = 0x15,
				TYPE_COG_WHEEL = 0x16,
				TYPE_SETUP_STABILIZATION = 0x17,
				TYPE_OVERWRITE_PIVOT = 0x18,
				TYPE_CONTACT = 0x19,
				TYPE_MODIFIER_SOFT_CONTACT = 0x1A,
				TYPE_MODIFIER_MASS_CHANGER = 0x1B,
				TYPE_MODIFIER_VISCOUS_SURFACE = 0x1C,
				TYPE_MODIFIER_MOVING_SURFACE = 0x1D,
				TYPE_MODIFIER_IGNORE_CONSTRAINT = 0x1E,
				TYPE_MODIFIER_CENTER_OF_MASS_CHANGER = 0x1F,
				TYPE_MAX = 0x20,
			};

			enum class SolvingMethod : System::Int32
			{
				METHOD_STABILIZED = 0,
				METHOD_OLD = 1,
			};

			enum class CallbackRequest : System::Int32
			{
				CALLBACK_REQUEST_NONE = 0,
				CALLBACK_REQUEST_NEW_CONTACT_POINT = 1,
				CALLBACK_REQUEST_SETUP_PPU_ONLY = 2,
				CALLBACK_REQUEST_SETUP_CALLBACK = 4,
				CALLBACK_REQUEST_CONTACT_POINT_CALLBACK = 8,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkContactPointMaterial : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			enum class FlagEnum : System::Int32
			{
				CONTACT_IS_NEW = 1,
				CONTACT_USES_SOLVER_PATH2 = 2,
				CONTACT_BREAKOFF_OBJECT_ID = 4,
				CONTACT_IS_DISABLED = 8,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDebugMemorySnapshot : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDisableError : public NetScriptFramework::IMemoryObject { };

		public interface class hkGizmoAttribute : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class GizmoType : System::Int32
			{
				POINT = 0,
				SPHERE = 1,
				PLANE = 2,
				ARROW = 3,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkLinkAttribute : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Link : System::Int32
			{
				NONE = 0,
				DIRECT_LINK = 1,
				CHILD = 2,
				MESH = 3,
				PARENT_NAME = 4,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkModelerNodeTypeAttribute : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class ModelerType : System::Int32
			{
				DEFAULT = 0,
				LOCATOR = 1,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpPhysicsCommand : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class TYPE : System::Int32
			{
				TYPE_ADD_CONSTRAINT_TO_LOCKED_ISLAND = 0,
				TYPE_REMOVE_CONSTRAINT_FROM_LOCKED_ISLAND = 1,
				TYPE_END = 2,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkSemanticsAttribute : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Semantics : System::Int32
			{
				UNKNOWN = 0,
				DISTANCE = 1,
				ANGLE = 2,
				NORMAL = 3,
				POSITION = 4,
				COSINE_ANGLE = 5,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkUiAttribute : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class HideInModeler : System::Int32
			{
				NONE = 0,
				MAX = 1,
				MAYA = 2,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkVirtualGamepad : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Button : System::Int32
			{
				PAD_BUTTON_0 = 1,
				PAD_BUTTON_1 = 2,
				PAD_BUTTON_2 = 4,
				PAD_BUTTON_3 = 8,
				PAD_DPAD_UP = 0x10,
				PAD_DPAD_DOWN = 0x20,
				PAD_DPAD_LEFT = 0x40,
				PAD_DPAD_RIGHT = 0x80,
				PAD_SELECT = 0x100,
				PAD_START = 0x200,
				PAD_BUTTON_L1 = 0x400,
				PAD_BUTTON_R1 = 0x800,
				PAD_BUTTON_L2 = 0x1000,
				PAD_BUTTON_R2 = 0x2000,
				PAD_BUTTON_LSTICK = 0x4000,
				PAD_BUTTON_RSTICK = 0x8000,
			};

			interface class Stick : public NetScriptFramework::IMemoryObject { };

			interface class Trigger : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkVirtualMouse : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Button : System::Int32
			{
				MOUSE_RIGHT_BUTTON = 1,
				MOUSE_MIDDLE_BUTTON = 2,
				MOUSE_LEFT_BUTTON = 4,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkRoundTrip : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class FlagBits : System::Int32
			{
				BIT_X = 1,
				BIT_Y = 2,
				BIT_Z = 4,
				BIT_XZ = 5,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkLargeBlockAllocator : public hkMemoryAllocator, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class LimitedMemoryListener : public NetScriptFramework::IVirtualObject { };

			interface class MemChunk : public NetScriptFramework::IMemoryObject { };

			interface class FixedMemoryBlockServer : public hkMemoryAllocator, public NetScriptFramework::IVirtualObject { };

			interface class MemPage : public NetScriptFramework::IMemoryObject { };

			enum class AllocType : System::Int32
			{
				CRITICAL_ALLOC = 0,
				NORMAL_ALLOC = 1,
			};

			interface class FreeMemChunk : public hkLargeBlockAllocator::MemChunk, public NetScriptFramework::IMemoryObject { };

			interface class Iterator : public NetScriptFramework::IMemoryObject { };

			interface class MemTreeChunk : public hkLargeBlockAllocator::FreeMemChunk, public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkStopwatch : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkGskCache16 : public hkpGskCache, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkHalf8 : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkIntUnion64 : public NetScriptFramework::IMemoryObject { };

		generic <typename hkIsPodType_T1>
		public interface class hkIsPodType : public hkTraitBool<UnknownGenArg_0^>, public NetScriptFramework::IMemoryObject { };

		public interface class hkKdTreeAlignedNodePair : public NetScriptFramework::IMemoryObject { };

		interface class hkKdTreeBuildInput::WorkingSet : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkKdTreeBuildInput::TreeStream : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkKeyboard : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMallocAllocator : public hkMemoryAllocator, public NetScriptFramework::IVirtualObject { };

		public interface class hkMemoryClassInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMonitorAllocator : public hkMemoryAllocator, public NetScriptFramework::IVirtualObject { };

		public interface class hkNetworkedDeterminismUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Server;

			interface class Client;

			interface class ControlCommand;

			interface class Command;

			interface class DeterminismDataCommand;
		};

		public interface class hkp3dAngularMotorSolverInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Mask : System::Int32
			{
				ANGULAR_1ST = 3,
				ANGULAR_2ND = 0xC,
				ANGULAR_3RD = 0x30,
			};

			enum class MotorState : System::Int32
			{
				MOTOR_NOT_BROKEN = 0,
				MOTOR_BROKEN_MAX_BREACHED = 1,
				MOTOR_BROKEN_MIN_BREACHED = 3,
				MOTOR_DISABLED = 2,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpInertiaTensorComputer : public hkInertiaTensorComputer, public NetScriptFramework::IMemoryObject { };

		public interface class hkpAgent1nMachineEntry : public hkpAgentEntry, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpPrimitiveDrawer : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCollisionListener : public hkpContactListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCapsuleTriangleCache3 : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConstraintProjector : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Sort : System::Int32
			{
				HK_SORT_NONE = 0,
				HK_SORT_PER_ERROR = 1,
				HK_SORT_PER_MASS = 2,
				HK_SORT_DETERMINISTIC = 3,
			};

			enum class Preset : System::Int32
			{
				HK_DEFAULT = 0,
				HK_PROJECT_PIVOTS = 1,
				HK_HIERARCHY = 2,
				HK_REPAIR_VIOLATIONS = 3,
			};
		};

		public interface class hkpCpuSingleContainerIterator : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpMoppInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpMoppKDopQuery : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSimpleConstraintUtilCollideParams : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSimpleContactConstraintDataInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSimpleContactConstraintDataInfoInternal : public NetScriptFramework::IMemoryObject { };

		public interface class hkQuadRealUnion : public NetScriptFramework::IMemoryObject { };

		public interface class hkTrackerLayoutTypeInfo : public NetScriptFramework::IMemoryObject { };

		public interface class hkTrackerTypeInit : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkVirtualKeyEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class VKEY : System::Int32
			{
				VKEY_BACK = 8,
				VKEY_TAB = 9,
				VKEY_RETURN = 0xD,
				VKEY_SHIFT = 0x10,
				VKEY_CONTROL = 0x11,
				VKEY_MENU = 0x12,
				VKEY_CAPITAL = 0x14,
				VKEY_ESCAPE = 0x1B,
				VKEY_SPACE = 0x20,
				VKEY_END = 0x23,
				VKEY_HOME = 0x24,
				VKEY_LEFT = 0x25,
				VKEY_UP = 0x26,
				VKEY_RIGHT = 0x27,
				VKEY_DOWN = 0x28,
				VKEY_INSERT = 0x2D,
				VKEY_DELETE = 0x2E,
				VKEY_LWIN = 0x5B,
				VKEY_RWIN = 0x5C,
				VKEY_APPS = 0x5D,
				VKEY_NUMPAD0 = 0x60,
				VKEY_NUMPAD1 = 0x61,
				VKEY_NUMPAD2 = 0x62,
				VKEY_NUMPAD3 = 0x63,
				VKEY_NUMPAD4 = 0x64,
				VKEY_NUMPAD5 = 0x65,
				VKEY_NUMPAD6 = 0x66,
				VKEY_NUMPAD7 = 0x67,
				VKEY_NUMPAD8 = 0x68,
				VKEY_NUMPAD9 = 0x69,
				VKEY_MULTIPLY = 0x6A,
				VKEY_ADD = 0x6B,
				VKEY_SEPARATOR = 0x6C,
				VKEY_SUBTRACT = 0x6D,
				VKEY_DECIMAL = 0x6E,
				VKEY_DIVIDE = 0x6F,
				VKEY_F1 = 0x70,
				VKEY_F2 = 0x71,
				VKEY_F3 = 0x72,
				VKEY_F4 = 0x73,
				VKEY_F5 = 0x74,
				VKEY_F6 = 0x75,
				VKEY_F7 = 0x76,
				VKEY_F8 = 0x77,
				VKEY_F9 = 0x78,
				VKEY_F10 = 0x79,
				VKEY_F11 = 0x7A,
				VKEY_F12 = 0x7B,
				VKEY_F13 = 0x7C,
				VKEY_F14 = 0x7D,
				VKEY_F15 = 0x7E,
				VKEY_F16 = 0x7F,
				VKEY_F17 = 0x80,
				VKEY_F18 = 0x81,
				VKEY_F19 = 0x82,
				VKEY_F20 = 0x83,
				VKEY_F21 = 0x84,
				VKEY_F22 = 0x85,
				VKEY_F23 = 0x86,
				VKEY_F24 = 0x87,
				VKEY_NUMLOCK = 0x90,
				VKEY_SCROLL = 0x91,
				VKEY_LSHIFT = 0xA0,
				VKEY_RSHIFT = 0xA1,
				VKEY_LCONTROL = 0xA2,
				VKEY_RCONTROL = 0xA3,
				VKEY_LMENU = 0xA4,
				VKEY_RMENU = 0xA5,
				VKEY_OEM_1_SEMICOLON = 0xBA,
				VKEY_OEM_PLUS = 0xBB,
				VKEY_OEM_COMMA = 0xBC,
				VKEY_OEM_MINUS = 0xBD,
				VKEY_OEM_PERIOD = 0xBE,
				VKEY_OEM_2_FORWARDSLASH = 0xBF,
				VKEY_OEM_3_TILDA = 0xC0,
				VKEY_OEM_4_OPENBRACKET = 0xDB,
				VKEY_OEM_5_BACKSLASH = 0xDC,
				VKEY_OEM_6_CLOSE_BRACKET = 0xDD,
			};
		};

		interface class hkWorldOperation::UpdateFilterOnWorld : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class BSScript::Internal::VDescTable::Entry : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSFixedString^ Name
			{
				BSFixedString^ __clrcall get();
			}

			property BSScript::TypeInfo^ Type
			{
				BSScript::TypeInfo^ __clrcall get();
			}
		};

		interface class BSScript::Array : public BSIntrusiveRefCounted, public NetScriptFramework::IMemoryObject, public System::Collections::Generic::IEnumerable<BSScript::Variable^>
		{
		public:
			property BSScript::TypeInfo^ ElementType
			{
				BSScript::TypeInfo^ __clrcall get();
			}

			property System::Int32 Length
			{
				System::Int32 __clrcall get();
			}

			property Mutex^ Lock
			{
				Mutex^ __clrcall get();
			}

			property BSScript::Variable^ default[System::Int32]
			{
				BSScript::Variable^ get(System::Int32 index);
			}
		};

		public interface class BGSStoryEventMember : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Int32 Type
			{
				System::Int32 __clrcall get();
			}

			property System::UInt32 UniqueId
			{
				System::UInt32 __clrcall get();
			}

			property BSString^ Name
			{
				BSString^ __clrcall get();
			}
		};

		interface class PlayerSkills::Data : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Single PlayerLevelXp
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}

			property System::Single PlayerLevelThreshold
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}

			/// <summary>
			/// Gets the data for specific skill.
			/// </summary>
			/// <param name="skill">The skill to get.</param>
			PlayerSkills::SkillData^ GetSkillData(SkillsEnum skill);

			/// <summary>
			/// Gets the legendary level of a skill.
			/// </summary>
			/// <param name="skill">The skill to get.</param>
			System::Int32 GetLegendaryLevel(SkillsEnum skill);

			/// <summary>
			/// Sets the legendary level of a skill. This does not reset the skill in any way or perform any other logic associated with legendary level of skills.
			/// </summary>
			/// <param name="skill">The skill to get.</param>
			/// <param name="level">The level.</param>
			void SetLegendaryLevel(SkillsEnum skill, System::Int32 level);
		};

		public interface class TESRegionPoint : public NetScriptFramework::IMemoryObject
		{
		public:
			property NiPoint2^ Point
			{
				NiPoint2^ __clrcall get();
			}
		};

		public interface class LinkedMapping : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSFixedString^ LinkedMappingName
			{
				BSFixedString^ __clrcall get();
			}

			property InputContextIds LinkedMappingContext
			{
				InputContextIds __clrcall get();
			}

			property InputDevices Device
			{
				InputDevices __clrcall get();
			}

			property InputContextIds LinkFromContext
			{
				InputContextIds __clrcall get();
			}

			property BSFixedString^ LinkFromName
			{
				BSFixedString^ __clrcall get();
			}
		};

		public interface class UserEventMapping : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSFixedString^ EventId
			{
				BSFixedString^ __clrcall get();
			}

			property System::UInt16 InputKey
			{
				System::UInt16 __clrcall get();
			}

			property System::UInt16 Modifier
			{
				System::UInt16 __clrcall get();
			}

			property System::SByte IndexInContext
			{
				System::SByte __clrcall get();
			}

			property System::Boolean Remappable
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean Linked
			{
				System::Boolean __clrcall get();
			}

			property UserEventFlags UserEventGroupFlags
			{
				UserEventFlags __clrcall get();
			}
		};

		public interface class BoneStringArray : public NetScriptFramework::IMemoryObject { };

		public interface class InputControlIds : public NetScriptFramework::IMemoryObject { };

		public interface class MenuStringArray : public NetScriptFramework::IMemoryObject { };

		public interface class ScriptParameter : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::String^ ParameterName
			{
				System::String^ __clrcall get();
			}

			property ScriptParameterTypes ParameterType
			{
				ScriptParameterTypes __clrcall get();
			}

			property System::Boolean Optional
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class NiColorKey : public NiAnimationKey, public NetScriptFramework::IMemoryObject
		{
		public:
			property NiColorA^ ColorValue
			{
				NiColorA^ __clrcall get();
			}
		};

		public interface class NiFloatKey : public NiAnimationKey, public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Single FloatValue
			{
				System::Single __clrcall get();
			}
		};

		public interface class __crt_locale_pointers : public NetScriptFramework::IMemoryObject { };

		public interface class __type_info_node : public NetScriptFramework::IMemoryObject { };

		public interface class _CONTEXT : public NetScriptFramework::IMemoryObject { };

		public interface class _IMAGE_OPTIONAL_HEADER64 : public NetScriptFramework::IMemoryObject { };

		public interface class _KNONVOLATILE_CONTEXT_POINTERS : public NetScriptFramework::IMemoryObject { };

		public interface class _NT_TIB : public NetScriptFramework::IMemoryObject { };

		public interface class _s__CatchableType : public NetScriptFramework::IMemoryObject { };

		public interface class _TP_CALLBACK_ENVIRON_V3 : public NetScriptFramework::IMemoryObject { };

		public interface class _UNWIND_HISTORY_TABLE_ENTRY : public NetScriptFramework::IMemoryObject { };

		public interface class _XSAVE_FORMAT : public NetScriptFramework::IMemoryObject { };

		public interface class EHExceptionRecord : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class EHParameters : public NetScriptFramework::IMemoryObject { };
		};

		public interface class FT : public NetScriptFramework::IMemoryObject { };

		public interface class IDispatch0 : public IUnknown0, public NetScriptFramework::IMemoryObject { };

		public interface class IEnumSTATSTG0 : public IUnknown0, public NetScriptFramework::IMemoryObject { };

		public interface class IRecordInfo0 : public IUnknown0, public NetScriptFramework::IMemoryObject { };

		public interface class ISequentialStream0 : public IUnknown0, public NetScriptFramework::IMemoryObject { };

		public interface class IStorage0 : public IUnknown0, public NetScriptFramework::IMemoryObject { };

		public interface class ITypeComp0 : public IUnknown0, public NetScriptFramework::IMemoryObject { };

		public interface class ITypeInfo0 : public IUnknown0, public NetScriptFramework::IMemoryObject { };

		public interface class ITypeLib0 : public IUnknown0, public NetScriptFramework::IMemoryObject { };

		public interface class tagARRAYDESC0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagCABSTRBLOB0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagCACLIPDATA0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagCACLSID0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagCACY0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagCAFILETIME0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagCAH0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagPROPVARIANT0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagCAUH0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagSAFEARRAY0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagSTATSTG0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagTLIBATTR0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagTYPEATTR0 : public NetScriptFramework::IMemoryObject { };

		public interface class type_info : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class VFTable : public NetScriptFramework::IMemoryObject { };
		};

		public interface class IMemoryHeap : public IMemoryStore, public NetScriptFramework::IVirtualObject { };

		public interface class ActivateHandler : public HeldStateHandler, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Boolean Disabled
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class ActorState : public IMovementState, public NetScriptFramework::IVirtualObject
		{
		public:
			/// <summary>
			/// Reads data from the packed state values.
			/// </summary>
			/// <param name="index">The index of data.</param>
			/// <param name="size">The size of data.</param>
			System::UInt64 GetActorStateData(System::Int32 index, System::Int32 size);

			/// <summary>
			/// Writes data to packed state values.
			/// </summary>
			/// <param name="index">The index of data.</param>
			/// <param name="size">The size of data.</param>
			/// <param name="value">The value to set.</param>
			void SetActorStateData(System::Int32 index, System::Int32 size, System::UInt64 value);

			/// <summary>
			/// Gets the life state.
			/// </summary>
			property ActorLifeStates LifeState
			{
				ActorLifeStates __clrcall get();
			}

			/// <summary>
			/// Gets the knock state.
			/// </summary>
			property ActorKnockStates KnockState
			{
				ActorKnockStates __clrcall get();
			}

			/// <summary>
			/// Gets the melee attack state.
			/// </summary>
			property ActorAttackStates MeleeAttackState
			{
				ActorAttackStates __clrcall get();
			}

			/// <summary>
			/// Gets the actor's weapon state.
			/// </summary>
			property ActorWeaponStates WeaponState
			{
				ActorWeaponStates __clrcall get();
			}
		};

		public interface class MovementControllerNPC : public MovementControllerAI, public IMovementMessageInterface, public IMovementMotionDrivenControl, public IMovementSelectIdle, public IMovementDirectControl, public IMovementPlannerDirectControl, public IAnimationSetCallbackFunctor, public NetScriptFramework::IVirtualObject { };

		public interface class MovementMessageDoor : public MovementMessage, public NetScriptFramework::IVirtualObject { };

		public interface class MovementMessageActorCollision : public MovementMessage, public NetScriptFramework::IVirtualObject { };

		public interface class MovementMessageBlocked : public MovementMessage, public NetScriptFramework::IVirtualObject { };

		public interface class MovementMessageFreezeDirection : public MovementMessage, public NetScriptFramework::IVirtualObject { };

		public interface class MovementMessageJump : public MovementMessage, public IPathFollowerAction, public NetScriptFramework::IVirtualObject { };

		public interface class MovementMessageMovementTypeChange : public MovementMessage, public NetScriptFramework::IVirtualObject { };

		public interface class MovementMessagePathEvent : public MovementMessage, public NetScriptFramework::IVirtualObject { };

		public interface class MovementMessagePlayIdle : public MovementMessage, public NetScriptFramework::IVirtualObject { };

		public interface class MovementMessageSetStaticPath : public MovementMessage, public NetScriptFramework::IVirtualObject { };

		public interface class MovementMessageWarpToLocation : public MovementMessage, public NetScriptFramework::IVirtualObject { };

		public interface class MovementMessageWarpToMultiple : public MovementMessage, public NetScriptFramework::IVirtualObject { };

		public interface class TESIcon : public TESTexture, public NetScriptFramework::IVirtualObject { };

		public interface class QueuedFile : public IOTask, public NetScriptFramework::IVirtualObject { };

		public interface class hkpConstraintData : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class ConstraintInfo : public hkpConstraintInfo, public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			enum class ConstraintType : System::Int32
			{
				CONSTRAINT_TYPE_BALLANDSOCKET = 0,
				CONSTRAINT_TYPE_HINGE = 1,
				CONSTRAINT_TYPE_LIMITEDHINGE = 2,
				CONSTRAINT_TYPE_POINTTOPATH = 3,
				CONSTRAINT_TYPE_PRISMATIC = 6,
				CONSTRAINT_TYPE_RAGDOLL = 7,
				CONSTRAINT_TYPE_STIFFSPRING = 8,
				CONSTRAINT_TYPE_WHEEL = 9,
				CONSTRAINT_TYPE_GENERIC = 0xA,
				CONSTRAINT_TYPE_CONTACT = 0xB,
				CONSTRAINT_TYPE_BREAKABLE = 0xC,
				CONSTRAINT_TYPE_MALLEABLE = 0xD,
				CONSTRAINT_TYPE_POINTTOPLANE = 0xE,
				CONSTRAINT_TYPE_PULLEY = 0xF,
				CONSTRAINT_TYPE_ROTATIONAL = 0x10,
				CONSTRAINT_TYPE_HINGE_LIMITS = 0x12,
				CONSTRAINT_TYPE_RAGDOLL_LIMITS = 0x13,
				CONSTRAINT_TYPE_CUSTOM = 0x14,
				CONSTRAINT_TYPE_RACK_AND_PINION = 0x15,
				CONSTRAINT_TYPE_COG_WHEEL = 0x16,
				BEGIN_CONSTRAINT_CHAIN_TYPES = 0x64,
				CONSTRAINT_TYPE_STIFF_SPRING_CHAIN = 0x64,
				CONSTRAINT_TYPE_BALL_SOCKET_CHAIN = 0x65,
				CONSTRAINT_TYPE_POWERED_CHAIN = 0x66,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class RuntimeInfo : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkpCharacterRigidBodyListener : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpWorldMaintenanceMgr : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkWorldMemoryAvailableWatchDog : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class MemUsageInfo;
		};

		public interface class hkpPhantomBroadPhaseListener : public hkReferencedObject, public hkpBroadPhaseListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpBroadPhaseBorderListener : public hkReferencedObject, public hkpBroadPhaseListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCollisionFilter : public hkReferencedObject, public hkpCollidableCollidableFilter, public hkpShapeCollectionFilter, public hkpRayShapeCollectionFilter, public hkpRayCollidableFilter, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class hkpFilterType : System::Int32
			{
				HK_FILTER_UNKNOWN = 0,
				HK_FILTER_NULL = 1,
				HK_FILTER_GROUP = 2,
				HK_FILTER_LIST = 3,
				HK_FILTER_CUSTOM = 4,
				HK_FILTER_PAIR = 5,
				HK_FILTER_CONSTRAINT = 6,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConvexListFilter : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class ConvexListCollisionType : System::Int32
			{
				TREAT_CONVEX_LIST_AS_NORMAL = 0,
				TREAT_CONVEX_LIST_AS_LIST = 1,
				TREAT_CONVEX_LIST_AS_CONVEX = 2,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class TESModelTextureSwap : public TESModel, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class TextureData : public NetScriptFramework::IMemoryObject { };

			property System::IntPtr AlternateTextures
			{
				System::IntPtr __clrcall get();
			}

			property System::Int32 NumAlternateTextures
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class AnimationClipDataSingleton : public BSTSingletonSDM<AnimationClipDataSingleton^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class AnimationFileManagerSingleton : public IAnimationClipLoaderSingleton, public BSTSingletonSDM<AnimationFileManagerSingleton^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::ActivateChoiceMenuCallbackFunctor : public IMessageBoxCallback, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::AutoDoorFadeCallback : public IFadeDoneCallback, public NetScriptFramework::IVirtualObject { };

		public interface class CombatMagicCaster : public CombatObject, public NetScriptFramework::IVirtualObject { };

		generic <typename BSTDerivedCreator_T1, typename BSTDerivedCreator_T2>
		public interface class BSTDerivedCreator : public IBSTCreator<CombatObject^>, public NetScriptFramework::IVirtualObject { };

		public interface class bhkRefObject : public NiObject, public NetScriptFramework::IVirtualObject
		{
		public:
			/// <summary>
			/// Gets the havok object.
			/// </summary>
			property hkBaseObject^ HavokObject
			{
				hkBaseObject^ __clrcall get();
			}
		};

		public interface class hkbAssetLoader : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::BSScaleformAllocatorPaged : public GSysAllocPaged, public BSTSingletonSDM<anonymous_namespace::BSScaleformAllocatorPaged^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::CheckLineOfSightTriangleFlagFiltersAdapter : public BSPathing::CheckLineOfSightFilter, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::CheckNavmeshPathFilter : public BSPathing::CheckLineOfSightFilter, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::CheckSphereVisitor : public BSPathing::EdgeFoundVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::ClearPrecomputedPathFlag : public BSNavmeshInfoMap::IVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::ConfirmAndNameCallback : public IMessageBoxCallback, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::ConfirmCloseRaceSexMenuCallback : public IMessageBoxCallback, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::ConfirmDestructiveChangesCallback : public IMessageBoxCallback, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::ConfirmLevelUpAttributeCallback : public IMessageBoxCallback, public NetScriptFramework::IVirtualObject { };

		generic <typename BSTCommonStaticMessageQueue_T1, typename BSTCommonStaticMessageQueue_T2>
		public interface class BSTCommonStaticMessageQueue : public BSTCommonMessageQueue<BSTCommonStaticMessageQueue_T1>, public NetScriptFramework::IVirtualObject
		{
		public:
			property NetScriptFramework::FixedMemoryArray<System::Byte>^ QueueBuffer
			{
				NetScriptFramework::FixedMemoryArray<System::Byte>^ __clrcall get();
			}

			property System::Int32 NumEntries
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 PushIndex
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 PopIndex
			{
				System::Int32 __clrcall get();
			}
		};

		interface class anonymous_namespace::DeviceSelectCallback : public IMessageBoxCallback, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::FadeThenFastTravelCallback : public IFadeDoneCallback, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::FadeThenLoadCallback : public IFadeDoneCallback, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::FadeThenMainMenuCallback : public IFadeDoneCallback, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::FastTravelConfirmCallback : public IMessageBoxCallback, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::FindClosestOpenEdgeFunctor : public BSPathing::EdgeFoundVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::FindPreferredConnectedNavmeshInfosWithinRadiusVisitor : public BSNavmeshInfoMap::IRecursiveVisitor, public NetScriptFramework::IVirtualObject { };

		public interface class hkTagfileWriter : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class AddDataObjectListener : public hkReferencedObject, public NetScriptFramework::IVirtualObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Options : public NetScriptFramework::IMemoryObject { };
		};

		interface class anonymous_namespace::HavokThreadMemorySink : public BSTEventSink<BSThreadEvent::ThreadEvent^>, public BSTSingletonSDM<anonymous_namespace::HavokThreadMemorySink^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class hkResource : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Export : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Import : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpShape : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class CalcSizeForSpuInput : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class ShapeFuncs2 : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class ShapeFuncs;
		};

		public interface class hkAabb : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class anonymous_namespace::InternedStringRefCounted : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::IsTeleportDoorOnPath : public IMovementQueryPathFollowing::INodeVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::LegendarySkillResetConfirmCallback : public IMessageBoxCallback, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::LoadGameMissingContentCallBack : public IMessageBoxCallback, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::LoadMenuOpenCloseListener : public BSTEventSink<MenuOpenCloseEvent^>, public NetScriptFramework::IVirtualObject { };

		generic <typename GRefCountBase_T1, typename GRefCountBase_T2>
		public interface class GRefCountBase : public GRefCountBaseStatImpl<GRefCountImpl^, GRefCountBase_T2>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::LooseAudioRegistrar : public BSTEventSink<BSResource::NameFoundEvent^>, public BSTSingletonSDM<anonymous_namespace::LooseAudioRegistrar^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::MainCullingCamera : public BSTreeManager::IQueryCullingCamera, public BSTSingletonSDM<anonymous_namespace::MainCullingCamera^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::MemoryManagerFileFactory : public IMemoryManagerFileFactory, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::ModsChanged_ConfirmResetCallback : public IMessageBoxCallback, public NetScriptFramework::IVirtualObject { };

		public interface class CXAPOBase : public IXAPO, public NetScriptFramework::IMemoryObject { };

		public interface class BSIMusicType : public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DataTypeFlags : System::UInt32
			{
				None = 0,
				PlaysOneSelection = 1,
				AbruptTransition = 2,
				CycleTracks = 4,
				MaintainTrackOrder = 8,
				DucksCurrentTrack = 0x20,
				DoesntQueue = 0x40,
			};

			property BSIMusicType::DataTypeFlags MusicTypeFlags
			{
				BSIMusicType::DataTypeFlags __clrcall get();
			}

			property System::SByte Priority
			{
				System::SByte __clrcall get();
			}

			property System::SByte Padding
			{
				System::SByte __clrcall get();
			}

			property System::UInt16 DucksOtherMusicBy
			{
				System::UInt16 __clrcall get();
			}

			property System::Single FadeTime
			{
				System::Single __clrcall get();
			}

			property System::Int32 CurrentTrackIndex
			{
				System::Int32 __clrcall get();
			}

			property BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ TrackHistory
			{
				BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<BSIMusicTrack^, BSTArrayHeapAllocator^>^ Tracks
			{
				BSTArray<BSIMusicTrack^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property unknown^ TypeStatus
			{
				unknown^ __clrcall get();
			}
		};

		interface class anonymous_namespace::NormalDoorFadeCallback : public IFadeDoneCallback, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::OldMessageBoxCallback : public IMessageBoxCallback, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::PerkSelectConfirmCallback : public IMessageBoxCallback, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::PlacePlayerMarkerCallbackFunctor : public IMessageBoxCallback, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::PlayerControlsEGMClear : public IAllowEGMCacheClear, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::SkipJumpNode : public IMovementQueryPathFollowing::INodeVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::SortIntersectingEdgesFunctor : public BSPathing::EdgeFoundVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::SpendSoulCallback : public IMessageBoxCallback, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::StandardDetectionListener : public DetectionListener, public NetScriptFramework::IVirtualObject { };

		public interface class BSFile : public NiFile, public NetScriptFramework::IVirtualObject { };

		interface class AppResourceCaching::anonymous_namespace::Manager : public BSTEventSink<BSResource::NameFoundEvent^>, public BSTEventSink<BSResource::ArchiveRegisteredEvent^>, public BSTEventSink<TESDataHandlerPostBuildFileListEvent^>, public BSTSingletonSDM<AppResourceCaching::anonymous_namespace::Manager^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class ArrayOfTuplesImplementation : public hkDataArrayImpl, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class View : public hkDataArrayImpl, public NetScriptFramework::IVirtualObject { };
		};

		public interface class AttachDistant3DTask : public IOTask, public NetScriptFramework::IVirtualObject { };

		public interface class AttackBlockHandler : public HeldStateHandler, public NetScriptFramework::IVirtualObject { };

		public interface class CombatAimControllerBase : public CombatObject, public NetScriptFramework::IVirtualObject { };

		public interface class CombatPathSpeedController : public CombatObject, public NetScriptFramework::IVirtualObject { };

		public interface class CombatArea : public CombatObject, public NetScriptFramework::IVirtualObject { };

		public interface class CombatCoverLocation : public CombatObject, public NetScriptFramework::IVirtualObject { };

		public interface class CombatCoverSearch : public CombatObject, public NetScriptFramework::IVirtualObject { };

		public interface class CombatCoverSearchDebugData : public CombatObject, public NetScriptFramework::IVirtualObject { };

		public interface class CombatCoverSearchResult : public CombatObject, public NetScriptFramework::IVirtualObject { };

		public interface class CombatDisableActionController : public CombatObject, public NetScriptFramework::IVirtualObject { };

		public interface class CombatFlankingSearchData : public CombatObject, public NetScriptFramework::IVirtualObject { };

		public interface class CombatInventoryItem : public CombatObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class TYPE : public NetScriptFramework::IMemoryObject { };
		};

		public interface class CombatPathingDebugData : public CombatObject, public NetScriptFramework::IVirtualObject { };

		public interface class CombatPath : public CombatObject, public NetScriptFramework::IVirtualObject { };

		public interface class CombatPathingGoalPolicyStandard : public CombatPathingGoalPolicyLocation, public NetScriptFramework::IMemoryObject { };

		public interface class CombatPathingSearchPolicyFlank : public CombatPathingSearchPolicyStandard, public NetScriptFramework::IMemoryObject { };

		public interface class CombatPathingGoalPolicyFlee : public CombatPathingGoalPolicyRetreat, public NetScriptFramework::IMemoryObject { };

		public interface class CombatPathDestinationRefs : public CombatPathDestinationRef, public NetScriptFramework::IMemoryObject { };

		public interface class CombatTargetLocation : public CombatObject, public NetScriptFramework::IVirtualObject { };

		public interface class CombatTargetLocationSearch : public CombatObject, public NetScriptFramework::IVirtualObject { };

		public interface class CombatTargetLocationSearchResult : public CombatObject, public NetScriptFramework::IVirtualObject { };

		public interface class CombatTargetSelector : public CombatObject, public NetScriptFramework::IVirtualObject { };

		public interface class CombatThreat : public CombatObject, public NetScriptFramework::IVirtualObject { };

		public interface class BGSAIWorldLocationInteriorCell : public BGSTypedItem<BGSAIWorldLocationInteriorCell^, BGSAIWorldLocation^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSAIWorldLocationPointRadius : public BGSTypedItem<BGSAIWorldLocationPointRadius^, BGSAIWorldLocation^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSAIWorldLocationRefRadius : public BGSTypedItem<BGSAIWorldLocationRefRadius^, BGSAIWorldLocation^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGShkMatFadeController : public BShkFloatController, public NetScriptFramework::IVirtualObject { };

		public interface class BGShkPhonemeController : public BShkFloatController, public NetScriptFramework::IVirtualObject { };

		public interface class BGSMusicPaletteTrack : public BGSMusicTrack, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::IntPtr Layers
			{
				System::IntPtr __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<System::Int32>^ PlayingIndexes
			{
				NetScriptFramework::FixedMemoryArray<System::Int32>^ __clrcall get();
			}

			property System::Single Duration
			{
				System::Single __clrcall get();
			}

			property System::Single FadeOutTime
			{
				System::Single __clrcall get();
			}

			property System::Int64 PlayTime
			{
				System::Int64 __clrcall get();
			}

			property System::Int64 PauseTime
			{
				System::Int64 __clrcall get();
			}
		};

		public interface class BGSMusicSilenceTrack : public BGSMusicTrack, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Single Duration
			{
				System::Single __clrcall get();
			}

			property System::Int64 PlayTime
			{
				System::Int64 __clrcall get();
			}

			property System::Int64 PauseTime
			{
				System::Int64 __clrcall get();
			}
		};

		public interface class BGSMusicSingleTrack : public BGSMusicTrack, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class LoopData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Single LoopBegin
				{
					System::Single __clrcall get();
				}

				property System::Single LoopEnd
				{
					System::Single __clrcall get();
				}

				property System::Int32 LoopCount
				{
					System::Int32 __clrcall get();
				}
			};

			property BSResource::ID^ TrackID
			{
				BSResource::ID^ __clrcall get();
			}

			property BSResource::ID^ FinaleID
			{
				BSResource::ID^ __clrcall get();
			}

			property BSTArray<System::Single, BSTArrayHeapAllocator^>^ CuePoints
			{
				BSTArray<System::Single, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property System::Int32 NextCuePoint
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 LoopsRemaining
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 LastKnownPlaybackPosition
			{
				System::Int32 __clrcall get();
			}

			property BGSMusicSingleTrack::LoopData^ TrackLoopData
			{
				BGSMusicSingleTrack::LoopData^ __clrcall get();
			}

			property BSSoundHandle^ TrackHandle
			{
				BSSoundHandle^ __clrcall get();
			}

			property BSSoundHandle^ FinaleHandle
			{
				BSSoundHandle^ __clrcall get();
			}
		};

		generic <typename BGSPackageDataSaveableTemplate_T1, typename BGSPackageDataSaveableTemplate_T2, typename BGSPackageDataSaveableTemplate_T3, typename BGSPackageDataSaveableTemplate_T4>
		public interface class BGSPackageDataSaveableTemplate : public BGSPackageDataBasicTemplate<BGSPackageDataSaveableTemplate_T1, BGSPackageDataSaveableTemplate_T2, BGSPackageDataSaveableTemplate_T3, BGSPackageDataSaveableTemplate_T4>, public NetScriptFramework::IVirtualObject { };

		generic <typename BGSPackageDataPointerTemplate_T1, typename BGSPackageDataPointerTemplate_T2, typename BGSPackageDataPointerTemplate_T3>
		public interface class BGSPackageDataPointerTemplate : public BGSNamedPackageData<BGSPackageDataPointerTemplate_T1>, public NetScriptFramework::IVirtualObject
		{
		public:
			property BGSPackageDataPointerTemplate_T2 PointerValue
			{
				BGSPackageDataPointerTemplate_T2 __clrcall get();
			}
		};

		public interface class BGSPackageDataLocationWrapper : public IPackageDataAIWorldLocationHandle, public NetScriptFramework::IVirtualObject { };

		public interface class IAITarget : public IPackageDataAIWorldLocationHandle, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureAcquire : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureActivate : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureDialogue : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureDialogueActivate : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureDone : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureEat : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureEscort : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureFind : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureFlee : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureFlightGrab : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureFollow : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureFollowTo : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureForceGreet : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureGuard : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureHoldPosition : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureHover : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureKeepAnEyeOn : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureLock : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureOrbit : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedurePatrol : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedurePursue : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureSandbox : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureSay : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureShout : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureSit : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureSleep : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureTravel : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureTreeProcedure : public BGSTypedItem<BGSProcedureTreeProcedure^, BGSProcedureTreeConditionalItem^>, public NetScriptFramework::IVirtualObject
		{
		public:
			property BGSProcedureBase^ Procedure
			{
				BGSProcedureBase^ __clrcall get();
			}
		};

		public interface class BGSProcedureTreeBranch : public BGSProcedureTreeConditionalItem, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSTArray<BGSProcedureTreeConditionalItem^, BSTArrayHeapAllocator^>^ Conditions
			{
				BSTArray<BGSProcedureTreeConditionalItem^, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		public interface class BGSProcedureTreeRandomExecState : public BGSTypedItem<BGSProcedureTreeRandomExecState^, BGSProcedureTreeOneChildExecState^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureTreeSequenceExecState : public BGSTypedItem<BGSProcedureTreeSequenceExecState^, BGSProcedureTreeOneChildExecState^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureTreeStackedExecState : public BGSTypedItem<BGSProcedureTreeStackedExecState^, BGSProcedureTreeOneChildExecState^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureUnlock : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureUseIdleMarker : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureUseMagic : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureUseWeapon : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureWait : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureWander : public BGSProcedureTyped<BGSProcedureBase^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BShkVisibilityController : public BShkFloatController, public NetScriptFramework::IVirtualObject { };

		public interface class PathingRequest : public BSPathingRequest, public NetScriptFramework::IVirtualObject { };

		public interface class PathingLockData : public BSPathingLockData, public NetScriptFramework::IVirtualObject { };

		public interface class RefrInteraction : public SyncQueueObj, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class INTERACT_METHOD : public NetScriptFramework::IMemoryObject { };

			property System::UInt32 ActorRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 TargetObjRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property System::Boolean Synced
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class MovementAgentActorAvoider : public MovementAgent, public IMovementPlannerAgent, public IMovementPathManagerAgent, public IMovementQueryActorAvoidance, public NetScriptFramework::IVirtualObject { };

		public interface class MovementPlannerAgent : public MovementAgent, public IMovementPlannerAgent, public NetScriptFramework::IVirtualObject { };

		public interface class MovementAgentPathFollowerFlight : public MovementAgent, public IMovementPlannerAgent, public IMovementPathManagerAgent, public IMovementQueryPathFollowing, public IMovementQueryFlight, public NetScriptFramework::IVirtualObject { };

		public interface class MovementAgentPathFollowerStandard : public MovementAgent, public IMovementPlannerAgent, public IMovementPathManagerAgent, public IMovementQueryPathFollowing, public IMovementSetPathFollowing, public IMovementPlayIdleResult, public IMovementHandlerAgent, public NetScriptFramework::IVirtualObject { };

		public interface class MovementAgentPathFollowerVirtual : public MovementAgent, public IMovementPlannerAgent, public IMovementPathManagerAgent, public IMovementQueryPathFollowing, public IMovementSetPathFollowing, public NetScriptFramework::IVirtualObject { };

		public interface class MovementHandlerAgent : public MovementAgent, public IMovementHandlerAgent, public NetScriptFramework::IVirtualObject { };

		public interface class MovementHandlerArbiter : public MovementArbiter, public NetScriptFramework::IVirtualObject { };

		public interface class MovementParameters : public IMovementParameters, public NetScriptFramework::IVirtualObject { };

		public interface class MovementParametersFixed : public IMovementParameters, public NetScriptFramework::IVirtualObject { };

		public interface class MovementPathManagerAgent : public MovementAgent, public IMovementPathManagerAgent, public NetScriptFramework::IVirtualObject { };

		public interface class MovementPathManagerArbiter : public MovementArbiter, public IMovementSetGoal, public IMovementQueryPathingState, public NetScriptFramework::IVirtualObject { };

		public interface class MovementPlannerAgentNavmeshBounds : public MovementAgent, public IMovementPlannerAgent, public IMovementPathManagerAgent, public NetScriptFramework::IVirtualObject { };

		public interface class MovementPlannerArbiter : public MovementArbiter, public IMovementPlannerSetArbitration, public NetScriptFramework::IVirtualObject { };

		public interface class MovementPostUpdateArbiter : public MovementArbiter, public IMovementQueryDeltas, public NetScriptFramework::IVirtualObject { };

		public interface class MovementStateFollowPath : public MovementAgent, public IMovementState, public NetScriptFramework::IVirtualObject { };

		public interface class MovementStateTweener : public MovementAgent, public IMovementState, public NetScriptFramework::IVirtualObject { };

		public interface class MovementTweenerAgent : public MovementAgent, public IMovementTweenerAgent, public NetScriptFramework::IVirtualObject { };

		public interface class MovementTweenerArbiter : public MovementArbiter, public IMovementSetTweener, public IMovementQueryTweener, public NetScriptFramework::IVirtualObject { };

		public interface class PathingCell : public BSPathingCell, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::UInt32 CellFormId
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class PathingDoor : public BSPathingDoor, public NetScriptFramework::IVirtualObject { };

		generic <typename BasicArrayImplementation_T1, typename BasicArrayImplementation_T2>
		public interface class BasicArrayImplementation : public hkDataArrayImpl, public NetScriptFramework::IVirtualObject { };

		public interface class BGSAcousticSpaceListener : public bhkEntityListener, public NetScriptFramework::IVirtualObject { };

		public interface class NiExtraData : public NiObject, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSFixedString^ Name
			{
				BSFixedString^ __clrcall get();
			}
		};

		public interface class BGSAnimSoundStateManager : public BSTEventSink<BGSAnimSoundEvent^>, public BSTSingletonSDM<BGSAnimSoundStateManager^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSBehaviorGraphModel : public TESModel, public NetScriptFramework::IVirtualObject { };

		public interface class BGSDebrisData : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class DataFlags : System::Byte
			{
				None = 0,
				CollisionData = 1,
			};

			property System::SByte Percentage
			{
				System::SByte __clrcall get();
			}

			property BGSDebrisData::DataFlags Flags
			{
				BGSDebrisData::DataFlags __clrcall get();
			}

			property System::String^ FileName
			{
				System::String^ __clrcall get();
			}

			property BSTArray<BSResource::FileID^, BSTArrayHeapAllocator^>^ TextureIDs
			{
				BSTArray<BSResource::FileID^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ Addons
			{
				BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		public interface class BGSDistantTreeBlock : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class InstanceData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::UInt32 Id
				{
					System::UInt32 __clrcall get();
				}

				property System::UInt16 X
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 Y
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 Z
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 RotZ
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 Scale
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 Alpha
				{
					System::UInt16 __clrcall get();
				}

				property System::Boolean Hidden
				{
					System::Boolean __clrcall get();
				}
			};

			interface class TreeGroup;

			property BSTArray<System::IntPtr, BSTArrayHeapAllocator^>^ TreeGroups
			{
				BSTArray<System::IntPtr, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTHashMap2<System::UInt32, System::IntPtr>^ InstanceMap
			{
				BSTHashMap2<System::UInt32, System::IntPtr>^ __clrcall get();
			}

			property BSTHashMap2<System::UInt32, System::IntPtr>^ NextGroup
			{
				BSTHashMap2<System::UInt32, System::IntPtr>^ __clrcall get();
			}

			property System::IntPtr Node
			{
				System::IntPtr __clrcall get();
			}

			property System::Boolean DoneLoading
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean Attached
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean AllVisible
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class BGSFootIkRaycastInterfaceDB : public BSIFootIkRaycastInterfaceDB, public BSTSingletonSDM<BGSFootIkRaycastInterfaceDB^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class hkbBindable : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class CacheBindablesCollector : public hkbBindableCollector, public NetScriptFramework::IVirtualObject { };
		};

		public interface class BGSGamebryoSequenceGeneratorHolderSingleton : public IGamebryoSequenceGeneratorHolderSingleton, public BSTSingletonSDM<BGSGamebryoSequenceGeneratorHolderSingleton^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class TESModelTri : public TESModel, public NetScriptFramework::IVirtualObject { };

		public interface class BGSImpactManager : public BSTEventSink<BGSFootstepEvent^>, public BSTEventSink<BGSCombatImpactEvent^>, public BSTEventSink<BGSCollisionSoundEvent^>, public BSTSingletonSDM<BGSImpactManager^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSLensFlareSprite : public BSLensFlareSpriteRenderData, public NetScriptFramework::IVirtualObject { };

		public interface class BGSParticleObjectCloneTask : public IOTask, public NetScriptFramework::IVirtualObject { };

		public interface class BGSPrimitiveLine : public BGSPrimitiveBox, public NetScriptFramework::IVirtualObject { };

		public interface class BGSStoryManager : public BSTSingletonSDM<BGSStoryManager^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSRegisteredStoryEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::UInt32 UniqueId
			{
				System::UInt32 __clrcall get();
			}

			property BSTArray<BGSStoryEventMember^, BSTArrayHeapAllocator^>^ Members
			{
				BSTArray<BGSStoryEventMember^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSString^ Name
			{
				BSString^ __clrcall get();
			}

			property System::Boolean Immediate
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class BGSTextureModel : public TESModel, public NetScriptFramework::IVirtualObject { };

		public interface class BSTextureSet : public NiObject, public NetScriptFramework::IVirtualObject { };

		public interface class bhkBackfaceContactListener : public bhkContactListener, public NetScriptFramework::IVirtualObject { };

		public interface class bhkBipedOrientationController : public bhkICharOrientationController, public BSTSingletonSDM<bhkBipedOrientationController^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class hkpCharacterControllerCinfo : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkQuaternion : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCharacterState : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class bhkCompressedMeshShapeData : public NiObject, public NetScriptFramework::IVirtualObject { };

		public interface class bhkOnExitCallback : public bhkTaskletManagerCallback, public NetScriptFramework::IVirtualObject { };

		public interface class bhkOnStartupCallback : public bhkTaskletManagerCallback, public NetScriptFramework::IVirtualObject { };

		public interface class bhkPoseArray : public NiObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkpConstraintMotor : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class MotorType : System::Int32
			{
				TYPE_INVALID = 0,
				TYPE_POSITION = 1,
				TYPE_VELOCITY = 2,
				TYPE_SPRING_DAMPER = 3,
				TYPE_CALLBACK = 4,
				TYPE_MAX = 5,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class bhkRagdollShareData : public NiObject, public NetScriptFramework::IVirtualObject { };

		public interface class bhkRagdollTemplateData : public NiObject, public NetScriptFramework::IVirtualObject { };

		public interface class bhkTelekinesisListener : public bhkContactListener, public BSTSingletonSDM<bhkTelekinesisListener^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class bhkTrapListener : public bhkEntityListener, public hkpPhantomListener, public NetScriptFramework::IVirtualObject { };

		public interface class bhkWindListener : public bhkEntityListener, public NetScriptFramework::IVirtualObject { };

		generic <typename implComposite_T1>
		interface class bnet::_detail::implComposite : public bnet::_detail::Composite, public NetScriptFramework::IVirtualObject { };

		public interface class BSAnimNote : public NiObject, public NetScriptFramework::IVirtualObject { };

		public interface class BSAnimNotes : public NiObject, public NetScriptFramework::IVirtualObject { };

		public interface class BSXAudio2DataSrc : public BSAudioDataSrc<BSXAudio2DataSrc^>, public NetScriptFramework::IVirtualObject { };

		public interface class NiInterpolator : public NiObject, public NetScriptFramework::IVirtualObject { };

		public interface class BSBloodSplatterShader : public BSShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSCounterStorage : public BSStorage, public NetScriptFramework::IVirtualObject { };

		public interface class BSDirectAtModifierInterface : public BSIDirectAtModifierSingleton, public BSTSingletonSDM<BSDirectAtModifierInterface^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class NiSkinPartition : public NiObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class TriShape : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::IntPtr VertexBuffer
				{
					System::IntPtr __clrcall get();
				}

				property System::IntPtr IndexBuffer
				{
					System::IntPtr __clrcall get();
				}

				property System::UInt64 VertexDesc
				{
					System::UInt64 __clrcall get();
				}

				property System::Int32 RefCount
				{
					System::Int32 __clrcall get();
				}

				property System::IntPtr RawVertexData
				{
					System::IntPtr __clrcall get();
				}

				property System::IntPtr RawIndexData
				{
					System::IntPtr __clrcall get();
				}
			};

			interface class Partition : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::UInt64 VertexDesc
				{
					System::UInt64 __clrcall get();
				}

				property System::IntPtr Bones
				{
					System::IntPtr __clrcall get();
				}

				property System::IntPtr Weights
				{
					System::IntPtr __clrcall get();
				}

				property System::IntPtr VertexMap
				{
					System::IntPtr __clrcall get();
				}

				property System::IntPtr BonePalette
				{
					System::IntPtr __clrcall get();
				}

				property System::IntPtr TriList
				{
					System::IntPtr __clrcall get();
				}

				property System::IntPtr StripLengths
				{
					System::IntPtr __clrcall get();
				}

				property System::UInt16 Vertices
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 Triangles
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 NumBones
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 Strips
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 BonesPerVertex
				{
					System::UInt16 __clrcall get();
				}

				property NiSkinPartition::TriShape^ BuffData
				{
					NiSkinPartition::TriShape^ __clrcall get();
				}
			};

			property System::Int32 NumPartitions
			{
				System::Int32 __clrcall get();
			}

			property unknown^ Partitions
			{
				unknown^ __clrcall get();
			}
		};

		public interface class BSDistantTreeShader : public BSShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSEffectShader : public BSShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSEffectShaderMaterial : public BSShaderMaterial, public NetScriptFramework::IVirtualObject { };

		public interface class BSFaceGenMorphDataHair : public BSFaceGenMorphData, public NetScriptFramework::IVirtualObject { };

		public interface class BSFaceGenMorphDataHead : public BSFaceGenMorphData, public NetScriptFramework::IVirtualObject { };

		public interface class BSGrassShader : public BSShader, public NetScriptFramework::IVirtualObject { };

		public interface class hkStreamReader : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class SeekWhence : System::Int32
			{
				STREAM_SET = 0,
				STREAM_CUR = 1,
				STREAM_END = 2,
			};
		};

		interface class BShkbUtils::ProspectiveEventClipAddingFunctor : public anonymous_namespace::ClipAddingFunctor, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShader : public BSShader, public ImageSpaceEffect, public NetScriptFramework::IVirtualObject { };

		public interface class hkbStateListener : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class BSKeyboardDevice : public BSInputDevice, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class KeyCodes : System::Int32
			{
				Escape = 1,
				Num1 = 2,
				Num2 = 3,
				Num3 = 4,
				Num4 = 5,
				Num5 = 6,
				Num6 = 7,
				Num7 = 8,
				Num8 = 9,
				Num9 = 0xA,
				Num0 = 0xB,
				Minus = 0xC,
				Equals = 0xD,
				Backspace = 0xE,
				Tab = 0xF,
				Q = 0x10,
				W = 0x11,
				E = 0x12,
				R = 0x13,
				T = 0x14,
				Y = 0x15,
				U = 0x16,
				I = 0x17,
				O = 0x18,
				P = 0x19,
				BracketLeft = 0x1A,
				BracketRight = 0x1B,
				Enter = 0x1C,
				LeftControl = 0x1D,
				A = 0x1E,
				S = 0x1F,
				D = 0x20,
				F = 0x21,
				G = 0x22,
				H = 0x23,
				J = 0x24,
				K = 0x25,
				L = 0x26,
				Semicolon = 0x27,
				Apostrophe = 0x28,
				Tilda = 0x29,
				LeftShift = 0x2A,
				Backslash = 0x2B,
				Z = 0x2C,
				X = 0x2D,
				C = 0x2E,
				V = 0x2F,
				B = 0x30,
				N = 0x31,
				M = 0x32,
				Comma = 0x33,
				Period = 0x34,
				Slash = 0x35,
				RightShift = 0x36,
				KP_Multiply = 0x37,
				LeftAlt = 0x38,
				Spacebar = 0x39,
				CapsLock = 0x3A,
				F1 = 0x3B,
				F2 = 0x3C,
				F3 = 0x3D,
				F4 = 0x3E,
				F5 = 0x3F,
				F6 = 0x40,
				F7 = 0x41,
				F8 = 0x42,
				F9 = 0x43,
				F10 = 0x44,
				NumLock = 0x45,
				ScrollLock = 0x46,
				KP_7 = 0x47,
				KP_8 = 0x48,
				KP_9 = 0x49,
				KP_Subtract = 0x4A,
				KP_4 = 0x4B,
				KP_5 = 0x4C,
				KP_6 = 0x4D,
				KP_Plus = 0x4E,
				KP_1 = 0x4F,
				KP_2 = 0x50,
				KP_3 = 0x51,
				KP_0 = 0x52,
				KP_Decimal = 0x53,
				F11 = 0x57,
				F12 = 0x58,
				KP_Enter = 0x9C,
				RightControl = 0x9D,
				KP_Divide = 0xB5,
				PrintScreen = 0xB7,
				RightAlt = 0xB8,
				Pause = 0xC5,
				Home = 0xC7,
				Up = 0xC8,
				PageUp = 0xC9,
				Left = 0xCB,
				Right = 0xCD,
				End = 0xCF,
				Down = 0xD0,
				PageDown = 0xD1,
				Insert = 0xD2,
				Delete = 0xD3,
			};
		};

		public interface class BSLightingShader : public BSShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSLimbIKModifierUtility : public BSILimbIKModifierSingleton, public BSTSingletonSDM<BSLimbIKModifierUtility^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		generic <typename BSList_T1>
		public interface class BSList : public BSPointerListBase<BSList_T1>, public NetScriptFramework::IVirtualObject { };

		public interface class BSMemStorage : public BSStorage, public NetScriptFramework::IVirtualObject { };

		public interface class BSMouseDevice : public BSInputDevice, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Boolean BackgroundMouse
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class BSMultiBound : public NiObject, public NetScriptFramework::IVirtualObject { };

		public interface class BSMultiBoundShape : public NiObject, public NetScriptFramework::IVirtualObject { };

		public interface class BSMusicManager : public BSTEventSink<BSMusicEvent^>, public BSTSingletonSDM<BSMusicManager^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class BSNavmeshSearchHideFilter : public BSNavmeshSearchFilters, public NetScriptFramework::IVirtualObject { };

		public interface class BSNavmeshSearchMaxCostFilters : public BSNavmeshSearchFilters, public NetScriptFramework::IVirtualObject { };

		public interface class BSNodeReferences : public NiObject, public NetScriptFramework::IVirtualObject { };

		public interface class BSOcclusionShape : public NiObject, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysModifier : public NiObject, public NetScriptFramework::IVirtualObject { };

		public interface class BSParticleShader : public BSShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSParticleShaderObjectEmitter : public BSParticleShaderEmitter, public NetScriptFramework::IVirtualObject { };

		public interface class BSParticleShaderCubeEmitter : public BSParticleShaderEmitter, public NetScriptFramework::IVirtualObject { };

		public interface class BSPassByTargetTriggerModifierInterface : public BSIPassByTargetTriggerModifierSingleton, public BSTSingletonSDM<BSPassByTargetTriggerModifierInterface^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		interface class BSPlatform::BSBethesdaPlatform : public BSTSingletonSDM<BSPlatform::BSBethesdaPlatform^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class BSPrecomputedNavmeshInfoPathMap : public BSTSingletonExplicit<BSPrecomputedNavmeshInfoPathMap^>, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class INavmeshInfoVisitor : public NetScriptFramework::IVirtualObject { };

			property BSTArray<BSTArray<BSNavmeshInfo^, BSTArrayHeapAllocator^>^, BSTArrayHeapAllocator^>^ AllPaths
			{
				BSTArray<BSTArray<BSNavmeshInfo^, BSTArrayHeapAllocator^>^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTHashMap2<BSNavmeshInfo^, System::UInt32>^ InfoToIndexMap
			{
				BSTHashMap2<BSNavmeshInfo^, System::UInt32>^ __clrcall get();
			}
		};

		public interface class BSProceduralLightningTasklet : public BSWin32TaskletData, public NetScriptFramework::IVirtualObject { };

		generic <typename EntryDB_T1>
		interface class BSResource::EntryDB : public BSResource::IEntryDB, public BSResource::EntryDBBase<BSResource::EntryDBTraits<EntryDB_T1, BSResource::EntryDB<EntryDB_T1>^>^>, public BSTSingletonSDM<BSResource::EntryDB<EntryDB_T1>^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class BSRagdollContactListenerModifierInterface : public BSIRagdollContactListenerModifierSingleton, public BSTSingletonSDM<BSRagdollContactListenerModifierInterface^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class BSReference : public NiObject, public NetScriptFramework::IVirtualObject { };

		interface class BSResource::anonymous_namespace::ArchiveRegistrationTaskData : public BSWin32TaskletData, public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

		interface class BSResource::anonymous_namespace::DefaultLocationData : public BSTSingletonSDM<BSResource::anonymous_namespace::DefaultLocationData^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		interface class BSResource::anonymous_namespace::DevNull : public BSResource::Location, public BSTSingletonSDM<BSResource::anonymous_namespace::DevNull^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class NullStream : public BSResource::Stream, public NetScriptFramework::IVirtualObject { };
		};

		interface class BSResource::anonymous_namespace::EventSources : public BSTSingletonSDM<BSResource::anonymous_namespace::EventSources^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		interface class BSResource::anonymous_namespace::GlobalLocations : public BSResource::Location, public BSTSingletonSDM<BSResource::anonymous_namespace::GlobalLocations^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		interface class BSResource::anonymous_namespace::GlobalPaths : public BSResource::Location, public BSTSingletonSDM<BSResource::anonymous_namespace::GlobalPaths^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class NiTexture : public NiObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class PixelLayouts : System::Int32
			{
				Palettized8 = 0,
				HighColor16 = 1,
				TrueColor32 = 2,
				Compressed = 3,
				Bumpmap = 4,
				Palettized4 = 5,
				Default = 6,
				SingleColor8 = 7,
				SingleColor16 = 8,
				SingleColor32 = 9,
				DoubleColor32 = 0xA,
				DoubleColor64 = 0xB,
				FloatColor32 = 0xC,
				FloatColor64 = 0xD,
				FloatColor128 = 0xE,
			};

			enum class AlphaFormats : System::Int32
			{
				None = 0,
				Binary = 1,
				Smooth = 2,
				Default = 3,
			};

			enum class MipFlags : System::Int32
			{
				No = 0,
				Yes = 1,
				Default = 2,
			};

			interface class FormatPrefs : public NetScriptFramework::IMemoryObject
			{
			public:
				property NiTexture::PixelLayouts PixelLayout
				{
					NiTexture::PixelLayouts __clrcall get();
				}

				property NiTexture::AlphaFormats AlphaFormat
				{
					NiTexture::AlphaFormats __clrcall get();
				}

				property NiTexture::MipFlags MipMapped
				{
					NiTexture::MipFlags __clrcall get();
				}
			};

			property NiTexture::FormatPrefs^ Format
			{
				NiTexture::FormatPrefs^ __clrcall get();
			}

			property BSFixedString^ Name
			{
				BSFixedString^ __clrcall get();
			}

			property NiTexture^ Previous
			{
				NiTexture^ __clrcall get();
			}

			property NiTexture^ Next
			{
				NiTexture^ __clrcall get();
			}
		};

		public interface class BSScaleformMovieLoadTask : public IOTask, public NetScriptFramework::IVirtualObject { };

		public interface class ScrapHeap : public IMemoryStore, public NetScriptFramework::IVirtualObject { };

		interface class BSScript::IStore : public BSStorage, public NetScriptFramework::IVirtualObject { };

		generic <typename NativeFunction0_T1, typename NativeFunction0_T2>
		interface class BSScript::NativeFunction0 : public BSScript::NF_util::NativeFunctionBase, public NetScriptFramework::IVirtualObject { };

		public interface class TESModelRDT : public TESModel, public NetScriptFramework::IVirtualObject { };

		public interface class BGSQuestInstanceText : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class StringData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Int32 AliasId
				{
					System::Int32 __clrcall get();
				}

				property System::UInt32 FullNameFormId
				{
					System::UInt32 __clrcall get();
				}
			};

			interface class GlobalValueData;

			property System::UInt32 Id
			{
				System::UInt32 __clrcall get();
			}

			property BSTArray<BGSQuestInstanceText::StringData^, BSTArrayHeapAllocator^>^ StringDataList
			{
				BSTArray<BGSQuestInstanceText::StringData^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<BGSQuestInstanceText::GlobalValueData^, BSTArrayHeapAllocator^>^ ValueDataList
			{
				BSTArray<BGSQuestInstanceText::GlobalValueData^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property System::UInt16 JournalStage
			{
				System::UInt16 __clrcall get();
			}

			property System::SByte JournalStageItem
			{
				System::SByte __clrcall get();
			}
		};

		public interface class TESTexture1024 : public TESTexture, public NetScriptFramework::IVirtualObject { };

		generic <typename NativeFunction1_T1, typename NativeFunction1_T2, typename NativeFunction1_T3>
		interface class BSScript::NativeFunction1 : public BSScript::NF_util::NativeFunctionBase, public NetScriptFramework::IVirtualObject { };

		generic <typename NativeFunction10_T1, typename NativeFunction10_T2, typename NativeFunction10_T3, typename NativeFunction10_T4, typename NativeFunction10_T5, typename NativeFunction10_T6, typename NativeFunction10_T7, typename NativeFunction10_T8, typename NativeFunction10_T9, typename NativeFunction10_T10, typename NativeFunction10_T11, typename NativeFunction10_T12>
		interface class BSScript::NativeFunction10 : public BSScript::NF_util::NativeFunctionBase, public NetScriptFramework::IVirtualObject { };

		generic <typename NativeFunction11_T1, typename NativeFunction11_T2, typename NativeFunction11_T3, typename NativeFunction11_T4, typename NativeFunction11_T5, typename NativeFunction11_T6, typename NativeFunction11_T7, typename NativeFunction11_T8, typename NativeFunction11_T9, typename NativeFunction11_T10, typename NativeFunction11_T11, typename NativeFunction11_T12, typename NativeFunction11_T13>
		interface class BSScript::NativeFunction11 : public BSScript::NF_util::NativeFunctionBase, public NetScriptFramework::IVirtualObject { };

		generic <typename NativeFunction2_T1, typename NativeFunction2_T2, typename NativeFunction2_T3, typename NativeFunction2_T4>
		interface class BSScript::NativeFunction2 : public BSScript::NF_util::NativeFunctionBase, public NetScriptFramework::IVirtualObject { };

		generic <typename NativeFunction3_T1, typename NativeFunction3_T2, typename NativeFunction3_T3, typename NativeFunction3_T4, typename NativeFunction3_T5>
		interface class BSScript::NativeFunction3 : public BSScript::NF_util::NativeFunctionBase, public NetScriptFramework::IVirtualObject { };

		generic <typename NativeFunction4_T1, typename NativeFunction4_T2, typename NativeFunction4_T3, typename NativeFunction4_T4, typename NativeFunction4_T5, typename NativeFunction4_T6>
		interface class BSScript::NativeFunction4 : public BSScript::NF_util::NativeFunctionBase, public NetScriptFramework::IVirtualObject { };

		generic <typename NativeFunction5_T1, typename NativeFunction5_T2, typename NativeFunction5_T3, typename NativeFunction5_T4, typename NativeFunction5_T5, typename NativeFunction5_T6, typename NativeFunction5_T7>
		interface class BSScript::NativeFunction5 : public BSScript::NF_util::NativeFunctionBase, public NetScriptFramework::IVirtualObject { };

		generic <typename NativeFunction6_T1, typename NativeFunction6_T2, typename NativeFunction6_T3, typename NativeFunction6_T4, typename NativeFunction6_T5, typename NativeFunction6_T6, typename NativeFunction6_T7, typename NativeFunction6_T8>
		interface class BSScript::NativeFunction6 : public BSScript::NF_util::NativeFunctionBase, public NetScriptFramework::IVirtualObject { };

		generic <typename NativeFunction8_T1, typename NativeFunction8_T2, typename NativeFunction8_T3, typename NativeFunction8_T4, typename NativeFunction8_T5, typename NativeFunction8_T6, typename NativeFunction8_T7, typename NativeFunction8_T8, typename NativeFunction8_T9, typename NativeFunction8_T10>
		interface class BSScript::NativeFunction8 : public BSScript::NF_util::NativeFunctionBase, public NetScriptFramework::IVirtualObject { };

		generic <typename NativeFunction9_T1, typename NativeFunction9_T2, typename NativeFunction9_T3, typename NativeFunction9_T4, typename NativeFunction9_T5, typename NativeFunction9_T6, typename NativeFunction9_T7, typename NativeFunction9_T8, typename NativeFunction9_T9, typename NativeFunction9_T10, typename NativeFunction9_T11>
		interface class BSScript::NativeFunction9 : public BSScript::NF_util::NativeFunctionBase, public NetScriptFramework::IVirtualObject { };

		public interface class NiAccumulator : public NiObject, public NetScriptFramework::IVirtualObject { };

		public interface class BSShadowLight : public BSLight, public NetScriptFramework::IVirtualObject { };

		public interface class BSSkyShader : public BSShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSSpeedSamplerDBManager : public BSISpeedSamplerDB, public BSTSingletonSDM<BSSpeedSamplerDBManager^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class NiParticlesData : public NiObject, public NetScriptFramework::IVirtualObject { };

		public interface class BSSystemFileStorage : public BSStorage, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class ErrorCodes : System::UInt32
			{
				kNone = 0,
				kFileNotFound = 2,
				kAlreadyExists = 3,
				kPathNotFound = 4,
				kWriteProtect = 5,
				kOther = 6,
				kErrorMask = 0x7FFFFFFF,
				kUnkFlag = 0x80000000,
			};

			interface class Attributes : public NetScriptFramework::IMemoryObject
			{
			public:
				property BSSystemFileStorage::ErrorCodes LastError
				{
					BSSystemFileStorage::ErrorCodes __clrcall get();
				}

				property System::IntPtr FileHandle
				{
					System::IntPtr __clrcall get();
				}
			};

			property BSSystemFileStorage::Attributes^ FileAttributes
			{
				BSSystemFileStorage::Attributes^ __clrcall get();
			}

			property System::Boolean GoodForRead
			{
				System::Boolean __clrcall get();
			}
		};

		generic <typename BSTAnimationGraphDataChannel_T1, typename BSTAnimationGraphDataChannel_T2, typename BSTAnimationGraphDataChannel_T3>
		public interface class BSTAnimationGraphDataChannel : public BSAnimationGraphChannel, public ActorLookAtChannel2<BSTAnimationGraphDataChannel_T1, BSTAnimationGraphDataChannel_T2>, public NetScriptFramework::IVirtualObject { };

		public interface class SetEventData : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSFixedString^ EventName
			{
				BSFixedString^ __clrcall get();
			}

			property BSTArray<BSFixedString^, BSTSmallArrayHeapAllocator<UnknownGenArg_8^>^>^ ClipNames
			{
				BSTArray<BSFixedString^, BSTSmallArrayHeapAllocator<UnknownGenArg_8^>^>^ __clrcall get();
			}
		};

		generic <typename BSTCommonLLMessageQueue_T1>
		public interface class BSTCommonLLMessageQueue : public BSTCommonMessageQueue<BSTCommonLLMessageQueue_T1>, public NetScriptFramework::IVirtualObject { };

		generic <typename BSTCommonScrapHeapMessageQueue_T1>
		public interface class BSTCommonScrapHeapMessageQueue : public BSTCommonMessageQueue<BSTCommonScrapHeapMessageQueue_T1>, public NetScriptFramework::IVirtualObject { };

		generic <typename BSTObjectDictionary_T1, typename BSTObjectDictionary_T2, typename BSTObjectDictionary_T3, typename BSTObjectDictionary_T4>
		public interface class BSTObjectDictionary : public ResponseDefinitionMissPolicy2<BSTObjectDictionary_T1, BSTObjectDictionary_T2>, public PreloadResponsesInitializationPolicy2<BSTObjectDictionary_T1, BSTObjectDictionary_T2>, public BSTSingletonSDM<BSTObjectDictionary<BSTObjectDictionary_T1, BSTObjectDictionary_T2, BSTObjectDictionary_T3, BSTObjectDictionary_T4>^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class CharacterCollisionHandler : public bhkCharacterCollisionHandler, public BSTSingletonSDM<CharacterCollisionHandler^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class GarbageCollector : public BSTEventSink<PositionPlayerEvent^>, public BSTSingletonSDM<GarbageCollector^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class HelpMessageManager : public BSTEventSink<InputEvent^>, public BSTSingletonSDM<HelpMessageManager^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class Inventory3DManager : public MenuEventHandler, public BSTSingletonSDM<Inventory3DManager^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class ClickHandler : public MenuEventHandler, public NetScriptFramework::IVirtualObject { };

		public interface class DirectionHandler : public MenuEventHandler, public NetScriptFramework::IVirtualObject { };

		public interface class ConsoleOpenHandler : public MenuEventHandler, public NetScriptFramework::IVirtualObject { };

		public interface class QuickSaveLoadHandler : public MenuEventHandler, public NetScriptFramework::IVirtualObject { };

		public interface class MenuOpenHandler : public MenuEventHandler, public NetScriptFramework::IVirtualObject { };

		public interface class FavoritesHandler : public MenuEventHandler, public NetScriptFramework::IVirtualObject { };

		public interface class ScreenshotHandler : public MenuEventHandler, public NetScriptFramework::IVirtualObject { };

		public interface class MenuTopicManager : public BSTEventSink<MenuOpenCloseEvent^>, public BSTEventSink<PositionPlayerEvent^>, public BSTSingletonSDM<MenuTopicManager^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class MovementAvoidanceManager : public IMovementAvoidanceManager, public BSTSingletonSDM<MovementAvoidanceManager^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class NavMeshObstacleManager : public BSTEventSink<CellAttachDetachEvent^>, public BSTSingletonSDM<NavMeshObstacleManager^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class Pathing : public BSPathing, public BSPathingCellManager, public BSTEventSink<CellAttachDetachEvent^>, public BSTSingletonSDM<Pathing^, BSTSingletonSDMOpStaticBuffer0^>, public MovementManager, public NetScriptFramework::IVirtualObject { };

		public interface class SprintHandler : public HeldStateHandler, public NetScriptFramework::IVirtualObject { };

		public interface class RunHandler : public HeldStateHandler, public NetScriptFramework::IVirtualObject { };

		public interface class TogglePOVHandler : public HeldStateHandler, public NetScriptFramework::IVirtualObject { };

		public interface class PlayerRegionState : public BSTEventSink<BGSActorCellEvent^>, public BSTSingletonSDM<PlayerRegionState^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		interface class SkyrimScript::PathingCallbackMgr : public BSTEventSink<BSPathEvent^>, public BSTSingletonSDM<SkyrimScript::PathingCallbackMgr^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		interface class SkyrimScript::QuestCallbackMgr : public BSTEventSink<TESQuestStageItemDoneEvent^>, public BSTEventSink<TESQuestStartStopEvent^>, public BSTEventSink<BGSEventProcessedEvent^>, public BSTSingletonSDM<SkyrimScript::QuestCallbackMgr^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		interface class SkyrimScript::SoundCallbackMgr : public BSTSingletonSDM<SkyrimScript::SoundCallbackMgr^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class SkyrimSpeechRecognition : public BSTEventSink<SpeechRecognitionEvents::DeviceConnected^>, public BSTEventSink<SpeechRecognitionEvents::DeviceReady^>, public BSTEventSink<SpeechRecognitionEvents::Interference^>, public BSTEventSink<SpeechRecognitionEvents::Recognition^>, public BSTEventSink<MenuOpenCloseEvent^>, public BSTSingletonSDM<SkyrimSpeechRecognition^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class StaticAvoidNodeManager : public IStaticAvoidNodeManager, public BSTEventSink<CellAttachDetachEvent^>, public BSTSingletonSDM<StaticAvoidNodeManager^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		interface class TESAudio::ScriptedMusicState : public BSTSingletonSDM<TESAudio::ScriptedMusicState^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class UISaveLoadManager : public BSTEventSink<BSSaveDataEvent^>, public BSTEventSink<BGSSaveLoadManagerEvent^>, public BSTSingletonSDM<UISaveLoadManager^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class IMovementPathManagerDataTracker : public IMovementAgentDataTracker<IMovementPathManagerAgent^, MovementPathManagerAgentReturnData::AGENT_RESULT^>, public NetScriptFramework::IVirtualObject { };

		public interface class NullMovementState : public IMovementState, public BSTSingletonImplicit1<NullMovementState^>, public NetScriptFramework::IVirtualObject { };

		public interface class BSUtilityShader : public BSShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSWaterShader : public BSShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSWaterShaderMaterial : public BSShaderMaterial, public NetScriptFramework::IVirtualObject { };

		public interface class BSVMLoadTask : public IOTask, public NetScriptFramework::IVirtualObject { };

		public interface class IDEvent : public InputEvent, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSFixedString^ ControlId
			{
				BSFixedString^ __clrcall get();
			}

			property System::UInt32 KeyMask
			{
				System::UInt32 __clrcall get();

				void __clrcall set(System::UInt32 value);
			}
		};

		public interface class CellLoaderTask : public IOTask, public NetScriptFramework::IVirtualObject { };

		public interface class CharEvent : public InputEvent, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Int32 KeyCode
			{
				System::Int32 __clrcall get();

				void __clrcall set(System::Int32 value);
			}
		};

		public interface class CheckLineOfSightFilterMisc : public BSPathing::CheckLineOfSightFilter, public NetScriptFramework::IVirtualObject { };

		public interface class CheckWithinMultiBoundTask : public IOTask, public NetScriptFramework::IVirtualObject { };

		generic <typename SettingT_T1>
		public interface class SettingT : public Setting, public NetScriptFramework::IVirtualObject { };

		generic <typename CombatBehaviorTreeCreateContextNode_T1>
		public interface class CombatBehaviorTreeCreateContextNode : public CombatBehaviorTreeCreateContextNodeBase<CombatBehaviorTreeCreateContextNode_T1>, public NetScriptFramework::IVirtualObject { };

		generic <typename CombatBehaviorTreeCreateContextNode1_T1, typename CombatBehaviorTreeCreateContextNode1_T2>
		public interface class CombatBehaviorTreeCreateContextNode1 : public CombatBehaviorTreeCreateContextNodeBase<CombatBehaviorTreeCreateContextNode1_T1>, public NetScriptFramework::IVirtualObject { };

		generic <typename CombatBehaviorTreeCreateContextNode2_T1, typename CombatBehaviorTreeCreateContextNode2_T2, typename CombatBehaviorTreeCreateContextNode2_T3>
		public interface class CombatBehaviorTreeCreateContextNode2 : public CombatBehaviorTreeCreateContextNodeBase<CombatBehaviorTreeCreateContextNode2_T1>, public NetScriptFramework::IVirtualObject { };

		generic <typename CombatBehaviorTreeNodeObject_T1>
		public interface class CombatBehaviorTreeNodeObject : public CombatBehaviorTreeNodeObjectBase<CombatBehaviorTreeNodeObject_T1>, public NetScriptFramework::IVirtualObject { };

		generic <typename CombatBehaviorTreeNodeObject1_T1, typename CombatBehaviorTreeNodeObject1_T2>
		public interface class CombatBehaviorTreeNodeObject1 : public CombatBehaviorTreeNodeObjectBase<CombatBehaviorTreeNodeObject1_T1>, public NetScriptFramework::IVirtualObject { };

		generic <typename CombatBehaviorTreeNodeObject2_T1, typename CombatBehaviorTreeNodeObject2_T2, typename CombatBehaviorTreeNodeObject2_T3>
		public interface class CombatBehaviorTreeNodeObject2 : public CombatBehaviorTreeNodeObjectBase<CombatBehaviorTreeNodeObject2_T1>, public NetScriptFramework::IVirtualObject { };

		generic <typename CombatBehaviorTreeNodeObject3_T1, typename CombatBehaviorTreeNodeObject3_T2, typename CombatBehaviorTreeNodeObject3_T3, typename CombatBehaviorTreeNodeObject3_T4>
		public interface class CombatBehaviorTreeNodeObject3 : public CombatBehaviorTreeNodeObjectBase<CombatBehaviorTreeNodeObject3_T1>, public NetScriptFramework::IVirtualObject { };

		generic <typename CombatBehaviorTreeValueNode_T1>
		public interface class CombatBehaviorTreeValueNode : public CombatBehaviorTreeWrapperNode, public NetScriptFramework::IVirtualObject { };

		public interface class CombatGroupDetectionListener : public DetectionListener, public NetScriptFramework::IVirtualObject { };

		generic <typename CombatNavmeshSearchT_T1, typename CombatNavmeshSearchT_T2>
		public interface class CombatNavmeshSearchT : public CombatNavmeshSearch /* CombatNavmeshSearchT_T1 */ /* CombatNavmeshSearchT_T2 */, public NetScriptFramework::IVirtualObject { };

		public interface class CombatPathBuilderOpen : public CombatPathBuilder, public NetScriptFramework::IVirtualObject { };

		public interface class CombatPathBuilderStandard : public CombatPathBuilder, public NetScriptFramework::IVirtualObject { };

		generic <typename ConcreteObjectFormFactory_T1, typename ConcreteObjectFormFactory_T2, typename ConcreteObjectFormFactory_T3, typename ConcreteObjectFormFactory_T4>
		public interface class ConcreteObjectFormFactory : public ConcreteFormFactory<ConcreteObjectFormFactory_T1, ConcreteObjectFormFactory_T2>, public NetScriptFramework::IVirtualObject { };

		interface class CreationClub::CreationChanged_ConfirmResetCallback : public IMessageBoxCallback, public NetScriptFramework::IVirtualObject { };

		public interface class DetectionCollector : public DetectionListener, public NetScriptFramework::IVirtualObject { };

		public interface class DeviceConnectEvent : public InputEvent, public NetScriptFramework::IVirtualObject { };

		public interface class ExtraActivateLoopSound : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSSoundHandle^ SoundHandle
			{
				BSSoundHandle^ __clrcall get();
			}
		};

		public interface class BGSAnimationSequencer : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Int32 NumSequences
			{
				System::Int32 __clrcall get();
			}

			property BSTHashMap2<BSFixedString^, BGSActionData^>^ Actions
			{
				BSTHashMap2<BSFixedString^, BGSActionData^>^ __clrcall get();
			}
		};

		public interface class ExtraAttachedArrows3D : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data;

			property BSTArray<ExtraAttachedArrows3D::Data^, BSTArrayHeapAllocator^>^ AttachedData
			{
				BSTArray<ExtraAttachedArrows3D::Data^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property System::UInt16 NextStorage
			{
				System::UInt16 __clrcall get();
			}

			property System::UInt16 OldestStorage
			{
				System::UInt16 __clrcall get();
			}
		};

		public interface class ExtraCellWaterEnvMap : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property TESTexture^ WaterEnvMap
			{
				TESTexture^ __clrcall get();
			}
		};

		public interface class ExtraCreatureAwakeSound : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSSoundHandle^ SoundHandle
			{
				BSSoundHandle^ __clrcall get();
			}
		};

		public interface class ExtraCreatureMovementSound : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSSoundHandle^ SoundHandle
			{
				BSSoundHandle^ __clrcall get();
			}
		};

		public interface class BGSDecalGroup : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class CreationData;

			property System::Boolean PermanentGroup
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean ManualSaveLoad
			{
				System::Boolean __clrcall get();
			}

			property BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ DecalGroups
			{
				BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<BGSDecalGroup::CreationData^, BSTArrayHeapAllocator^>^ PendingDecals
			{
				BSTArray<BGSDecalGroup::CreationData^, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		public interface class ExtraFollower : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::UInt32 ActorRefHandle
				{
					System::UInt32 __clrcall get();
				}

				property System::Single IntendedFollowDistance
				{
					System::Single __clrcall get();
				}
			};

			property BSTArray<ExtraFollower::Data^, BSTArrayHeapAllocator^>^ ActorFollowers
			{
				BSTArray<ExtraFollower::Data^, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		public interface class ExtraFriendHits : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSTArray<AITimeStamp^, BSTArrayHeapAllocator^>^ Hits
			{
				BSTArray<AITimeStamp^, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		public interface class ExtraGuardedRefData : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::UInt32 GuardFormId
				{
					System::UInt32 __clrcall get();
				}
			};

			property BSTArray<ExtraGuardedRefData::Data^, BSTArrayHeapAllocator^>^ Guards
			{
				BSTArray<ExtraGuardedRefData::Data^, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		public interface class ExtraLinkedRef : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data;

			property BSTArray<ExtraLinkedRef::Data^, BSTSmallArrayHeapAllocator<UnknownGenArg_0x10^>^>^ LinkedRefs
			{
				BSTArray<ExtraLinkedRef::Data^, BSTSmallArrayHeapAllocator<UnknownGenArg_0x10^>^>^ __clrcall get();
			}
		};

		public interface class ExtraLinkedRefChildren : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data;

			property BSTArray<ExtraLinkedRefChildren::Data^, BSTSmallArrayHeapAllocator<UnknownGenArg_0x10^>^>^ LinkedChildren
			{
				BSTArray<ExtraLinkedRefChildren::Data^, BSTSmallArrayHeapAllocator<UnknownGenArg_0x10^>^>^ __clrcall get();
			}
		};

		public interface class ExtraMagicLight : public ExtraLight, public NetScriptFramework::IVirtualObject { };

		public interface class ExtraReflectedRefs : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ RefHandles
			{
				BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		public interface class ExtraReflectorRefs : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ RefHandles
			{
				BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		public interface class ExtraReservedMarkers : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSTArray<MarkerUsedData^, BSTArrayHeapAllocator^>^ ReservedMarkerArray
			{
				BSTArray<MarkerUsedData^, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		public interface class ExtraSavedAnimation : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BGSLoadGameSubBuffer^ AnimationBuffer
			{
				BGSLoadGameSubBuffer^ __clrcall get();
			}
		};

		public interface class ExtraSavedHavokData : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BGSLoadGameSubBuffer^ HavokBuffer
			{
				BGSLoadGameSubBuffer^ __clrcall get();
			}
		};

		public interface class ExtraScriptedAnimDependence : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::UInt32 RefHandle
				{
					System::UInt32 __clrcall get();
				}
			};

			property BSTArray<ExtraScriptedAnimDependence::Data^, BSTArrayHeapAllocator^>^ DependentManagers
			{
				BSTArray<ExtraScriptedAnimDependence::Data^, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		public interface class ExtraSound : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSSoundHandle^ SoundHandle
			{
				BSSoundHandle^ __clrcall get();
			}
		};

		public interface class ExtraUsedMarkers : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSTArray<MarkerUsedData^, BSTArrayHeapAllocator^>^ UsedMarkers
			{
				BSTArray<MarkerUsedData^, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		public interface class ExtraWeaponAttackSound : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSSoundHandle^ SoundHandle
			{
				BSSoundHandle^ __clrcall get();
			}
		};

		public interface class ExtraWeaponIdleSound : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSSoundHandle^ SoundHandle
			{
				BSSoundHandle^ __clrcall get();
			}
		};

		public interface class FindByEffectSettingFunctor : public MagicItemFindFunctor, public NetScriptFramework::IVirtualObject { };

		public interface class MagicItemFindKeywordFunctor : public MagicItemFindFunctor, public NetScriptFramework::IVirtualObject { };

		public interface class FindEqualsFunctor : public MagicItemFindFunctor, public NetScriptFramework::IVirtualObject { };

		public interface class FindNonExcludedDeliveryFunctor : public MagicItemFindFunctor, public NetScriptFramework::IVirtualObject { };

		public interface class FindTriangleForLocationWaterFilter : public FindTriangleForLocationFilterCheckDeltaZ, public NetScriptFramework::IVirtualObject { };

		public interface class hkError : public hkReferencedObject, public hkSingleton<hkError^>, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class Message : System::Int32
			{
				MESSAGE_REPORT = 0,
				MESSAGE_WARNING = 1,
				MESSAGE_ASSERT = 2,
				MESSAGE_ERROR = 3,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkStreamWriter : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class SeekWhence : System::Int32
			{
				STREAM_SET = 0,
				STREAM_CUR = 1,
				STREAM_END = 2,
			};
		};

		public interface class hkFileSystem : public hkReferencedObject, public hkSingleton<hkFileSystem^>, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class FlagValues : System::Int32
			{
				F_ISFILE = 1,
				F_ISDIR = 2,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class StdStream : System::Int32
			{
				STDOUT = 1,
				STDERR = 2,
			};

			interface class Entry : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DirectoryListing;
		};

		public interface class hkaAnimatedReferenceFrame : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMatrix4 : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaFootPlacementIkSolver : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Output : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Setup;

			interface class Input;
		};

		public interface class hkAlignSceneToNodeOptions : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		generic <typename hkStringMap_T1, typename hkStringMap_T2>
		public interface class hkStringMap : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkBallAndSocketConstraintCinfo : public hkConstraintCinfo, public NetScriptFramework::IVirtualObject { };

		public interface class hkConstraintChainCinfo : public hkConstraintCinfo, public NetScriptFramework::IVirtualObject { };

		public interface class hkbAnimationBindingSet : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbAnimationBindingWithTriggers : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbSceneModifier : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbAttachmentSetup : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbAuxiliaryNodeInfo : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbBehaviorClient : public hkReferencedObject, public hkRemoteObjectClientSideListener, public NetScriptFramework::IVirtualObject { };

		public interface class hkbBehaviorEventsInfo : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbBehaviorGraphData : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbBehaviorGraphInternalState : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbBehaviorGraphInternalStateInfo : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbBehaviorGraphStringData : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbBehaviorInfo : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbBlenderGeneratorInternalState : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbBlendingTransitionEffectInternalState : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbSequencedData : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbEventPayload : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbCharacter : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbCharacterAddedInfo : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbCharacterControlCommand : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbCharacterControllerModifierInternalState : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbCharacterData : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbCharacterInfo : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbCharacterSetup : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbCharacterSkinInfo : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbCharacterSteppedInfo : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbCharacterStringData : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbClientCharacterState : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbClipGeneratorInternalState : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbClipTriggerArray : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkLocalFrameCollector : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkbCombineTransformsModifierInternalState : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbCompiledExpressionSet : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbComputeDirectionModifierInternalState : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbComputeRotationFromAxisAngleModifierInternalState : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbComputeRotationToTargetModifierInternalState : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbCondition : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbDampingModifierInternalState : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbDefaultRaycastInterface : public hkReferencedObject, public hkaRaycastInterface, public NetScriptFramework::IVirtualObject { };

		public interface class hkbDelayedModifierInternalState : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbDetectCloseToGroundModifierInternalState : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbEvaluateExpressionModifierInternalState : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbEventDrivenModifierInternalState : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbEventRaisedInfo : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbEventRangeDataArray : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbEventsFromRangeModifierInternalState : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbExpressionDataArray : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbFootIkDriver : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbFootIkDriverInfo : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbGeneratorTransitionEffectInternalState : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbGetUpModifierInternalState : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbGetWorldFromModelModifierInternalState : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbHandIkDriver : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbHandIkDriverInfo : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbHandle : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkTagfileReader : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class FormatType : System::Int32
			{
				FORMAT_ERROR = 0,
				FORMAT_UNKNOWN = 1,
				FORMAT_BINARY = 2,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkbLinkedSymbolInfo : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbLookAtModifierInternalState : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbManualSelectorGeneratorInternalState : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbMirroredSkeletonInfo : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbMoveCharacterModifierInternalState : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbNodeInternalStateInfo : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbPoseMatchingGeneratorInternalState : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbProjectData : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbProjectStringData : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbRagdollDriver : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbRaiseEventCommand : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkBreakableConstraintCinfo : public hkConstraintCinfo, public NetScriptFramework::IVirtualObject { };

		public interface class hkbRotateCharacterModifierInternalState : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkSocket : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class ReaderAdapter : public hkStreamReader, public NetScriptFramework::IVirtualObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class WriterAdapter : public hkStreamWriter, public NetScriptFramework::IVirtualObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class SOCKET_EVENTS : System::Int32
			{
				SOCKET_NOEVENTS = 0,
				SOCKET_CAN_READ = 1,
				SOCKET_CAN_WRITE = 2,
				SOCKET_CONNECT = 4,
				SOCKET_CLOSED = 8,
				SOCKET_ALLEVENTS = 0xFF,
			};
		};

		public interface class hkbSequenceInternalState : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbSequenceStringData : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbSetBehaviorCommand : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbSetLocalTimeOfClipGeneratorCommand : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbSetNodePropertyCommand : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbSetWordVariableCommand : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbSimulationControlCommand : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbSimulationStateInfo : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbStateChooser : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbStateMachineInternalState : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbSymbolIdMap : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbTimerModifierInternalState : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbTransformVectorModifierInternalState : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkBuiltinTypeRegistry : public hkReferencedObject, public hkSingleton<hkBuiltinTypeRegistry^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkbVariableBindingSet : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbVariableValueSet : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkbWorld : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkClassNameRegistry : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkJobThreadPool : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpWorldRayCastInput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpShapeRayCastInput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDataArrayNative : public hkDataArrayImpl, public NetScriptFramework::IVirtualObject { };

		public interface class hkDataClassDict : public hkDataClassImpl, public NetScriptFramework::IVirtualObject { };

		public interface class hkDataClassNative : public hkDataClassImpl, public NetScriptFramework::IVirtualObject { };

		public interface class hkDataObjectDict : public hkDataObjectImpl, public NetScriptFramework::IVirtualObject { };

		public interface class hkDataObjectNative : public hkDataObjectImpl, public NetScriptFramework::IVirtualObject { };

		public interface class hkDataWorld : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DataWorldType : System::Int32
			{
				TYPE_NATIVE = 0,
				TYPE_DICTIONARY = 1,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDummySingleton : public hkReferencedObject, public hkSingleton<hkDummySingleton^>, public NetScriptFramework::IVirtualObject { };

		public interface class hkGenericConstraintCinfo : public hkConstraintCinfo, public NetScriptFramework::IVirtualObject { };

		generic <typename hkgpAbstractMesh_T1, typename hkgpAbstractMesh_T2, typename hkgpAbstractMesh_T3, typename hkgpAbstractMesh_T4>
		public interface class hkgpAbstractMesh : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkgpConvexHull : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class IUserObject : public NetScriptFramework::IVirtualObject { };

			interface class AbsoluteScaleConfig : public NetScriptFramework::IMemoryObject
			{
			public:
				enum class Method : System::Int32
				{
					SKM_VERTICES = 0,
					SKM_PLANES = 1,
					SKM_CLAMPED_PLANES = 2,
					NUM_METHODS = 3,
				};
			};

			interface class BuildConfig : public NetScriptFramework::IMemoryObject { };

			interface class IBooleanFunction : public NetScriptFramework::IVirtualObject { };

			enum class Inputs : System::Int32
			{
				SOURCE_VERTICES = 0,
				INTERNAL_VERTICES = 1,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class Side : System::Int32
			{
				ZERO = 0,
				POSITIVE = 1,
				NEGATIVE = 2,
				CROSSING = 3,
				INVALID = 4,
			};

			interface class SimplifyConfig : public NetScriptFramework::IMemoryObject { };

			interface class Triangle : public NetScriptFramework::IMemoryObject { };

			interface class Vertex : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkgpTriangulatorBase : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			generic <typename DefaultEdgeData_T1>
			interface class DefaultEdgeData : public NetScriptFramework::IMemoryObject { };

			generic <typename SparseEdgeDataPolicy_T1, typename SparseEdgeDataPolicy_T2>
			interface class SparseEdgeDataPolicy : public NetScriptFramework::IMemoryObject { };

			interface class TriangleBase : public NetScriptFramework::IMemoryObject { };

			interface class VertexBase : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkHingeConstraintCinfo : public hkConstraintCinfo, public NetScriptFramework::IVirtualObject { };

		public interface class hkHingeLimitsConstraintCinfo : public hkConstraintCinfo, public NetScriptFramework::IVirtualObject { };

		interface class hkKdTreeBuildInput::Mediator : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpShapeRayBundleCastInput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkLimitedHingeConstraintCinfo : public hkConstraintCinfo, public NetScriptFramework::IVirtualObject { };

		public interface class hkLocalFrame : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkLocalFrameGroup : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMalleableConstraintCinfo : public hkConstraintCinfo, public NetScriptFramework::IVirtualObject { };

		public interface class hkResourceBase : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class Type : System::Int32
			{
				TYPE_RESOURCE = 0,
				TYPE_CONTAINER = 1,
			};
		};

		public interface class hkObjectCopier : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class ObjectCopierFlagBits : System::Int32
			{
				FLAG_NONE = 0,
				FLAG_APPLY_DEFAULT_IF_SERIALIZE_IGNORED = 1,
				FLAG_RESPECT_SERIALIZE_IGNORED = 2,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkObjectWriter : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkPackedNiTriStripsData : public NiObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkpAllCdBodyPairTempCollector : public hkpCdBodyPairCollector, public NetScriptFramework::IVirtualObject { };

		public interface class hkpFirstPersonGunBulletListener : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpContactMgr : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class Type : System::Int32
			{
				TYPE_SIMPLE_CONSTRAINT_CONTACT_MGR = 0,
				TYPE_REPORT_CONTACT_MGR = 1,
				TYPE_CONVEX_LIST_CONTACT_MGR = 2,
				TYPE_NULL_CONTACT_MGR = 3,
				TYPE_USER_CONTACT_MGR = 4,
				TYPE_MAX = 5,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class ToiAccept : System::Int32
			{
				TOI_ACCEPT = 0,
				TOI_REJECT = 1,
			};
		};

		public interface class hkpBoxBoxManifold : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpContactMgrFactory : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConstraintOwner : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpModifierConstraintAtom : public hkpConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpToiResourceMgr : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkpBreakableBody : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpFlagCdBodyPairCollector : public hkpCdBodyPairCollector, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpParametricCurve : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpMoppAssembler : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkpMoppMediator : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkpMoppCodeGenerator : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkpMoppCostFunction : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkpMoppNodeMgr : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkpNullBroadPhaseListener : public hkReferencedObject, public hkpBroadPhaseListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkPointToPathConstraintCinfo : public hkConstraintCinfo, public NetScriptFramework::IVirtualObject { };

		public interface class hkPrismaticConstraintCinfo : public hkConstraintCinfo, public NetScriptFramework::IVirtualObject { };

		public interface class hkProductFeatures : public hkReferencedObject, public hkSingleton<hkProductFeatures^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSimpleContactConstraintAtom : public hkpConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkContactPoint : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSymmetricAgentFlipBodyCollector : public hkpCdBodyPairCollector, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSymmetricAgentFlipCastCollector : public hkpCdPointCollector, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpLinearCastInput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkRagdollConstraintCinfo : public hkConstraintCinfo, public NetScriptFramework::IVirtualObject { };

		public interface class hkRagdollLimitsConstraintCinfo : public hkConstraintCinfo, public NetScriptFramework::IVirtualObject { };

		public interface class hkReferencedObjectLock : public hkReferencedObject, public hkSingleton<hkReferencedObjectLock^>, public NetScriptFramework::IVirtualObject { };

		public interface class hkSerializeDeprecated : public hkReferencedObject, public hkSingleton<hkSerializeDeprecated^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkStackTracer : public hkReferencedObject, public hkSingleton<hkStackTracer^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class CallTree;
		};

		public interface class hkStiffSpringConstraintCinfo : public hkConstraintCinfo, public NetScriptFramework::IVirtualObject { };

		public interface class hkTrackerLayoutHandler : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class ReferenceInfo : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkWheelConstraintCinfo : public hkConstraintCinfo, public NetScriptFramework::IVirtualObject { };

		public interface class hkxCamera : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxLight : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class LightType : System::Int32
			{
				POINT_LIGHT = 0,
				DIRECTIONAL_LIGHT = 1,
				SPOT_LIGHT = 2,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxTextureFile : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMatrix3 : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class ImageSpaceEffectDepthOfField : public ImageSpaceEffectOption, public NetScriptFramework::IVirtualObject { };

		interface class JournalInputMapping::RemapHandler : public BSTEventSink<InputEvent^>, public NetScriptFramework::IVirtualObject { };

		public interface class LoadStorageWrapper : public BSStorage, public NetScriptFramework::IVirtualObject { };

		interface class LocalMapMenu::InputHandler : public MenuEventHandler, public NetScriptFramework::IVirtualObject
		{
		public:
			property LocalMapMenu^ MapMenu
			{
				LocalMapMenu^ __clrcall get();
			}
		};

		interface class ModManager::CloseModManager_ConfirmCallback : public IMessageBoxCallback, public NetScriptFramework::IVirtualObject { };

		interface class ModManager::DeleteAllModsConfirmCallback : public IMessageBoxCallback, public NetScriptFramework::IVirtualObject { };

		interface class ModManager::DeleteLibraryModConfirmCallback : public IMessageBoxCallback, public NetScriptFramework::IVirtualObject { };

		interface class ModManager::DeleteMod_ConfirmCallback : public IMessageBoxCallback, public NetScriptFramework::IVirtualObject { };

		interface class ModManager::ModsChanged_ConfirmResetCallback : public IMessageBoxCallback, public NetScriptFramework::IVirtualObject { };

		interface class ModManager::ReportMod_CategoryCallback : public IMessageBoxCallback, public NetScriptFramework::IVirtualObject { };

		interface class ModManager::ReportMod_ConfirmCallback : public IMessageBoxCallback, public NetScriptFramework::IVirtualObject { };

		generic <typename MovementArbitrationAverage_T1>
		public interface class MovementArbitrationAverage : public MovementArbitrationScheme<MovementArbitrationAverage_T1>, public NetScriptFramework::IVirtualObject { };

		generic <typename MovementArbitrationMaxWeight_T1>
		public interface class MovementArbitrationMaxWeight : public MovementArbitrationScheme<MovementArbitrationMaxWeight_T1>, public NetScriptFramework::IVirtualObject { };

		public interface class MovementArbitrationVectorAdd : public MovementArbitrationScheme<MovementVector^>, public NetScriptFramework::IVirtualObject { };

		public interface class NavMeshSearchHide : public BSNavmeshSearch, public NetScriptFramework::IVirtualObject { };

		public interface class NavMeshSearchMaxCost : public BSNavmeshSearch, public NetScriptFramework::IVirtualObject { };

		public interface class NavMeshSearchMultipleGoals : public BSNavmeshSearch, public NetScriptFramework::IVirtualObject { };

		public interface class NavMeshSearchSLPoint : public BSNavmeshSearch, public NetScriptFramework::IVirtualObject { };

		public interface class NiAdditionalGeometryData : public NiObject, public NetScriptFramework::IVirtualObject { };

		public interface class NiAVObjectPalette : public NiObject, public NetScriptFramework::IVirtualObject { };

		public interface class NiBoolData : public NiObject, public NetScriptFramework::IVirtualObject { };

		public interface class NiBSplineBasisData : public NiObject, public NetScriptFramework::IVirtualObject { };

		public interface class NiBSplineData : public NiObject, public NetScriptFramework::IVirtualObject { };

		public interface class NiColorData : public NiObject, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Int32 NumKeys
			{
				System::Int32 __clrcall get();
			}

			property System::IntPtr Keys
			{
				System::IntPtr __clrcall get();
			}

			property NiAnimationKey::KeyTypes KeyType
			{
				NiAnimationKey::KeyTypes __clrcall get();
			}

			property System::Byte KeySize
			{
				System::Byte __clrcall get();
			}
		};

		public interface class NiFloatData : public NiObject, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Int32 NumKeys
			{
				System::Int32 __clrcall get();
			}

			property System::IntPtr Keys
			{
				System::IntPtr __clrcall get();
			}

			property NiAnimationKey::KeyTypes KeyType
			{
				NiAnimationKey::KeyTypes __clrcall get();
			}

			property System::Byte KeySize
			{
				System::Byte __clrcall get();
			}
		};

		public interface class NiMorphData : public NiObject, public NetScriptFramework::IVirtualObject { };

		interface class NiPick::Results : public NiTScrapArray<NiPick::Record^>, public NetScriptFramework::IVirtualObject { };

		public interface class NiSequence : public NiObject, public NetScriptFramework::IVirtualObject { };

		public interface class NiPosData : public NiObject, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysCollider : public NiObject, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysEmitterCtlrData : public NiObject, public NetScriptFramework::IVirtualObject { };

		public interface class NiRotData : public NiObject, public NetScriptFramework::IVirtualObject { };

		public interface class NiStringPalette : public NiObject, public NetScriptFramework::IVirtualObject { };

		public interface class NiTransformData : public NiObject, public NetScriptFramework::IVirtualObject { };

		public interface class NiUVData : public NiObject, public NetScriptFramework::IVirtualObject { };

		public interface class ObstacleTaskData : public BSWin32TaskletData, public NetScriptFramework::IVirtualObject { };

		public interface class OwnedCameraEffectController : public OwnedController, public NetScriptFramework::IVirtualObject { };

		public interface class PathingSpace : public BSPathingSpace, public NetScriptFramework::IVirtualObject { };

		public interface class PathingTaskData : public BSWin32TaskletData, public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

		public interface class ProcessListMovementInterface : public IMovementFormIDManager, public NetScriptFramework::IVirtualObject { };

		public interface class QueuedPromoteReferencesTask : public IOTask, public NetScriptFramework::IVirtualObject { };

		public interface class QueuedTempEffect : public IOTask, public NetScriptFramework::IVirtualObject { };

		public interface class SaveStorageWrapper : public BSStorage, public NetScriptFramework::IVirtualObject { };

		interface class SkyrimScript::anonymous_namespace::FadeThenMainMenuCallback : public IFadeDoneCallback, public NetScriptFramework::IVirtualObject { };

		interface class SkyrimScript::anonymous_namespace::ScriptMessageBoxCallback : public IMessageBoxCallback, public NetScriptFramework::IVirtualObject { };

		public interface class StandardItemData : public NetScriptFramework::IVirtualObject
		{
		public:
			property ExtraContainerChanges::ItemEntry^ ObjectDescription
			{
				ExtraContainerChanges::ItemEntry^ __clrcall get();
			}

			property System::UInt32 OwnerRefHandle
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class StructArrayImplementation : public hkDataArrayImpl, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Object : public hkDataObjectImpl, public NetScriptFramework::IVirtualObject { };
		};

		public interface class TailAnimationGraphManagerHolder : public WeaponAnimationGraphManagerHolder, public NetScriptFramework::IVirtualObject { };

		public interface class TESActionData : public BGSActionData, public NetScriptFramework::IVirtualObject { };

		public interface class BGSPackageDataNameMap : public BSIntrusiveRefCounted, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class NameMapData : public NetScriptFramework::IMemoryObject
			{
			public:
				property BSFixedString^ Name
				{
					BSFixedString^ __clrcall get();
				}

				property System::SByte Uid
				{
					System::SByte __clrcall get();
				}

				property System::Boolean IsPublic
				{
					System::Boolean __clrcall get();
				}
			};

			property BSTArray<BGSPackageDataNameMap::NameMapData^, BSTArrayHeapAllocator^>^ NameMap
			{
				BSTArray<BGSPackageDataNameMap::NameMapData^, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		interface class TESModelDB::anonymous_namespace::TESProcessor : public BSModelDB::BSModelProcessor, public NetScriptFramework::IVirtualObject { };

		public interface class TESModelPSA : public TESModel, public NetScriptFramework::IVirtualObject { };

		public interface class TESRegionDataLandscape : public TESRegionData, public NetScriptFramework::IVirtualObject
		{
		public:
			property TESTexture^ Icon
			{
				TESTexture^ __clrcall get();
			}
		};

		public interface class VariableIntArrayImplementation : public hkDataArrayImpl, public NetScriptFramework::IVirtualObject { };

		public interface class VecArrayImplementation : public hkDataArrayImpl, public NetScriptFramework::IVirtualObject { };

		interface class VelocityObstacle::Utilities::BuildOpenEdgeListsVisitor : public BSPathing::EdgeFoundVisitor, public NetScriptFramework::IVirtualObject { };

		interface class hkAabbTreeData::Bundle : public NetScriptFramework::IMemoryObject { };

		interface class hkAabbTreeData::CastVolumeInput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkAabbTreeData::hkAabbTreeAabb16::Metric : public NetScriptFramework::IMemoryObject { };

		interface class hkAabbTreeData::Ray : public NetScriptFramework::IMemoryObject { };

		interface class hkAabbTreeData::RayBundle : public NetScriptFramework::IMemoryObject { };

		interface class hkAabbTreeData::SetRays : public NetScriptFramework::IMemoryObject { };

		public interface class hkaAnimationMappingJob : public hkJob, public NetScriptFramework::IMemoryObject
		{
		public:
			enum class JobSubType : System::Int32
			{
				ANIMATION_MAPPING_JOB_MAP_POSE = 0,
				ANIMATION_MAPPING_JOB_END = 1,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaAnimationSampleAndCombineJobBase : public hkJob, public NetScriptFramework::IMemoryObject
		{
		public:
			enum class JobSubType : System::Int32
			{
				ANIMATION_SAMPLE_AND_COMBINE_JOB_SAMPLE_ONLY = 0,
				ANIMATION_SAMPLE_AND_COMBINE_JOB_SAMPLE_AND_COMBINE = 1,
				ANIMATION_SAMPLE_AND_COMBINE_JOB_QUANTIZED_SAMPLE_AND_COMBINE = 2,
				ANIMATION_SAMPLE_AND_COMBINE_JOB_END = 3,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaChunkCache : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class ManipulationType : System::Int32
			{
				MANIPULATE_RETRIEVE = 0,
				MANIPULATE_LOCK = 1,
				MANIPULATE_UNLOCK = 2,
				MANIPULATE_FLUSH = 3,
				MANIPULATE_LOCKWRITE = 4,
				MANIPULATE_UNLOCKWRITE = 5,
				MANIPULATE_ISLOCKEDWRITE = 6,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaCcdIkSolver : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class IkConstraint : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaFPUMorphingDeformer : public hkReferencedObject, public hkaMorphingDeformer, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class hkaFPUBinding : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaLookAtIkSolver : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class RangeLimits : public NetScriptFramework::IMemoryObject { };

			interface class Setup : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkDataClass : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Cinfo;

			interface class MemberInfo;
		};

		public interface class hkDataObject : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Type : System::Int32
			{
				TYPE_VOID = 0,
				TYPE_BYTE = 1,
				TYPE_INT = 2,
				TYPE_REAL = 3,
				TYPE_VEC_4 = 4,
				TYPE_VEC_8 = 5,
				TYPE_VEC_12 = 6,
				TYPE_VEC_16 = 7,
				TYPE_OBJECT = 8,
				TYPE_STRUCT = 9,
				TYPE_CSTRING = 0xA,
				TYPE_NUM_BASIC_TYPES = 0xB,
				TYPE_MASK_BASIC_TYPES = 0xF,
				TYPE_ARRAY = 0x10,
				TYPE_ARRAY_BYTE = 0x11,
				TYPE_ARRAY_INT = 0x12,
				TYPE_ARRAY_REAL = 0x13,
				TYPE_ARRAY_VEC_4 = 0x14,
				TYPE_ARRAY_VEC_8 = 0x15,
				TYPE_ARRAY_VEC_12 = 0x16,
				TYPE_ARRAY_VEC_16 = 0x17,
				TYPE_ARRAY_OBJECT = 0x18,
				TYPE_ARRAY_STRUCT = 0x19,
				TYPE_ARRAY_CSTRING = 0x1A,
				TYPE_TUPLE = 0x20,
				TYPE_TUPLE_BYTE = 0x21,
				TYPE_TUPLE_INT = 0x22,
				TYPE_TUPLE_REAL = 0x23,
				TYPE_TUPLE_VEC_4 = 0x24,
				TYPE_TUPLE_VEC_8 = 0x25,
				TYPE_TUPLE_VEC_12 = 0x26,
				TYPE_TUPLE_VEC_16 = 0x27,
				TYPE_TUPLE_OBJECT = 0x28,
				TYPE_TUPLE_STRUCT = 0x29,
				TYPE_TUPLE_CSTRING = 0x2A,
			};

			interface class Handle : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Value : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkMeshShape : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class AccessFlags : System::Int32
			{
				ACCESS_INDICES = 1,
				ACCESS_VERTEX_BUFFER = 2,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMeshMaterialRegistry : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMeshMaterial : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkGeometryMatchingUtils::Geometry : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkGeometryProcessing::TransposedVectors : public NetScriptFramework::IMemoryObject { };

		public interface class hkMeshBody : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class PickDataIdentifier : System::Int32
			{
				PICK_RIGID_BODY_WITH_BREAKABLE_BODY = 1,
				PICK_USER = 0x1000,
			};
		};

		public interface class hkMeshVertexBuffer : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class LockedVertices : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class Buffer : public NetScriptFramework::IMemoryObject
				{
				public:
					interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
				};

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			enum class Flags : System::Int32
			{
				ACCESS_READ = 1,
				ACCESS_WRITE = 2,
				ACCESS_READ_WRITE = 3,
				ACCESS_WRITE_DISCARD = 4,
				ACCESS_ELEMENT_ARRAY = 8,
			};

			interface class LockInput : public NetScriptFramework::IMemoryObject { };

			enum class LockResult : System::Int32
			{
				RESULT_FAILURE = 0,
				RESULT_SUCCESS = 1,
				RESULT_IN_USE = 2,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class PartialLockInput : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpBodyOperation : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class ExecutionState : System::Int32
			{
				EXECUTE_SINGLE_THREADED = 0,
				EXECUTE_MULTI_THREADED = 1,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class UpdateInfo : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpContactPointProperties : public hkpSolverResults, public hkContactPointMaterial, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkTjunctionDetector::ProximityInfo : public NetScriptFramework::IMemoryObject { };

		interface class hkPlaneEquationUtil::IntersectionPoint : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkPlaneEquationUtil::VisitedEdge : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpWind : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class WindOnShape : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpTyremarkPoint : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpVehicleBrake : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class WheelBreakingOutput;
		};

		public interface class hkpVehicleDriverInput : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class FilteredDriverInputOutput : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpVehicleSteering : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class SteeringAnglesOutput;
		};

		public interface class hkpVehicleEngine : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class EngineOutput : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpVehicleTransmission : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class TransmissionOutput : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkpVehicleAerodynamics : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class AerodynamicsDragOutput : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpVehicleWheelCollide : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class WheelCollideType : System::Int32
			{
				INVALID_WHEEL_COLLIDE = 0,
				RAY_CAST_WHEEL_COLLIDE = 1,
				LINEAR_CAST_WHEEL_COLLIDE = 2,
				USER_WHEEL_COLLIDE1 = 3,
				USER_WHEEL_COLLIDE2 = 4,
				USER_WHEEL_COLLIDE3 = 5,
				USER_WHEEL_COLLIDE4 = 6,
				USER_WHEEL_COLLIDE5 = 7,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class CollisionDetectionWheelOutput;
		};

		public interface class hkpVehicleVelocityDamper : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpVehicleDriverInputStatus : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpShapeRayCastCollectorOutput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkQemVertexPair : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class PairType : System::Int32
			{
				BOUNDARY_PAIR = 0,
				EDGE_PAIR = 1,
				PROXIMITY_PAIR = 2,
			};
		};

		public interface class hkMeshTexture : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class FilterMode : System::Int32
			{
				POINT = 0,
				LINEAR = 1,
				ANISOTROPIC = 2,
			};

			enum class Format : System::Int32
			{
				Unknown = 0,
				PNG = 1,
				TGA = 2,
				BMP = 3,
				DDS = 4,
			};

			enum class TextureUsageType : System::Int32
			{
				UNKNOWN = 0,
				DIFFUSE = 1,
				REFLECTION = 2,
				BUMP = 3,
				NORMAL = 4,
				DISPLACEMENT = 5,
				SPECULAR = 6,
				SPECULARANDGLOSS = 7,
				OPACITY = 8,
				EMISSIVE = 9,
				REFRACTION = 0xA,
				GLOSS = 0xB,
				NOTEXPORTED = 0xC,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDisplayGeometryBuilder : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkTypeSummaryReportUtil::TypeSummary : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMemoryRouter : public NetScriptFramework::IMemoryObject { };

		public interface class hkBitStreamReader : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkBitStreamWriter : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaSimdBinding : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaSimdLargeBinding : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaSimdMorphingDeformer : public hkReferencedObject, public hkaMorphingDeformer, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class hkaSimdBinding : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaThreeJointsIkSolver : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Setup : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaTwoJointsIkSolver : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Setup : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkDataArray : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Value : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkSphere : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDrawUtil : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DebugDisplayGeometrySettings : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConeLimitConstraintAtom : public hkpConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			enum class MeasurementMode : System::Int32
			{
				ZERO_WHEN_VECTORS_ALIGNED = 0,
				ZERO_WHEN_VECTORS_PERPENDICULAR = 1,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpVelocityAccumulator : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class hkpAccumulatorType : System::Int32
			{
				HK_RIGID_BODY = 0,
				HK_KEYFRAMED_RIGID_BODY = 1,
				HK_NO_GRAVITY_RIGID_BODY = 2,
				HK_END = 3,
			};

			enum class hkpAccumulatorContext : System::Int32
			{
				ACCUMULATOR_CONTEXT_BUILD_JACOBIANS = 0,
				ACCUMULATOR_CONTEXT_SOLVER = 1,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkSpuCollisionCallbackUtil : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Callbacks : public NetScriptFramework::IVirtualObject { };

			enum class ResetEventQueue : System::Int32
			{
				RESET_EVENT_QUEUE = 0,
				DO_NOT_RESET_EVENT_QUEUE = 1,
			};

			interface class Event;

			interface class ContactPointAddedEvent;

			interface class ContactPointProcessEvent;

			interface class ContactPointRemovedEvent;
		};

		public interface class hkFixedSizeAllocator : public hkMemoryAllocator, public NetScriptFramework::IVirtualObject { };

		interface class hkGeometryProcessing::AccumulatorScope : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Item : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkGeometryProcessing::PerformanceScope : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkIntSpaceUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkKdTreeAabbCastUtils::hkCastAabbInput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkKdTreeBuilderSparseWriter : public NetScriptFramework::IMemoryObject { };

		interface class hkKdTreeUtils::RayBundle : public NetScriptFramework::IMemoryObject { };

		interface class hkLineSegmentUtil::ClosestPointLineSegResult : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkLogger : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class LogLevel : System::Int32
			{
				LOG_ERROR = 0x28,
				LOG_WARNING = 0x1E,
				LOG_INFO = 0x14,
				LOG_DEBUG = 0xA,
				LOG_NONE = 0,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMeshSystem : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkObjectReader : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkObjectUpdateTracker : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkp1dAngularFollowCamCinfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class CameraSet : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkp2dAngConstraintAtom : public hkpConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpAccurateInertiaTensorComputer : public hkpInertiaTensorComputer, public NetScriptFramework::IMemoryObject { };

		public interface class hkpCdVertex : public hkVector4, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpAgent1nMachinePaddedEntry : public hkpAgent1nMachineEntry, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpAgent1nMachineTimEntry : public hkpAgent1nMachineEntry, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpAngConstraintAtom : public hkpConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpAngFrictionConstraintAtom : public hkpConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpAngLimitConstraintAtom : public hkpConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSetLocalTranslationsConstraintAtom : public hkpConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSetupStabilizationAtom : public hkpConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpBallSocketConstraintAtom : public hkpConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpBodyVelocity : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSurfaceInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class SupportedState : System::Int32
			{
				UNSUPPORTED = 0,
				SLIDING = 1,
				SUPPORTED = 2,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpCharacterMovementUtil::hkpMovementUtilInput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCharacterObjectInteractionResult : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCharacterOutput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCharacterProxyJob : public hkJob, public NetScriptFramework::IMemoryObject
		{
		public:
			enum class JobSubType : System::Int32
			{
				CHARACTER_PROXY_JOB_INTEGRATE = 0,
				CHARACTER_PROXY_JOB_END = 1,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpClosestPointManifold::hkpAgentContactPoint : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCogWheelConstraintAtom : public hkpConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConstraintTrackerData : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSolverInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DeactivationInfo : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			enum class DeactivationClass : System::Int32
			{
				DEACTIVATION_CLASS_INVALID = 0,
				DEACTIVATION_CLASS_OFF = 1,
				DEACTIVATION_CLASS_LOW = 2,
				DEACTIVATION_CLASS_MEDIUM = 3,
				DEACTIVATION_CLASS_HIGH = 4,
				DEACTIVATION_CLASS_AGGRESSIVE = 5,
				DEACTIVATION_CLASSES_END = 6,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCreateShapeUtility : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class CreateShapeInput;

			interface class ShapeInfoOutput;
		};

		interface class hkpKeyFrameUtility::AccelerationInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpLinConstraintAtom : public hkpConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpLinFrictionConstraintAtom : public hkpConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpLinLimitConstraintAtom : public hkpConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpLinSoftConstraintAtom : public hkpConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpMoppCompilerInput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpMoppPlanesQueryInput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpOverwritePivotConstraintAtom : public hkpConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpPhysicsCommandQueue : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpPulleyConstraintAtom : public hkpConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpRackAndPinionConstraintAtom : public hkpConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpTwistLimitConstraintAtom : public hkpConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSampledHeightFieldBaseCinfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpShapeModifier : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSurfaceConstraintInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSimplexSolverOutput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpStiffSpringConstraintAtom : public hkpConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSurfaceInfoDeprecated : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpTypedBroadPhaseHandlePair : public hkpBroadPhaseHandlePair, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpVehicleJob : public hkJob, public NetScriptFramework::IMemoryObject
		{
		public:
			enum class JobSubType : System::Int32
			{
				VEHICLE_JOB_INTEGRATE = 0,
				VEHICLE_JOB_END = 1,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkVectorN : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkSimdSkinningDeformer : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Binding : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkSystemClock : public hkReferencedObject, public hkSingleton<hkSystemClock^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkSomeObject : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkSpuUtil : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkTrackerTypeTreeParser::Token : public NetScriptFramework::IMemoryObject { };

		interface class hkVector4Util::DistanceToPoint : public NetScriptFramework::IMemoryObject { };

		public interface class hkVector8 : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::UserCallback : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

		public interface class CachedValues : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Single CachedRadius
			{
				System::Single __clrcall get();
			}

			property System::Single CachedWidth
			{
				System::Single __clrcall get();
			}

			property System::Single CachedLength
			{
				System::Single __clrcall get();
			}

			property System::Single CachedForwardLength
			{
				System::Single __clrcall get();
			}

			property System::Single CachedDPS
			{
				System::Single __clrcall get();
			}

			property System::Single CachedEyeLevel
			{
				System::Single __clrcall get();
			}

			property System::Single CachedWalkSpeed
			{
				System::Single __clrcall get();
			}

			property System::Single CachedRunSpeed
			{
				System::Single __clrcall get();
			}

			property System::Single CachedJogSpeed
			{
				System::Single __clrcall get();
			}

			property System::Single CachedFastWalkSpeed
			{
				System::Single __clrcall get();
			}

			property CachedValueBooleanFlags BooleanValues
			{
				CachedValueBooleanFlags __clrcall get();
			}

			property CachedValueFlags Flags
			{
				CachedValueFlags __clrcall get();
			}

			property BSTArray<CachedValueData^, BSTArrayHeapAllocator^>^ ActorValueCache
			{
				BSTArray<CachedValueData^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<CachedValueData^, BSTArrayHeapAllocator^>^ PermanentActorValueCache
			{
				BSTArray<CachedValueData^, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		public interface class AIPerkData : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::IntPtr PerkEntryArrays
			{
				System::IntPtr __clrcall get();
			}
		};

		public interface class InputContext : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::IntPtr DeviceMappings
			{
				System::IntPtr __clrcall get();
			}
		};

		public interface class JobList : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSTArray<JobListEntry^, BSTArrayHeapAllocator^>^ List
			{
				BSTArray<JobListEntry^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSFixedString^ Name
			{
				BSFixedString^ __clrcall get();
			}

			property System::IntPtr EventObjectHandle
			{
				System::IntPtr __clrcall get();
			}
		};

		public interface class ConsoleLog : public BSTSingletonSDM<ConsoleLog^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IMemoryObject
		{
		public:
			property System::IntPtr LastMessage
			{
				System::IntPtr __clrcall get();
			}

			property BSString^ Buffer
			{
				BSString^ __clrcall get();
			}
		};

		public interface class _EXCEPTION_POINTERS : public NetScriptFramework::IMemoryObject { };

		public interface class _IMAGE_NT_HEADERS64 : public NetScriptFramework::IMemoryObject { };

		public interface class _s__CatchableTypeArray : public NetScriptFramework::IMemoryObject { };

		public interface class _UNWIND_HISTORY_TABLE : public NetScriptFramework::IMemoryObject { };

		public interface class IStream0 : public ISequentialStream0, public NetScriptFramework::IMemoryObject { };

		public interface class tagCAPROPVARIANT0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagVARIANT0 : public NetScriptFramework::IMemoryObject { };

		public interface class MovementMessageActivateDoor : public MovementMessageDoor, public IPathFollowerAction, public NetScriptFramework::IVirtualObject { };

		public interface class MovementMessageApproachingDoor : public MovementMessageDoor, public NetScriptFramework::IVirtualObject { };

		public interface class MovementMessageNewPath : public MovementMessagePathEvent, public NetScriptFramework::IVirtualObject { };

		public interface class MovementMessagePathComplete : public MovementMessagePathEvent, public NetScriptFramework::IVirtualObject { };

		public interface class MovementMessagePathFailed : public MovementMessagePathEvent, public NetScriptFramework::IVirtualObject { };

		public interface class FxDelegateHandler : public GRefCountBase<FxDelegateHandler^, UnknownGenArg_2^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class CallbackProcessor : public NetScriptFramework::IVirtualObject { };
		};

		public interface class AddCellGrassTask : public QueuedFile, public NetScriptFramework::IVirtualObject { };

		generic <typename hkRefPtr_T1>
		public interface class hkRefPtr : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpTypedBroadPhaseDispatcher : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class BGSMessageIcon : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			property TESIcon^ Icon
			{
				TESIcon^ __clrcall get();
			}
		};

		public interface class BSQueuedResourceCollectionBase : public QueuedFile, public BSResource::IEntryDB::PostFlushNotify, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::AudioLoadTask : public QueuedFile, public NetScriptFramework::IVirtualObject { };

		public interface class CombatMagicCasterArmor : public CombatMagicCaster, public NetScriptFramework::IVirtualObject { };

		generic <typename AutoRegisterCreator_T1, typename AutoRegisterCreator_T2>
		public interface class AutoRegisterCreator : public AutoRegisterFactory<BSTDerivedCreator<AutoRegisterCreator_T1, CombatObject^>^, AutoRegisterCreator_T2>, public NetScriptFramework::IVirtualObject { };

		public interface class CombatMagicCasterBoundItem : public CombatMagicCaster, public NetScriptFramework::IVirtualObject { };

		public interface class CombatMagicCasterCloak : public CombatMagicCaster, public NetScriptFramework::IVirtualObject { };

		public interface class CombatMagicCasterDisarm : public CombatMagicCaster, public NetScriptFramework::IVirtualObject { };

		public interface class CombatMagicCasterInvisibility : public CombatMagicCaster, public NetScriptFramework::IVirtualObject { };

		public interface class CombatMagicCasterLight : public CombatMagicCaster, public NetScriptFramework::IVirtualObject { };

		public interface class CombatMagicCasterOffensive : public CombatMagicCaster, public NetScriptFramework::IVirtualObject { };

		public interface class CombatMagicCasterParalyze : public CombatMagicCaster, public NetScriptFramework::IVirtualObject { };

		public interface class CombatMagicCasterReanimate : public CombatMagicCaster, public NetScriptFramework::IVirtualObject { };

		public interface class CombatMagicCasterRestore : public CombatMagicCaster, public NetScriptFramework::IVirtualObject { };

		public interface class CombatMagicCasterScript : public CombatMagicCaster, public NetScriptFramework::IVirtualObject { };

		public interface class CombatMagicCasterStagger : public CombatMagicCaster, public NetScriptFramework::IVirtualObject { };

		public interface class CombatMagicCasterSummon : public CombatMagicCaster, public NetScriptFramework::IVirtualObject { };

		public interface class CombatMagicCasterTargetEffect : public CombatMagicCaster, public NetScriptFramework::IVirtualObject { };

		public interface class CombatMagicCasterWard : public CombatMagicCaster, public NetScriptFramework::IVirtualObject { };

		public interface class bhkSerializable : public bhkRefObject, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::BSResourceAssetLoader : public hkbAssetLoader, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::Clear1nTracksFilter : public hkpCollisionFilter, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::ForwardingPackfileListerer : public hkTagfileWriter::AddDataObjectListener, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::hkNativeResource : public hkResource, public NetScriptFramework::IVirtualObject { };

		public interface class hkpShapeCollection : public hkpShape, public hkpShapeContainer, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class CollectionType : System::Int32
			{
				COLLECTION_LIST = 0,
				COLLECTION_EXTENDED_MESH = 1,
				COLLECTION_TRISAMPLED_HEIGHTFIELD = 2,
				COLLECTION_USER = 3,
				COLLECTION_SIMPLE_MESH = 4,
				COLLECTION_MESH_SHAPE = 5,
				COLLECTION_COMPRESSED_MESH = 6,
				COLLECTION_MAX = 7,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkQsTransform : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class IdentityInitializer : System::Int32
			{
				IDENTITY = 0,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class ZeroInitializer : System::Int32
			{
				ZERO = 0,
			};
		};

		public interface class GFxState : public GRefCountBase<GFxState^, UnknownGenArg_2^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::MonitorAPO : public CXAPOBase, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::NeverCollideFilter : public hkpCollisionFilter, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::NoMusic : public BSIMusicType, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::NullAssetLoader : public hkbAssetLoader, public NetScriptFramework::IVirtualObject { };

		public interface class BSSaveDataSystemUtilityFile : public BSFile, public NetScriptFramework::IVirtualObject { };

		public interface class Archive : public BSFile, public NiRefObject, public BSArchive, public NetScriptFramework::IVirtualObject { };

		public interface class ArchiveFile : public BSFile, public NetScriptFramework::IVirtualObject { };

		generic <typename BSTHashMapBase_T1>
		public interface class BSTHashMapBase : /* BSTHashMapBase_T1 */ public BSTDefaultScatterTable2<System::UInt32, BSTArray<SetEventData^, BSTArrayHeapAllocator^>^>, public NetScriptFramework::IMemoryObject { };

		public interface class CombatAimController : public CombatAimControllerBase, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class PRIORITY : public NetScriptFramework::IMemoryObject { };
		};

		public interface class CombatApproachTargetSpeedController : public CombatPathSpeedController, public NetScriptFramework::IVirtualObject { };

		public interface class CombatAreaRadius : public CombatArea, public NetScriptFramework::IVirtualObject { };

		public interface class CombatInventoryItemMagic : public CombatInventoryItem, public NetScriptFramework::IVirtualObject { };

		public interface class CombatInventoryItemMelee : public CombatInventoryItem, public NetScriptFramework::IVirtualObject { };

		public interface class CombatInventoryItemShield : public CombatInventoryItem, public NetScriptFramework::IVirtualObject { };

		public interface class CombatInventoryItemComposite : public CombatInventoryItem, public NetScriptFramework::IVirtualObject { };

		public interface class CombatInventoryItemTorch : public CombatInventoryItem, public NetScriptFramework::IVirtualObject { };

		generic <typename CombatPathT_T1, typename CombatPathT_T2>
		public interface class CombatPathT : public CombatPath /* CombatPathT_T1 */ /* CombatPathT_T2 */, public NetScriptFramework::IVirtualObject { };

		public interface class CombatPathingGoalPolicyFindTargetLocation : public CombatPathingGoalPolicyStandard, public NetScriptFramework::IMemoryObject { };

		public interface class CombatPathingGoalPolicyReturnToCombatArea : public CombatPathingGoalPolicyStandard, public NetScriptFramework::IMemoryObject { };

		public interface class CombatTargetSelectorFixed : public CombatTargetSelector, public NetScriptFramework::IVirtualObject { };

		public interface class CombatTargetSelectorStandard : public CombatTargetSelector, public NetScriptFramework::IVirtualObject { };

		public interface class DiveBombSpeedController : public CombatPathSpeedController, public NetScriptFramework::IVirtualObject { };

		public interface class BGSPackageDataFloat : public BGSPackageDataSaveableTemplate<IPackageData^, System::Single, System::IntPtr, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSPackageDataInt : public BGSPackageDataSaveableTemplate<IPackageData^, System::Int32, System::IntPtr, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSPackageDataLocation : public BGSPackageDataPointerTemplate<IPackageDataAIWorldLocationHandle^, PackageLocation^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSPackageDataObjectList : public BGSNamedPackageData<IAITarget^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSPackageDataRef : public BGSPackageDataPointerTemplate<IAITarget^, PackageTarget^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSPackageDataTargetSelector : public BGSPackageDataPointerTemplate<IPackageData^, PackageTarget^, System::IntPtr>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureTreeRandom : public BGSTypedItem<BGSProcedureTreeRandom^, BGSProcedureTreeBranch^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureTreeSequence : public BGSTypedItem<BGSProcedureTreeSequence^, BGSProcedureTreeBranch^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureTreeSimultaneous : public BGSTypedItem<BGSProcedureTreeSimultaneous^, BGSProcedureTreeBranch^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSProcedureTreeStacked : public BGSTypedItem<BGSProcedureTreeStacked^, BGSProcedureTreeBranch^>, public NetScriptFramework::IVirtualObject { };

		public interface class CombatPathingRequest : public PathingRequest, public NetScriptFramework::IVirtualObject { };

		public interface class CombatSearchLockData : public PathingLockData, public NetScriptFramework::IVirtualObject { };

		public interface class MountInteraction : public RefrInteraction, public NetScriptFramework::IVirtualObject { };

		public interface class MovementAgentActorState : public MovementPlannerAgent, public IMovementSetState, public IMovementQueryState, public NetScriptFramework::IVirtualObject { };

		public interface class MovementHandlerAgentAngleController : public MovementHandlerAgent, public NetScriptFramework::IVirtualObject { };

		public interface class MovementHandlerAgentAngleGain : public MovementHandlerAgent, public NetScriptFramework::IVirtualObject { };

		public interface class MovementHandlerAgentAnglePassThrough : public MovementHandlerAgent, public NetScriptFramework::IVirtualObject { };

		public interface class MovementHandlerAgentDirectControl : public MovementHandlerAgent, public NetScriptFramework::IVirtualObject { };

		public interface class MovementHandlerAgentDirectionPassThrough : public MovementHandlerAgent, public NetScriptFramework::IVirtualObject { };

		public interface class MovementHandlerAgentLargeDeltaIdle : public MovementHandlerAgent, public NetScriptFramework::IVirtualObject { };

		public interface class MovementHandlerAgentPlayerControls : public MovementHandlerAgent, public IMovementSetPlayerControls, public NetScriptFramework::IVirtualObject { };

		public interface class MovementHandlerAgentPlayerControlsActionTrigger : public MovementHandlerAgent, public NetScriptFramework::IVirtualObject { };

		public interface class MovementHandlerAgentSpeedPassThrough : public MovementHandlerAgent, public NetScriptFramework::IVirtualObject { };

		public interface class MovementHandlerAgentSprintActionTrigger : public MovementHandlerAgent, public IMovementSetSprinting, public NetScriptFramework::IVirtualObject { };

		public interface class MovementHandlerAgentStairsHelper : public MovementHandlerAgent, public NetScriptFramework::IVirtualObject { };

		public interface class MovementHandlerAgentStrafing : public MovementHandlerAgent, public NetScriptFramework::IVirtualObject { };

		public interface class MovementHandlerAgentTranslationController : public MovementHandlerAgent, public IMovementSetTranslationControllerType, public NetScriptFramework::IVirtualObject { };

		public interface class MovementPathManagerAgentAvoidBox : public MovementPathManagerAgent, public NetScriptFramework::IVirtualObject { };

		public interface class MovementPathManagerAgentLoadedAreaMonitor : public MovementPathManagerAgent, public NetScriptFramework::IVirtualObject { };

		public interface class MovementPathManagerAgentStaticAvoider : public MovementPathManagerAgent, public IMovementQueryStaticAvoider, public IMovementSetStaticAvoider, public NetScriptFramework::IVirtualObject { };

		public interface class MovementPlannerAgentDirectControl : public MovementPlannerAgent, public NetScriptFramework::IVirtualObject { };

		public interface class MovementPlannerAgentHorseControls : public MovementPlannerAgent, public NetScriptFramework::IVirtualObject { };

		public interface class MovementPlannerAgentKeepOffset : public MovementPlannerAgent, public IMovementSetKeepOffsetFromActor, public NetScriptFramework::IVirtualObject { };

		public interface class MovementPlannerAgentWarp : public MovementPlannerAgent, public IMovementSetWarp, public NetScriptFramework::IVirtualObject { };

		public interface class MovementTweenerAgentAnimationDriven : public MovementTweenerAgent, public NetScriptFramework::IVirtualObject { };

		public interface class MovementTweenerAgentFixedDelta : public MovementTweenerAgent, public IMovementSetCorrectionData, public NetScriptFramework::IVirtualObject { };

		public interface class MovementTweenerAgentNodeFollower : public MovementTweenerAgent, public ITweenerNodeFollowerSetup, public NetScriptFramework::IVirtualObject { };

		public interface class PathingRequestClosePoint : public PathingRequest, public NetScriptFramework::IVirtualObject { };

		public interface class PathingRequestClosestGoal : public PathingRequest, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class PathBuilder : public NetScriptFramework::IMemoryObject { };
		};

		public interface class PathingRequestCover : public PathingRequest, public NetScriptFramework::IVirtualObject { };

		public interface class PathingRequestFlee : public PathingRequest, public NetScriptFramework::IVirtualObject { };

		public interface class PathingRequestFly : public PathingRequest, public NetScriptFramework::IVirtualObject { };

		public interface class PathingRequestHide : public PathingRequest, public NetScriptFramework::IVirtualObject { };

		public interface class PathingRequestLOS : public PathingRequest, public NetScriptFramework::IVirtualObject { };

		public interface class PathingRequestOptimalLocation : public PathingRequest, public NetScriptFramework::IVirtualObject { };

		public interface class PathingRequestRotate : public PathingRequest, public NetScriptFramework::IVirtualObject { };

		public interface class PathingRequestStopMoving : public PathingRequest, public NetScriptFramework::IVirtualObject { };

		public interface class hkpPhantomCallbackShape : public hkpShape, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class BGSAddonNodeSoundHandleExtra : public NiExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class NiExtraDataList : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::IntPtr Data
			{
				System::IntPtr __clrcall get();
			}

			property System::UInt16 Count
			{
				System::UInt16 __clrcall get();
			}

			property System::UInt16 Capacity
			{
				System::UInt16 __clrcall get();
			}
		};

		public interface class hkbNode : public hkbBindable, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class BoundVariablesCollector : public hkbBindableCollector, public NetScriptFramework::IVirtualObject { };
		};

		public interface class QueuedPromoteLocationReferencesTask : public QueuedPromoteReferencesTask, public NetScriptFramework::IVirtualObject { };

		public interface class hkpCharacterRigidBodyCinfo : public hkpCharacterControllerCinfo, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class bhkCharacterState : public hkpCharacterState, public NetScriptFramework::IVirtualObject { };

		public interface class bhkCollisionFilter : public hkpCollisionFilter, public BSTSingletonSDM<bhkCollisionFilter^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class bhkExtraData : public NiExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class hkpLimitedForceConstraintMotor : public hkpConstraintMotor, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class bhkRagdollTemplate : public NiExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class bhkThreadMemorySource : public hkMemoryAllocator, public IMemoryHeap, public NetScriptFramework::IVirtualObject { };

		generic <typename Composite_T1>
		interface class bnet::Composite : public bnet::_detail::implComposite<Composite_T1>, public NetScriptFramework::IVirtualObject { };

		public interface class NiTextKeyExtraData : public NiExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class BSAnimInteractionMarker : public NiExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class BSBehaviorGraphExtraData : public NiExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class NiBlendInterpolator : public NiInterpolator, public NetScriptFramework::IVirtualObject { };

		public interface class BSBodyMorphOffsetsExtraData : public NiExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class BSBoneLODExtraData : public NiExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class BSBoneMap : public NiExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class BSBoneSwitchGeneratorBoneData : public hkbBindable, public NetScriptFramework::IVirtualObject { };

		public interface class NiIntegerExtraData : public NiExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Int32 IntValue
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class NiBooleanExtraData : public NiExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class BSFaceGenAnimationData : public NiExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSFaceGenKeyframeMultiple^ ExpressionKeyFrame
			{
				BSFaceGenKeyframeMultiple^ __clrcall get();
			}

			property BSFaceGenKeyframeMultiple^ ModifierKeyFrame
			{
				BSFaceGenKeyframeMultiple^ __clrcall get();
			}

			property BSFaceGenKeyframeMultiple^ PhenomeKeyFrame
			{
				BSFaceGenKeyframeMultiple^ __clrcall get();
			}

			property BSFaceGenKeyframeMultiple^ CustomKeyFrame
			{
				BSFaceGenKeyframeMultiple^ __clrcall get();
			}

			property System::Single BlinkDelay
			{
				System::Single __clrcall get();
			}

			property System::Boolean ExprOverride
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class BSFaceGenBaseMorphExtraData : public NiExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class BSFaceGenModelExtraData : public NiExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class BSFurnitureMarkerNode : public NiExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class BSGrabIKNote : public BSAnimNote, public NetScriptFramework::IVirtualObject { };

		interface class BShkbHkxDB::StreamAdaptor : public hkStreamReader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderAlphaBlend : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderApplyReflections : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderBlur11 : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderBlur13 : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderBlur15 : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderBlur3 : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderBlur5 : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderBlur7 : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderBlur9 : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderBrightPassBlur11 : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderBrightPassBlur13 : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderBrightPassBlur15 : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderBrightPassBlur3 : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderBrightPassBlur5 : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderBrightPassBlur7 : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderBrightPassBlur9 : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderCopy : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderCopyCustomViewport : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderCopyDynamicFetchDisabled : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderCopyScaleBias : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderDepthOfField : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderDepthOfFieldFogged : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderDepthOfFieldMaskedFogged : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderDistantBlur : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderDistantBlurFogged : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderDistantBlurMaskedFogged : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderDoubleVision : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderFXAA : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderGreyScale : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderHDRDownSample16 : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderHDRDownSample16LightAdapt : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderHDRDownSample16Lum : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderHDRDownSample16LumClamp : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderHDRDownSample4 : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderHDRDownSample4LightAdapt : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderHDRDownSample4LumClamp : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderHDRDownSample4RGB2Lum : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderHDRTonemapBlendCinematic : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderHDRTonemapBlendCinematicFade : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISApplyVolumetricLighting : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISBasicCopy : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISBlur : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISCompositeLensFlare : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISCompositeLensFlareVolumetricLighting : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISCompositeVolumetricLighting : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISCopySubRegionCS : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISDebugSnow : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISDepthOfFieldBlurHCS : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISDepthOfFieldBlurVCS : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISDisplayDepth : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISDownsample : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISDownsampleCS : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISDownsampleIgnoreBrightest : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISDownsampleIgnoreBrightestCS : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISExp : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISIBLensFlares : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISLightingComposite : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISLightingCompositeMenu : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISLightingCompositeNoDirectionalLight : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISMinify : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISMinifyContrast : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISParallaxMaskBlurHCS : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISParallaxMaskBlurVCS : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISPerlinNoise2DCS : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISPerlinNoiseCS : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISSAOBlurH : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISSAOBlurHCS : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISSAOBlurV : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISSAOBlurVCS : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISSAOCameraZ : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISSAOCameraZAndMipsCS : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISSAOCompositeFog : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISSAOCompositeSAO : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISSAOCompositeSAOFog : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISSAORawAO : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISSAORawAOCS : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISSAORawAONoTemporal : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISSILComposite : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISSILRawInd : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISSimpleColor : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISSnowSSS : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISTemporalAA : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISTemporalAA_UI : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISTemporalAA_Water : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISUnderwaterMask : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISUpsampleDynamicResolution : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISWaterBlend : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISVolumetricLightingBlurHCS : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderISVolumetricLightingBlurVCS : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderLensFlare : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderLensFlareVisibility : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderLocalMap : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderMap : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderNoiseNormalmap : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderNoiseScrollAndBlend : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderNonHDRBlur11 : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderNonHDRBlur13 : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderNonHDRBlur15 : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderNonHDRBlur3 : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderNonHDRBlur5 : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderNonHDRBlur7 : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderNonHDRBlur9 : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderRadialBlur : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderRadialBlurHigh : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderRadialBlurMedium : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderReflectionBlurHCS : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderReflectionBlurVCS : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderReflectionsDebugSpecMask : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderReflectionsRayTracing : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderRefraction : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderTextureMask : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderWaterBlendHeightmaps : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderWaterDisplacementClearSimulation : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderWaterDisplacementNormals : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderWaterDisplacementRainRipple : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderWaterDisplacementTexOffset : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderWaterDisplacementWadingRipple : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderWaterFlow : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderWaterRainHeightmap : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderWaterSmoothHeightmap : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderWaterWadingHeightmap : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderVolumetricLighting : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderWorldMap : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSImagespaceShaderWorldMapNoSkyBlur : public BSImagespaceShader, public NetScriptFramework::IVirtualObject { };

		public interface class BSInvMarker : public NiExtraData, public NetScriptFramework::IVirtualObject { };

		interface class BSiStateTaggingUtils::BSiStateTaggingStateListener : public hkbStateListener, public NetScriptFramework::IVirtualObject { };

		public interface class NiSourceTexture : public NiTexture, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::IntPtr RendererTexture
			{
				System::IntPtr __clrcall get();
			}

			property System::Byte TextureFlags
			{
				System::Byte __clrcall get();
			}
		};

		public interface class BSLookIKNote : public BSAnimNote, public NetScriptFramework::IVirtualObject { };

		generic <typename BSMemStorageAllocated_T1>
		public interface class BSMemStorageAllocated : public BSMemStorage, public NetScriptFramework::IVirtualObject { };

		public interface class BSMultiBoundCapsule : public BSMultiBoundShape, public NetScriptFramework::IVirtualObject { };

		public interface class BSMultiBoundSphere : public BSMultiBoundShape, public NetScriptFramework::IVirtualObject { };

		public interface class BSNonUniformScaleExtraData : public NiExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class BSOcclusionBox : public BSOcclusionShape, public NetScriptFramework::IVirtualObject { };

		public interface class BSOcclusionPlane : public BSOcclusionShape, public NetScriptFramework::IVirtualObject { };

		public interface class BSParentVelocityModifier : public NiPSysModifier, public NetScriptFramework::IVirtualObject { };

		public interface class BSParticleShaderCollisionEmitter : public BSParticleShaderObjectEmitter, public NetScriptFramework::IVirtualObject { };

		public interface class BSParticleShaderGeometryEmitter : public BSParticleShaderObjectEmitter, public NetScriptFramework::IVirtualObject { };

		public interface class BSParticleShaderRainEmitter : public BSParticleShaderCubeEmitter, public NetScriptFramework::IVirtualObject { };

		public interface class BSParticleShaderRayEmitter : public BSParticleShaderObjectEmitter, public NetScriptFramework::IVirtualObject { };

		public interface class BSParticleShaderSnowEmitter : public BSParticleShaderCubeEmitter, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysEmitter : public NiPSysModifier, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysMeshUpdateModifier : public NiPSysModifier, public NetScriptFramework::IVirtualObject { };

		public interface class BSPSysInheritVelocityModifier : public NiPSysModifier, public NetScriptFramework::IVirtualObject { };

		public interface class BSPSysLODModifier : public NiPSysModifier, public NetScriptFramework::IVirtualObject { };

		public interface class BSPSysRecycleBoundModifier : public NiPSysModifier, public NetScriptFramework::IVirtualObject { };

		public interface class BSPSysScaleModifier : public NiPSysModifier, public NetScriptFramework::IVirtualObject { };

		public interface class BSPSysSimpleColorModifier : public NiPSysModifier, public NetScriptFramework::IVirtualObject { };

		public interface class BSPSysStripUpdateModifier : public NiPSysModifier, public NetScriptFramework::IVirtualObject { };

		public interface class BSPSysSubTexModifier : public NiPSysModifier, public NetScriptFramework::IVirtualObject { };

		public interface class NiKeyBasedInterpolator : public NiInterpolator, public NetScriptFramework::IVirtualObject { };

		public interface class BSScrapArrayAllocator : public NetScriptFramework::IMemoryObject
		{
		public:
			property ScrapHeap^ Allocator
			{
				ScrapHeap^ __clrcall get();
			}

			property System::IntPtr Data
			{
				System::IntPtr __clrcall get();
			}

			property System::Int32 Capacity
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class QueuedPromoteQuestTask : public QueuedPromoteReferencesTask, public NetScriptFramework::IVirtualObject { };

		generic <typename NativeLatentFunction0_T1, typename NativeLatentFunction0_T2>
		interface class BSScript::NativeLatentFunction0 : public BSScript::NativeFunction0<NativeLatentFunction0_T1, System::Boolean>, public NetScriptFramework::IVirtualObject { };

		generic <typename NativeLatentFunction1_T1, typename NativeLatentFunction1_T2, typename NativeLatentFunction1_T3>
		interface class BSScript::NativeLatentFunction1 : public BSScript::NativeFunction1<NativeLatentFunction1_T1, System::Boolean, BSFixedString^>, public NetScriptFramework::IVirtualObject { };

		generic <typename NativeLatentFunction10_T1, typename NativeLatentFunction10_T2, typename NativeLatentFunction10_T3, typename NativeLatentFunction10_T4, typename NativeLatentFunction10_T5, typename NativeLatentFunction10_T6, typename NativeLatentFunction10_T7, typename NativeLatentFunction10_T8, typename NativeLatentFunction10_T9, typename NativeLatentFunction10_T10, typename NativeLatentFunction10_T11, typename NativeLatentFunction10_T12>
		interface class BSScript::NativeLatentFunction10 : public BSScript::NativeFunction10<NativeLatentFunction10_T1, NativeLatentFunction10_T2, NativeLatentFunction10_T3, NativeLatentFunction10_T4, NativeLatentFunction10_T5, NativeLatentFunction10_T6, NativeLatentFunction10_T7, NativeLatentFunction10_T8, NativeLatentFunction10_T9, NativeLatentFunction10_T10, NativeLatentFunction10_T11, NativeLatentFunction10_T12>, public NetScriptFramework::IVirtualObject { };

		generic <typename NativeLatentFunction3_T1, typename NativeLatentFunction3_T2, typename NativeLatentFunction3_T3, typename NativeLatentFunction3_T4, typename NativeLatentFunction3_T5>
		interface class BSScript::NativeLatentFunction3 : public BSScript::NativeFunction3<NativeLatentFunction3_T1, System::Boolean, NativeLatentFunction3_T3, NativeLatentFunction3_T4, NativeLatentFunction3_T5>, public NetScriptFramework::IVirtualObject { };

		generic <typename NativeLatentFunction4_T1, typename NativeLatentFunction4_T2, typename NativeLatentFunction4_T3, typename NativeLatentFunction4_T4, typename NativeLatentFunction4_T5, typename NativeLatentFunction4_T6>
		interface class BSScript::NativeLatentFunction4 : public BSScript::NativeFunction4<NativeLatentFunction4_T1, System::Boolean, System::Boolean, NativeLatentFunction4_T4, System::Boolean, NativeLatentFunction4_T3>, public NetScriptFramework::IVirtualObject { };

		generic <typename NativeLatentFunction5_T1, typename NativeLatentFunction5_T2, typename NativeLatentFunction5_T3, typename NativeLatentFunction5_T4, typename NativeLatentFunction5_T5, typename NativeLatentFunction5_T6, typename NativeLatentFunction5_T7>
		interface class BSScript::NativeLatentFunction5 : public BSScript::NativeFunction5<NativeLatentFunction5_T1, System::Boolean, NativeLatentFunction5_T3, NativeLatentFunction5_T4, NativeLatentFunction5_T5, NativeLatentFunction5_T6, NativeLatentFunction5_T7>, public NetScriptFramework::IVirtualObject { };

		generic <typename NativeLatentFunction9_T1, typename NativeLatentFunction9_T2, typename NativeLatentFunction9_T3, typename NativeLatentFunction9_T4, typename NativeLatentFunction9_T5, typename NativeLatentFunction9_T6, typename NativeLatentFunction9_T7, typename NativeLatentFunction9_T8, typename NativeLatentFunction9_T9, typename NativeLatentFunction9_T10, typename NativeLatentFunction9_T11>
		interface class BSScript::NativeLatentFunction9 : public BSScript::NativeFunction9<NativeLatentFunction9_T1, System::Boolean, NativeLatentFunction9_T3, NativeLatentFunction9_T4, NativeLatentFunction9_T5, NativeLatentFunction9_T6, NativeLatentFunction9_T7, NativeLatentFunction9_T8, NativeLatentFunction9_T9, NativeLatentFunction9_T10, NativeLatentFunction9_T11>, public NetScriptFramework::IVirtualObject { };

		public interface class NiBackToFrontAccumulator : public NiAccumulator, public NetScriptFramework::IVirtualObject { };

		public interface class BSShaderTextureSet : public BSTextureSet, public NetScriptFramework::IVirtualObject { };

		public interface class BSShadowDirectionalLight : public BSShadowLight, public NetScriptFramework::IVirtualObject { };

		public interface class BSShadowFrustumLight : public BSShadowLight, public NetScriptFramework::IVirtualObject { };

		public interface class BSShadowParabolicLight : public BSShadowLight, public NetScriptFramework::IVirtualObject { };

		public interface class BSSplatterExtraData : public NiExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysData : public NiParticlesData, public NetScriptFramework::IVirtualObject { };

		generic <typename BSTScatterTableBase_T1>
		public interface class BSTScatterTableBase : public BSTScatterTableKernel<BSTScatterTableBase_T1>, public BSTScatterTableHeapAllocator1<BSTScatterTableEntry<System::UInt32, BSTArray<SetEventData^, BSTArrayHeapAllocator^>^, BSTScatterTableDefaultKVStorage^>^>, public NetScriptFramework::IMemoryObject { };

		public interface class FOCollisionListener : public bhkBackfaceContactListener, public BSTSingletonSDM<FOCollisionListener^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class PlayerControls : public BSTEventSink<InputEvent^>, public BSTEventSink<MenuOpenCloseEvent^>, public BSTEventSink<MenuModeChangeEvent^>, public BSTEventSink<TESFurnitureEvent^>, public BSTSingletonSDM<PlayerControls^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPoint2^ MoveInput
			{
				NiPoint2^ __clrcall get();
			}

			property NiPoint2^ LookInput
			{
				NiPoint2^ __clrcall get();
			}

			property NiPoint2^ PreviousMoveInput
			{
				NiPoint2^ __clrcall get();
			}

			property NiPoint2^ PreviousLookInput
			{
				NiPoint2^ __clrcall get();
			}

			property System::Boolean AutoMove
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean Running
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean FovSlideMode
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean PovScriptMode
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean PovBeastMode
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean RemapMode
			{
				System::Boolean __clrcall get();
			}

			property BSTArray<PlayerInputHandler^, BSTArrayHeapAllocator^>^ InputHandlers
			{
				BSTArray<PlayerInputHandler^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ ActionInterestedActorRefHandles
			{
				BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property Mutex^ ActorArrayLock
			{
				Mutex^ __clrcall get();
			}

			property MovementHandler^ MovementInputHandler
			{
				MovementHandler^ __clrcall get();
			}

			property LookHandler^ LookInputHandler
			{
				LookHandler^ __clrcall get();
			}

			property SprintHandler^ SprintInputHandler
			{
				SprintHandler^ __clrcall get();
			}

			property ReadyWeaponHandler^ ReadyWeaponInputHandler
			{
				ReadyWeaponHandler^ __clrcall get();
			}

			property AutoMoveHandler^ AutoMoveInputHandler
			{
				AutoMoveHandler^ __clrcall get();
			}

			property ToggleRunHandler^ ToggleRunInputHandler
			{
				ToggleRunHandler^ __clrcall get();
			}

			property ActivateHandler^ ActivateInputHandler
			{
				ActivateHandler^ __clrcall get();
			}

			property JumpHandler^ JumpInputHandler
			{
				JumpHandler^ __clrcall get();
			}

			property ShoutHandler^ ShoutInputHandler
			{
				ShoutHandler^ __clrcall get();
			}

			property AttackBlockHandler^ AttackBlockInputHandler
			{
				AttackBlockHandler^ __clrcall get();
			}

			property RunHandler^ RunInputHandler
			{
				RunHandler^ __clrcall get();
			}

			property SneakHandler^ SneakInputHandler
			{
				SneakHandler^ __clrcall get();
			}

			property TogglePOVHandler^ TogglePOVInputHandler
			{
				TogglePOVHandler^ __clrcall get();
			}

			property System::Boolean NotifyingHandlers
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean BlockPlayerInput
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Gets the player controls instance.
			/// </summary>
			static property PlayerControls^ Instance
			{
				PlayerControls^ __clrcall get()
				{
					return NetScriptFramework::MemoryObject::FromAddress<PlayerControls^>(NetScriptFramework::Memory::ReadPointer(__VIDS::VID514706.Value, false));
				}
			}
		};

		public interface class MovementPathManagerNullTracker : public IMovementPathManagerDataTracker, public BSTSingletonImplicit1<MovementPathManagerNullTracker^>, public NetScriptFramework::IVirtualObject { };

		public interface class NiIntegersExtraData : public NiExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class BSWin32KeyboardDevice : public BSKeyboardDevice, public NetScriptFramework::IVirtualObject
		{
		public:
			property NetScriptFramework::FixedMemoryArray<System::Byte>^ CurrentState
			{
				NetScriptFramework::FixedMemoryArray<System::Byte>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<System::Byte>^ PreviousState
			{
				NetScriptFramework::FixedMemoryArray<System::Byte>^ __clrcall get();
			}
		};

		public interface class BSWin32MouseDevice : public BSMouseDevice, public NetScriptFramework::IVirtualObject { };

		public interface class BSVirtualKeyboardDevice : public BSKeyboardDevice, public NetScriptFramework::IVirtualObject { };

		public interface class BSWindModifier : public NiPSysModifier, public NetScriptFramework::IVirtualObject { };

		public interface class ButtonEvent : public IDEvent, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Single Down
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}

			property System::Single Duration
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}
		};

		public interface class ByteArrayImplementation : public BasicArrayImplementation<uchar^, UnknownGenArg_1^>, public NetScriptFramework::IVirtualObject { };

		generic <typename CombatBehaviorTreeValueNodeT_T1, typename CombatBehaviorTreeValueNodeT_T2>
		public interface class CombatBehaviorTreeValueNodeT : public CombatBehaviorTreeValueNode<CombatBehaviorTreeValueNodeT_T1>, public NetScriptFramework::IVirtualObject { };

		public interface class GFxFunctionHandler : public GRefCountBase<GFxFunctionHandler^, UnknownGenArg_2^>, public NetScriptFramework::IVirtualObject { };

		public interface class CstringArrayImplementation : public BasicArrayImplementation<System::String^, UnknownGenArg_10^>, public NetScriptFramework::IVirtualObject { };

		public interface class ExtraAnimationSequencer : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BGSAnimationSequencer^ Sequencer
			{
				BGSAnimationSequencer^ __clrcall get();
			}
		};

		public interface class ExtraDecalGroup : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BGSDecalGroup^ DecalGroup
			{
				BGSDecalGroup^ __clrcall get();
			}
		};

		public interface class GFile : public GRefCountBase<GFile^, UnknownGenArg_2^>, public GFileConstants, public NetScriptFramework::IVirtualObject { };

		public interface class HavokError : public hkError, public NetScriptFramework::IVirtualObject { };

		public interface class HavokFileStreambufReader : public hkStreamReader, public NetScriptFramework::IVirtualObject { };

		public interface class HavokFileStreambufWriter : public hkStreamWriter, public NetScriptFramework::IVirtualObject { };

		public interface class hkNativeFileSystem : public hkFileSystem, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class HavokStreambufReader : public hkStreamReader, public NetScriptFramework::IVirtualObject { };

		public interface class HavokStreambufWriter : public hkStreamWriter, public NetScriptFramework::IVirtualObject { };

		interface class hkAabbTreeData::hkAabbTreeAabb : public hkAabb, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Metric : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkBallSocketChainCinfo : public hkConstraintChainCinfo, public NetScriptFramework::IVirtualObject { };

		public interface class hkbAttachmentFixupSceneModifier : public hkbSceneModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbAttachmentSceneModifier : public hkbSceneModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbBlenderGeneratorChild : public hkbBindable, public NetScriptFramework::IVirtualObject { };

		public interface class hkbBoneIndexArray : public hkbBindable, public NetScriptFramework::IVirtualObject { };

		public interface class hkbBoneWeightArray : public hkbBindable, public NetScriptFramework::IVirtualObject { };

		public interface class hkbBoolVariableSequencedData : public hkbSequencedData, public NetScriptFramework::IVirtualObject { };

		public interface class hkbCameraShakeEventPayload : public hkbEventPayload, public NetScriptFramework::IVirtualObject { };

		public interface class hkbCharacterControllerSceneModifier : public hkbSceneModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbClosestLocalFrameCollector : public hkLocalFrameCollector, public NetScriptFramework::IVirtualObject { };

		public interface class hkbEventPayloadList : public hkbEventPayload, public NetScriptFramework::IVirtualObject { };

		public interface class hkbEventSequencedData : public hkbSequencedData, public NetScriptFramework::IVirtualObject { };

		public interface class hkbExpressionCondition : public hkbCondition, public NetScriptFramework::IVirtualObject { };

		public interface class hkbFootIkSceneModifier : public hkbSceneModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbHandIkFixupSceneModifier : public hkbSceneModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbHandIkSceneModifier : public hkbSceneModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkBinaryTagfileReader : public hkTagfileReader, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkBinaryTagfileWriter : public hkTagfileWriter, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkbIntEventPayload : public hkbEventPayload, public NetScriptFramework::IVirtualObject { };

		public interface class hkbIntVariableSequencedData : public hkbSequencedData, public NetScriptFramework::IVirtualObject { };

		public interface class hkbNamedEventPayload : public hkbEventPayload, public NetScriptFramework::IVirtualObject { };

		public interface class hkbParticleSystemEventPayload : public hkbEventPayload, public NetScriptFramework::IVirtualObject { };

		public interface class hkbRagdollSceneModifier : public hkbSceneModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbRealEventPayload : public hkbEventPayload, public NetScriptFramework::IVirtualObject { };

		public interface class hkbRealVariableSequencedData : public hkbSequencedData, public NetScriptFramework::IVirtualObject { };

		public interface class hkbRegisteredGenerator : public hkbBindable, public NetScriptFramework::IVirtualObject { };

		public interface class hkBsdSocket : public hkSocket, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpHeightFieldShape : public hkpShape, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class CollideSpheresInput : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class hkpSphereCastInput : public hkpShapeRayCastInput, public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkbStringCondition : public hkbCondition, public NetScriptFramework::IVirtualObject { };

		public interface class hkbStringEventPayload : public hkbEventPayload, public NetScriptFramework::IVirtualObject { };

		public interface class hkbTestStateChooser : public hkbStateChooser, public NetScriptFramework::IVirtualObject { };

		public interface class hkBufferedStreamReader : public hkStreamReader, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Buffer : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkBufferedStreamWriter : public hkStreamWriter, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSphereRepShape : public hkpShape, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkResourceHandle : public hkResourceBase, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Link;
		};

		public interface class hkCpuJobThreadPool : public hkJobThreadPool, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class WorkerThreadData;

			interface class SharedThreadData;

			interface class WorkerThreadData : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkpGroupFilter : public hkpCollisionFilter, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		generic <typename hkCrcStreamWriter_T1, typename hkCrcStreamWriter_T2>
		public interface class hkCrcStreamWriter : public hkStreamWriter, public NetScriptFramework::IVirtualObject { };

		public interface class hkDataWorldDict : public hkDataWorld, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class ObjectTracker : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDefaultBuiltinTypeRegistry : public hkBuiltinTypeRegistry, public NetScriptFramework::IVirtualObject { };

		public interface class hkOstream : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkFixedConstraintCinfo : public hkGenericConstraintCinfo, public NetScriptFramework::IVirtualObject { };

		public interface class hkgpIndexedMesh : public hkgpAbstractMesh<hkgpIndexedMeshDefinitions::Edge^, hkgpIndexedMeshDefinitions::Vertex^, hkgpIndexedMeshDefinitions::Triangle^, hkContainerHeapAllocator^>, public NetScriptFramework::IVirtualObject { };

		public interface class hkgpMesh : public hkgpAbstractMesh<hkgpMeshBase::Edge^, hkgpMeshBase::Vertex^, hkgpMeshBase::Triangle^, hkContainerHeapAllocator^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class CollideShapeTriangle : public hkAabbTreeQueryUtils<hkAabbTreeData::hkAabbTreeAabb^, System::UInt32>::Collector, public NetScriptFramework::IVirtualObject { };

			interface class IConvexOverlap : public NetScriptFramework::IVirtualObject
			{
			public:
				interface class IConvexShape : public NetScriptFramework::IVirtualObject { };
			};

			interface class NearestFeaturePolicy : public hkAabbTreeQueryUtils<hkAabbTreeData::hkAabbTreeAabb^, System::UInt32>::ClosestPointCollector, public NetScriptFramework::IVirtualObject { };

			interface class ExternShape : public hkgpMesh::IConvexOverlap::IConvexShape, public NetScriptFramework::IVirtualObject { };

			interface class TriangleShape : public hkgpMesh::IConvexOverlap::IConvexShape, public NetScriptFramework::IVirtualObject { };
		};

		generic <typename hkgpTriangulatorType_T1, typename hkgpTriangulatorType_T2, typename hkgpTriangulatorType_T3, typename hkgpTriangulatorType_T4, typename hkgpTriangulatorType_T5, typename hkgpTriangulatorType_T6, typename hkgpTriangulatorType_T7, typename hkgpTriangulatorType_T8, typename hkgpTriangulatorType_T9>
		public interface class hkgpTriangulatorType : public hkgpTriangulatorBase, public NetScriptFramework::IVirtualObject { };

		public interface class hkIArchive : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkIstream : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkResourceContainer : public hkResourceBase, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMemoryStreamReader : public hkStreamReader, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class MemoryType : System::Int32
			{
				MEMORY_COPY = 0,
				MEMORY_TAKE = 1,
				MEMORY_INPLACE = 2,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpBvTreeShape : public hkpShape, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class BvTreeType : System::Int32
			{
				BVTREE_MOPP = 0,
				BVTREE_TRISAMPLED_HEIGHTFIELD = 1,
				BVTREE_USER = 2,
				BVTREE_MAX = 3,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkOArchive : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkTypeInfoRegistry : public hkReferencedObject, public hkSingleton<hkTypeInfoRegistry^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkOffsetOnlyStreamWriter : public hkStreamWriter, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpBallAndSocketConstraintData : public hkpConstraintData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Atoms : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Runtime : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkpConstraintChainData : public hkpConstraintData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCollisionAgent : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSingleShapeContainer : public hkpShapeContainer, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCharacterStateManager : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCogWheelConstraintData : public hkpConstraintData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Runtime : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Atoms;
		};

		public interface class hkpConstrainedSystemFilter : public hkpCollisionFilter, public hkpConstraintListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpDefaultConvexListFilter : public hkpConvexListFilter, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpDefaultToiResourceMgr : public hkpToiResourceMgr, public NetScriptFramework::IVirtualObject { };

		public interface class hkpDefaultWorldMaintenanceMgr : public hkpWorldMaintenanceMgr, public NetScriptFramework::IVirtualObject { };

		public interface class hkpDefaultWorldMemoryWatchDog : public hkWorldMemoryAvailableWatchDog, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpDeferredConstraintOwner : public hkpConstraintOwner, public NetScriptFramework::IVirtualObject { };

		public interface class hkpGroupCollisionFilter : public hkpCollisionFilter, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpHingeConstraintData : public hkpConstraintData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Runtime : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Atoms;
		};

		public interface class hkpHingeLimitsData : public hkpConstraintData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Runtime : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Atoms;
		};

		public interface class hkPlatformObjectWriter : public hkObjectWriter, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Cache;
		};

		public interface class hkpLimitedHingeConstraintData : public hkpConstraintData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Runtime : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Atoms;
		};

		public interface class hkpMapPointsToSubShapeContactMgr : public hkpContactMgr, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpMoppCachedShapeMediator : public hkpMoppMediator, public NetScriptFramework::IVirtualObject { };

		public interface class hkpMoppDefaultAssembler : public hkpMoppAssembler, public NetScriptFramework::IVirtualObject { };

		public interface class hkpMoppSplitter : public hkpMoppNodeMgr, public NetScriptFramework::IVirtualObject { };

		public interface class hkpMoppShapeMediator : public hkpMoppMediator, public NetScriptFramework::IVirtualObject { };

		public interface class hkpNullCollisionFilter : public hkpCollisionFilter, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpNullContactMgr : public hkpContactMgr, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpPointToPlaneConstraintData : public hkpConstraintData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Runtime : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Atoms;
		};

		public interface class hkpPrismaticConstraintData : public hkpConstraintData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Runtime : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Atoms;
		};

		public interface class hkpPulleyConstraintData : public hkpConstraintData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Atoms : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Runtime : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkpRackAndPinionConstraintData : public hkpConstraintData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Runtime : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			enum class Type : System::Int32
			{
				TYPE_RACK_AND_PINION = 0,
				TYPE_SCREW = 1,
			};

			interface class Atoms;
		};

		public interface class hkpRagdollConstraintData : public hkpConstraintData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			enum class MotorIndex : System::Int32
			{
				MOTOR_TWIST = 0,
				MOTOR_PLANE = 1,
				MOTOR_CONE = 2,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Runtime : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Atoms;
		};

		public interface class hkpRagdollLimitsData : public hkpConstraintData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Runtime : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Atoms;
		};

		public interface class hkpRotationalConstraintData : public hkpConstraintData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Runtime : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Atoms;
		};

		public interface class hkpSimpleClosestContactCollector : public hkpCdPointCollector, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpStiffSpringConstraintData : public hkpConstraintData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Atoms : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Runtime : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkpWheelConstraintData : public hkpConstraintData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Runtime : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Atoms;
		};

		public interface class hkpWorldRayCaster : public hkpBroadPhaseCastCollector, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkSeekableStreamReader : public hkStreamReader, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkStdioStreamWriter : public hkStreamWriter, public NetScriptFramework::IVirtualObject { };

		public interface class hkSubStreamWriter : public hkStreamWriter, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkTrackerArrayLayoutHandler : public hkTrackerLayoutHandler, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkTrackerCachedHashMapLayoutHandler : public hkTrackerLayoutHandler, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		generic <typename hkStorageStringMap_T1, typename hkStorageStringMap_T2>
		public interface class hkStorageStringMap : public hkStringMap<hkStorageStringMap_T1, hkStorageStringMap_T2>, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkTrackerRefPtrLayoutHandler : public hkTrackerLayoutHandler, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkTrackerStringMapLayoutHandler : public hkTrackerLayoutHandler, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkTrackerStringPtrLayoutHandler : public hkTrackerLayoutHandler, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkXmlTagfileReader : public hkTagfileReader, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkXmlTagfileWriter : public hkTagfileWriter, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class KinectEvent : public IDEvent, public NetScriptFramework::IVirtualObject { };

		public interface class BSPackedTaskQueue : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Semaphore : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::IntPtr Handle
				{
					System::IntPtr __clrcall get();
				}

				property System::Int32 Size
				{
					System::Int32 __clrcall get();
				}

				property System::Int32 Capacity
				{
					System::Int32 __clrcall get();
				}
			};

			property BSTCommonScrapHeapMessageQueue<BSPackedTask^>^ Queue
			{
				BSTCommonScrapHeapMessageQueue<BSPackedTask^>^ __clrcall get();
			}

			property BSPackedTaskQueue::Semaphore^ Lock
			{
				BSPackedTaskQueue::Semaphore^ __clrcall get();
			}

			property System::IntPtr UnpackFunc
			{
				System::IntPtr __clrcall get();
			}
		};

		public interface class MouseMoveEvent : public IDEvent, public NetScriptFramework::IVirtualObject { };

		public interface class MovementArbitrationAverageFloat : public MovementArbitrationAverage<System::Single>, public NetScriptFramework::IVirtualObject { };

		public interface class MovementMessagePathCleared : public MovementMessagePathEvent, public NetScriptFramework::IVirtualObject { };

		public interface class PrecomputedNavmeshInfoPathMap : public BSTSingletonExplicit<BSPrecomputedNavmeshInfoPathMap^>, public NetScriptFramework::IMemoryObject
		{
		public:
			property BSTArray<BSTArray<BSNavmeshInfo^, BSTArrayHeapAllocator^>^, BSTArrayHeapAllocator^>^ AllPaths
			{
				BSTArray<BSTArray<BSNavmeshInfo^, BSTArrayHeapAllocator^>^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTHashMap2<BSNavmeshInfo^, System::UInt32>^ InfoToIndexMap
			{
				BSTHashMap2<BSNavmeshInfo^, System::UInt32>^ __clrcall get();
			}
		};

		public interface class NiBinaryExtraData : public NiExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class NiBSplineInterpolator : public NiInterpolator, public NetScriptFramework::IVirtualObject { };

		public interface class NiColorExtraData : public NiExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class NiDefaultAVObjectPalette : public NiAVObjectPalette, public NetScriptFramework::IVirtualObject { };

		public interface class NiFloatExtraData : public NiExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class NiFloatsExtraData : public NiExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class NiLookAtInterpolator : public NiInterpolator, public NetScriptFramework::IVirtualObject { };

		public interface class NiParticleMeshesData : public NiParticlesData, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysAgeDeathModifier : public NiPSysModifier, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysFieldModifier : public NiPSysModifier, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysBombModifier : public NiPSysModifier, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysBoundUpdateModifier : public NiPSysModifier, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysColliderManager : public NiPSysModifier, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysColorModifier : public NiPSysModifier, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysDragModifier : public NiPSysModifier, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysGravityModifier : public NiPSysModifier, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysGrowFadeModifier : public NiPSysModifier, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysPlanarCollider : public NiPSysCollider, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysPositionModifier : public NiPSysModifier, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysRotationModifier : public NiPSysModifier, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysSpawnModifier : public NiPSysModifier, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysSphericalCollider : public NiPSysCollider, public NetScriptFramework::IVirtualObject { };

		public interface class NiStringExtraData : public NiExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class NiStringsExtraData : public NiExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::UInt32 Size
			{
				System::UInt32 __clrcall get();
			}

			property System::IntPtr StringArrayValue
			{
				System::IntPtr __clrcall get();
			}
		};

		public interface class NiSwitchStringExtraData : public NiExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class NiVectorExtraData : public NiExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class NiVertWeightsExtraData : public NiExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class ObjectListItem : public IAITarget, public NetScriptFramework::IVirtualObject { };

		public interface class PArrayPoint : public NiExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class PointerArrayImplementation : public BasicArrayImplementation<hkDataObjectImpl^, UnknownGenArg_8^>, public NetScriptFramework::IVirtualObject { };

		public interface class QueuedHead : public QueuedFile, public NetScriptFramework::IVirtualObject { };

		public interface class QueuedNamedFile : public QueuedFile, public NetScriptFramework::IVirtualObject { };

		public interface class QueuedPromoteLargeReferencesTask : public QueuedPromoteReferencesTask, public NetScriptFramework::IVirtualObject { };

		public interface class RealArrayImplementation : public BasicArrayImplementation<System::Single, UnknownGenArg_3^>, public NetScriptFramework::IVirtualObject { };

		interface class SkyrimScript::Store : public BSScript::IStore, public NetScriptFramework::IVirtualObject { };

		public interface class ZeroOverheadHeap : public IMemoryHeap, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Int64 MemSize
			{
				System::Int64 __clrcall get();
			}

			property System::String^ Name
			{
				System::String^ __clrcall get();
			}

			property System::IntPtr MemoryBase
			{
				System::IntPtr __clrcall get();
			}

			property System::IntPtr NextFreeMem
			{
				System::IntPtr __clrcall get();
			}
		};

		public interface class TESTrapListener : public BGSZoneTargetListener, public bhkTrapListener, public NetScriptFramework::IVirtualObject { };

		public interface class TESWindListener : public bhkWindListener, public NetScriptFramework::IVirtualObject { };

		public interface class ThumbstickEvent : public IDEvent, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Single XValue
			{
				System::Single __clrcall get();
			}

			property System::Single YValue
			{
				System::Single __clrcall get();
			}
		};

		public interface class hkAabbMediator : public hkKdTreeBuildInput::Mediator, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaAnimationSampleOnlyJob : public hkaAnimationSampleAndCombineJobBase, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class AnimationData;
		};

		interface class hkaKeyFrameHierarchyUtility::WorkElem : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkAlignedShape : public hkpShape, public NetScriptFramework::IVirtualObject { };

		interface class hkDataClass::MemberInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDataObjectToNative : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Alloc : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class PointerInfo : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DummyArray : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DummyRelArray : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class CopyInfoOut;
		};

		public interface class hkMeshSection : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class PrimitiveType : System::Int32
			{
				PRIMITIVE_TYPE_UNKNOWN = 0,
				PRIMITIVE_TYPE_POINT_LIST = 1,
				PRIMITIVE_TYPE_LINE_LIST = 2,
				PRIMITIVE_TYPE_TRIANGLE_LIST = 3,
				PRIMITIVE_TYPE_TRIANGLE_STRIP = 4,
			};

			enum class MeshSectionIndexType : System::Int32
			{
				INDEX_TYPE_NONE = 0,
				INDEX_TYPE_UINT16 = 1,
				INDEX_TYPE_UINT32 = 2,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCdBody : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpMassProperties : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpShapeScalingUtility::ShapePair : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpShapeShrinker::ShapePair : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkRotation : public hkMatrix3, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpShapeRayCastOutput : public hkpShapeRayCastCollectorOutput, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkQemQuadric : public NetScriptFramework::IMemoryObject { };

		public interface class hkBarycentricVertexInterpolator : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkCompressedStreamReader : public hkStreamReader, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkCompressedStreamWriter : public hkStreamWriter, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkContactPointPropertiesWithExtendedUserData16 : public hkpContactPointProperties, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDebugConsoleStreamWriter : public hkStreamWriter, public NetScriptFramework::IVirtualObject { };

		public interface class hkKdTreeCinfo : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class EmptyNodeAllocation : System::Int32
			{
				NO_EMPTY_NODES = 0,
				FEW_EMTPY_NODES = 8,
				STANDARD_EMPTY_NODES = 2,
				LOTS_OF_EMPTY_NODES = 1,
			};
		};

		public interface class hkForwardingDisplayGeometryBuilder : public hkDisplayGeometryBuilder, public NetScriptFramework::IVirtualObject { };

		interface class hkKdTreeBuildInput::BuildRecursiveInput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkLineNumberStreamReader : public hkStreamReader, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMatrix6 : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkMemoryInitUtil::SyncInfo : public NetScriptFramework::IMemoryObject { };

		public interface class hkSweptTransform : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkNetworkedDeterminismUtil::Client : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkp1dAngularFollowCam : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class CameraOutput : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class CameraInput;
		};

		public interface class hkpAabbTreeAabbCommand : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpAngMotorConstraintAtom : public hkpConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpBridgeConstraintAtom : public hkpConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCenterOfMassChangerModifierConstraintAtom : public hkpModifierConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCharacterStateClimbing : public hkpCharacterState, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCharacterStateFlying : public hkpCharacterState, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCharacterStateInAir : public hkpCharacterState, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCharacterStateJumping : public hkpCharacterState, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCharacterStateOnGround : public hkpCharacterState, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCpuDoubleContainerIterator : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpGjkCache : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpIgnoreModifierConstraintAtom : public hkpModifierConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpKdTreeAabbCommand : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpKeyFrameUtility::KeyFrameInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpLinMotorConstraintAtom : public hkpConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpMassChangerModifierConstraintAtom : public hkpModifierConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpMaxSizeConstraintMotor : public hkpConstraintMotor, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpMoppAabbCommand : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpMovingSurfaceModifierConstraintAtom : public hkpModifierConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpRagdollMotorConstraintAtom : public hkpConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkPrintfStreamWriter : public hkStreamWriter, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSimplexSolverInput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSoftContactModifierConstraintAtom : public hkpModifierConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpVehicleDefaultAerodynamics : public hkpVehicleAerodynamics, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpVehicleDefaultAnalogDriverInput : public hkpVehicleDriverInput, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpVehicleDefaultEngine : public hkpVehicleEngine, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpVehicleDefaultVelocityDamper : public hkpVehicleVelocityDamper, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpVehicleDriverInputAnalogStatus : public hkpVehicleDriverInputStatus, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpVehicleFrictionDescription::Cinfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpVehicleFrictionSolverAxleParams : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpViscousSurfaceModifierConstraintAtom : public hkpModifierConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkQTransform : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkRenamedClassNameRegistry : public hkClassNameRegistry, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkSkinOperator::Parameters : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkSpuJobThreadPoolCinfo : public NetScriptFramework::IMemoryObject { };

		public interface class hkTextTagfileWriter : public hkTagfileWriter, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkWin32StreamWriter : public hkStreamWriter, public NetScriptFramework::IVirtualObject { };

		public interface class hkWindowsSystemClock : public hkSystemClock, public NetScriptFramework::IVirtualObject { };

		interface class hkWorldOperation::ActivateRegion : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkxSceneUtils::SceneTransformOptions : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkxSceneUtils::TransformInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		/// <summary>
		/// The input manager of game.
		/// </summary>
		public interface class InputManager : public NetScriptFramework::IMemoryObject
		{
		public:
			property NetScriptFramework::FixedMemoryArray<InputContext^>^ ControlMap
			{
				NetScriptFramework::FixedMemoryArray<InputContext^>^ __clrcall get();
			}

			property BSTArray<LinkedMapping^, BSTArrayHeapAllocator^>^ LinkedMappings
			{
				BSTArray<LinkedMapping^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<InputContextIds, BSTArrayHeapAllocator^>^ ContextPriorityStack
			{
				BSTArray<InputContextIds, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property UserEventFlags EnabledControls
			{
				UserEventFlags __clrcall get();
			}

			property System::SByte TextEntryCount
			{
				System::SByte __clrcall get();
			}

			property System::Boolean IgnoreKeyboardMouse
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean IgnoreActivateDisabledEvents
			{
				System::Boolean __clrcall get();
			}

			property PcGamepadTypes GamePadMapType
			{
				PcGamepadTypes __clrcall get();
			}

			/// <summary>
			/// Gets the input manager instance.
			/// </summary>
			static property InputManager^ Instance
			{
				InputManager^ __clrcall get()
				{
					return NetScriptFramework::MemoryObject::FromAddress<InputManager^>(NetScriptFramework::Memory::ReadPointer(__VIDS::VID514705.Value, false));
				}
			}
		};

		public interface class MessageQueueHolder : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSTCommonScrapHeapMessageQueue<BSPackedTask^>^ GameTaskQueue
			{
				BSTCommonScrapHeapMessageQueue<BSPackedTask^>^ __clrcall get();
			}
		};

		public interface class UIMessageQueue : public BSTSingletonSDM<UIMessageQueue^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IMemoryObject
		{
		public:
			property BSTCommonStaticMessageQueue<UIMessage^, UnknownGenArg_800^>^ Messages
			{
				BSTCommonStaticMessageQueue<UIMessage^, UnknownGenArg_800^>^ __clrcall get();
			}

			property System::Int32 PoolUsed
			{
				System::Int32 __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<UIMessage^>^ MessagePool
			{
				NetScriptFramework::FixedMemoryArray<UIMessage^>^ __clrcall get();
			}
		};

		public interface class _s__ThrowInfo : public NetScriptFramework::IMemoryObject { };

		public interface class tagDISPPARAMS0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagPARAMDESCEX0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagVersionedStream0 : public NetScriptFramework::IMemoryObject { };

		public interface class bhkWorld : public bhkSerializable, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class bhkConstraintProjector : public hkpConstraintListener, public NetScriptFramework::IVirtualObject { };
		};

		public interface class AddCallbackVisitor : public FxDelegateHandler::CallbackProcessor, public NetScriptFramework::IVirtualObject
		{
		public:
			property FxDelegateHandler^ Handler
			{
				FxDelegateHandler^ __clrcall get();
			}

			property System::IntPtr Hash
			{
				System::IntPtr __clrcall get();
			}
		};

		public interface class hkpBridgeAtoms : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpWorldCinfo : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class SimulationType : System::Int32
			{
				SIMULATION_TYPE_INVALID = 0,
				SIMULATION_TYPE_DISCRETE = 1,
				SIMULATION_TYPE_CONTINUOUS = 2,
				SIMULATION_TYPE_MULTITHREADED = 3,
			};

			enum class ContactPointGeneration : System::Int32
			{
				CONTACT_POINT_ACCEPT_ALWAYS = 0,
				CONTACT_POINT_REJECT_DUBIOUS = 1,
				CONTACT_POINT_REJECT_MANY = 2,
			};

			enum class BroadPhaseBorderBehaviour : System::Int32
			{
				BROADPHASE_BORDER_ASSERT = 0,
				BROADPHASE_BORDER_FIX_ENTITY = 1,
				BROADPHASE_BORDER_REMOVE_ENTITY = 2,
				BROADPHASE_BORDER_DO_NOTHING = 3,
			};

			enum class TreeUpdateType : System::Int32
			{
				REBUILD_ACTIVE = 0,
				REBUILD_ALL = 1,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class SolverType : System::Int32
			{
				SOLVER_TYPE_INVALID = 0,
				SOLVER_TYPE_2ITERS_SOFT = 1,
				SOLVER_TYPE_2ITERS_MEDIUM = 2,
				SOLVER_TYPE_2ITERS_HARD = 3,
				SOLVER_TYPE_4ITERS_SOFT = 4,
				SOLVER_TYPE_4ITERS_MEDIUM = 5,
				SOLVER_TYPE_4ITERS_HARD = 6,
				SOLVER_TYPE_8ITERS_SOFT = 7,
				SOLVER_TYPE_8ITERS_MEDIUM = 8,
				SOLVER_TYPE_8ITERS_HARD = 9,
				SOLVER_TYPE_MAX_ID = 0xA,
			};
		};

		generic <typename BSQueuedResourceCollection_T1, typename BSQueuedResourceCollection_T2>
		public interface class BSQueuedResourceCollection : public BSQueuedResourceCollectionBase, public NetScriptFramework::IVirtualObject { };

		generic <typename BSScrapArray_T1>
		public interface class BSScrapArray : public BSTArray<BSScrapArray_T1, BSScrapArrayAllocator^>, public NetScriptFramework::IMemoryObject { };

		generic <typename AutoRegisterCombatObject_T1>
		public interface class AutoRegisterCombatObject : public AutoRegisterCreator<AutoRegisterCombatObject_T1, BSTCreateFactoryManager<System::UInt32, CombatObject^, UnknownGenArg_256^>^>, public NetScriptFramework::IVirtualObject { };

		public interface class bhkAction : public bhkSerializable, public NetScriptFramework::IVirtualObject { };

		public interface class GFxLog : public GFxState, public GFxLogBase<GFxLog^>, public NetScriptFramework::IVirtualObject { };

		public interface class BSPSysHavokUpdateModifier : public NiPSysMeshUpdateModifier, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class ICollisionObjectHandler : public NetScriptFramework::IVirtualObject { };
		};

		interface class anonymous_namespace::Win32FileType : public BSSaveDataSystemUtilityFile, public NetScriptFramework::IVirtualObject { };

		generic <typename BSTHashMap_T1, typename BSTHashMap_T2, typename BSTHashMap_T3>
		public interface class BSTHashMap3 : public BSTHashMapBase<BSTHashMapTraits<BSTHashMap_T1, BSTHashMap_T2, BSTDefaultScatterTable2<BSTHashMap_T1, BSTHashMap_T2>^>^>, public NetScriptFramework::IMemoryObject { };

		public interface class AudioLoadForPlaybackTask : public anonymous_namespace::AudioLoadTask, public NetScriptFramework::IVirtualObject { };

		public interface class AudioLoadToCacheTask : public anonymous_namespace::AudioLoadTask, public NetScriptFramework::IVirtualObject { };

		public interface class CombatAreaReference : public CombatAreaRadius, public NetScriptFramework::IVirtualObject { };

		public interface class CombatAreaStandard : public CombatAreaRadius, public NetScriptFramework::IVirtualObject { };

		public interface class CombatDisableAimController : public CombatAimController, public NetScriptFramework::IVirtualObject { };

		public interface class CombatInventoryItemPotion : public CombatInventoryItemMagic, public NetScriptFramework::IVirtualObject { };

		public interface class CombatInventoryItemScroll : public CombatInventoryItemMagic, public NetScriptFramework::IVirtualObject { };

		public interface class CombatInventoryItemShout : public CombatInventoryItemMagic, public NetScriptFramework::IVirtualObject { };

		public interface class CombatInventoryItemStaff : public CombatInventoryItemMagic, public NetScriptFramework::IVirtualObject { };

		public interface class CombatInventoryItemOneHandedBlock : public CombatInventoryItemShield, public NetScriptFramework::IVirtualObject { };

		public interface class CombatInventoryItemRanged : public CombatInventoryItemComposite, public NetScriptFramework::IVirtualObject { };

		public interface class CombatTrackTargetAimController : public CombatAimController, public NetScriptFramework::IVirtualObject { };

		public interface class CombatPathingGoalPolicyFlank : public CombatPathingGoalPolicyFindTargetLocation, public NetScriptFramework::IMemoryObject { };

		public interface class CombatProjectileAimController : public CombatAimController, public NetScriptFramework::IVirtualObject { };

		generic <typename AutoRegisterSmartPtrDerivedPathingType_T1, typename AutoRegisterSmartPtrDerivedPathingType_T2, typename AutoRegisterSmartPtrDerivedPathingType_T3>
		public interface class AutoRegisterSmartPtrDerivedPathingType : public AutoRegisterCreator<AutoRegisterSmartPtrDerivedPathingType_T1, BSTSmartPointerPathingFactoryManager<AutoRegisterSmartPtrDerivedPathingType_T2, AutoRegisterSmartPtrDerivedPathingType_T3>^>, public NetScriptFramework::IVirtualObject { };

		public interface class CombatPathingRequestAdapter : public CombatPathingRequest, public NetScriptFramework::IVirtualObject { };

		generic <typename CombatPathingRequestGeneric_T1, typename CombatPathingRequestGeneric_T2>
		public interface class CombatPathingRequestGeneric : public CombatPathingRequest, public NetScriptFramework::IVirtualObject { };

		public interface class CombatPathingRequestMultiGoal : public CombatPathingRequest, public NetScriptFramework::IVirtualObject { };

		public interface class CombatPathingRequestStandard : public CombatPathingRequest, public NetScriptFramework::IVirtualObject { };

		public interface class PathingRequestFlyAction : public PathingRequestFly, public NetScriptFramework::IVirtualObject { };

		public interface class PathingRequestFlyHover : public PathingRequestFly, public NetScriptFramework::IVirtualObject { };

		public interface class PathingRequestFlyLand : public PathingRequestFly, public NetScriptFramework::IVirtualObject { };

		public interface class PathingRequestFlyOrbit : public PathingRequestFly, public NetScriptFramework::IVirtualObject { };

		public interface class PathingRequestFlyTakeOff : public PathingRequestFly, public NetScriptFramework::IVirtualObject { };

		public interface class PathingRequestSafeStraightLine : public PathingRequestClosePoint, public NetScriptFramework::IVirtualObject { };

		generic <typename AutoRegisterMovementAgentCreator_T1>
		public interface class AutoRegisterMovementAgentCreator : public AutoRegisterCreator<AutoRegisterMovementAgentCreator_T1, BSTCreateFactoryManager<BSFixedString^, MovementAgent^, UnknownGenArg_32^>^>, public NetScriptFramework::IVirtualObject { };

		generic <typename AutoRegisterMovementArbiterCreator_T1>
		public interface class AutoRegisterMovementArbiterCreator : public AutoRegisterCreator<AutoRegisterMovementArbiterCreator_T1, BSTCreateFactoryManager<BSFixedString^, MovementArbiter^, UnknownGenArg_32^>^>, public NetScriptFramework::IVirtualObject { };

		generic <typename AutoRegisterPathing_T1, typename AutoRegisterPathing_T2>
		public interface class AutoRegisterPathing : public AutoRegisterCreator<AutoRegisterPathing_T1, AutoRegisterPathing_T2>, public NetScriptFramework::IVirtualObject { };

		public interface class BarrierPhantomCallbackShape : public hkpPhantomCallbackShape, public NetScriptFramework::IVirtualObject { };

		public interface class hkbGenerator : public hkbNode, public NetScriptFramework::IVirtualObject { };

		public interface class bhkWorldObject : public bhkSerializable, public NetScriptFramework::IVirtualObject { };

		interface class BGSWaterCollisionManager::bhkPlaceableWater : public hkpPhantomCallbackShape, public BGSWaterCollisionManager::BGSWaterUpdateI, public NetScriptFramework::IVirtualObject { };

		interface class BGSWaterCollisionManager::bhkWaterfall : public hkpPhantomCallbackShape, public BGSWaterCollisionManager::BGSWaterUpdateI, public NetScriptFramework::IVirtualObject { };

		public interface class hkpCollidable : public hkpCdBody, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class BoundingVolumeData : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			enum class ForceCollideOntoPpuReasons : System::Int32
			{
				FORCE_PPU_USER_REQUEST = 1,
				FORCE_PPU_SHAPE_REQUEST = 2,
				FORCE_PPU_MODIFIER_REQUEST = 4,
				FORCE_PPU_SHAPE_UNCHECKED = 8,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class bhkAcousticSpacePhantomCallbackShape : public hkpPhantomCallbackShape, public NetScriptFramework::IVirtualObject { };

		public interface class bhkConstraint : public bhkSerializable, public NetScriptFramework::IVirtualObject { };

		public interface class bhkShape : public bhkSerializable, public NetScriptFramework::IVirtualObject { };

		public interface class bhkCharacterProxy : public bhkSerializable, public NetScriptFramework::IVirtualObject { };

		public interface class bhkCharacterRigidBody : public bhkSerializable, public NetScriptFramework::IVirtualObject { };

		public interface class bhkCharacterRigidBodyCinfo : public hkpCharacterRigidBodyCinfo, public hkSerializableCinfo, public NetScriptFramework::IVirtualObject { };

		public interface class bhkCharacterStateClimbing : public bhkCharacterState, public NetScriptFramework::IVirtualObject { };

		public interface class bhkCharacterStateFlying : public bhkCharacterState, public NetScriptFramework::IVirtualObject { };

		public interface class bhkCharacterStateInAir : public bhkCharacterState, public NetScriptFramework::IVirtualObject { };

		public interface class bhkCharacterStateJumping : public bhkCharacterState, public NetScriptFramework::IVirtualObject { };

		public interface class bhkCharacterStateOnGround : public bhkCharacterState, public NetScriptFramework::IVirtualObject { };

		public interface class bhkCharacterStateSwimming : public bhkCharacterState, public NetScriptFramework::IVirtualObject { };

		public interface class hkpPositionConstraintMotor : public hkpLimitedForceConstraintMotor, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSpringDamperConstraintMotor : public hkpLimitedForceConstraintMotor, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpVelocityConstraintMotor : public hkpLimitedForceConstraintMotor, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		generic <typename Parallel_T1, typename Parallel_T2>
		interface class bnet::Parallel : public bnet::Composite<Parallel_T1>, public NetScriptFramework::IVirtualObject { };

		generic <typename Sequence_T1, typename Sequence_T2>
		interface class bnet::Sequence : public bnet::Composite<Sequence_T1>, public NetScriptFramework::IVirtualObject { };

		public interface class BSBlendTreadTransfInterpolator : public NiBlendInterpolator, public NetScriptFramework::IVirtualObject { };

		public interface class hkbModifier : public hkbNode, public NetScriptFramework::IVirtualObject { };

		public interface class BSDecalPlacementVectorExtraData : public NiIntegerExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class BSDistantObjectLargeRefExtraData : public NiBooleanExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class BSPortal : public BSOcclusionPlane, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysVolumeEmitter : public NiPSysEmitter, public NetScriptFramework::IVirtualObject { };

		public interface class NiTransformInterpolator : public NiKeyBasedInterpolator, public NetScriptFramework::IVirtualObject { };

		public interface class GFxFileOpenerBase : public GFxState, public NetScriptFramework::IVirtualObject { };

		public interface class GFxImageLoader : public GFxState, public NetScriptFramework::IVirtualObject { };

		public interface class GFxTranslator : public GFxState, public NetScriptFramework::IVirtualObject { };

		public interface class TESBipedModelForm : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			property NetScriptFramework::FixedMemoryArray<TESModelTextureSwap^>^ WorldModels
			{
				NetScriptFramework::FixedMemoryArray<TESModelTextureSwap^>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<TESIcon^>^ InventoryIcons
			{
				NetScriptFramework::FixedMemoryArray<TESIcon^>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<BGSMessageIcon^>^ MessageIcons
			{
				NetScriptFramework::FixedMemoryArray<BGSMessageIcon^>^ __clrcall get();
			}

			property TESModelRDT^ ConstraintTemplate
			{
				TESModelRDT^ __clrcall get();
			}
		};

		public interface class NiAlphaAccumulator : public NiBackToFrontAccumulator, public NetScriptFramework::IVirtualObject { };

		public interface class BSStripPSysData : public NiPSysData, public NetScriptFramework::IVirtualObject { };

		public interface class BSTreadTransfInterpolator : public NiKeyBasedInterpolator, public NetScriptFramework::IVirtualObject { };

		public interface class BSWArray : public NiIntegersExtraData, public NetScriptFramework::IVirtualObject { };

		public interface class BSWin32VirtualKeyboardDevice : public BSVirtualKeyboardDevice, public NetScriptFramework::IVirtualObject { };

		public interface class BSXFlags : public NiIntegerExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DataFlags : System::UInt32
			{
				None = 0,
				Animated = 1,
				Havok = 2,
				Ragdoll = 4,
				Complex = 8,
				Addon = 0x10,
				EditorMarker = 0x20,
				Dynamic = 0x40,
				Articulated = 0x80,
				NeedsTransformUpdate = 0x100,
				ExternalEmit = 0x200,
				MagicShaderParticles = 0x400,
				Lights = 0x800,
				Breakable = 0x1000,
				SearchedBreakable = 0x2000,
			};
		};

		public interface class CompressedArchiveFile : public ArchiveFile, public NetScriptFramework::IVirtualObject { };

		interface class CraftingSubMenus::CraftingSubMenu : public FxDelegateHandler, public BSTEventSink<TESFurnitureEvent^>, public NetScriptFramework::IVirtualObject { };

		public interface class GFxExternalInterface : public GFxState, public NetScriptFramework::IVirtualObject { };

		public interface class GFxZlibSupportBase : public GFxState, public NetScriptFramework::IVirtualObject { };

		public interface class GMemoryFile : public GFile, public NetScriptFramework::IVirtualObject { };

		public interface class HavokStreambufFactory : public hkNativeFileSystem, public NetScriptFramework::IVirtualObject { };

		public interface class hkRefVariant : public hkRefPtr<hkReferencedObject^>, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkTransform : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkbNamedIntEventPayload : public hkbNamedEventPayload, public NetScriptFramework::IVirtualObject { };

		public interface class hkbNamedRealEventPayload : public hkbNamedEventPayload, public NetScriptFramework::IVirtualObject { };

		public interface class hkbNamedStringEventPayload : public hkbNamedEventPayload, public NetScriptFramework::IVirtualObject { };

		public interface class hkpSampledHeightFieldShape : public hkpHeightFieldShape, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class HeightFieldType : System::Int32
			{
				HEIGHTFIELD_STORAGE = 0,
				HEIGHTFIELD_COMPRESSED = 1,
				HEIGHTFIELD_USER = 2,
				HEIGHTFIELD_MAX_ID = 3,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConvexShape : public hkpSphereRepShape, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class WeldResult : System::Int32
			{
				WELD_RESULT_REJECT_CONTACT_POINT = 0,
				WELD_RESULT_ACCEPT_CONTACT_POINT_MODIFIED = 1,
				WELD_RESULT_ACCEPT_CONTACT_POINT_UNMODIFIED = 2,
			};
		};

		public interface class hkContainerResourceMap : public hkResourceMap, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkCrc32StreamWriter : public hkCrcStreamWriter<System::UInt32, UnknownGenArg_3988292384^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkErrStream : public hkOstream, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkNiTriStripsShape : public hkpShapeCollection, public NetScriptFramework::IVirtualObject { };

		public interface class hkPackedNiTriStripsShape : public hkpShapeCollection, public NetScriptFramework::IVirtualObject { };

		public interface class hkpIterativeLinearCastAgent : public hkpCollisionAgent, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpBvAgent : public hkpCollisionAgent, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpBvShape : public hkpShape, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCallbackConstraintMotor : public hkpLimitedForceConstraintMotor, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class CallbackType : System::Int32
			{
				CALLBACK_MOTOR_TYPE_HAVOK_DEMO_SPRING_DAMPER = 0,
				CALLBACK_MOTOR_TYPE_USER_0 = 1,
				CALLBACK_MOTOR_TYPE_USER_1 = 2,
				CALLBACK_MOTOR_TYPE_USER_2 = 3,
				CALLBACK_MOTOR_TYPE_USER_3 = 4,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCharacterContext : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class CharacterType : System::Int32
			{
				HK_CHARACTER_PROXY = 0,
				HK_CHARACTER_RIGIDBODY = 1,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpMoppDefaultSplitter : public hkpMoppSplitter, public NetScriptFramework::IVirtualObject { };

		public interface class hkpMultiSphereShape : public hkpSphereRepShape, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpNullAgent : public hkpCollisionAgent, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpNullContactMgrFactory : public hkpContactMgrFactory, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpPlaneShape : public hkpHeightFieldShape, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDisplaySerializeIStream : public hkIArchive, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDisplaySerializeOStream : public hkOArchive, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpTransformAgent : public hkpCollisionAgent, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpTriSampledHeightFieldBvTreeShape : public hkpBvTreeShape, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkStdioStreamReader : public hkSeekableStreamReader, public NetScriptFramework::IVirtualObject { };

		public interface class hkTrackerTypeTreeCache : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class IConvexOverlapImpl : public hkgpMesh::IConvexOverlap, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class ShapeBridge : public hkGskShape, public NetScriptFramework::IVirtualObject { };
		};

		public interface class Main : public BSTEventSink<PositionPlayerEvent^>, public BSTEventSink<BSGamerProfileEvent^>, public NetScriptFramework::IVirtualObject
		{
		public:
			/// <summary>
			/// Gets or sets whether to quit game next frame.
			/// </summary>
			property System::Boolean QuitGame
			{
				System::Boolean __clrcall get();

				void __clrcall set(System::Boolean value);
			}

			/// <summary>
			/// Gets or sets a value whether the main game world is paused. This is the one used with ToggleFlyCam 1. This is not used to check if the game itself is paused at the moment! Use the IsGamePaused property for that.
			/// </summary>
			property System::Boolean PauseGameWorld
			{
				System::Boolean __clrcall get();

				void __clrcall set(System::Boolean value);
			}

			property System::IntPtr WindowHandle
			{
				System::IntPtr __clrcall get();
			}

			property System::IntPtr ModuleInstance
			{
				System::IntPtr __clrcall get();
			}

			property System::UInt32 ThreadId
			{
				System::UInt32 __clrcall get();
			}

			property ScrapHeap^ PackedTaskHeap
			{
				ScrapHeap^ __clrcall get();
			}

			property BSPackedTaskQueue^ TaskQueue
			{
				BSPackedTaskQueue^ __clrcall get();
			}

			property ScrapHeap^ SecondaryPackedTaskHeap
			{
				ScrapHeap^ __clrcall get();
			}

			property BSPackedTaskQueue^ SecondaryTaskQueue
			{
				BSPackedTaskQueue^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<BSSaveDataSystemUtilityImage^>^ SaveDataBackgroundImages
			{
				NetScriptFramework::FixedMemoryArray<BSSaveDataSystemUtilityImage^>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<BSSaveDataSystemUtilityImage^>^ SaveDataIconImages
			{
				NetScriptFramework::FixedMemoryArray<BSSaveDataSystemUtilityImage^>^ __clrcall get();
			}

			/// <summary>
			/// Gets the main game application instance.
			/// </summary>
			static property Main^ Instance
			{
				Main^ __clrcall get()
				{
					return NetScriptFramework::MemoryObject::FromAddress<Main^>(NetScriptFramework::Memory::ReadPointer(__VIDS::VID516943.Value, false));
				}
			}

			/// <summary>
			/// Check if the game world is currently paused.
			/// </summary>
			property System::Boolean IsGamePaused
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class NiBlendAccumTransformInterpolator : public NiBlendInterpolator, public NetScriptFramework::IVirtualObject { };

		public interface class NiBlendBoolInterpolator : public NiBlendInterpolator, public NetScriptFramework::IVirtualObject { };

		public interface class NiBlendColorInterpolator : public NiBlendInterpolator, public NetScriptFramework::IVirtualObject { };

		public interface class NiBlendFloatInterpolator : public NiBlendInterpolator, public NetScriptFramework::IVirtualObject { };

		public interface class NiBlendPoint3Interpolator : public NiBlendInterpolator, public NetScriptFramework::IVirtualObject { };

		public interface class NiBlendQuaternionInterpolator : public NiBlendInterpolator, public NetScriptFramework::IVirtualObject { };

		public interface class NiBlendTransformInterpolator : public NiBlendInterpolator, public NetScriptFramework::IVirtualObject { };

		public interface class NiBoolInterpolator : public NiKeyBasedInterpolator, public NetScriptFramework::IVirtualObject { };

		public interface class NiBSplineColorInterpolator : public NiBSplineInterpolator, public NetScriptFramework::IVirtualObject { };

		public interface class NiBSplineFloatInterpolator : public NiBSplineInterpolator, public NetScriptFramework::IVirtualObject { };

		public interface class NiBSplinePoint3Interpolator : public NiBSplineInterpolator, public NetScriptFramework::IVirtualObject { };

		public interface class NiBSplineTransformInterpolator : public NiBSplineInterpolator, public NetScriptFramework::IVirtualObject { };

		public interface class NiMeshPSysData : public NiPSysData, public NetScriptFramework::IVirtualObject { };

		public interface class NiPathInterpolator : public NiKeyBasedInterpolator, public NetScriptFramework::IVirtualObject { };

		public interface class NiPoint3Interpolator : public NiKeyBasedInterpolator, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysAirFieldModifier : public NiPSysFieldModifier, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysDragFieldModifier : public NiPSysFieldModifier, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysGravityFieldModifier : public NiPSysFieldModifier, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysMeshEmitter : public NiPSysEmitter, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysRadialFieldModifier : public NiPSysFieldModifier, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysTurbulenceFieldModifier : public NiPSysFieldModifier, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysVortexFieldModifier : public NiPSysFieldModifier, public NetScriptFramework::IVirtualObject { };

		public interface class NiQuaternionInterpolator : public NiKeyBasedInterpolator, public NetScriptFramework::IVirtualObject { };

		public interface class RemoveCallbackVisitor : public FxDelegateHandler::CallbackProcessor, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::IntPtr CallbackHash
			{
				System::IntPtr __clrcall get();
			}
		};

		public interface class UnitTestZeroOverheadHeap : public ZeroOverheadHeap, public NetScriptFramework::IVirtualObject { };

		interface class hkaAdditiveAnimationUtility::Input : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkaAdditiveAnimationUtility::ReferencePoseInput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkaFootPlacementIkSolver::Input : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkaKeyFrameHierarchyUtility::KeyFrameData : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaQuantizedSampleAndCombineJob : public hkaAnimationSampleAndCombineJobBase, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class QuantizedAnimationEntry : public NetScriptFramework::IMemoryObject
			{
			public:
				enum class BlendFlags : System::Int32
				{
					ADDITIVE = 1,
					SUBTRACTIVE = 2,
					MIRRORED = 4,
				};

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class PerJobBlendFlags : System::Int32
			{
				SLERP = 1,
				NORMALIZE = 2,
			};
		};

		public interface class hkMeshSectionCinfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkaSampleAndCombineUtils::TransformBlendParameters : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkaTrackAnalysis::AnalysisInput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkaTrackAnalysis::AnalysisSplit : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkClassPointerVtable::TypeInfoRegistry : public hkTypeInfoRegistry, public NetScriptFramework::IVirtualObject { };

		public interface class hkConvertCS : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class ConversionType : System::Int32
			{
				CT_IDENTITY = 0,
				CT_FLIP_X = 1,
				CT_FLIP_Y = 2,
				CT_FLIP_Z = 3,
				CT_SWITCH_YZ = 4,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkCrc64StreamWriter : public hkCrcStreamWriter<System::UInt64, UnknownGenArg__3932672073523589310^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkMathUtil::Decomposition : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpShapeRayBundleCastOutput : public NetScriptFramework::IMemoryObject { };

		public interface class hkpConstraintDrawer : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCdPoint : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSetLocalRotationsConstraintAtom : public hkpConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSimpleConstraintInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class BodyInfo : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpVehicleFrictionSolverParams : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class FxDelegateArgs : public NetScriptFramework::IMemoryObject
		{
		public:
			property GFxValue^ ResponseId
			{
				GFxValue^ __clrcall get();
			}

			property FxDelegateHandler^ Handler
			{
				FxDelegateHandler^ __clrcall get();
			}

			property GFxMovieView^ MovieView
			{
				GFxMovieView^ __clrcall get();
			}

			property System::IntPtr Args
			{
				System::IntPtr __clrcall get();
			}

			property System::Int32 NumArgs
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class tagPARAMDESC0 : public NetScriptFramework::IMemoryObject { };

		public interface class hkpBreakableConstraintData : public hkpConstraintData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Runtime : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkpRootCdPoint : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpMalleableConstraintData : public hkpConstraintData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class BShkbHkxDB::QueuedHandles : public BSQueuedResourceCollection<BSResource::EntryDB<BShkbHkxDB::DBTraits^>^, UnknownGenArg_2^>, public NetScriptFramework::IVirtualObject { };

		interface class BSModelDB::QueuedHandles : public BSQueuedResourceCollection<BSResource::EntryDB<BSModelDB::DBTraits^>^, UnknownGenArg_2^>, public NetScriptFramework::IVirtualObject { };

		generic <typename AutoRegisterCombatMagicCaster_T1>
		interface class anonymous_namespace::AutoRegisterCombatMagicCaster : public AutoRegisterCombatObject<AutoRegisterCombatMagicCaster_T1>, public AutoRegisterCombatObject<CombatInventoryItemMagicT<CombatInventoryItemMagic^, AutoRegisterCombatMagicCaster_T1>^>, public AutoRegisterCombatObject<CombatInventoryItemMagicT<CombatInventoryItemShout^, AutoRegisterCombatMagicCaster_T1>^>, public AutoRegisterCombatObject<CombatInventoryItemMagicT<CombatInventoryItemStaff^, AutoRegisterCombatMagicCaster_T1>^>, public AutoRegisterCombatObject<CombatInventoryItemMagicT<CombatInventoryItemPotion^, AutoRegisterCombatMagicCaster_T1>^>, public AutoRegisterCombatObject<CombatInventoryItemMagicT<CombatInventoryItemScroll^, AutoRegisterCombatMagicCaster_T1>^>, public NetScriptFramework::IVirtualObject { };

		public interface class hkpWorldRayCastOutput : public hkpShapeRayCastOutput, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class bhkUnaryAction : public bhkAction, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::LoggingDisabler : public GFxLog, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::PhysicsWorldHandler : public BSPSysHavokUpdateModifier::ICollisionObjectHandler, public NetScriptFramework::IVirtualObject { };

		public interface class AttackAnimationArrayMap : public NiRefObject, public BSTHashMap3<System::UInt32, BSTArray<SetEventData^, BSTArrayHeapAllocator^>^, BSTDefaultScatterTable0^>, public NetScriptFramework::IVirtualObject { };

		public interface class CombatAreaHoldPosition : public CombatAreaReference, public NetScriptFramework::IVirtualObject { };

		public interface class CombatMeleeAimController : public CombatTrackTargetAimController, public NetScriptFramework::IVirtualObject { };

		generic <typename CombatPathRequestAdapter_T1>
		public interface class CombatPathRequestAdapter : public CombatPathRequest<CombatPathingRequestAdapter^>, public NetScriptFramework::IMemoryObject { };

		generic <typename CombatPathRequestGeneric_T1, typename CombatPathRequestGeneric_T2>
		public interface class CombatPathRequestGeneric : public CombatPathRequest<CombatPathingRequestGeneric<CombatPathRequestGeneric_T1, CombatPathRequestGeneric_T2>^>, public NetScriptFramework::IMemoryObject { };

		public interface class CombatPathRequestMultiGoal : public CombatPathRequest<CombatPathingRequestMultiGoal^>, public NetScriptFramework::IMemoryObject { };

		public interface class CombatPathRequestStraightPath : public CombatPathRequest<CombatPathingRequestStandard^>, public NetScriptFramework::IMemoryObject { };

		public interface class CombatPathRequestStandard : public CombatPathRequest<CombatPathingRequestStandard^>, public NetScriptFramework::IMemoryObject { };

		public interface class FxDelegate : public GFxExternalInterface, public NetScriptFramework::IVirtualObject { };

		public interface class BGSArtObjectCloneTask : public BSQueuedResourceCollection<BSResource::EntryDB<BSModelDB::DBTraits^>^, UnknownGenArg_1^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSGamebryoSequenceGenerator : public hkbGenerator, public NetScriptFramework::IVirtualObject { };

		public interface class BGSQueuedGrassModelHandles : public BSQueuedResourceCollection<BSResource::EntryDB<BSModelDB::DBTraits^>^, UnknownGenArg_2^>, public NetScriptFramework::IVirtualObject { };

		public interface class BSSynchronizedClipGenerator : public hkbGenerator, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class hkbSynchronizedAnimationScene : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

			interface class hkbDefaultSynchronizedScene : public BSSynchronizedClipGenerator::hkbSynchronizedAnimationScene, public NetScriptFramework::IVirtualObject { };
		};

		public interface class bhkPhantom : public bhkWorldObject, public NetScriptFramework::IVirtualObject { };

		public interface class bhkBinaryAction : public bhkAction, public NetScriptFramework::IVirtualObject { };

		public interface class bhkBallAndSocketConstraint : public bhkConstraint, public NetScriptFramework::IVirtualObject { };

		public interface class bhkConstraintChain : public bhkConstraint, public NetScriptFramework::IVirtualObject { };

		public interface class bhkSphereRepShape : public bhkShape, public NetScriptFramework::IVirtualObject { };

		public interface class bhkBreakableConstraint : public bhkConstraint, public NetScriptFramework::IVirtualObject { };

		public interface class bhkBvTreeShape : public bhkShape, public NetScriptFramework::IVirtualObject { };

		public interface class bhkShapeCollection : public bhkShape, public NetScriptFramework::IVirtualObject { };

		public interface class bhkEntity : public bhkWorldObject, public NetScriptFramework::IVirtualObject { };

		public interface class hkpRootCdBodyPair : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class bhkGenericConstraint : public bhkConstraint, public NetScriptFramework::IVirtualObject { };

		public interface class bhkGroupConstraint : public bhkConstraint, public NetScriptFramework::IVirtualObject { };

		public interface class bhkHeightFieldShape : public bhkShape, public NetScriptFramework::IVirtualObject { };

		public interface class bhkHingeConstraint : public bhkConstraint, public NetScriptFramework::IVirtualObject { };

		public interface class bhkHingeLimitsConstraint : public bhkConstraint, public NetScriptFramework::IVirtualObject { };

		public interface class bhkLimitedHingeConstraint : public bhkConstraint, public NetScriptFramework::IVirtualObject { };

		public interface class bhkMalleableConstraint : public bhkConstraint, public NetScriptFramework::IVirtualObject { };

		public interface class bhkPointToPathConstraint : public bhkConstraint, public NetScriptFramework::IVirtualObject { };

		public interface class bhkPositionConstraintMotor : public hkpPositionConstraintMotor, public NetScriptFramework::IVirtualObject { };

		public interface class bhkPrismaticConstraint : public bhkConstraint, public NetScriptFramework::IVirtualObject { };

		public interface class bhkRagdollConstraint : public bhkConstraint, public NetScriptFramework::IVirtualObject { };

		public interface class bhkRagdollLimitsConstraint : public bhkConstraint, public NetScriptFramework::IVirtualObject { };

		public interface class bhkSpringDamperConstraintMotor : public hkpSpringDamperConstraintMotor, public NetScriptFramework::IVirtualObject { };

		public interface class bhkStiffSpringConstraint : public bhkConstraint, public NetScriptFramework::IVirtualObject { };

		public interface class bhkTransformShape : public bhkShape, public NetScriptFramework::IVirtualObject { };

		public interface class bhkVelocityConstraintMotor : public hkpVelocityConstraintMotor, public NetScriptFramework::IVirtualObject { };

		public interface class bhkWheelConstraint : public bhkConstraint, public NetScriptFramework::IVirtualObject { };

		public interface class bhkWorldCinfo : public hkpWorldCinfo, public hkSerializableCinfo, public NetScriptFramework::IVirtualObject { };

		public interface class bhkWorldM : public bhkWorld, public NetScriptFramework::IVirtualObject { };

		interface class bnet::WebSocket::pImpl::WebSocketJob : public bnet::Parallel<bnet::ta::ThreadSafe^, bnet::ta::NoErrorPropagation^>, public bnet::_impl::Observable<bnet::_impl::AsyncOperation^, bnet::BNetError^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class IWriteJobSequence : public NetScriptFramework::IVirtualObject { };

			interface class InitJob : public bnet::Sequence<bnet::ta::NonThreadSafe^, bnet::ta::ErrorPropagation^>, public bnet::_impl::Observable<bnet::_impl::AsyncOperation^, bnet::BNetError^>, public NetScriptFramework::IVirtualObject
			{
			public:
				interface class ReceiveHandshakeJob : public bnet::Job, public NetScriptFramework::IVirtualObject { };

				interface class SendHandshakeJob : public bnet::Job, public NetScriptFramework::IVirtualObject { };

				interface class SocketInitJob : public bnet::Job, public NetScriptFramework::IVirtualObject { };
			};

			interface class ReadJob : public bnet::Job, public bnet::_impl::Observable<bnet::_impl::AsyncOperation^, bnet::BNetError^>, public NetScriptFramework::IVirtualObject { };

			interface class WriteJobSequence : public bnet::Sequence<bnet::ta::ThreadSafe^, bnet::ta::ErrorPropagation^>, public bnet::_impl::Observable<bnet::WebSocket::pImpl::WebSocketJob::IWriteJobSequence^, bnet_std::void_t^>, public NetScriptFramework::IVirtualObject
			{
			public:
				interface class WriteJob : public bnet::Job, public bnet::_impl::Observable<bnet::_impl::AsyncOperation^, bnet::BNetError^>, public NetScriptFramework::IVirtualObject { };
			};
		};

		interface class bnet::AuthenticationFlow : public bnet::Sequence<bnet::ta::NonThreadSafe^, bnet::ta::ErrorPropagation^>, public bnet::_impl::Observable<bnet::_impl::AsyncOperation^, bnet::BNetError^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::anonymous_namespace::WinSocket::SocketJob : public bnet::Parallel<bnet::ta::ThreadSafe^, bnet::ta::NoErrorPropagation^>, public bnet::_impl::Observable<bnet::_impl::AsyncOperation^, bnet::BNetError^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class InitializeJob : public bnet::Job, public bnet::_impl::Observable<bnet::_impl::AsyncOperation^, bnet::BNetError^>, public NetScriptFramework::IVirtualObject { };

			interface class ReceiveJob : public bnet::Job, public bnet::_impl::Observable<bnet::_impl::AsyncOperation^, bnet::BNetError^>, public NetScriptFramework::IVirtualObject { };

			interface class WriteJob : public bnet::Job, public bnet::_impl::Observable<bnet::_impl::AsyncOperation^, bnet::BNetError^>, public NetScriptFramework::IVirtualObject { };
		};

		interface class bnet::BaseFileDownloader : public bnet::Parallel<bnet::ta::NonThreadSafe^, bnet::ta::ErrorPropagation^>, public bnet::_impl::Observable<bnet::_impl::AsyncOperation^, bnet::BNetError^>, public bnet::IDownloader, public NetScriptFramework::IVirtualObject { };

		interface class bnet::SecureSocket::pImpl::SecureSocketJob : public bnet::Parallel<bnet::ta::ThreadSafe^, bnet::ta::NoErrorPropagation^>, public bnet::_impl::Observable<bnet::_impl::AsyncOperation^, bnet::BNetError^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class ReceiveJob : public bnet::Sequence<bnet::ta::NonThreadSafe^, bnet::ta::ErrorPropagation^>, public bnet::_impl::Observable<bnet::_impl::AsyncOperation^, bnet::BNetError^>, public NetScriptFramework::IVirtualObject
			{
			public:
				interface class DecodeJob : public bnet::Job, public bnet::_impl::Observable<bnet::_impl::AsyncOperation^, bnet::BNetError^>, public NetScriptFramework::IVirtualObject { };
			};

			interface class HandshakeJob : public bnet::Job, public bnet::_impl::Observable<bnet::_impl::AsyncOperation^, bnet::BNetError^>, public NetScriptFramework::IVirtualObject { };

			interface class InitializeJob : public bnet::Sequence<bnet::ta::NonThreadSafe^, bnet::ta::ErrorPropagation^>, public bnet::_impl::Observable<bnet::_impl::AsyncOperation^, bnet::BNetError^>, public NetScriptFramework::IVirtualObject { };

			interface class WriteJob : public bnet::Job, public bnet::_impl::Observable<bnet::_impl::AsyncOperation^, bnet::BNetError^>, public NetScriptFramework::IVirtualObject { };
		};

		interface class bnet::UgcMtxPurchaseFlow : public bnet::Sequence<bnet::ta::NonThreadSafe^, bnet::ta::ErrorPropagation^>, public bnet::_impl::Observable<bnet::_impl::AsyncOperation^, bnet::BNetError^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::ListLegalDocumentsFlow : public bnet::Sequence<bnet::ta::NonThreadSafe^, bnet::ta::ErrorPropagation^>, public bnet::_impl::Observable<bnet::_impl::AsyncOperation^, bnet::BNetError^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::DownloadFlow : public bnet::Sequence<bnet::ta::ThreadSafe^, bnet::ta::ErrorPropagation^>, public bnet::_impl::Observable<bnet::_impl::AsyncOperation^, bnet::BNetError^>, public bnet::IDownloader, public NetScriptFramework::IVirtualObject { };

		interface class bnet::UnlinkAccountFlow : public bnet::Sequence<bnet::ta::NonThreadSafe^, bnet::ta::ErrorPropagation^>, public bnet::_impl::Observable<bnet::_impl::AsyncOperation^, bnet::BNetError^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::ChunkedUploadFlow : public bnet::Sequence<bnet::ta::ThreadSafe^, bnet::ta::ErrorPropagation^>, public bnet::_impl::Observable<bnet::_impl::AsyncOperation^, bnet::BNetError^>, public bnet::IUgcUploader, public NetScriptFramework::IVirtualObject { };

		interface class bnet::NetworkLoop : public bnet::Sequence<bnet::ta::ThreadSafe^, bnet::ta::ErrorPropagation^>, public bnet::IHttpConnectionProvider, public NetScriptFramework::IVirtualObject { };

		interface class bnet::LogoutFlow : public bnet::Sequence<bnet::ta::NonThreadSafe^, bnet::ta::ErrorPropagation^>, public bnet::_impl::Observable<bnet::_impl::AsyncOperation^, bnet::BNetError^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::Notification::FilterJob : public bnet::Sequence<bnet::ta::ThreadSafe^, bnet::ta::ErrorPropagation^>, public bnet::_impl::Observable<bnet::_impl::AsyncOperation^, bnet::BNetError^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::UserProcessor : public bnet::Parallel<bnet::ta::ThreadSafe^, bnet::ta::NoErrorPropagation^>, public NetScriptFramework::IVirtualObject { };

		interface class bnet::UserProcessorCollection : public bnet::Parallel<bnet::ta::ThreadSafe^, bnet::ta::NoErrorPropagation^>, public NetScriptFramework::IVirtualObject { };

		interface class BSFaceGenDB::TRI::QueuedHandles : public BSQueuedResourceCollection<BSResource::EntryDB<BSFaceGenDB::TRI::DBTraits^>^, UnknownGenArg_2^>, public NetScriptFramework::IVirtualObject { };

		interface class BSTextureDB::QueuedHandles : public BSQueuedResourceCollection<BSResource::EntryDB<BSTextureDB::DBTraits^>^, UnknownGenArg_2^>, public NetScriptFramework::IVirtualObject { };

		public interface class BSBoneSwitchGenerator : public hkbGenerator, public NetScriptFramework::IVirtualObject { };

		public interface class BSComputeAddBoneAnimModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class BSCyclicBlendTransitionGenerator : public hkbGenerator, public NetScriptFramework::IVirtualObject { };

		public interface class BSDecomposeVectorModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class BSDirectAtModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class BSDistTriggerModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class BSEventEveryNEventsModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class BSEventOnDeactivateModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class BSEventOnFalseToTrueModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class BSGetTimeStepModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbBehaviorGraph : public hkbGenerator, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class GlobalTransitionData : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };
		};

		public interface class BSInterpValueModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class BSIsActiveModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class BSIStateManagerModifier : public hkbModifier, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class BSIStateManagerStateListener : public hkbStateListener, public NetScriptFramework::IVirtualObject { };
		};

		public interface class BSiStateTaggingGenerator : public hkbGenerator, public NetScriptFramework::IVirtualObject { };

		public interface class BSLimbIKModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class BSLookAtModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class BSModifyOnceModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class BSOffsetAnimationGenerator : public hkbGenerator, public NetScriptFramework::IVirtualObject { };

		public interface class BSPassByTargetTriggerModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class BSPSysArrayEmitter : public NiPSysVolumeEmitter, public NetScriptFramework::IVirtualObject { };

		public interface class BSRagdollContactListenerModifier : public hkbModifier, public hkpContactListener, public NetScriptFramework::IVirtualObject { };

		public interface class BSRotAccumTransfInterpolator : public NiTransformInterpolator, public NetScriptFramework::IVirtualObject { };

		public interface class BSScaleformFileOpener : public GFxFileOpenerBase, public NetScriptFramework::IVirtualObject { };

		public interface class BSScaleformImageLoader : public GFxImageLoader, public NetScriptFramework::IVirtualObject { };

		public interface class BSScaleformTranslator : public GFxTranslator, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSTranslator^ Translator
			{
				BSTranslator^ __clrcall get();
			}
		};

		public interface class BSShaderAccumulator : public NiAlphaAccumulator, public NetScriptFramework::IVirtualObject { };

		public interface class BSSpeedSamplerModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class BSTimerModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class BSTweenerModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkpSphereShape : public hkpConvexShape, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class CraftingSubMenus::AlchemyMenu : public CraftingSubMenus::CraftingSubMenu, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class CraftItemCallback : public IMessageBoxCallback, public NetScriptFramework::IVirtualObject { };

			interface class ModEffectivenessFunctor : public NetScriptFramework::IVirtualObject { };

			interface class QuitMenuCallback : public IMessageBoxCallback, public NetScriptFramework::IVirtualObject
			{
			public:
				property CraftingSubMenus::AlchemyMenu^ SubMenu
				{
					CraftingSubMenus::AlchemyMenu^ __clrcall get();
				}
			};
		};

		interface class CraftingSubMenus::ConstructibleObjectMenu : public CraftingSubMenus::CraftingSubMenu, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class CreationConfirmCallback : public IMessageBoxCallback, public NetScriptFramework::IVirtualObject
			{
			public:
				property System::IntPtr Menu
				{
					System::IntPtr __clrcall get();
				}
			};
		};

		interface class CraftingSubMenus::EnchantConstructMenu : public CraftingSubMenus::CraftingSubMenu, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class CategoryListEntry : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

			interface class CreateEffectFunctor : public MagicItemTraversalFunctor, public NetScriptFramework::IVirtualObject { };

			interface class EnchantMenuCallback : public IMessageBoxCallback, public NetScriptFramework::IVirtualObject
			{
			public:
				property CraftingSubMenus::EnchantConstructMenu^ SubMenu
				{
					CraftingSubMenus::EnchantConstructMenu^ __clrcall get();
				}
			};

			interface class EnchantmentEntry : public CraftingSubMenus::EnchantConstructMenu::CategoryListEntry, public NetScriptFramework::IVirtualObject { };

			interface class EnchantMenuCraftCallback : public CraftingSubMenus::EnchantConstructMenu::EnchantMenuCallback, public NetScriptFramework::IVirtualObject { };

			interface class EnchantMenuDisenchantCallback : public CraftingSubMenus::EnchantConstructMenu::EnchantMenuCallback, public NetScriptFramework::IVirtualObject { };

			interface class EnchantMenuExitCallback : public CraftingSubMenus::EnchantConstructMenu::EnchantMenuCallback, public NetScriptFramework::IVirtualObject { };

			interface class ItemChangeEntry : public CraftingSubMenus::EnchantConstructMenu::CategoryListEntry, public NetScriptFramework::IVirtualObject { };
		};

		interface class CraftingSubMenus::SmithingMenu : public CraftingSubMenus::CraftingSubMenu, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class SmithingConfirmCallback : public IMessageBoxCallback, public NetScriptFramework::IVirtualObject
			{
			public:
				property System::IntPtr SubMenu
				{
					System::IntPtr __clrcall get();
				}
			};
		};

		public interface class GFxZlibSupport : public GFxZlibSupportBase, public NetScriptFramework::IVirtualObject { };

		public interface class hkaBoneAttachment : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkbAttachmentModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbAttributeModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbBehaviorReferenceGenerator : public hkbGenerator, public NetScriptFramework::IVirtualObject { };

		public interface class hkbBlenderGenerator : public hkbGenerator, public NetScriptFramework::IVirtualObject { };

		public interface class hkbTransitionEffect : public hkbGenerator, public NetScriptFramework::IVirtualObject { };

		public interface class hkbCharacterControllerModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbClipGenerator : public hkbGenerator, public NetScriptFramework::IVirtualObject { };

		public interface class hkbCombineTransformsModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbComputeDirectionModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbComputeRotationFromAxisAngleModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbComputeRotationToTargetModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbDampingModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbModifierWrapper : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbDetectCloseToGroundModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbEvaluateExpressionModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbEvaluateHandleModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbEventsFromRangeModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbExtractRagdollPoseModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbFootIkControlsModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbFootIkModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbGetHandleOnBoneModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbGetUpModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbGetWorldFromModelModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbHandIkControlsModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbHandIkModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbKeyframeBonesModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbLookAtModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbManualSelectorGenerator : public hkbGenerator, public NetScriptFramework::IVirtualObject { };

		public interface class hkbMirrorModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbModifierGenerator : public hkbGenerator, public NetScriptFramework::IVirtualObject { };

		public interface class hkbModifierList : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbMoveCharacterModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbPoweredRagdollControlsModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbProxyModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbReferencePoseGenerator : public hkbGenerator, public NetScriptFramework::IVirtualObject { };

		public interface class hkbRigidBodyRagdollControlsModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbRotateCharacterModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbSenseHandleModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbSequence : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbSetWorldFromModelModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkBSHeightFieldShape : public hkpSampledHeightFieldShape, public NetScriptFramework::IVirtualObject { };

		public interface class hkbStateMachine : public hkbGenerator, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class EventPropertyArray : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };

			interface class StateInfo : public hkbBindable, public NetScriptFramework::IVirtualObject { };

			interface class TransitionInfoArray : public hkReferencedObject, public NetScriptFramework::IVirtualObject { };
		};

		public interface class hkbTimerModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbTransformVectorModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkbTwistModifier : public hkbModifier, public NetScriptFramework::IVirtualObject { };

		public interface class hkpTriangleShape : public hkpConvexShape, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpBoxBoxAgent : public hkpIterativeLinearCastAgent, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMotionState : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpBoxShape : public hkpConvexShape, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCapsuleCapsuleAgent : public hkpIterativeLinearCastAgent, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCapsuleShape : public hkpConvexShape, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class RayHitType : System::Int32
			{
				HIT_CAP0 = 0,
				HIT_CAP1 = 1,
				HIT_BODY = 2,
			};
		};

		public interface class hkpCapsuleTriangleAgent : public hkpIterativeLinearCastAgent, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class ClosestPointResult : System::Int32
			{
				ST_CP_MISS = 0,
				ST_CP_HIT = 1,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpGskBaseAgent : public hkpIterativeLinearCastAgent, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConvexTransformShapeBase : public hkpConvexShape, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCylinderShape : public hkpConvexShape, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class VertexIdEncoding : System::Int32
			{
				VERTEX_ID_ENCODING_IS_BASE_A_SHIFT = 7,
				VERTEX_ID_ENCODING_SIN_SIGN_SHIFT = 6,
				VERTEX_ID_ENCODING_COS_SIGN_SHIFT = 5,
				VERTEX_ID_ENCODING_IS_SIN_LESSER_SHIFT = 4,
				VERTEX_ID_ENCODING_VALUE_MASK = 0xF,
			};
		};

		interface class hkpHingeLimitsData::Atoms : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Axis : System::Int32
			{
				AXIS_AXLE = 0,
				AXIS_PERP_TO_AXLE_1 = 1,
				AXIS_PERP_TO_AXLE_2 = 2,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpMultiSphereTriangleAgent : public hkpIterativeLinearCastAgent, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpPhantomAgent : public hkpCollisionAgent, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpPointToPathConstraintData : public hkpConstraintData, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class OrientationConstraintType : System::Int32
			{
				CONSTRAIN_ORIENTATION_INVALID = 0,
				CONSTRAIN_ORIENTATION_NONE = 1,
				CONSTRAIN_ORIENTATION_ALLOW_SPIN = 2,
				CONSTRAIN_ORIENTATION_TO_PATH = 3,
				CONSTRAIN_ORIENTATION_MAX_ID = 4,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Runtime : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		interface class hkpRagdollLimitsData::Atoms : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Axis : System::Int32
			{
				AXIS_TWIST = 0,
				AXIS_PLANES = 1,
				AXIS_CROSS_PRODUCT = 2,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkProcess : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class ProcessType : System::Int32
			{
				HK_PROCESS_TYPE_UNKNOWN = -1,
				HK_PROCESS_TYPE_BEHAVIOR = 1,
			};
		};

		interface class hkpRotationalConstraintData::Atoms : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSerializedDisplayMarker : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSphereBoxAgent : public hkpIterativeLinearCastAgent, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSphereCapsuleAgent : public hkpIterativeLinearCastAgent, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class ClosestPointResult : System::Int32
			{
				ST_CP_MISS = 0,
				ST_CP_HIT = 1,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSphereSphereAgent : public hkpIterativeLinearCastAgent, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSphereTriangleAgent : public hkpIterativeLinearCastAgent, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class ClosestPointResult : System::Int32
			{
				ST_CP_MISS = 0,
				ST_CP_FACE = 1,
				ST_CP_EDGE = 2,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpTransformShape : public hkpShape, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxAttribute : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Hint : System::Int32
			{
				HINT_NONE = 0,
				HINT_IGNORE = 1,
				HINT_TRANSFORM = 2,
				HINT_SCALE = 4,
				HINT_TRANSFORM_AND_SCALE = 6,
				HINT_FLIP = 8,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class NewInventoryMenuItemLoadTask : public BSQueuedResourceCollection<BSResource::EntryDB<BSModelDB::DBTraits^>^, UnknownGenArg_1^>, public NetScriptFramework::IVirtualObject { };

		public interface class NiBoolTimelineInterpolator : public NiBoolInterpolator, public NetScriptFramework::IVirtualObject { };

		public interface class NiBSplineCompColorInterpolator : public NiBSplineColorInterpolator, public NetScriptFramework::IVirtualObject { };

		public interface class NiBSplineCompFloatInterpolator : public NiBSplineFloatInterpolator, public NetScriptFramework::IVirtualObject { };

		public interface class NiBSplineCompPoint3Interpolator : public NiBSplinePoint3Interpolator, public NetScriptFramework::IVirtualObject { };

		public interface class NiBSplineCompTransformInterpolator : public NiBSplineTransformInterpolator, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysBoxEmitter : public NiPSysVolumeEmitter, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysCylinderEmitter : public NiPSysVolumeEmitter, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysSphereEmitter : public NiPSysVolumeEmitter, public NetScriptFramework::IVirtualObject { };

		public interface class QueuedHelmet : public BSQueuedResourceCollection<BSResource::EntryDB<BSModelDB::DBTraits^>^, UnknownGenArg_42^>, public NetScriptFramework::IVirtualObject { };

		interface class ScaleformFile::MemoryFile : public GMemoryFile, public NetScriptFramework::IVirtualObject { };

		public interface class hkpMassElement : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpMeshWeldingUtility::ShapeInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpRejectChassisListener : public hkReferencedObject, public hkpPhantomOverlapListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkp1dAngularFollowCam::CameraInput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpAgentNmMachineBodyTemp : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpBallSocketDrawer : public hkpConstraintDrawer, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSetLocalTransformsConstraintAtom : public hkpConstraintAtom, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConstraintChainDrawer : public hkpConstraintDrawer, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConvexPieceShape : public hkpConvexShape, public hkpShapeContainer, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpCreateShapeUtility::ShapeInfoOutput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpGenericConstraintDataParameters : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpGjkConvexConvexAgent : public hkpIterativeLinearCastAgent, public NetScriptFramework::IVirtualObject { };

		public interface class hkpHingeDrawer : public hkpConstraintDrawer, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpPointToPathDrawer : public hkpConstraintDrawer, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpPointToPlaneDrawer : public hkpConstraintDrawer, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpPrismaticDrawer : public hkpConstraintDrawer, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpPulleyDrawer : public hkpConstraintDrawer, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpShapeCutterUtil::IntersectShapeInput : public NetScriptFramework::IMemoryObject { };

		public interface class hkpShapeHashUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Mode : System::Int32
			{
				IGNORE_CONVEX_RADIUS = 0,
				USE_CONVEX_RADIUS = 1,
			};
		};

		public interface class hkpSimpleConstraintInfoInitInput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpStiffSpringDrawer : public hkpConstraintDrawer, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpWheelDrawer : public hkpConstraintDrawer, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class tagELEMDESC0 : public NetScriptFramework::IMemoryObject { };

		public interface class ahkpBreakableConstraintData : public hkpBreakableConstraintData, public NetScriptFramework::IVirtualObject { };

		public interface class ahkpMalleableConstraintData : public hkpMalleableConstraintData, public NetScriptFramework::IVirtualObject { };

		public interface class IAnimationGraphManagerLoadingTask : public BShkbHkxDB::QueuedHandles, public NetScriptFramework::IVirtualObject { };

		interface class TESModelDB::TESQueuedHandles : public BSModelDB::QueuedHandles, public NetScriptFramework::IVirtualObject { };

		public interface class hkpClosestRayHitCollector : public hkpRayHitCollector, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class anonymous_namespace::bhkTiltPreventAction : public bhkUnaryAction, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::bhkWheelAction : public bhkUnaryAction, public NetScriptFramework::IVirtualObject { };

		public interface class CombatPathRequestFlight : public CombatPathRequestAdapter<PathingRequestFly^>, public NetScriptFramework::IMemoryObject { };

		public interface class CombatPathRequestFlyingAttack : public CombatPathRequestAdapter<PathingRequestFlyAction^>, public NetScriptFramework::IMemoryObject { };

		public interface class CombatPathRequestHover : public CombatPathRequestAdapter<PathingRequestFlyHover^>, public NetScriptFramework::IMemoryObject { };

		public interface class CombatPathRequestLanding : public CombatPathRequestAdapter<PathingRequestFlyLand^>, public NetScriptFramework::IMemoryObject { };

		public interface class CombatPathRequestOrbit : public CombatPathRequestAdapter<PathingRequestFlyOrbit^>, public NetScriptFramework::IMemoryObject { };

		public interface class CombatPathRequestRotatePath : public CombatPathRequestStraightPath, public NetScriptFramework::IMemoryObject { };

		public interface class CombatPathRequestWeightedMultiGoal : public CombatPathRequestMultiGoal, public NetScriptFramework::IMemoryObject { };

		generic <typename AutoRegisterCombatPathingRequestGeneric_T1, typename AutoRegisterCombatPathingRequestGeneric_T2, typename AutoRegisterCombatPathingRequestGeneric_T3>
		public interface class AutoRegisterCombatPathingRequestGeneric : public AutoRegisterSmartPtrDerivedPathingType<CombatPathingRequestGeneric<AutoRegisterCombatPathingRequestGeneric_T1, AutoRegisterCombatPathingRequestGeneric_T2>^, BSPathingRequest^, UnknownGenArg_64^>, public AutoRegisterPathBuilderFactory<CombatPathingRequestGeneric<AutoRegisterCombatPathingRequestGeneric_T1, AutoRegisterCombatPathingRequestGeneric_T2>^, CombatPathingRequestBuilder^>, public AutoRegisterCombatObject<CombatPathT<CombatPathRequestGeneric<AutoRegisterCombatPathingRequestGeneric_T1, AutoRegisterCombatPathingRequestGeneric_T2>^, AutoRegisterCombatPathingRequestGeneric_T3>^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSSynchronizedAnimationInstance : public BSSynchronizedClipGenerator::hkbSynchronizedAnimationScene, public NetScriptFramework::IVirtualObject { };

		public interface class bhkAabbPhantom : public bhkPhantom, public NetScriptFramework::IVirtualObject { };

		public interface class bhkAngularDashpotAction : public bhkBinaryAction, public NetScriptFramework::IVirtualObject { };

		public interface class bhkBallSocketConstraintChain : public bhkConstraintChain, public NetScriptFramework::IVirtualObject { };

		public interface class bhkConvexShape : public bhkSphereRepShape, public NetScriptFramework::IVirtualObject { };

		public interface class bhkShapePhantom : public bhkPhantom, public NetScriptFramework::IVirtualObject { };

		public interface class bhkCompressedMeshShape : public bhkShapeCollection, public NetScriptFramework::IVirtualObject { };

		public interface class bhkDashpotAction : public bhkBinaryAction, public NetScriptFramework::IVirtualObject { };

		public interface class bhkFixedConstraint : public bhkGenericConstraint, public NetScriptFramework::IVirtualObject { };

		public interface class bhkLiquidAction : public bhkUnaryAction, public NetScriptFramework::IVirtualObject { };

		public interface class bhkListShape : public bhkShapeCollection, public NetScriptFramework::IVirtualObject { };

		public interface class bhkMoppBvTreeShape : public bhkBvTreeShape, public NetScriptFramework::IVirtualObject { };

		public interface class bhkMotorAction : public bhkUnaryAction, public NetScriptFramework::IVirtualObject { };

		public interface class bhkMouseSpringAction : public bhkUnaryAction, public NetScriptFramework::IVirtualObject { };

		public interface class bhkMultiSphereShape : public bhkSphereRepShape, public NetScriptFramework::IVirtualObject { };

		public interface class bhkNiTriStripsShape : public bhkShapeCollection, public NetScriptFramework::IVirtualObject { };

		public interface class bhkOrientHingedBodyAction : public bhkUnaryAction, public NetScriptFramework::IVirtualObject { };

		public interface class bhkPackedNiTriStripsShape : public bhkShapeCollection, public NetScriptFramework::IVirtualObject { };

		public interface class bhkPlaneShape : public bhkHeightFieldShape, public NetScriptFramework::IVirtualObject { };

		public interface class bhkSpringAction : public bhkBinaryAction, public NetScriptFramework::IVirtualObject { };

		public interface class bhkTriSampledHeightFieldBvTreeShape : public bhkBvTreeShape, public NetScriptFramework::IVirtualObject { };

		interface class bnet::AccountQuickCreateFlow : public bnet::AuthenticationFlow, public NetScriptFramework::IVirtualObject { };

		interface class bnet::ExternalAuthenticationFlow : public bnet::AuthenticationFlow, public NetScriptFramework::IVirtualObject { };

		interface class bnet::UserCredentialsAuthenticationFlow : public bnet::AuthenticationFlow, public NetScriptFramework::IVirtualObject { };

		interface class bnet::FileDownloader : public bnet::BaseFileDownloader, public NetScriptFramework::IVirtualObject { };

		public interface class hkbBlendingTransitionEffect : public hkbTransitionEffect, public NetScriptFramework::IVirtualObject { };

		public interface class hkbDelayedModifier : public hkbModifierWrapper, public NetScriptFramework::IVirtualObject { };

		public interface class hkbEventDrivenModifier : public hkbModifierWrapper, public NetScriptFramework::IVirtualObject { };

		public interface class hkbGeneratorTransitionEffect : public hkbTransitionEffect, public NetScriptFramework::IVirtualObject { };

		public interface class hkbPoseMatchingGenerator : public hkbBlenderGenerator, public NetScriptFramework::IVirtualObject { };

		public interface class hkpWorldRayCastCommand : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkKdTreeRayCastBundleCommand : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkNormalTriangleShape : public hkpTriangleShape, public NetScriptFramework::IVirtualObject { };

		public interface class hkpClosestCdPointCollector : public hkpCdPointCollector, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpCogWheelConstraintData::Atoms : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpGskfAgent : public hkpGskBaseAgent, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConvexTransformShape : public hkpConvexTransformShapeBase, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConvexTranslateShape : public hkpConvexTransformShapeBase, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpFirstCdBodyPairCollector : public hkpCdBodyPairCollector, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpHingeConstraintData::Atoms : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Axis : System::Int32
			{
				AXIS_AXLE = 0,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpLimitedHingeConstraintData::Atoms : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Axis : System::Int32
			{
				AXIS_AXLE = 0,
				AXIS_PERP_TO_AXLE_1 = 1,
				AXIS_PERP_TO_AXLE_2 = 2,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpPointToPlaneConstraintData::Atoms : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpPrismaticConstraintData::Atoms : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Axis : System::Int32
			{
				AXIS_SHAFT = 0,
				AXIS_PERP_TO_SHAFT = 1,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpRackAndPinionConstraintData::Atoms : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpRagdollConstraintData::Atoms : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Axis : System::Int32
			{
				AXIS_TWIST = 0,
				AXIS_PLANES = 1,
				AXIS_CROSS_PRODUCT = 2,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSimpleWorldRayCaster : public hkpBroadPhaseCastCollector, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpWheelConstraintData::Atoms : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Axis : System::Int32
			{
				AXIS_SUSPENSION = 0,
				AXIS_PERP_SUSPENSION = 1,
				AXIS_AXLE = 0,
				AXIS_STEERING = 1,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDebugDisplayProcess : public hkReferencedObject, public hkProcess, public hkDebugDisplayHandler, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkKdTreeCollidableRayBundleCaster : public hkKdTreeBundleCastCollector, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMemorySnapshotProcess : public hkReferencedObject, public hkProcess, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpAabbTreeCollidableRaycaster : public hkAabbTreeQueryUtils<hkAabbTreeData::hkAabbTreeAabb^, System::UInt16>::Collector, public hkAabbTreeQueryUtils<hkAabbTreeData::hkAabbTreeAabb16^, System::UInt16>::Collector, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpGskConvexConvexAgent : public hkpGskBaseAgent, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpKdTreeCollidableRaycaster : public hkKdTreeCastCollector, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpPairGetClosestPointsCommand : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpPairLinearCastCommand : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpShapeRayCastCommand : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpWorldGetClosestPointsCommand : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpWorldLinearCastCommand : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpWorldRayCastBundleCommand : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class tagFUNCDESC0 : public NetScriptFramework::IMemoryObject { };

		public interface class tagVARDESC0 : public NetScriptFramework::IMemoryObject { };

		public interface class SimpleAnimationGraphManagerLoadingTask : public IAnimationGraphManagerLoadingTask, public NetScriptFramework::IVirtualObject { };

		interface class AnimationSystemUtils::QueuedReferenceAnimationTask : public IAnimationGraphManagerLoadingTask, public NetScriptFramework::IVirtualObject { };

		interface class AnimationSystemUtils::TESModelAndAnimationHandles : public TESModelDB::TESQueuedHandles, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::bhkClosestRBRayHitCollector : public hkpClosestRayHitCollector, public NetScriptFramework::IVirtualObject { };

		interface class BGSWaterCollisionManager::bhkAutoWater : public bhkAabbPhantom, public NetScriptFramework::IVirtualObject { };

		public interface class bhkAvoidBox : public bhkAabbPhantom, public NetScriptFramework::IVirtualObject { };

		public interface class bhkBoxShape : public bhkConvexShape, public NetScriptFramework::IVirtualObject { };

		public interface class bhkCachingShapePhantom : public bhkShapePhantom, public NetScriptFramework::IVirtualObject { };

		public interface class bhkCapsuleShape : public bhkConvexShape, public NetScriptFramework::IVirtualObject { };

		public interface class bhkConvexVerticesShape : public bhkConvexShape, public NetScriptFramework::IVirtualObject { };

		public interface class bhkSimpleShapePhantom : public bhkShapePhantom, public NetScriptFramework::IVirtualObject { };

		public interface class bhkConvexSweepShape : public bhkConvexShape, public NetScriptFramework::IVirtualObject { };

		public interface class bhkConvexTransformShape : public bhkConvexShape, public NetScriptFramework::IVirtualObject { };

		public interface class bhkConvexTranslateShape : public bhkConvexShape, public NetScriptFramework::IVirtualObject { };

		public interface class bhkCylinderShape : public bhkConvexShape, public NetScriptFramework::IVirtualObject { };

		public interface class bhkSphereShape : public bhkConvexShape, public NetScriptFramework::IVirtualObject { };

		public interface class bhkTriangleShape : public bhkConvexShape, public NetScriptFramework::IVirtualObject { };

		public interface class hkKdTreeCpuBroadphaseBundleCastCollector : public hkKdTreeBundleCastCollector, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpPredGskfAgent : public hkpGskfAgent, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class QueuedModel : public TESModelDB::TESQueuedHandles, public NetScriptFramework::IVirtualObject { };

		public interface class SpecificItemCollector : public hkpClosestRayHitCollector, public NetScriptFramework::IVirtualObject { };

		public interface class tagBINDPTR : public NetScriptFramework::IMemoryObject { };

		interface class anonymous_namespace::QueuedMagicItem : public AnimationSystemUtils::TESModelAndAnimationHandles, public NetScriptFramework::IVirtualObject { };

		public interface class bhkCharControllerShape : public bhkConvexVerticesShape, public NetScriptFramework::IVirtualObject { };

		public interface class bhkCollisionBox : public bhkSimpleShapePhantom, public NetScriptFramework::IVirtualObject { };

		public interface class QueuedReference : public QueuedModel, public NetScriptFramework::IVirtualObject { };

		public interface class QueuedAnimationObject : public QueuedModel, public NetScriptFramework::IVirtualObject { };

		public interface class QueuedActor : public QueuedReference, public NetScriptFramework::IVirtualObject { };

		public interface class QueuedTree : public QueuedReference, public NetScriptFramework::IVirtualObject { };

		public interface class QueuedCharacter : public QueuedActor, public NetScriptFramework::IVirtualObject { };

		public interface class QueuedPlayer : public QueuedCharacter, public NetScriptFramework::IVirtualObject { };

		generic <typename hkArray_T1, typename hkArray_T2>
		interface class hkArray;

		public interface class hkpDebugInfoOnPendingOperationQueues : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCompressedMeshShape : public hkpShapeCollection, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class MaterialType : System::Int32
			{
				MATERIAL_NONE = 0,
				MATERIAL_SINGLE_VALUE_PER_CHUNK = 1,
				MATERIAL_ONE_BYTE_PER_TRIANGLE = 2,
				MATERIAL_TWO_BYTES_PER_TRIANGLE = 3,
				MATERIAL_FOUR_BYTES_PER_TRIANGLE = 4,
			};

			interface class BigTriangle : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Chunk : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class ConvexPiece : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpLinkedCollidable : public hkpCollidable, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class CollisionEntry;
		};

		public interface class hkLoader : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		generic <typename hkAabbTree_T1, typename hkAabbTree_T2>
		public interface class hkAabbTree : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Node : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class NodeManager : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaAnnotationTrack : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Annotation : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaSkeleton : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class LocalFrameOnBone : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaAnimationPreviewColorContainer : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaDefaultAnimatedReferenceFrame : public hkaAnimatedReferenceFrame, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MotionExtractionOptions : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaDetectRagdollPenetration : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class BonePenetrationStatus : System::Int32
			{
				HK_NOP = 0,
				HK_YESP = 1,
				HK_YESP_DESCENDANT = 2,
			};

			interface class BonePenetration : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Output : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Setup;
		};

		public interface class hkaFootstepAnalysisInfo : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkArrayStreamWriter : public hkStreamWriter, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class ArrayOwnership : System::Int32
			{
				ARRAY_TAKE = 0,
				ARRAY_BORROW = 1,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConvexVerticesConnectivity : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMemoryResourceHandle : public hkResourceHandle, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class ExternalLink : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMemoryTrack : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpMoppCode : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class CodeInfo : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			enum class BuildType : System::Int32
			{
				BUILT_WITH_CHUNK_SUBDIVISION = 0,
				BUILT_WITHOUT_CHUNK_SUBDIVISION = 1,
				BUILD_NOT_SET = 2,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkParserBuffer : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpFirstPersonGun : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class Type : System::Int32
			{
				WEAPON_TYPE_INVALID = 0,
				WEAPON_TYPE_BALLGUN = 1,
				WEAPON_TYPE_GRENADEGUN = 2,
				WEAPON_TYPE_GRAVITYGUN = 3,
				WEAPON_TYPE_MOUNTEDBALLGUN = 4,
				WEAPON_TYPE_TWEAKERGUN = 5,
				WEAPON_TYPE_MISSILEGUN = 6,
				WEAPON_TYPE_RAYCASTGUN = 7,
				WEAPON_TYPE_SPHEREGUN = 8,
				WEAPON_TYPE_STICKYGUN = 9,
				WEAPON_TYPE_NUM_TYPES = 0xA,
			};

			enum class KeyboardKey : System::Int32
			{
				KEY_F1 = 0x70,
				KEY_F2 = 0x71,
				KEY_F3 = 0x72,
				KEY_F4 = 0x73,
				KEY_F5 = 0x74,
				KEY_F6 = 0x75,
				KEY_F7 = 0x76,
				KEY_F8 = 0x77,
				KEY_F9 = 0x78,
				KEY_F10 = 0x79,
				KEY_F11 = 0x7A,
				KEY_F12 = 0x7B,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class SweepSphereOut;
		};

		public interface class hkpBallSocketChainData : public hkpConstraintChainData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class ConstraintInfo : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Runtime : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpBvTreeAgent : public hkpCollisionAgent, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class hkpBvAgentEntryInfo : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpAgent1nTrack : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpEndOfStepCallbackUtil : public hkReferencedObject, public hkpWorldPostSimulationListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Collision;

			interface class NewCollision;
		};

		public interface class hkpCollisionFilterList : public hkpCollisionFilter, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCompressedSampledHeightFieldShape : public hkpSampledHeightFieldShape, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConvexListShape : public hkpConvexShape, public hkpShapeContainer, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConvexPieceStreamData : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpDisplayBindingData : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class RigidBody;

			interface class PhysicsSystem;
		};

		public interface class hkpMeshShape : public hkpShapeCollection, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class MeshShapeIndexStridingType : System::Int32
			{
				INDICES_INVALID = 0,
				INDICES_INT16 = 1,
				INDICES_INT32 = 2,
				INDICES_MAX_ID = 3,
			};

			enum class MeshShapeMaterialIndexStridingType : System::Int32
			{
				MATERIAL_INDICES_INVALID = 0,
				MATERIAL_INDICES_INT8 = 1,
				MATERIAL_INDICES_INT16 = 2,
				MATERIAL_INDICES_MAX_ID = 3,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Subpart : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkpGenericConstraintDataScheme : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class ConstraintInfo : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpHeightFieldAgent : public hkpCollisionAgent, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpLinearParametricCurve : public hkpParametricCurve, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpListShape : public hkpShapeCollection, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class ChildInfo : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			enum class ListShapeFlags : System::Int32
			{
				ALL_FLAGS_CLEAR = 0,
				DISABLE_SPU_CACHE_FOR_LIST_CHILD_INFO = 1,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpMultiRayShape : public hkpShape, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Ray : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpPoweredChainData : public hkpConstraintChainData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class ConstraintInfo : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Runtime : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpRemoveTerminalsMoppModifier : public hkReferencedObject, public hkpMoppModifier, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkBitField : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSerializedDisplayMarkerList : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSerializedDisplayRbTransforms : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class DisplayTransformPair;
		};

		public interface class hkpShapeInfo : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSimpleMeshShape : public hkpShapeCollection, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Triangle : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpStiffSpringChainData : public hkpConstraintChainData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class ConstraintInfo : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Runtime : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpStorageSampledHeightFieldShape : public hkpSampledHeightFieldShape, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpTriSampledHeightFieldCollection : public hkpShapeCollection, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkRemoteObjectProcess : public hkReferencedObject, public hkProcess, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkSimpleLocalFrame : public hkLocalFrame, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkTraceStream : public hkReferencedObject, public hkSingleton<hkTraceStream^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Title : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkTrackerTypeLayout : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Member : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkTrackerSerializableScanSnapshot : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Allocation : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Block : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxAnimatedFloat : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxAnimatedMatrix : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxAnimatedQuaternion : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxAnimatedVector : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxAttributeGroup : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxEdgeSelectionChannel : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxEnum : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Item : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxEnvironment : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Variable : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxIndexBuffer : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class IndexType : System::Int32
			{
				INDEX_TYPE_INVALID = 0,
				INDEX_TYPE_TRI_LIST = 1,
				INDEX_TYPE_TRI_STRIP = 2,
				INDEX_TYPE_TRI_FAN = 3,
				INDEX_TYPE_MAX_ID = 4,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxMaterialEffect : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class EffectType : System::Int32
			{
				EFFECT_TYPE_INVALID = 0,
				EFFECT_TYPE_UNKNOWN = 1,
				EFFECT_TYPE_HLSL_FX_INLINE = 2,
				EFFECT_TYPE_CG_FX_INLINE = 3,
				EFFECT_TYPE_HLSL_FX_FILENAME = 4,
				EFFECT_TYPE_CG_FX_FILENAME = 5,
				EFFECT_TYPE_MAX_ID = 6,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxMaterialShader : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class ShaderType : System::Int32
			{
				EFFECT_TYPE_INVALID = 0,
				EFFECT_TYPE_UNKNOWN = 1,
				EFFECT_TYPE_HLSL_INLINE = 2,
				EFFECT_TYPE_CG_INLINE = 3,
				EFFECT_TYPE_HLSL_FILENAME = 4,
				EFFECT_TYPE_CG_FILENAME = 5,
				EFFECT_TYPE_MAX_ID = 6,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxTextureInplace : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxSparselyAnimatedBool : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxSparselyAnimatedInt : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxSparselyAnimatedString : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxTriangleSelectionChannel : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxVertexDescription : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class DataType : System::Int32
			{
				HKX_DT_NONE = 0,
				HKX_DT_UINT8 = 1,
				HKX_DT_INT16 = 2,
				HKX_DT_UINT32 = 3,
				HKX_DT_FLOAT = 4,
			};

			enum class DataUsage : System::Int32
			{
				HKX_DU_NONE = 0,
				HKX_DU_POSITION = 1,
				HKX_DU_COLOR = 2,
				HKX_DU_NORMAL = 4,
				HKX_DU_TANGENT = 8,
				HKX_DU_BINORMAL = 0x10,
				HKX_DU_TEXCOORD = 0x20,
				HKX_DU_BLENDWEIGHTS = 0x40,
				HKX_DU_BLENDINDICES = 0x80,
				HKX_DU_USERDATA = 0x100,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class ElementDecl : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkxVertexFloatDataChannel : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class VertexFloatDimensions : System::Int32
			{
				FLOAT = 0,
				DISTANCE = 1,
				ANGLE = 2,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxVertexIntDataChannel : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxVertexSelectionChannel : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxVertexVectorDataChannel : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaDefaultChunkCache : public hkaChunkCache, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class slotUnit : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class hashKeyInfo : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class QueryResult : System::Int32
			{
				HK_ALL_SLOTS_LOCKED = 0,
				HK_NO_POOL_AVAILABLE = 1,
				HK_SLOT_AVAILABLE = 2,
			};
		};

		public interface class hkaDefaultChunkCacheCinfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaExpandAnimationUtility : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaPoseMatchingUtility : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class CandidatePoseInfo;
		};

		interface class hkDataClass::Cinfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Member : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDefaultCompoundMeshShape : public hkMeshShape, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MeshSection : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDefaultMeshMaterialRegistry : public hkMeshMaterialRegistry, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Entry : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkGeometry : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Triangle : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkGeometryUtils::Node : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Triangle : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Edge : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkJobQueueHwSetup : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class CellRules : System::Int32
			{
				PPU_CAN_TAKE_SPU_TASKS = 0,
				PPU_CANNOT_TAKE_SPU_TASKS = 1,
			};

			enum class SpuSchedulePolicy : System::Int32
			{
				SEMAPHORE_WAIT_OR_SWITCH_ELF = 0,
				RULE_BASED_QUIT_OR_TIMEOUT = 1,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMeshBoneIndexMapping : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMeshSimplifierConverter : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Group : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMonitorStreamAnalyzer : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Node : public NetScriptFramework::IMemoryObject
			{
			public:
				enum class NodeType : System::Int32
				{
					NODE_TYPE_TIMER = 0,
					NODE_TYPE_DIRECTORY = 1,
					NODE_TYPE_SINGLE = 2,
				};

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class CursorKeys : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class SampleInfo : public NetScriptFramework::IMemoryObject { };

			interface class CombinedThreadSummaryOptions : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class ThreadDrawInput;
		};

		public interface class hkMonitorStreamColorTable : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class ColorPair : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMonitorStreamStringMap : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class StringMap : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMemoryMeshVertexBuffer : public hkMeshVertexBuffer, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConvexPieceMeshBuilder : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class ConvexPiece : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class TriangleInfo : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class BuilderInput;
		};

		public interface class hkpFullManifoldAgent : public hkpCollisionAgent, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class ContactPoint : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkRootLevelContainer : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class NamedVariant : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpPrevailingWind : public hkpWind, public hkpWorldPostSimulationListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Oscillator : public NetScriptFramework::IVirtualObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Triple : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpTyremarksWheel : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpUserConvexRadiusBuilder : public hkReferencedObject, public hkSingleton<hkpUserConvexRadiusBuilder^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class UserShapeBuilder : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpUserShapeDisplayBuilder : public hkReferencedObject, public hkSingleton<hkpUserShapeDisplayBuilder^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class UserShapeBuilder : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpUserShapeHashUtil : public hkReferencedObject, public hkSingleton<hkpUserShapeHashUtil^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class UserShapeHashFunctions : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpVehicleData : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class WheelComponentParams : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpVehicleDefaultBrake : public hkpVehicleBrake, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class WheelBrakingProperties : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpVehicleSuspension : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class SuspensionWheelParameters : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpVehicleLinearCastWheelCollide : public hkpVehicleWheelCollide, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class WheelState;
		};

		public interface class hkQemMutableMesh : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Vertex : public NetScriptFramework::IMemoryObject { };

			interface class Face : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkRelocationInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Local : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Finish : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Import : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Global;
		};

		public interface class hkStressTestCinfo : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class AnEnum : System::Int32
			{
				VAL_INVALID = 0,
				VAL_TEN = 0xA,
				VAL_ELEVEN = 0xB,
				VAL_TWENTY = 0x14,
			};

			interface class SimpleStruct : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class StructWithVirtualFunctions : public NetScriptFramework::IVirtualObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class AllPodsStruct : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class StructWithVtable : public hkStressTestCinfo::StructWithVirtualFunctions, public NetScriptFramework::IVirtualObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class StructWithArrays : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkStringOld : public hkString, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkVertexRealConverter : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class SrcType : System::Int32
			{
				SRC_TYPE_UNKNOWN = 0,
				SRC_TYPE_FLOAT32_POSITION = 1,
				SRC_TYPE_FLOAT32_GENERAL = 2,
				SRC_TYPE_ARGB32 = 3,
			};

			enum class DstType : System::Int32
			{
				DST_TYPE_UNKNOWN = 0,
				DST_TYPE_FLOAT32_POSITION = 1,
				DST_TYPE_FLOAT32_NORMAL = 2,
				DST_TYPE_FLOAT32_GENERAL = 3,
				DST_TYPE_FLOAT32_CLAMP1 = 4,
				DST_TYPE_FLOAT32_CLAMP2 = 5,
				DST_TYPE_FLOAT32_CLAMP3 = 6,
				DST_TYPE_FLOAT32_CLAMP4 = 7,
				DST_TYPE_ARGB32 = 8,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Entry : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkVirtualFramebufferServerClient : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class RuntimeOptions : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkXmlParser : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Attribute : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			enum class NodeType : System::Int32
			{
				INVALID = 0,
				START_ELEMENT = 1,
				END_ELEMENT = 2,
				CHARACTERS = 3,
				MAX_ID = 4,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Node : public hkReferencedObject, public NetScriptFramework::IVirtualObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Characters : public hkXmlParser::Node, public NetScriptFramework::IVirtualObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class EndElement : public hkXmlParser::Node, public NetScriptFramework::IVirtualObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class StartElement : public hkXmlParser::Node, public NetScriptFramework::IVirtualObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkArrayBitStreamReader : public hkBitStreamReader, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkArrayBitStreamWriter : public hkBitStreamWriter, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkaTrackAnalysis::PerFloatTrackAnalysisInput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkaTrackAnalysis::PerTransformTrackAnalysisInput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkCpuJobThreadPoolCinfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkDataObjectToNative::CopyInfoOut : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkKdTree : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkFindUniqueIndicesUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkIndexSet : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkLinearVertexCalculator : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMatrixNm : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMemoryMeshMaterial : public hkMeshMaterial, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMemoryMeshShape : public hkMeshShape, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMemoryMeshTexture : public hkMeshTexture, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMeshSectionBuilder : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMeshSectionLockSet : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkNetworkedDeterminismUtil::Server : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkNetworkedDeterminismUtil::Command : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class Type : System::Int32
			{
				TYPE_CONTROL = 0,
				TYPE_DETERMINISM_DATA = 1,
			};
		};

		public interface class hkOstreamLogger : public hkLogger, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpCreateShapeUtility::CreateShapeInput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpShapeContinueData : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpUserShapePhantomTypeIdentifier : public hkReferencedObject, public hkSingleton<hkpUserShapePhantomTypeIdentifier^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpVehicleDefaultSteering : public hkpVehicleSteering, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpVehicleDefaultTransmission : public hkpVehicleTransmission, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkQemPairContraction : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkStringDictionary : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkVdbCommandWriter : public hkStreamWriter, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpTreeWorldManager : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class Type : System::Int32
			{
				MANAGER_KDTREE = 0,
				MANAGER_AABBTREE = 1,
			};

			enum class ObjectRemovedBehavior : System::Int32
			{
				MARK_TREE_AS_DIRTY = 0,
				REMOVE_OBJECT_FROM_TREE = 1,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class anonymous_namespace::hkpCompressedMeshShapeShared : public hkpCompressedMeshShape, public NetScriptFramework::IVirtualObject { };

		interface class BShkbHkxDB::DBData : public hkLoader, public NetScriptFramework::IVirtualObject { };

		public interface class hkaAnimation : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class AnimationType : System::Int32
			{
				HK_UNKNOWN_ANIMATION = 0,
				HK_INTERLEAVED_ANIMATION = 1,
				HK_DELTA_COMPRESSED_ANIMATION = 2,
				HK_WAVELET_COMPRESSED_ANIMATION = 3,
				HK_MIRRORED_ANIMATION = 4,
				HK_SPLINE_COMPRESSED_ANIMATION = 5,
				HK_QUANTIZED_COMPRESSED_ANIMATION = 6,
			};

			interface class DataChunk : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class TrackAnnotation : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		interface class hkaFootPlacementIkSolver::Setup : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaFootstepAnalysisInfoContainer : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaMirroredSkeleton : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaSkeletonMapperData : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class SimpleMapping : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class ChainMapping : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			enum class MappingType : System::Int32
			{
				HK_RAGDOLL_MAPPING = 0,
				HK_RETARGETING_MAPPING = 1,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConvexVerticesShape : public hkpConvexShape, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class FourVectors : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class BuildConfig : public NetScriptFramework::IMemoryObject { };

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMemoryResourceContainer : public hkResourceContainer, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMemoryTrackStreamReader : public hkStreamReader, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class MemoryType : System::Int32
			{
				MEMORY_COPY = 0,
				MEMORY_TAKE = 1,
				MEMORY_INPLACE = 2,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMemoryTrackStreamWriter : public hkStreamWriter, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class TrackOwnership : System::Int32
			{
				TRACK_TAKE = 0,
				TRACK_BORROW = 1,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMoppBvTreeShapeBase : public hkpBvTreeShape, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpFastMeshShape : public hkpMeshShape, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpGenericConstraintData : public hkpConstraintData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpMoppAgent : public hkpBvTreeAgent, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpRemoveTerminalsMoppModifier2 : public hkpRemoveTerminalsMoppModifier, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpStorageMeshShape : public hkpMeshShape, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class SubpartStorage : public hkReferencedObject, public NetScriptFramework::IVirtualObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxAttributeHolder : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxMaterialShaderSet : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxVertexBuffer : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class VertexData : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkXmlLexAnalyzer : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class Token : System::Int32
			{
				TOKEN_START_BLOCK = 0,
				TOKEN_START_QBLOCK = 1,
				TOKEN_TEXT = 2,
				TOKEN_WHITESPACE = 3,
				TOKEN_COMMENT = 4,
				TOKEN_EOF = 5,
				TOKEN_END_BLOCK = 6,
				TOKEN_END_QBLOCK = 7,
				TOKEN_IDENTIFIER = 8,
				TOKEN_EQUALS = 9,
				TOKEN_QUOTED_STRING = 0xA,
				TOKEN_SLASH = 0xB,
				TOKEN_ERROR = 0xC,
				TOKEN_COUNT_OF = 0xD,
			};
		};

		public interface class hkxSparselyAnimatedEnum : public hkxSparselyAnimatedInt, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaPose : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class PoseSpace : System::Int32
			{
				MODEL_SPACE = 0,
				LOCAL_SPACE = 1,
			};

			enum class PropagateOrNot : System::Int32
			{
				DONT_PROPAGATE = 0,
				PROPAGATE = 1,
			};
		};

		public interface class hkDisplayGeometry : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMultipleVertexBuffer : public hkMeshVertexBuffer, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class LockedElement : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };
			};

			interface class ElementInfo : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class VertexBufferInfo : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCompressedMeshShapeBuilder : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Statistics : public NetScriptFramework::IMemoryObject { };

			interface class TriangleMapping : public NetScriptFramework::IMemoryObject { };

			interface class Subpart : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class MappingTree : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkpAgentNnEntry : public hkpAgentEntry, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpVehicleDefaultSuspension : public hkpVehicleSuspension, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class WheelSpringSuspensionParameters : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpTyremarksInfo : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkQemMeshSimplifier : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Parameters : public NetScriptFramework::IMemoryObject { };

			interface class HeapEntry : public NetScriptFramework::IMemoryObject { };

			enum class SimplificationStatus : System::Int32
			{
				STATUS_INVALID = 0,
				STATUS_SETUP = 1,
				STATUS_PROCESSING = 2,
				STATUS_DONE = 3,
			};

			interface class Contraction : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkxSceneDataToGeometryConverter::GeometryInstances : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Instance : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkIndexedTransformSet : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkIndexedTransformSetCinfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkJobQueueCinfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkMonitorStreamAnalyzer::ThreadDrawInput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkNetworkedDeterminismUtil::ControlCommand : public hkNetworkedDeterminismUtil::Command, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkNetworkedDeterminismUtil::DeterminismDataCommand : public hkNetworkedDeterminismUtil::Command, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConvexPieceMeshShape : public hkpShapeCollection, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Stats : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkpDefaultShapeCollectionMaterialMediator : public hkpShapeCollectionMaterialMediator, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpMidphaseAgentData : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkQuadricMetric : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkVirtualFramebufferServer : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkXmlObjectReader : public hkObjectReader, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class BShkbHkxDB::ProjectDBData : public BShkbHkxDB::DBData, public NetScriptFramework::IVirtualObject { };

		public interface class hkaAnimationBinding : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class BlendHint : System::Int32
			{
				NORMAL = 0,
				ADDITIVE = 1,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaSkeletonMapper : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class ConstraintSource : System::Int32
			{
				NO_CONSTRAINTS = 0,
				REFERENCE_POSE = 1,
				CURRENT_POSE = 2,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaInterleavedUncompressedAnimation : public hkaAnimation, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaQuantizedAnimation : public hkaAnimation, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class TrackCompressionParams : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class QuantizedAnimationHeader : public NetScriptFramework::IMemoryObject { };

			interface class PerTrackCompressionParams : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkaSplineCompressedAnimation : public hkaAnimation, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class TrackCompressionParams : public NetScriptFramework::IMemoryObject
			{
			public:
				enum class RotationQuantization : System::Int32
				{
					POLAR32 = 0,
					THREECOMP40 = 1,
					THREECOMP48 = 2,
					THREECOMP24 = 3,
					STRAIGHT16 = 4,
					UNCOMPRESSED = 5,
				};

				enum class ScalarQuantization : System::Int32
				{
					BITS8 = 0,
					BITS16 = 1,
				};

				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class AnimationCompressionParams : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class PerTrackCompressionParams : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkCharControllerShape : public hkpConvexVerticesShape, public NetScriptFramework::IVirtualObject { };

		public interface class hkpMoppBvTreeShape : public hkMoppBvTreeShapeBase, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxMaterial : public hkxAttributeHolder, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Property : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			enum class TextureType : System::Int32
			{
				TEX_UNKNOWN = 0,
				TEX_DIFFUSE = 1,
				TEX_REFLECTION = 2,
				TEX_BUMP = 3,
				TEX_NORMAL = 4,
				TEX_DISPLACEMENT = 5,
				TEX_SPECULAR = 6,
				TEX_SPECULARANDGLOSS = 7,
				TEX_OPACITY = 8,
				TEX_EMISSIVE = 9,
				TEX_REFRACTION = 0xA,
				TEX_GLOSS = 0xB,
				TEX_NOTEXPORTED = 0xC,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class PropertyKey : System::Int32
			{
				PROPERTY_MTL_TYPE_BLEND = 1,
				PROPERTY_MTL_UV_ID_STAGE0 = 0x100,
				PROPERTY_MTL_UV_ID_STAGE1 = 0x101,
				PROPERTY_MTL_UV_ID_STAGE2 = 0x102,
				PROPERTY_MTL_UV_ID_STAGE3 = 0x103,
				PROPERTY_MTL_UV_ID_STAGE4 = 0x104,
				PROPERTY_MTL_UV_ID_STAGE5 = 0x105,
				PROPERTY_MTL_UV_ID_STAGE6 = 0x106,
				PROPERTY_MTL_UV_ID_STAGE7 = 0x107,
				PROPERTY_MTL_UV_ID_STAGE8 = 0x108,
				PROPERTY_MTL_UV_ID_STAGE9 = 0x109,
				PROPERTY_MTL_UV_ID_STAGE10 = 0x10A,
				PROPERTY_MTL_UV_ID_STAGE11 = 0x10B,
				PROPERTY_MTL_UV_ID_STAGE12 = 0x10C,
				PROPERTY_MTL_UV_ID_STAGE13 = 0x10D,
				PROPERTY_MTL_UV_ID_STAGE14 = 0x10E,
				PROPERTY_MTL_UV_ID_STAGE15 = 0x10F,
				PROPERTY_MTL_UV_ID_STAGE_MAX = 0x110,
			};

			interface class TextureStage : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkXmlStreamParser : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class SubString : public NetScriptFramework::IMemoryObject { };

			enum class Token : System::Int32
			{
				TOKEN_QBLOCK = 0,
				TOKEN_BLOCK_START = 1,
				TOKEN_BLOCK_START_END = 2,
				TOKEN_BLOCK_END = 3,
				TOKEN_TEXT = 4,
				TOKEN_WHITESPACE = 5,
				TOKEN_ERROR = 6,
				TOKEN_EOF = 7,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxNode : public hkxAttributeHolder, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class AnnotationData : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkaAnimationSampleOnlyJob::AnimationData : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaDeltaCompressedAnimation : public hkaAnimation, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class QuantizationFormat : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class CompressionParams : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class PerTrackCompressionParams : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkaQuantizedAnimationBuilder : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DynamicRotation : public NetScriptFramework::IMemoryObject { };

			interface class Range : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class StaticRotation : public NetScriptFramework::IMemoryObject { };

			interface class StaticScalar : public NetScriptFramework::IMemoryObject { };

			interface class DynamicScalar : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaWaveletCompressedAnimation : public hkaAnimation, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class QuantizationFormat : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class CompressionParams : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class PerTrackCompressionParams : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkDisplayAABB : public hkDisplayGeometry, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDisplayBox : public hkDisplayGeometry, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConvexRadiusBuilder : public hkDisplayGeometryBuilder, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class hkpConvexRadiusBuilderEnvironment : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpLinkedCollidable::CollisionEntry : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpShapeDisplayBuilder : public hkDisplayGeometryBuilder, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class hkpShapeDisplayBuilderEnvironment : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkaSkeletonMapperUtils::Params : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDefaultCompoundMeshBody : public hkMeshBody, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDisplayCapsule : public hkDisplayGeometry, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDisplayCone : public hkDisplayGeometry, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDisplayConvex : public hkDisplayGeometry, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDisplayCylinder : public hkDisplayGeometry, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDisplayMesh : public hkDisplayGeometry, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDisplayPlane : public hkDisplayGeometry, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDisplaySemiCircle : public hkDisplayGeometry, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDisplaySphere : public hkDisplayGeometry, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDisplayTaperedCapsule : public hkDisplayGeometry, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMemoryMeshBody : public hkMeshBody, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpAgentNnMachinePaddedEntry : public hkpAgentNnEntry, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpAgentNnMachineTimEntry : public hkpAgentNnEntry, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConstraintConstructionKit : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaAnimationControl : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaDefaultAnimationControlMapperData : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkScaledMoppBvTreeShape : public hkpMoppBvTreeShape, public NetScriptFramework::IVirtualObject { };

		public interface class hkxMeshSection : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxNodeSelectionSet : public hkxAttributeHolder, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaAnimationMapPoseJob : public hkaAnimationMappingJob, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaMirroredAnimation : public hkaAnimation, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkaPoseMatchingUtility::CandidatePoseInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkxSceneUtils::GraphicsNode : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCogWheelDrawer : public hkpConstraintDrawer, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpHingeLimitsDrawer : public hkpConstraintDrawer, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpLimitedHingeDrawer : public hkpConstraintDrawer, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpRackAndPinionDrawer : public hkpConstraintDrawer, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpRagdollDrawer : public hkpConstraintDrawer, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpRagdollLimitsDrawer : public hkpConstraintDrawer, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaDefaultAnimationControl : public hkaAnimationControl, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class EaseStatus : System::Int32
			{
				EASING_IN = 0,
				EASED_IN = 1,
				EASING_OUT = 2,
				EASED_OUT = 3,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxMesh : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class UserChannelInfo : public hkxAttributeHolder, public NetScriptFramework::IVirtualObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaAnimatedSkeleton : public hkReferencedObject, public hkaAnimationControlListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class BoneAnnotation : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaMeshBinding : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Mapping : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxSkinBinding : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaAnimationSampleAndCombineJob : public hkaAnimationSampleAndCombineJobBase, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class ControlData : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaAnimationContainer : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxScene : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class Actor;

		public interface class ActionActivateDoneHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class ActorMover : public NetScriptFramework::IVirtualObject
		{
		public:
			property Actor^ Owner
			{
				Actor^ __clrcall get();
			}
		};

		public interface class AddRagdollHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class AllowRotationHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class AnimatedCameraDeltaStartHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class AnimatedCameraEndHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class AnimatedCameraStartHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class AnimationDrivenHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class AnimationObjectDrawHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class AnimationObjectLoadHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::ArmorRatingVisitorBase : public InventoryChanges::IItemChangeVisitor, public NetScriptFramework::IVirtualObject
		{
		public:
			property Actor^ Owner
			{
				Actor^ __clrcall get();
			}

			property System::Single ArmorPerks
			{
				System::Single __clrcall get();
			}

			property System::Single LightArmorRating
			{
				System::Single __clrcall get();
			}

			property System::Single HeavyArmorRating
			{
				System::Single __clrcall get();
			}
		};

		public interface class AnticipateAttackHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class ArrowAttachHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class ArrowDetachHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class ArrowReleaseHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class AttackStopHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class AttackWinEndHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class AttackWinStartHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class BedEnterHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class BedFurnitureExitHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class BowDrawnHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class BowReleaseHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class BowZoomStartHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class BowZoomStopHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class CameraOverrideStartHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class CameraOverrideStopHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class CameraShakeHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class ChairEnterHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class ChairFurnitureExitHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class DeathEmoteHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class DeathStopHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class DecapitateHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class DisableCharacterBumperHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class DisableCharacterPitchHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class EnableCharacterBumperHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class EnableCharacterPitchHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class EndSummonAnimationHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class ExitCartBeginHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class ExitCartEndHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class FlightActionEndHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class FlightActionEntryEndHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class FlightActionGrabHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class FlightActionHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class FlightActionReleaseHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class FlightCrashLandStartHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class FlightCruisingHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class FlightHoveringHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class FlightLandEndHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class FlightLandHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class FlightLandingHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class FlightPerchingHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class FlightTakeOffHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class GetUpEndHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class GetUpStartHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class HeadTrackingOffHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class HeadTrackingOnHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class HitFrameHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class IdleDialogueEnterHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class IdleDialogueExitHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class InterruptCastHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class JumpAnimEventHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class KillActorHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class KillMoveEndHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class KillMoveStartHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class LeftHandSpellCastHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class LeftHandSpellFireHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class MotionDrivenHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class MountDismountEndHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class MTStateHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class NPCAttachHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class NPCDetachHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class PairedStopHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class PickNewIdleHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class PitchOverrideEndHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class PitchOverrideStartHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class PlayerFurnitureExitHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class RagdollStartHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class RecoilStopHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class RemoveRagdollHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class RightHandSpellCastHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class RightHandSpellFireHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class RightHandWeaponDrawHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class RightHandWeaponSheatheHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class StaggeredStopHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class StopMountCameraHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class ZeroPitchHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class VampireFeedEndHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class WeaponBeginDrawRightHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class WeaponBeginSheatheRightHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class WeaponLeftSwingHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class WeaponRightSwingHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class VoiceSpellCastHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class VoiceSpellFireHandler : public IHandlerFunctor<Actor^, BSFixedStringCI^>, public NetScriptFramework::IVirtualObject { };

		public interface class PlayerBedEnterHandler : public BedEnterHandler, public NetScriptFramework::IVirtualObject { };

		public interface class PlayerChairEnterHandler : public ChairEnterHandler, public NetScriptFramework::IVirtualObject { };

		generic <typename NiPointer_T1>
		interface class NiPointer;

		public interface class ActorKnowledge : public NiRefObject, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::UInt32 OwnerRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 TargetRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property FactionReactions FactionFightReaction
			{
				FactionReactions __clrcall get();
			}

			property AITimeStamp^ ShouldAttackTargetTimeStamp
			{
				AITimeStamp^ __clrcall get();
			}

			property NiPointer<DetectionState^>^ DetectionStateInfo
			{
				NiPointer<DetectionState^>^ __clrcall get();
			}

			property BSTArray<NiPointer<DetectionListener^>^, BSTArrayHeapAllocator^>^ Listeners
			{
				BSTArray<NiPointer<DetectionListener^>^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property System::UInt32 Flags
			{
				System::UInt32 __clrcall get();
			}

			property AITimeStamp^ DetectionQueuedTimeStamp
			{
				AITimeStamp^ __clrcall get();
			}
		};

		interface class BGSDestructibleObjectForm::DestructibleObjectData : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Int32 Health
			{
				System::Int32 __clrcall get();
			}

			property System::SByte NumStages
			{
				System::SByte __clrcall get();
			}

			property BGSDestructibleObjectForm::DestructibleObjectDataFlags Flags
			{
				BGSDestructibleObjectForm::DestructibleObjectDataFlags __clrcall get();
			}

			property System::IntPtr Stages
			{
				System::IntPtr __clrcall get();
			}

			property System::Int32 ReplacementModelRefCount
			{
				System::Int32 __clrcall get();
			}

			property NiPointer<QueuedFile^>^ PreloadedReplacementModels
			{
				NiPointer<QueuedFile^>^ __clrcall get();
			}
		};

		public interface class BSLensFlareRenderData : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Single FadeDistRadiusScale
			{
				System::Single __clrcall get();
			}

			property System::Single ColorInfluence
			{
				System::Single __clrcall get();
			}

			property BSTArray<NiPointer<BSLensFlareSpriteRenderData^>^, BSTArrayHeapAllocator^>^ Sprites
			{
				BSTArray<NiPointer<BSLensFlareSpriteRenderData^>^, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		public interface class BSLightingShaderMaterialBase : public BSShaderMaterial, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiColor^ SpecularColor
			{
				NiColor^ __clrcall get();
			}

			property NiPointer<NiSourceTexture^>^ DiffuseTexture
			{
				NiPointer<NiSourceTexture^>^ __clrcall get();
			}

			property System::Int32 DiffuseRenderTargetSourceIndex
			{
				System::Int32 __clrcall get();
			}

			property NiPointer<NiSourceTexture^>^ NormalTexture
			{
				NiPointer<NiSourceTexture^>^ __clrcall get();
			}

			property NiPointer<NiSourceTexture^>^ RimSoftLightingTexture
			{
				NiPointer<NiSourceTexture^>^ __clrcall get();
			}

			property NiPointer<NiSourceTexture^>^ SpecularBackLightingTexture
			{
				NiPointer<NiSourceTexture^>^ __clrcall get();
			}

			property System::Int32 TextureClampMode
			{
				System::Int32 __clrcall get();
			}

			property NiPointer<BSTextureSet^>^ TextureSet
			{
				NiPointer<BSTextureSet^>^ __clrcall get();
			}

			property System::Single MaterialAlpha
			{
				System::Single __clrcall get();
			}

			property System::Single RefractionPower
			{
				System::Single __clrcall get();
			}

			property System::Single SpecularPower
			{
				System::Single __clrcall get();
			}

			property System::Single SpecularColorScale
			{
				System::Single __clrcall get();
			}

			property System::Single SubSurfaceLightRolloff
			{
				System::Single __clrcall get();
			}

			property System::Single RimLightPower
			{
				System::Single __clrcall get();
			}
		};

		public interface class NiFloatInterpolator : public NiKeyBasedInterpolator, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Single FloatValue
			{
				System::Single __clrcall get();
			}

			property NiPointer<NiFloatData^>^ FloatData
			{
				NiPointer<NiFloatData^>^ __clrcall get();
			}

			property System::Int32 LastIndex
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class NiColorInterpolator : public NiKeyBasedInterpolator, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiColorA^ ColorValue
			{
				NiColorA^ __clrcall get();
			}

			property NiPointer<NiColorData^>^ ColorData
			{
				NiPointer<NiColorData^>^ __clrcall get();
			}

			property System::Int32 LastIndex
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class ExtraHavok : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPointer<bhkWorld^>^ World
			{
				NiPointer<bhkWorld^>^ __clrcall get();
			}
		};

		public interface class ExtraMultiBound : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPointer<BSMultiBound^>^ Bound
			{
				NiPointer<BSMultiBound^>^ __clrcall get();
			}
		};

		public interface class ExtraOcclusionShape : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPointer<BSOcclusionShape^>^ Shape
			{
				NiPointer<BSOcclusionShape^>^ __clrcall get();
			}
		};

		public interface class ExtraPortal : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPointer<BSPortal^>^ Portal
			{
				NiPointer<BSPortal^>^ __clrcall get();
			}
		};

		public interface class ExtraRaceData : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPointer<QueuedFile^>^ PreloadedRaceData
			{
				NiPointer<QueuedFile^>^ __clrcall get();
			}
		};

		public interface class BSLightingShaderMaterial : public BSLightingShaderMaterialBase, public NetScriptFramework::IVirtualObject { };

		public interface class BSLightingShaderMaterialEnvmap : public BSLightingShaderMaterialBase, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPointer<NiSourceTexture^>^ EnvTexture
			{
				NiPointer<NiSourceTexture^>^ __clrcall get();
			}

			property NiPointer<NiSourceTexture^>^ EnvMaskTexture
			{
				NiPointer<NiSourceTexture^>^ __clrcall get();
			}

			property System::Single EnvMapScale
			{
				System::Single __clrcall get();
			}
		};

		public interface class BSLightingShaderMaterialFacegen : public BSLightingShaderMaterialBase, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPointer<NiSourceTexture^>^ TintTexture
			{
				NiPointer<NiSourceTexture^>^ __clrcall get();
			}

			property NiPointer<NiSourceTexture^>^ DetailTexture
			{
				NiPointer<NiSourceTexture^>^ __clrcall get();
			}

			property NiPointer<NiSourceTexture^>^ SubsurfaceTexture
			{
				NiPointer<NiSourceTexture^>^ __clrcall get();
			}
		};

		public interface class BSLightingShaderMaterialFacegenTint : public BSLightingShaderMaterialBase, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiColor^ TintColor
			{
				NiColor^ __clrcall get();
			}
		};

		public interface class BSLightingShaderMaterialGlowmap : public BSLightingShaderMaterialBase, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPointer<NiSourceTexture^>^ GlowTexture
			{
				NiPointer<NiSourceTexture^>^ __clrcall get();
			}
		};

		public interface class BSLightingShaderMaterialHairTint : public BSLightingShaderMaterialBase, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiColor^ TintColor
			{
				NiColor^ __clrcall get();
			}
		};

		public interface class BSLightingShaderMaterialLandscape : public BSLightingShaderMaterialBase, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Int32 NumLandscapeTextures
			{
				System::Int32 __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<NiPointer<NiSourceTexture^>^>^ LandscapeDiffuseTexture
			{
				NetScriptFramework::FixedMemoryArray<NiPointer<NiSourceTexture^>^>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<NiPointer<NiSourceTexture^>^>^ LandscapeNormalTexture
			{
				NetScriptFramework::FixedMemoryArray<NiPointer<NiSourceTexture^>^>^ __clrcall get();
			}

			property NiPointer<NiSourceTexture^>^ TerrainOverlayTexture
			{
				NiPointer<NiSourceTexture^>^ __clrcall get();
			}

			property NiPointer<NiSourceTexture^>^ TerrainNoiseTexture
			{
				NiPointer<NiSourceTexture^>^ __clrcall get();
			}

			property NiColorA^ LandBlendParams
			{
				NiColorA^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<System::Single>^ TextureIsSnow
			{
				NetScriptFramework::FixedMemoryArray<System::Single>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<System::Single>^ TextureIsSpecPower
			{
				NetScriptFramework::FixedMemoryArray<System::Single>^ __clrcall get();
			}

			property System::Single TerrainTexOffsetX
			{
				System::Single __clrcall get();
			}

			property System::Single TerrainTexOffsetY
			{
				System::Single __clrcall get();
			}

			property System::Single TerrainTexFade
			{
				System::Single __clrcall get();
			}
		};

		public interface class BSLightingShaderMaterialLODLandscape : public BSLightingShaderMaterialBase, public NetScriptFramework::IVirtualObject { };

		public interface class BSLightingShaderMaterialMultiLayerParallax : public BSLightingShaderMaterialBase, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPointer<NiSourceTexture^>^ LayerTexture
			{
				NiPointer<NiSourceTexture^>^ __clrcall get();
			}

			property NiPointer<NiSourceTexture^>^ EnvTexture
			{
				NiPointer<NiSourceTexture^>^ __clrcall get();
			}

			property NiPointer<NiSourceTexture^>^ EnvMaskTexture
			{
				NiPointer<NiSourceTexture^>^ __clrcall get();
			}

			property System::Single ParallaxLayerThickness
			{
				System::Single __clrcall get();
			}

			property System::Single ParallaxRefractionScale
			{
				System::Single __clrcall get();
			}

			property System::Single ParallaxInnerLayerUScale
			{
				System::Single __clrcall get();
			}

			property System::Single ParallaxInnerLayerVScale
			{
				System::Single __clrcall get();
			}

			property System::Single EnvmapScale
			{
				System::Single __clrcall get();
			}
		};

		public interface class BSLightingShaderMaterialParallax : public BSLightingShaderMaterialBase, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPointer<NiSourceTexture^>^ HeightTexture
			{
				NiPointer<NiSourceTexture^>^ __clrcall get();
			}
		};

		public interface class BSLightingShaderMaterialParallaxOcc : public BSLightingShaderMaterialBase, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPointer<NiSourceTexture^>^ HeightTexture
			{
				NiPointer<NiSourceTexture^>^ __clrcall get();
			}

			property System::Single ParallaxOccMaxPasses
			{
				System::Single __clrcall get();
			}

			property System::Single ParallaxOccScale
			{
				System::Single __clrcall get();
			}
		};

		public interface class BSLightingShaderMaterialSnow : public BSLightingShaderMaterialBase, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiColorA^ SparkleParams
			{
				NiColorA^ __clrcall get();
			}
		};

		interface class hkpRigidBody;

		public interface class hkpTriggerVolume : public hkReferencedObject, public hkpContactListener, public hkpWorldPostSimulationListener, public hkpEntityListener, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class Operation : System::Int32
			{
				ADDED_OP = 0,
				REMOVED_OP = 1,
				CONTACT_OP = 2,
				TOI_OP = 3,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			enum class EventType : System::Int32
			{
				ENTERED_EVENT = 1,
				LEFT_EVENT = 2,
				ENTERED_AND_LEFT_EVENT = 3,
				TRIGGER_BODY_LEFT_EVENT = 6,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class EventInfo : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkpCharacterRigidBody : public hkReferencedObject, public hkpEntityListener, public hkpWorldPostSimulationListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class SupportInfo : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class CollectorPair : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class VertPointInfo;
		};

		interface class hkpDisplayBindingData::RigidBody : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpGravityGun : public hkpFirstPersonGun, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpSerializedDisplayRbTransforms::DisplayTransformPair : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkaKeyFrameHierarchyUtility::BodyData : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCenterOfMassChangerUtil : public hkReferencedObject, public hkpContactListener, public hkpEntityListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCharacterObjectInteractionEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCharacterProxyInteractionResults : public hkpCharacterObjectInteractionResult, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCollisionMassChangerUtil : public hkReferencedObject, public hkpContactListener, public hkpEntityListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSurfaceVelocityUtil : public hkReferencedObject, public hkpContactListener, public hkpEntityListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpFirstPersonGun::SweepSphereOut : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpImpulseAccumulator : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpVehicleJobResults : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSoftContactUtil : public hkReferencedObject, public hkpContactListener, public hkpEntityListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpVehicleWheelCollide::CollisionDetectionWheelOutput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::ApplyRigidBodyAngularImpulse : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::ApplyRigidBodyLinearImpulse : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::ApplyRigidBodyPointImpulse : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::SetRigidBodyAngularVelocity : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::SetRigidBodyLinearVelocity : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::SetRigidBodyPositionAndRotation : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class ahkpCharacterRigidBody : public hkpCharacterRigidBody, public NetScriptFramework::IVirtualObject { };

		public interface class hkpFilteredSurfaceVelocityUtil : public hkpSurfaceVelocityUtil, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpVehicleCommand : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class NiPoint3;

		public interface class ActorCause : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::UInt32 ActorRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property NiPoint3^ Origin
			{
				NiPoint3^ __clrcall get();
			}

			property System::UInt32 ActorCauseID
			{
				System::UInt32 __clrcall get();
			}

			property System::Int32 RefCount
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class NiBound : public NetScriptFramework::IMemoryObject
		{
		public:
			property NiPoint3^ Center
			{
				NiPoint3^ __clrcall get();
			}

			property System::Single Radius
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}
		};

		public interface class bhkRigidBody : public bhkEntity, public NetScriptFramework::IVirtualObject
		{
		public:
			/// <summary>
			/// Activate the havok object.
			/// </summary>
			void Activate();

			/// <summary>
			/// Deactivate the havok object.
			/// </summary>
			void Deactivate();

			/// <param name="amount">The amount to apply on each axis.</param>
			void ApplyLinearImpulse(NiPoint3^ amount);
		};

		public interface class NiMatrix33 : public NetScriptFramework::IMemoryObject
		{
		public:
			/// <summary>
			/// Gets the data for matrix.
			/// </summary>
			property NetScriptFramework::FixedMemoryArray<System::Single>^ Data
			{
				NetScriptFramework::FixedMemoryArray<System::Single>^ __clrcall get();
			}

			/// <summary>
			/// Gets or sets the value at specified index.
			/// </summary>
			property float default[System::Int32, System::Int32]
			{
				float get(System::Int32 i, System::Int32 j);
				void set(System::Int32 i, System::Int32 j, float value);
			}

			/// <summary>
			/// Gets the axis angle representation of the rotation matrix.
			/// </summary>
			/// <param name="resultAxis">The result axis will be set here.</param>
			/// <param name="angle">The result angle will be set here (in radians).</param>
			void GetAxisAngle(NiPoint3^ resultAxis, System::Single% angle);

			/// <summary>
			/// Gets the euler angles from rotation matrix (as radian).
			/// </summary>
			/// <param name="result">The resulting angles will be set here (as radian).</param>
			void GetEulerAngles(NiPoint3^ result);

			/// <summary>
			/// Gets the rotation matrix from axis angle representation.
			/// </summary>
			/// <param name="axis">The axis.</param>
			/// <param name="angle">The angle (in radians).</param>
			void GetFromAxisAngle(NiPoint3^ axis, System::Single angle);

			/// <summary>
			/// Set the matrix to default.
			/// </summary>
			/// <param name="scale">The scale to set. Set 1 for normal.</param>
			void Identity(System::Single scale);

			/// <summary>
			/// Interpolate between two rotation matrices.
			/// </summary>
			/// <param name="other">The other rotation matrix.</param>
			/// <param name="ratio">The ratio of interpolation where 0 is current matrix and 1 is the other matrix.</param>
			/// <param name="result">The result will be set here. It is allowed for result to be "this".</param>
			void Interpolate(NiMatrix33^ other, System::Single ratio, NiMatrix33^ result);

			/// <summary>
			/// Calculate inverse of this matrix.
			/// </summary>
			/// <param name="result">The result is set here. It is allowed for result to be "this".</param>
			void Inverse(NiMatrix33^ result);

			/// <summary>
			/// Multiply two matrices.
			/// </summary>
			/// <param name="other">The other matrix to multiply with.</param>
			/// <param name="result">The result will be set here. It is allowed for result to be "this" or "other" as well.</param>
			void Multiply(NiMatrix33^ other, NiMatrix33^ result);

			/// <summary>
			/// Rotates the matrix round Z axis.
			/// </summary>
			/// <param name="rad">Amount to rotate by.</param>
			/// <param name="result">The result is set here. It is allowed for result to be "this".</param>
			void RotateZ(System::Single rad, NiMatrix33^ result);

			/// <summary>
			/// Rotates the matrix around X axis.
			/// </summary>
			/// <param name="rad">Amount to rotate by.</param>
			/// <param name="result">The result is set here. It is allowed for result to be "this".</param>
			void RotateX(System::Single rad, NiMatrix33^ result);

			/// <summary>
			/// Rotates the matrix around Y axis.
			/// </summary>
			/// <param name="rad">Amount to rotate by.</param>
			/// <param name="result">The result is set here. It is allowed for result to be "this".</param>
			void RotateY(System::Single rad, NiMatrix33^ result);

			/// <summary>
			/// Transpose the matrix.
			/// </summary>
			/// <param name="result">The result will be set here. It is allowed for result to be "this".</param>
			void Transpose(NiMatrix33^ result);
		};

		public interface class BSBound : public NiExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPoint3^ Center
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ Extents
			{
				NiPoint3^ __clrcall get();
			}
		};

		public interface class BSLightingShaderMaterialEye : public BSLightingShaderMaterialBase, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPointer<NiSourceTexture^>^ EnvTexture
			{
				NiPointer<NiSourceTexture^>^ __clrcall get();
			}

			property NiPointer<NiSourceTexture^>^ EnvMaskTexture
			{
				NiPointer<NiSourceTexture^>^ __clrcall get();
			}

			property System::Single EnvMapScale
			{
				System::Single __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<NiPoint3^>^ EyeCenter
			{
				NetScriptFramework::FixedMemoryArray<NiPoint3^>^ __clrcall get();
			}
		};

		public interface class BSMultiBoundAABB : public BSMultiBoundShape, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPoint3^ Position
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ Size
			{
				NiPoint3^ __clrcall get();
			}
		};

		public interface class BSNavmeshVertex : public NetScriptFramework::IMemoryObject
		{
		public:
			property NiPoint3^ Location
			{
				NiPoint3^ __clrcall get();
			}
		};

		public interface class BSNavmeshGrid : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Int32 GridSize
			{
				System::Int32 __clrcall get();
			}

			property System::Single ColumnSectionLen
			{
				System::Single __clrcall get();
			}

			property System::Single RowSectionLen
			{
				System::Single __clrcall get();
			}

			property NiPoint3^ GridBoundsMin
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ GridBoundsMax
			{
				NiPoint3^ __clrcall get();
			}

			property unknown^ GridData
			{
				unknown^ __clrcall get();
			}
		};

		public interface class ExtraDistantData : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPoint3^ LandNormal
			{
				NiPoint3^ __clrcall get();
			}
		};

		public interface class ExtraEditorRefMoveData : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPoint3^ RealAngle
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ RealLocation
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ OldLocation
			{
				NiPoint3^ __clrcall get();
			}
		};

		public interface class ExtraGroupConstraint : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Int32 ConstraintType
			{
				System::Int32 __clrcall get();
			}

			property System::UInt32 SecondEntityRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property BSFixedString^ FirstAttachNodeName
			{
				BSFixedString^ __clrcall get();
			}

			property BSFixedString^ SecondAttachNodeName
			{
				BSFixedString^ __clrcall get();
			}

			property NiPoint3^ FirstConstraintOffset
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ SecondConstraintOffset
			{
				NiPoint3^ __clrcall get();
			}

			property System::UInt32 SecondOriginalCollisionGroup
			{
				System::UInt32 __clrcall get();
			}

			property System::Single SecondDynamicMassScale
			{
				System::Single __clrcall get();
			}
		};

		interface class ExtraRagDollData::RagDollData : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::SByte BoneCount
			{
				System::SByte __clrcall get();
			}

			property System::IntPtr Bones
			{
				System::IntPtr __clrcall get();
			}

			property NiPoint3^ Bip01Rotation
			{
				NiPoint3^ __clrcall get();
			}
		};

		public interface class ExtraRefrPath : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPoint3^ StartPosition
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ StartTangent
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ StartEuler
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ GoalPosition
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ GoalTangent
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ GoalEuler
			{
				NiPoint3^ __clrcall get();
			}

			property System::Single Speed
			{
				System::Single __clrcall get();
			}

			property System::Single MaxRotationSpeed
			{
				System::Single __clrcall get();
			}

			property System::Single CurrentParameter
			{
				System::Single __clrcall get();
			}

			property System::Int32 PathType
			{
				System::Int32 __clrcall get();
			}
		};

		interface class ExtraTeleport::Data : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::UInt32 LinkedDoorRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property NiPoint3^ Position
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ Rotation
			{
				NiPoint3^ __clrcall get();
			}

			property System::SByte Flags
			{
				System::SByte __clrcall get();
			}
		};

		public interface class MovementArbitrationMaxWeightPoint : public MovementArbitrationMaxWeight<NiPoint3^>, public NetScriptFramework::IVirtualObject { };

		public interface class MultiBoundMarkerData : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPoint3^ HalfExtents
			{
				NiPoint3^ __clrcall get();
			}
		};

		public interface class NiPlane : public NetScriptFramework::IMemoryObject
		{
		public:
			property NiPoint3^ Normal
			{
				NiPoint3^ __clrcall get();
			}

			property System::Single Constant
			{
				System::Single __clrcall get();
			}
		};

		interface class ExtraRagDollData::RagDollBone : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::SByte BoneId
			{
				System::SByte __clrcall get();
			}

			property NiPoint3^ BonePosition
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ BoneRotation
			{
				NiPoint3^ __clrcall get();
			}
		};

		public interface class DetectionEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::UInt32 ActionValue
			{
				System::UInt32 __clrcall get();
			}

			property NiPoint3^ Location
			{
				NiPoint3^ __clrcall get();
			}

			property AITimeStamp^ TimeStamp
			{
				AITimeStamp^ __clrcall get();
			}

			property System::UInt32 RefHandle
			{
				System::UInt32 __clrcall get();
			}
		};

		/// <summary>
		/// Data type for a point in three dimensional space.
		/// </summary>
		public interface class NiPoint3 : public NetScriptFramework::IMemoryObject
		{
		public:
			/// <summary>
			/// Gets or sets the value on the X-coordinate.
			/// </summary>
			property System::Single X
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}

			/// <summary>
			/// Gets or sets the value on the Y-coordinate.
			/// </summary>
			property System::Single Y
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}

			/// <summary>
			/// Gets or sets the value on the Z-coordinate.
			/// </summary>
			property System::Single Z
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}

			/// <summary>
			/// Add together two points.
			/// </summary>
			/// <param name="other">The other point to add.</param>
			/// <param name="result">The result will be set here. It is allowed for result to be "this" or "other" as well.</param>
			void Add(NiPoint3^ other, NiPoint3^ result);

			/// <summary>
			/// Calculate the cross product.
			/// </summary>
			/// <param name="other">The other point to calculate with.</param>
			/// <param name="result">The result will be set in this instance. It is allowed for result to be "this" or "other" as well.</param>
			void Cross(NiPoint3^ other, NiPoint3^ result);

			/// <summary>
			/// Calculate the dot product.
			/// </summary>
			/// <param name="other">The other point.</param>
			System::Single Dot(NiPoint3^ other);

			/// <summary>
			/// Gets the angle difference of two vectors as a rotation matrix.
			/// </summary>
			/// <param name="other">The other vector to get difference from.</param>
			/// <param name="result">The resulting rotation matrix will be set here.</param>
			void GetAngleDifference(NiPoint3^ other, NiMatrix33^ result);

			/// <summary>
			/// Gets the distance between two points.
			/// </summary>
			/// <param name="other">Other point.</param>
			System::Single GetDistance(NiPoint3^ other);

			/// <summary>
			/// Determine if this vector is zero.
			/// </summary>
			property System::Boolean IsZero
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Gets the length of the vector.
			/// </summary>
			property System::Single Length
			{
				System::Single __clrcall get();
			}

			/// <summary>
			/// Multiply a point by an amount.
			/// </summary>
			/// <param name="amount">The amount to multiply by.</param>
			/// <param name="result">The result will be set here. It is allowed for result to be "this".</param>
			void Multiply(System::Single amount, NiPoint3^ result);

			/// <summary>
			/// Turn this vector into a normal.
			/// </summary>
			/// <param name="result">The result will be set here. It is allowed for result to be "this".</param>
			void Normalize(NiPoint3^ result);

			/// <summary>
			/// Subtract one point from another.
			/// </summary>
			/// <param name="other">The other point to subtract by.</param>
			/// <param name="result">The result will be set here. It is allowed for result to be "this".</param>
			void Subtract(NiPoint3^ other, NiPoint3^ result);
		};

		public interface class NiTransform : public NetScriptFramework::IMemoryObject
		{
		public:
			/// <summary>
			/// Gets the rotation component of transform.
			/// </summary>
			property NiMatrix33^ Rotation
			{
				NiMatrix33^ __clrcall get();
			}

			/// <summary>
			/// Gets the position component of transform.
			/// </summary>
			property NiPoint3^ Position
			{
				NiPoint3^ __clrcall get();
			}

			/// <summary>
			/// Gets or sets the scale.
			/// </summary>
			property System::Single Scale
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}

			/// <summary>
			/// Moves the transform along its three axes depending on the rotation matrix. +X is right. -X is left. +Y is forward. -Y is backwards. +Z is up. -Z is down.
			/// </summary>
			/// <param name="amount">The amount to move in each axis. +X is right. -X is left. +Y is forward. -Y is backwards. +Z is up. -Z is down.</param>
			/// <param name="result">The resulting position will be set here. It is allowed for result to be this transform's own position.</param>
			void Translate(NiPoint3^ amount, NiPoint3^ result);

			/// <summary>
			/// Sets the rotation matrix to look at a specific point given the transform's current location.
			/// </summary>
			/// <param name="target">The target location to look at.</param>
			void LookAt(NiPoint3^ target);
		};

		public interface class bhkRigidBodyT : public bhkRigidBody, public NetScriptFramework::IVirtualObject { };

		public interface class NiFrustumPlanes : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class ActivePlanesMask : System::UInt32
			{
				None = 0,
				Near = 1,
				Far = 2,
				Left = 4,
				Right = 8,
				Top = 0x10,
				Bottom = 0x20,
			};

			enum class Planes : System::Int32
			{
				Near = 0,
				Far = 1,
				Left = 2,
				Right = 3,
				Top = 4,
				Bottom = 5,
			};

			property NetScriptFramework::FixedMemoryArray<NiPlane^>^ CullingPlanes
			{
				NetScriptFramework::FixedMemoryArray<NiPlane^>^ __clrcall get();
			}

			property NiFrustumPlanes::ActivePlanesMask ActivePlanes
			{
				NiFrustumPlanes::ActivePlanesMask __clrcall get();
			}

			property System::UInt32 BasePlaneStates
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class BSMultiBoundOBB : public BSMultiBoundAABB, public NetScriptFramework::IVirtualObject { };

		public interface class ExtraActorCause : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPointer<ActorCause^>^ Cause
			{
				NiPointer<ActorCause^>^ __clrcall get();
			}
		};

		public interface class NiGeometryData : public NiObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DirtyFlags : System::UInt16
			{
				Vertex = 1,
				Normal = 2,
				Color = 4,
				Texture = 8,
				Mutable = 0,
				Static = 0x4000,
				Volatile = 0x8000,
			};

			enum class DataFlags : System::UInt16
			{
				None = 0,
				NDL = 0x1000,
				Max = 0x2000,
				ATI = 0x3000,
			};

			enum class KeepFlags : System::Byte
			{
				None = 0,
				XYZ = 1,
				Norm = 2,
				Color = 4,
				UV = 8,
				Indices = 0x10,
				Bonedata = 0x20,
			};

			enum class CompressFlags : System::Byte
			{
				None = 0,
				Norm = 1,
				Color = 2,
				UV = 4,
				Weight = 8,
				Position = 0x10,
			};

			property System::UInt16 Vertices
			{
				System::UInt16 __clrcall get();
			}

			property System::UInt16 Id
			{
				System::UInt16 __clrcall get();
			}

			property NiGeometryData::DirtyFlags DirtyFlag
			{
				NiGeometryData::DirtyFlags __clrcall get();
			}

			property NiGeometryData::DataFlags DataFlag
			{
				NiGeometryData::DataFlags __clrcall get();
			}

			property NiBound^ Bound
			{
				NiBound^ __clrcall get();
			}

			property NiPoint3^ Vertex
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ Normal
			{
				NiPoint3^ __clrcall get();
			}

			property NiColorA^ Color
			{
				NiColorA^ __clrcall get();
			}

			property NiPoint2^ Texture
			{
				NiPoint2^ __clrcall get();
			}

			property NiPointer<NiAdditionalGeometryData^>^ AdditionalGeomData
			{
				NiPointer<NiAdditionalGeometryData^>^ __clrcall get();
			}

			property NiGeometryData::KeepFlags KeepFlag
			{
				NiGeometryData::KeepFlags __clrcall get();
			}

			property NiGeometryData::CompressFlags CompressFlag
			{
				NiGeometryData::CompressFlags __clrcall get();
			}

			property System::Boolean HasGeoData
			{
				System::Boolean __clrcall get();
			}
		};

		/// <summary>
		/// Crosshair reference data.
		/// </summary>
		public interface class CrossHairPickData : public NetScriptFramework::IMemoryObject
		{
		public:
			/// <summary>
			/// Gets the current object reference handle. This is 0 if no activatable object reference.
			/// </summary>
			property System::UInt32 TargetRefHandle
			{
				System::UInt32 __clrcall get();
			}

			/// <summary>
			/// Gets the target actor reference handle. This is only set if the target is an actor.
			/// </summary>
			property System::UInt32 TargetActorRefHandle
			{
				System::UInt32 __clrcall get();
			}

			/// <summary>
			/// Gets the collision point. This is a very large value if nothing was in range of picker. This is also set if something was in range of picker but isn't activatable.
			/// </summary>
			property NiPoint3^ CollisionPoint
			{
				NiPoint3^ __clrcall get();
			}

			/// <summary>
			/// Gets the target collision object that we hit. This appears to only be set if target is an actor.
			/// </summary>
			property bhkRigidBody^ TargetCollider
			{
				bhkRigidBody^ __clrcall get();
			}

			/// <summary>
			/// Gets the pick collider object. This is the shape used to calculate the collision point of pickable object.
			/// </summary>
			property bhkSimpleShapePhantom^ PickCollider
			{
				bhkSimpleShapePhantom^ __clrcall get();
			}

			/// <summary>
			/// Gets the instance.
			/// </summary>
			static property CrossHairPickData^ Instance
			{
				CrossHairPickData^ __clrcall get()
				{
					return NetScriptFramework::MemoryObject::FromAddress<CrossHairPickData^>(NetScriptFramework::Memory::ReadPointer(__VIDS::VID515446.Value, false));
				}
			}
		};

		public interface class NiSkinData : public NiObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class BoneVertData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::UInt16 Vert
				{
					System::UInt16 __clrcall get();
				}

				property System::Single Weight
				{
					System::Single __clrcall get();
				}
			};

			interface class BoneData : public NetScriptFramework::IMemoryObject
			{
			public:
				property NiTransform^ SkinToBone
				{
					NiTransform^ __clrcall get();
				}

				property NiBound^ Bound
				{
					NiBound^ __clrcall get();
				}

				property NiSkinData::BoneVertData^ BoneVertData
				{
					NiSkinData::BoneVertData^ __clrcall get();
				}

				property System::UInt16 Verts
				{
					System::UInt16 __clrcall get();
				}
			};

			property NiPointer<NiSkinPartition^>^ SkinPartition
			{
				NiPointer<NiSkinPartition^>^ __clrcall get();
			}

			property NiTransform^ RootParentToSkin
			{
				NiTransform^ __clrcall get();
			}

			property System::IntPtr Data
			{
				System::IntPtr __clrcall get();
			}

			property System::Int32 Bones
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class NiTriBasedGeomData : public NiGeometryData, public NetScriptFramework::IVirtualObject { };

		public interface class NiTriShapeData : public NiTriBasedGeomData, public NetScriptFramework::IVirtualObject { };

		public interface class NiTriStripsData : public NiTriBasedGeomData, public NetScriptFramework::IVirtualObject { };

		interface class TESObjectREFR;

		public interface class BGSPackageDataRefOLD : public BGSPackageDataBasicTemplate<IAITarget^, BSPointerHandle<TESObjectREFR^, BSUntypedPointerHandle<UnknownGenArg_20^, UnknownGenArg_6^>^>^, System::IntPtr, UnknownGenArg_0^>, public NetScriptFramework::IVirtualObject { };

		public interface class BSAnimationGraphEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSFixedString^ Tag
			{
				BSFixedString^ __clrcall get();
			}

			property TESObjectREFR^ Holder
			{
				TESObjectREFR^ __clrcall get();
			}

			property BSFixedString^ Payload
			{
				BSFixedString^ __clrcall get();
			}
		};

		public interface class TriggerEntry : public bhkTTNode<BSPointerHandle<TESObjectREFR^, BSUntypedPointerHandle<UnknownGenArg_20^, UnknownGenArg_6^>^>^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class TriggerEvent : public NetScriptFramework::IMemoryObject { };
		};

		generic <typename NativeLatentFunction2_T1, typename NativeLatentFunction2_T2, typename NativeLatentFunction2_T3, typename NativeLatentFunction2_T4>
		interface class BSScript::NativeLatentFunction2 : public BSScript::NativeFunction2<NativeLatentFunction2_T1, System::Boolean, TESObjectREFR^, NativeLatentFunction2_T4>, public NetScriptFramework::IVirtualObject { };

		interface class Inventory::Event : public NetScriptFramework::IMemoryObject
		{
		public:
			property TESObjectREFR^ ObjRef
			{
				TESObjectREFR^ __clrcall get();
			}

			property ExtraContainerChanges::ItemEntry^ EntryData
			{
				ExtraContainerChanges::ItemEntry^ __clrcall get();
			}

			property System::Int32 NewCount
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 PrevCount
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class TESActiveEffectApplyRemoveEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			property NiPointer<TESObjectREFR^>^ Caster
			{
				NiPointer<TESObjectREFR^>^ __clrcall get();
			}

			property NiPointer<TESObjectREFR^>^ Target
			{
				NiPointer<TESObjectREFR^>^ __clrcall get();
			}

			property System::UInt16 ActiveEffectUniqueId
			{
				System::UInt16 __clrcall get();
			}

			property System::Boolean IsApplied
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class TESCombatEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			property NiPointer<TESObjectREFR^>^ Actor
			{
				NiPointer<TESObjectREFR^>^ __clrcall get();
			}

			property NiPointer<TESObjectREFR^>^ TargetActor
			{
				NiPointer<TESObjectREFR^>^ __clrcall get();
			}

			property ActorCombatStates State
			{
				ActorCombatStates __clrcall get();
			}
		};

		public interface class TESDeathEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			property NiPointer<TESObjectREFR^>^ ActorDying
			{
				NiPointer<TESObjectREFR^>^ __clrcall get();
			}

			property NiPointer<TESObjectREFR^>^ ActorKiller
			{
				NiPointer<TESObjectREFR^>^ __clrcall get();
			}

			property System::Boolean Dead
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class TESEquipEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			property NiPointer<TESObjectREFR^>^ ActorEquipper
			{
				NiPointer<TESObjectREFR^>^ __clrcall get();
			}

			property System::UInt32 BaseObjectFormId
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 OriginalRefrFormId
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt16 UniqueId
			{
				System::UInt16 __clrcall get();
			}

			property System::Boolean Equipped
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class TESGrabReleaseEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			property NiPointer<TESObjectREFR^>^ ObjectRef
			{
				NiPointer<TESObjectREFR^>^ __clrcall get();
			}

			property System::Boolean Grabbed
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class TESHitEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class DataFlags : System::Byte
			{
				None = 0,
				PowerAttack = 1,
				SneakAttack = 2,
				BashAttack = 4,
				HitBlocked = 8,
			};

			property NiPointer<TESObjectREFR^>^ Target
			{
				NiPointer<TESObjectREFR^>^ __clrcall get();
			}

			property NiPointer<TESObjectREFR^>^ Cause
			{
				NiPointer<TESObjectREFR^>^ __clrcall get();
			}

			property System::UInt32 SourceFormId
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 ProjectileFormId
			{
				System::UInt32 __clrcall get();
			}

			property TESHitEvent::DataFlags HitFlags
			{
				TESHitEvent::DataFlags __clrcall get();
			}
		};

		public interface class TESInitScriptEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			property NiPointer<TESObjectREFR^>^ ObjectInitialized
			{
				NiPointer<TESObjectREFR^>^ __clrcall get();
			}
		};

		public interface class TESLockChangedEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			property NiPointer<TESObjectREFR^>^ LockedObject
			{
				NiPointer<TESObjectREFR^>^ __clrcall get();
			}
		};

		public interface class TESMagicEffectApplyEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			property NiPointer<TESObjectREFR^>^ Target
			{
				NiPointer<TESObjectREFR^>^ __clrcall get();
			}

			property NiPointer<TESObjectREFR^>^ Caster
			{
				NiPointer<TESObjectREFR^>^ __clrcall get();
			}

			property System::UInt32 MagicEffectFormId
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class TESMoveAttachDetachEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			property NiPointer<TESObjectREFR^>^ MovedRef
			{
				NiPointer<TESObjectREFR^>^ __clrcall get();
			}

			property System::Boolean IsCellAttached
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class TESResetEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			property NiPointer<TESObjectREFR^>^ Object
			{
				NiPointer<TESObjectREFR^>^ __clrcall get();
			}
		};

		public interface class TESSwitchRaceCompleteEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			property NiPointer<TESObjectREFR^>^ Subject
			{
				NiPointer<TESObjectREFR^>^ __clrcall get();
			}
		};

		public interface class ExtraAction : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::SByte ActionId
			{
				System::SByte __clrcall get();
			}

			property TESObjectREFR^ ActionObj
			{
				TESObjectREFR^ __clrcall get();
			}
		};

		public interface class ExtraMultiBoundRef : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property TESObjectREFR^ BoundRef
			{
				TESObjectREFR^ __clrcall get();
			}
		};

		public interface class ExtraRandomTeleportMarker : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property TESObjectREFR^ Marker
			{
				TESObjectREFR^ __clrcall get();
			}
		};

		public interface class ZoneEntry : public bhkTTNode<BSPointerHandle<TESObjectREFR^, BSUntypedPointerHandle<UnknownGenArg_20^, UnknownGenArg_6^>^>^>, public NetScriptFramework::IVirtualObject { };

		public interface class TargetEntry : public bhkTTNode<BSPointerHandle<TESObjectREFR^, BSUntypedPointerHandle<UnknownGenArg_20^, UnknownGenArg_6^>^>^>, public NetScriptFramework::IVirtualObject { };

		generic <typename BSTSetEntry_T1>
		public interface class BSTSetEntry : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSTSetEntry_T1 Value
			{
				BSTSetEntry_T1 __clrcall get();
			}

			property BSTSetEntry<BSTSetEntry_T1>^ Next
			{
				BSTSetEntry<BSTSetEntry_T1>^ __clrcall get();
			}
		};

		interface class TESCondition::Solution : public NetScriptFramework::IMemoryObject
		{
		public:
			property TESObjectREFR^ PerkOwner
			{
				TESObjectREFR^ __clrcall get();
			}

			property TESObjectREFR^ Target
			{
				TESObjectREFR^ __clrcall get();
			}
		};

		public interface class ActorMediator : public BSTEventSink<BSAnimationGraphEvent^>, public BSTSingletonSDM<ActorMediator^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		interface class SkyrimScript::Internal::AnimationCallbacks : public BSTEventSink<BSAnimationGraphEvent^>, public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

		public interface class TrapEntry : public ZoneEntry, public NetScriptFramework::IVirtualObject { };

		public interface class TrapTargetEntry : public TargetEntry, public NetScriptFramework::IVirtualObject { };

		generic <typename hkPadSpu_T1>
		interface class hkPadSpu;

		public interface class hkpFixedBufferCdPointCollector : public hkpCdPointCollector, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpFixedBufferRayHitCollector : public hkpRayHitCollector, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCollisionQualityInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkAabbUtil::OffsetAabbInput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkStepInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		generic <typename hkBlockList_T1, typename hkBlockList_T2>
		public interface class hkBlockList : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Block : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class BatchConsumer : public NetScriptFramework::IMemoryObject { };

			interface class BatchWriter : public NetScriptFramework::IMemoryObject { };
		};

		generic <typename hkFixedArray_T1>
		public interface class hkFixedArray : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkKdTreeUtils::BundleState : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkLineSegmentUtil::ClosestLineSegLineSegResult : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkLineSegmentUtil::ClosestPointInfLineInfLineResult : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMonitorStream : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Command : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class AddValueCommand : public hkMonitorStream::Command, public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MemoryCommand : public hkMonitorStream::Command, public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class TimerCommand : public hkMonitorStream::Command, public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class TimerBeginListCommand : public hkMonitorStream::TimerCommand, public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class TimerBeginObjectNameCommand : public hkMonitorStream::TimerCommand, public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkp1dBilateralConstraintStatus : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkp1dConstraintMotorInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConstraintQueryStepInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpProcessCdPoint : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpCollideTriangleUtil::ClosestPointTriangleResult : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConstraintQueryOut : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpShape::ShapeFuncs : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpShapeKeyPairLocal1n : public NetScriptFramework::IMemoryObject { };

		public interface class hkpShapeKeyPairLocalNm : public NetScriptFramework::IMemoryObject { };

		public interface class hkpCollisionDispatcher : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class AgentFuncs : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class ShapeInheritance : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DebugEntry : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Agent3Funcs : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			enum class CollisionQualityLevel : System::Int32
			{
				COLLISION_QUALITY_INVALID = 0,
				COLLISION_QUALITY_PSI = 1,
				COLLISION_QUALITY_SIMPLIFIED_TOI = 2,
				COLLISION_QUALITY_TOI = 3,
				COLLISION_QUALITY_TOI_HIGHER = 4,
				COLLISION_QUALITY_TOI_FORCED = 5,
				COLLISION_QUALITY_CHARACTER = 6,
				COLLISION_QUALITY_TMP_EXPAND_MANIFOLD = 7,
			};

			interface class InitCollisionQualityInfo : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			enum class IsAgentPredictive : System::Int32
			{
				IS_NOT_PREDICTIVE = 0,
				IS_PREDICTIVE = 1,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Agent3FuncsIntern : public hkpCollisionDispatcher::Agent3Funcs, public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Agent3Entry : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class AgentEntry : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkpWorldDynamicsStepInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkCpuWorldRayCastCollector : public hkpBroadPhaseCastCollector, public hkKdTreeCastCollector, public hkAabbTreeQueryUtils<hkAabbTreeData::hkAabbTreeAabb^, System::UInt16>::Collector, public hkAabbTreeQueryUtils<hkAabbTreeData::hkAabbTreeAabb16^, System::UInt16>::Collector, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpProcessCollisionData : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class ToiInfo : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCharacterInput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConstraintMotorInput : public hkp1dBilateralConstraintStatus, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConstraintMotorOutput : public hkp1dConstraintMotorInfo, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpShapeKeyTrack : public hkBlockList<System::UInt32, UnknownGenArg_512^>, public NetScriptFramework::IMemoryObject { };

		public interface class hkpShapeKeyTrackConsumer : public hkBlockList<System::UInt32, UnknownGenArg_512^>::BatchConsumer, public NetScriptFramework::IMemoryObject { };

		public interface class hkpShapeKeyTrackWriter : public hkBlockList<System::UInt32, UnknownGenArg_512^>::BatchWriter, public NetScriptFramework::IMemoryObject { };

		public interface class hkUnionFind : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpBvTreeStreamAgent : public hkpCollisionAgent, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConvexListAgent : public hkpPredGskfAgent, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class StreamData : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkpListAgent : public hkpCollisionAgent, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpProcessCollisionOutput : public hkpProcessCollisionData, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class ContactRef : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class PotentialInfo : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkpCollisionInput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Aabb32Info : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpShapeConnectedCalculator : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpShapeCutterUtil::SubtractShapeInput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpShapeSkinningUtil::Input : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpProcessCollisionInput : public hkpCollisionInput, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpLinearCastCollisionInput : public hkpCollisionInput, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpAgent1nMachine_VisitorInput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpProcessCollisionOutputBackup : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkCpuWorldGetClosestPointsCollector : public hkpBroadPhaseCastCollector, public hkAabbTreeQueryUtils<hkAabbTreeData::hkAabbTreeAabb16^, System::UInt16>::Collector, public hkKdTreeCastCollector, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpWorldLinearCaster : public hkpBroadPhaseCastCollector, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCollisionQueryJob : public hkJob, public NetScriptFramework::IMemoryObject
		{
		public:
			enum class JobSubType : System::Int32
			{
				COLLISION_QUERY_MOPP_AABB = 0,
				COLLISION_QUERY_PAIR_GET_CLOSEST_POINTS = 1,
				COLLISION_QUERY_WORLD_GET_CLOSEST_POINTS = 2,
				COLLISION_QUERY_PAIR_LINEAR_CAST = 3,
				COLLISION_QUERY_WORLD_LINEAR_CAST = 4,
				COLLISION_QUERY_KD_TREE_AABB_QUERY_JOB = 5,
				COLLISION_QUERY_AABB_TREE_AABB_QUERY_JOB = 6,
				COLLISION_QUERY_JOB_END = 7,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpAgent3Input : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpRayCastQueryJob : public hkJob, public NetScriptFramework::IMemoryObject
		{
		public:
			enum class JobSubType : System::Int32
			{
				RAYCAST_QUERY_SHAPE_RAYCAST = 0,
				RAYCAST_QUERY_WORLD_RAYCAST = 1,
				RAYCAST_QUERY_KD_TREE_BUILD_FAST = 2,
				RAYCAST_QUERY_KD_TREE_BUILD_FAST_DISTRIBUTED_JOB = 3,
				RAYCAST_QUERY_KD_TREE_BUILD_FAST_DISTRIBUTED_SUBJOB = 4,
				RAYCAST_QUERY_KD_TREE_BUILD_SETUP_JOB = 5,
				RAYCAST_QUERY_KD_TREE_BUILD_COORDINATOR_JOB = 6,
				RAYCAST_QUERY_WORLD_RAYCAST_WITH_AUTOBUNDLE = 7,
				RAYCAST_QUERY_JOB_END = 8,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpKdTreeWorldLinearCaster : public hkKdTreeCastCollector, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpAabbTreeAabbJob : public hkpCollisionQueryJob, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpAgent3ProcessInput : public hkpAgent3Input, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpKdTreeAabbJob : public hkpCollisionQueryJob, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpKdTreeBuildDistributedJob : public hkpRayCastQueryJob, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpKdTreeBuildDistributedSubJob : public hkpRayCastQueryJob, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpKdTreeBuildJobFast : public hkpRayCastQueryJob, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpMoppAabbJob : public hkpCollisionQueryJob, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpPairGetClosestPointsJob : public hkpCollisionQueryJob, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpPairLinearCastJob : public hkpCollisionQueryJob, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpShapeRayCastJob : public hkpRayCastQueryJob, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpKdTreeBuildCoordinatorJob : public hkpKdTreeBuildDistributedJob, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpKdTreeBuildSetupJob : public hkpKdTreeBuildDistributedJob, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class TESForm;

		public interface class BSExtraDataList : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class PresenceBitfield : public NetScriptFramework::IMemoryObject
			{
			public:
				property NetScriptFramework::FixedMemoryArray<System::Byte>^ Bits
				{
					NetScriptFramework::FixedMemoryArray<System::Byte>^ __clrcall get();
				}
			};

			property BSExtraData^ First
			{
				BSExtraData^ __clrcall get();

				void __clrcall set(BSExtraData^ value);
			}

			property BSExtraDataList::PresenceBitfield^ Mask
			{
				BSExtraDataList::PresenceBitfield^ __clrcall get();
			}

			property MutexRW^ Lock
			{
				MutexRW^ __clrcall get();
			}

			/// <summary>
			/// Gets the owner form.
			/// </summary>
			TESForm^ GetOwner();

			/// <summary>
			/// Removes extra data by type.
			/// </summary>
			/// <param name="type">The type of data to remove.</param>
			void RemoveExtraDataByType(ExtraDataTypes type);

			/// <summary>
			/// Removes a specific extra data item from this list.
			/// </summary>
			/// <param name="data">The data to remove.</param>
			/// <param name="deleteIt">Delete this data after removing?</param>
			void RemoveExtraData(BSExtraData^ data, System::Boolean deleteIt);

			/// <summary>
			/// Adds the specified extra data to list.
			/// </summary>
			/// <param name="data">The data to add.</param>
			void AddExtraData(BSExtraData^ data);

			/// <summary>
			/// Gets the count of current entries in this list.
			/// </summary>
			property System::Int32 EntriesCount
			{
				System::Int32 __clrcall get();
			}

			/// <summary>
			/// Check if list has extra data with type.
			/// </summary>
			/// <param name="type">The type of data.</param>
			System::Boolean HasExtraDataByType(ExtraDataTypes type);

			/// <summary>
			/// Gets extra data from this list by type.
			/// </summary>
			/// <param name="type">The type of extra data to get.</param>
			BSExtraData^ GetExtraDataByType(ExtraDataTypes type);
		};

		public interface class NiFormArray : public NiTLargePrimitiveArray<TESForm^>, public NetScriptFramework::IVirtualObject { };

		interface class PackageLocation::Data : public NetScriptFramework::IMemoryObject
		{
		public:
			property TESForm^ Object
			{
				TESForm^ __clrcall get();
			}

			property System::UInt32 RefHandle
			{
				System::UInt32 __clrcall get();
			}
		};

		interface class TESContainer::Entry : public NetScriptFramework::IMemoryObject
		{
		public:
			/// <summary>
			/// Gets or sets the count of item.
			/// </summary>
			property System::Int32 Count
			{
				System::Int32 __clrcall get();

				void __clrcall set(System::Int32 value);
			}

			/// <summary>
			/// Gets or sets the item.
			/// </summary>
			property TESForm^ Item
			{
				TESForm^ __clrcall get();

				void __clrcall set(TESForm^ value);
			}

			/// <summary>
			/// Gets the entry data.
			/// </summary>
			property TESContainer::Data^ EntryData
			{
				TESContainer::Data^ __clrcall get();
			}
		};

		interface class ItemCrafted::Event : public NetScriptFramework::IMemoryObject
		{
		public:
			property TESForm^ Item
			{
				TESForm^ __clrcall get();
			}
		};

		public interface class MagicFavorites : public BSTSingletonSDM<MagicFavorites^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSTArray<TESForm^, BSTArrayHeapAllocator^>^ Spells
			{
				BSTArray<TESForm^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<TESForm^, BSTArrayHeapAllocator^>^ Hotkeys
			{
				BSTArray<TESForm^, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		public interface class ScriptReferencedObject : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSString^ EditorId
			{
				BSString^ __clrcall get();
			}

			property TESForm^ Form
			{
				TESForm^ __clrcall get();
			}

			property System::UInt32 VariableId
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class ExtraEmittanceSource : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property TESForm^ Source
			{
				TESForm^ __clrcall get();
			}
		};

		public interface class ExtraLargeRefOwnerCells : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSTArray<TESForm^, BSTArrayHeapAllocator^>^ OwnerCells
			{
				BSTArray<TESForm^, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		public interface class ExtraLockList : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property TESForm^ LockList
			{
				TESForm^ __clrcall get();
			}
		};

		public interface class ExtraModelSwap : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property TESModel^ ModelSwap
			{
				TESModel^ __clrcall get();
			}

			property TESForm^ ModelSwapForm
			{
				TESForm^ __clrcall get();
			}
		};

		public interface class ExtraOwnership : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property TESForm^ Owner
			{
				TESForm^ __clrcall get();
			}
		};

		public interface class ExtraPackageStartLocation : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property TESForm^ LocationForm
			{
				TESForm^ __clrcall get();
			}

			property NiPoint3^ LocationPoint
			{
				NiPoint3^ __clrcall get();
			}

			property System::Single ZRotation
			{
				System::Single __clrcall get();
			}
		};

		public interface class ExtraPromotedRef : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSTArray<TESForm^, BSTArrayHeapAllocator^>^ PromotedRefOwners
			{
				BSTArray<TESForm^, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		public interface class ExtraStartingWorldOrCell : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property TESForm^ StartingWorldOrCell
			{
				TESForm^ __clrcall get();
			}
		};

		generic <typename NiTListItem_T1>
		public interface class NiTListItem : public NetScriptFramework::IMemoryObject
		{
		public:
			property NiTListItem<NiTListItem_T1>^ Next
			{
				NiTListItem<NiTListItem_T1>^ __clrcall get();
			}

			property NiTListItem<NiTListItem_T1>^ Prev
			{
				NiTListItem<NiTListItem_T1>^ __clrcall get();
			}

			property NiTListItem_T1 Element
			{
				NiTListItem_T1 __clrcall get();
			}
		};

		public interface class ActionObject : public NetScriptFramework::IMemoryObject
		{
		public:
			property TESForm^ Form
			{
				TESForm^ __clrcall get();
			}

			property System::UInt32 Flags
			{
				System::UInt32 __clrcall get();
			}
		};

		generic <typename NiTListBase_T1, typename NiTListBase_T2>
		public interface class NiTListBase : public NetScriptFramework::IMemoryObject
		{
		public:
			property NiTListItem<NiTListBase_T1>^ Head
			{
				NiTListItem<NiTListBase_T1>^ __clrcall get();
			}

			property NiTListItem<NiTListBase_T1>^ Tail
			{
				NiTListItem<NiTListBase_T1>^ __clrcall get();
			}

			property unknown^ Allocator
			{
				unknown^ __clrcall get();
			}
		};

		generic <typename NiTPointerListBase_T1, typename NiTPointerListBase_T2>
		public interface class NiTPointerListBase : public NiTListBase<NiTPointerListBase_T1, NiTPointerListBase_T2>, public NetScriptFramework::IMemoryObject { };

		interface class hkpEntity;

		public interface class hkpDisableEntityCollisionFilter : public hkpCollisionFilter, public hkpEntityListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpBodyOperationEntry : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpViscoseSurfaceUtil : public hkReferencedObject, public hkpContactListener, public hkpEntityListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::ActivateEntity : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::AddEntity : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::AddEntityBatch : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::DeactivateEntity : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::MergeIslands : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::ReintegrateAndRecollideEntityBatch : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::RemoveEntity : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::RemoveEntityBatch : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::UpdateEntityBP : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::UpdateFilterOnEntity : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::UpdateFilterOnEntityPair : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::UpdateMovedBodyInfo : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		generic <typename BSSimpleList_T1>
		interface class BSSimpleList;

		/// <summary>
		/// Inventory data.
		/// </summary>
		interface class ExtraContainerChanges::Data : public NetScriptFramework::IMemoryObject
		{
		public:
			/// <summary>
			/// Gets the objects in this inventory.
			/// </summary>
			property BSSimpleList<ExtraContainerChanges::ItemEntry^>^ Objects
			{
				BSSimpleList<ExtraContainerChanges::ItemEntry^>^ __clrcall get();
			}

			/// <summary>
			/// Gets the owner of this data.
			/// </summary>
			property TESObjectREFR^ Owner
			{
				TESObjectREFR^ __clrcall get();
			}

			property System::Single TotalWeight
			{
				System::Single __clrcall get();
			}

			property System::Single ArmorWeight
			{
				System::Single __clrcall get();
			}

			property System::Boolean Changed
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class TESReactionForm : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESForm^ Form
				{
					TESForm^ __clrcall get();
				}

				property System::Int32 Reaction
				{
					System::Int32 __clrcall get();
				}

				property FactionReactions FightReaction
				{
					FactionReactions __clrcall get();
				}
			};

			property BSSimpleList<TESReactionForm::Data^>^ Reactions
			{
				BSSimpleList<TESReactionForm::Data^>^ __clrcall get();
			}

			property FormTypes GroupFormType
			{
				FormTypes __clrcall get();
			}
		};

		/// <summary>
		/// Item entry in inventory.
		/// </summary>
		interface class ExtraContainerChanges::ItemEntry : public NetScriptFramework::IMemoryObject
		{
		public:
			/// <summary>
			/// Gets the template of object.
			/// </summary>
			property TESForm^ Template
			{
				TESForm^ __clrcall get();
			}

			/// <summary>
			/// Gets the extra data of object.
			/// </summary>
			property BSSimpleList<BSExtraDataList^>^ ExtraData
			{
				BSSimpleList<BSExtraDataList^>^ __clrcall get();
			}

			/// <summary>
			/// Gets the count of this object.
			/// </summary>
			property System::Int32 Count
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class ExtraActivateRef : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSSimpleList<RefActivateData^>^ Parents
			{
				BSSimpleList<RefActivateData^>^ __clrcall get();
			}

			property System::Byte ActivateFlags
			{
				System::Byte __clrcall get();
			}
		};

		public interface class ExtraActivateRefChildren : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSSimpleList<RefActivateData^>^ Children
			{
				BSSimpleList<RefActivateData^>^ __clrcall get();
			}

			property System::Single ActivateChildrenTimer
			{
				System::Single __clrcall get();
			}
		};

		public interface class ExtraAttachRefChildren : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSSimpleList<System::UInt32>^ ChildrenRefHandles
			{
				BSSimpleList<System::UInt32>^ __clrcall get();
			}
		};

		public interface class ExtraDroppedItemList : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSSimpleList<System::UInt32>^ DroppedObjectRefHandles
			{
				BSSimpleList<System::UInt32>^ __clrcall get();
			}
		};

		public interface class ExtraEnableStateChildren : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSSimpleList<System::UInt32>^ ChildRefHandles
			{
				BSSimpleList<System::UInt32>^ __clrcall get();
			}
		};

		public interface class ExtraFollowerSwimBreadcrumbs : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class StatesEnum : System::Int32
			{
				Invalid = 0,
				OnGround = 1,
				InWater = 2,
			};

			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property NiPoint3^ StartLocation
				{
					NiPoint3^ __clrcall get();
				}

				property System::UInt32 StartNavMeshId
				{
					System::UInt32 __clrcall get();
				}

				property NiPoint3^ EndLocation
				{
					NiPoint3^ __clrcall get();
				}

				property System::UInt32 EndNavMeshId
				{
					System::UInt32 __clrcall get();
				}

				property System::Boolean EnteringWater
				{
					System::Boolean __clrcall get();
				}
			};

			property ExtraFollowerSwimBreadcrumbs::StatesEnum LeaderState
			{
				ExtraFollowerSwimBreadcrumbs::StatesEnum __clrcall get();
			}

			property NiPoint3^ LeaderLocation
			{
				NiPoint3^ __clrcall get();
			}

			property System::UInt32 LeaderNavMeshId
			{
				System::UInt32 __clrcall get();
			}

			property BSSimpleList<ExtraFollowerSwimBreadcrumbs::Data^>^ Crumbs
			{
				BSSimpleList<ExtraFollowerSwimBreadcrumbs::Data^>^ __clrcall get();
			}
		};

		public interface class ExtraLitWaterRefs : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSSimpleList<TESObjectREFR^>^ Refs
			{
				BSSimpleList<TESObjectREFR^>^ __clrcall get();
			}
		};

		public interface class ExtraRunOncePacks : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data;

			property BSSimpleList<ExtraRunOncePacks::Data^>^ Packages
			{
				BSSimpleList<ExtraRunOncePacks::Data^>^ __clrcall get();
			}
		};

		public interface class ExtraSayTopicInfoOnceADay : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data;

			property BSSimpleList<ExtraSayTopicInfoOnceADay::Data^>^ SaidOnceList
			{
				BSSimpleList<ExtraSayTopicInfoOnceADay::Data^>^ __clrcall get();
			}
		};

		public interface class ExtraWaterLightRefs : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSSimpleList<TESObjectREFR^>^ Refs
			{
				BSSimpleList<TESObjectREFR^>^ __clrcall get();
			}
		};

		generic <typename SettingCollectionList_T1>
		public interface class SettingCollectionList : public SettingCollection<SettingCollectionList_T1>, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSSimpleList<SettingCollectionList_T1>^ Settings
			{
				BSSimpleList<SettingCollectionList_T1>^ __clrcall get();
			}
		};

		public interface class INISettingCollection : public SettingCollectionList<Setting^>, public NetScriptFramework::IVirtualObject { };

		public interface class RegSettingCollection : public SettingCollectionList<Setting^>, public NetScriptFramework::IVirtualObject { };

		public interface class INIPrefSettingCollection : public INISettingCollection, public NetScriptFramework::IVirtualObject { };

		generic <typename hkPointerMap_T1, typename hkPointerMap_T2, typename hkPointerMap_T3>
		interface class hkPointerMap;

		public interface class hkDefaultError : public hkError, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkPackfileData : public hkResource, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Chunk : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkVersionPatchManager : public hkReferencedObject, public hkSingleton<hkVersionPatchManager^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class UidFromClassVersion : public NetScriptFramework::IMemoryObject { };

			interface class PatchInfo : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

				interface class Component;
			};

			interface class CastPatch : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultChangedPatch : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DependsPatch : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class FunctionPatch : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MemberAddedPatch : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MemberRemovedPatch : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MemberRenamedPatch : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class PatchType : System::Int32
			{
				PATCH_INVALID = 0,
				PATCH_MEMBER_ADDED = 1,
				PATCH_MEMBER_REMOVED = 2,
				PATCH_MEMBER_RENAMED = 3,
				PATCH_MEMBER_DEFAULT_SET = 4,
				PATCH_FUNCTION = 5,
				PATCH_CAST = 6,
				PATCH_DEPENDS = 7,
				PATCH_PARENT_SET = 8,
				PATCH_END = 9,
			};

			interface class SetParentPatch : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkTrackerLayoutCalculator : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkTrackerTypeTreeTextCache : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkFindUniquePositionsUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Entry : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkVertexSharingUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Entry : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkFindClosestPositionUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class IntCoord : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Box : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkMemoryMeshSystem : public hkMeshSystem, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkObjectSerializeRegistry : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpConvexPieceMeshBuilder::BuilderInput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkVersionPatchManager::PatchInfo::Component : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkObjectSerializationManager : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkClass;

		public interface class hkVariant : public NetScriptFramework::IMemoryObject { };

		generic <typename hkSerializeMultiMap_T1, typename hkSerializeMultiMap_T2, typename hkSerializeMultiMap_T3>
		public interface class hkSerializeMultiMap : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Value : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkVtableClassRegistry : public hkReferencedObject, public hkSingleton<hkVtableClassRegistry^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDynamicClassNameRegistry : public hkClassNameRegistry, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpExtendedMeshShape : public hkpShapeCollection, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class SubpartType : System::Int32
			{
				SUBPART_TRIANGLES = 0,
				SUBPART_SHAPE = 1,
			};

			enum class MaterialIndexStridingType : System::Int32
			{
				MATERIAL_INDICES_INVALID = 0,
				MATERIAL_INDICES_INT8 = 1,
				MATERIAL_INDICES_INT16 = 2,
				MATERIAL_INDICES_MAX_ID = 3,
			};

			enum class IndexStridingType : System::Int32
			{
				INDICES_INVALID = 0,
				INDICES_INT8 = 1,
				INDICES_INT16 = 2,
				INDICES_INT32 = 3,
				INDICES_MAX_ID = 4,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Subpart : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class TrianglesSubpart : public hkpExtendedMeshShape::Subpart, public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class ShapesSubpart : public hkpExtendedMeshShape::Subpart, public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		interface class hkPlatformObjectWriter::Cache : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkStaticClassNameRegistry : public hkClassNameRegistry, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkPackfileReader : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkClassMember : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Type : System::Int32
			{
				TYPE_VOID = 0,
				TYPE_BOOL = 1,
				TYPE_CHAR = 2,
				TYPE_INT8 = 3,
				TYPE_UINT8 = 4,
				TYPE_INT16 = 5,
				TYPE_UINT16 = 6,
				TYPE_INT32 = 7,
				TYPE_UINT32 = 8,
				TYPE_INT64 = 9,
				TYPE_UINT64 = 0xA,
				TYPE_REAL = 0xB,
				TYPE_VECTOR4 = 0xC,
				TYPE_QUATERNION = 0xD,
				TYPE_MATRIX3 = 0xE,
				TYPE_ROTATION = 0xF,
				TYPE_QSTRANSFORM = 0x10,
				TYPE_MATRIX4 = 0x11,
				TYPE_TRANSFORM = 0x12,
				TYPE_ZERO = 0x13,
				TYPE_POINTER = 0x14,
				TYPE_FUNCTIONPOINTER = 0x15,
				TYPE_ARRAY = 0x16,
				TYPE_INPLACEARRAY = 0x17,
				TYPE_ENUM = 0x18,
				TYPE_STRUCT = 0x19,
				TYPE_SIMPLEARRAY = 0x1A,
				TYPE_HOMOGENEOUSARRAY = 0x1B,
				TYPE_VARIANT = 0x1C,
				TYPE_CSTRING = 0x1D,
				TYPE_ULONG = 0x1E,
				TYPE_FLAGS = 0x1F,
				TYPE_HALF = 0x20,
				TYPE_STRINGPTR = 0x21,
				TYPE_RELARRAY = 0x22,
				TYPE_MAX = 0x23,
			};

			enum class FlagValues : System::Int32
			{
				FLAGS_NONE = 0,
				ALIGN_8 = 0x80,
				ALIGN_16 = 0x100,
				NOT_OWNED = 0x200,
				SERIALIZE_IGNORED = 0x400,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			enum class DeprecatedFlagValues : System::Int32
			{
				DEPRECATED_SIZE_8 = 8,
				DEPRECATED_ENUM_8 = 8,
				DEPRECATED_SIZE_16 = 0x10,
				DEPRECATED_ENUM_16 = 0x10,
				DEPRECATED_SIZE_32 = 0x20,
				DEPRECATED_ENUM_32 = 0x20,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class TypeProperties : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		interface class hkObjectInspector::Pointer : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkRelocationInfo::Global : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkStatisticClassCount : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkVisualDebuggerTrackedObject : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkInternalClassMember : public NetScriptFramework::IMemoryObject { };

		interface class hkInternalCustomAttributes::Attribute : public NetScriptFramework::IMemoryObject { };

		public interface class hkPackfileWriter : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class PendingWrite : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Options : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class AddObjectListener : public hkReferencedObject, public NetScriptFramework::IVirtualObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkClass : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class FlagValues : System::Int32
			{
				FLAGS_NONE = 0,
				FLAGS_NOT_SERIALIZABLE = 1,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class SignatureFlags : System::Int32
			{
				SIGNATURE_LOCAL = 1,
			};
		};

		public interface class hkDataWorldNative : public hkDataWorld, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDefaultClassNameRegistry : public hkDynamicClassNameRegistry, public hkSingleton<hkDefaultClassNameRegistry^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkObjectResource : public hkResource, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpStorageExtendedMeshShape : public hkpExtendedMeshShape, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Material : public hkpMeshMaterial, public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class MeshSubpartStorage : public hkReferencedObject, public NetScriptFramework::IVirtualObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class ShapeSubpartStorage : public hkReferencedObject, public NetScriptFramework::IVirtualObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkStatisticsCollector : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class Flag : System::Int32
			{
				EXCLUDE_OBJECT_MEMORY = 1,
			};

			enum class MemoryType : System::Int32
			{
				MEM_OBJECT = 0,
				MEM_NORMAL = 1,
				MEM_ALLOCATED = 2,
				MEM_ARRAY = 3,
				MEM_OTHER = 4,
				MEM_LAST = 5,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkPackfileObjectUpdateTracker : public hkObjectUpdateTracker, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkChainedClassNameRegistry : public hkDynamicClassNameRegistry, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkClassMemberAccessor : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class HomogeneousArray : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Vector4 : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class SimpleArray : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Matrix3 : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Transform : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkVersionRegistry : public hkReferencedObject, public hkSingleton<hkVersionRegistry^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class ClassAction : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class ClassRename : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class SignatureFlags : System::Int32
			{
				AUTO_SIGNATURE = -1,
			};

			enum class VersionFlags : System::Int32
			{
				VERSION_MANUAL = 2,
				VERSION_INPLACE = 4,
				VERSION_COPY = 8,
				VERSION_REMOVED = 0x10,
				VERSION_VARIANT = 0x20,
				VERSION_HOMOGENEOUSARRAY = 0x40,
			};

			interface class UpdateDescription : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Updater : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkClassAccessor : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkClassPointerVtable::VtableRegistry : public hkVtableClassRegistry, public NetScriptFramework::IVirtualObject { };

		interface class hkCustomAttributes::Attribute : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkInternalClass : public NetScriptFramework::IMemoryObject { };

		public interface class hkTypedUnion : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class EnumVariant : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Storage : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkBinaryPackfileWriter : public hkPackfileWriter, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class SaveContext : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpHavokSnapshot::ConvertListener : public hkPackfileWriter::AddObjectListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkBindingClassNameRegistry : public hkChainedClassNameRegistry, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class ClassAllocationsTracker : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class ClassData : public NetScriptFramework::IMemoryObject
				{
				public:
					interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
				};

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

				interface class UnresolvedClassPointerTracker : public NetScriptFramework::IMemoryObject
				{
				public:
					interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
				};
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkResourceHandle::Link : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkMatchSnapshotStatisticsCollector : public hkStatisticsCollector, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class AllocationSet : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkStreamStatisticsCollector : public hkStatisticsCollector, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Command : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkReportStatisticsCollector : public hkStatisticsCollector, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkSimpleStatisticsCollector : public hkStatisticsCollector, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkSummaryStatisticsCollector : public hkStatisticsCollector, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkXmlPackfileReader : public hkPackfileReader, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkXmlPackfileWriter : public hkPackfileWriter, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		generic <typename BSTSmartPointer_T1, typename BSTSmartPointer_T2>
		interface class BSTSmartPointer;

		public interface class MessageBoxData : public IUIMessageData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSString^ BodyText
			{
				BSString^ __clrcall get();
			}

			property BSTArray<BSString^, BSTArrayHeapAllocator^>^ ButtonText
			{
				BSTArray<BSString^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTSmartPointer<IMessageBoxCallback^, BSTSmartPointerIntrusiveRefCount<IMessageBoxCallback^>^>^ Callback
			{
				BSTSmartPointer<IMessageBoxCallback^, BSTSmartPointerIntrusiveRefCount<IMessageBoxCallback^>^>^ __clrcall get();
			}
		};

		public interface class BSNavmeshTriangleDoorPortal : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSTSmartPointer<BSPathingDoor^, BSTSmartPointerIntrusiveRefCount<BSPathingDoor^>^>^ Door
			{
				BSTSmartPointer<BSPathingDoor^, BSTSmartPointerIntrusiveRefCount<BSPathingDoor^>^>^ __clrcall get();
			}

			property System::UInt16 OwningTriangleIndex
			{
				System::UInt16 __clrcall get();
			}
		};

		public interface class BSNavmeshClosedDoorInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSTSmartPointer<BSPathingDoor^, BSTSmartPointerIntrusiveRefCount<BSPathingDoor^>^>^ Door
			{
				BSTSmartPointer<BSPathingDoor^, BSTSmartPointerIntrusiveRefCount<BSPathingDoor^>^>^ __clrcall get();
			}

			property System::UInt16 TriangleIndex
			{
				System::UInt16 __clrcall get();
			}
		};

		public interface class BSNavmeshInfoSearch : public AStarSearch<BSNavmeshInfo^, BSTSmartPointer<BSPathingDoor^, unknown^>^, UnknownGenArg_22^>, public NetScriptFramework::IVirtualObject { };

		public interface class BSResourceNiBinaryStream : public NiBinaryStream, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSTSmartPointer<BSResource::Stream^, BSTSmartPointerIntrusiveRefCount<BSResource::Stream^>^>^ Stream
			{
				BSTSmartPointer<BSResource::Stream^, BSTSmartPointerIntrusiveRefCount<BSResource::Stream^>^>^ __clrcall get();
			}

			property System::IntPtr Buffer
			{
				System::IntPtr __clrcall get();
			}

			property System::UInt32 StreamPos
			{
				System::UInt32 __clrcall get();
			}

			property unknown^ LastError
			{
				unknown^ __clrcall get();
			}
		};

		interface class BSScript::Stack : public BSIntrusiveRefCounted, public NetScriptFramework::IMemoryObject
		{
		public:
			enum class StackStates : System::Int32
			{
				Running = 0,
				Finished = 1,
				WaitingOnMemory = 2,
				WaitingOnLatentFunction = 3,
				WaitingOnOtherStackForCall = 4,
				WaitingOnOtherStackForReturn = 5,
				WaitingOnOtherStackForReturnNoPop = 6,
				RetryReturnNoPop = 7,
				RetryCall = 8,
			};

			enum class FreezeStates : System::Int32
			{
				Unfrozen = 0,
				Freezing = 1,
				Frozen = 2,
			};

			property System::IntPtr Policy
			{
				System::IntPtr __clrcall get();
			}

			property System::IntPtr ProfilePolicy
			{
				System::IntPtr __clrcall get();
			}

			property BSTArray<unknown^, BSTSmallArrayHeapAllocator<UnknownGenArg_0x30^>^>^ Pages
			{
				BSTArray<unknown^, BSTSmallArrayHeapAllocator<UnknownGenArg_0x30^>^>^ __clrcall get();
			}

			property System::UInt32 Frames
			{
				System::UInt32 __clrcall get();
			}

			property System::IntPtr Top
			{
				System::IntPtr __clrcall get();
			}

			property BSScript::Stack::StackStates StackState
			{
				BSScript::Stack::StackStates __clrcall get();
			}

			property BSScript::Stack::FreezeStates FreezeState
			{
				BSScript::Stack::FreezeStates __clrcall get();
			}

			property BSScript::Variable^ ReturnValue
			{
				BSScript::Variable^ __clrcall get();
			}

			property System::UInt32 StackId
			{
				System::UInt32 __clrcall get();
			}

			property System::Int32 StackType
			{
				System::Int32 __clrcall get();
			}

			property BSTSmartPointer<BSScript::Internal::CodeTasklet^, BSTSmartPointerIntrusiveRefCount<BSScript::Internal::CodeTasklet^>^>^ OwningTasklet
			{
				BSTSmartPointer<BSScript::Internal::CodeTasklet^, BSTSmartPointerIntrusiveRefCount<BSScript::Internal::CodeTasklet^>^>^ __clrcall get();
			}

			property BSTSmartPointer<BSScript::IStackCallbackFunctor^, BSTSmartPointerIntrusiveRefCount<BSScript::IStackCallbackFunctor^>^>^ Callback
			{
				BSTSmartPointer<BSScript::IStackCallbackFunctor^, BSTSmartPointerIntrusiveRefCount<BSScript::IStackCallbackFunctor^>^>^ __clrcall get();
			}

			property BSTSmartPointer<BSScript::Stack^, BSTSmartPointerIntrusiveRefCount<BSScript::Stack^>^>^ NextStack
			{
				BSTSmartPointer<BSScript::Stack^, BSTSmartPointerIntrusiveRefCount<BSScript::Stack^>^>^ __clrcall get();
			}
		};

		interface class BSScript::StackFrame : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSScript::Stack^ ParentStack
			{
				BSScript::Stack^ __clrcall get();
			}

			property BSScript::StackFrame^ PreviousFrame
			{
				BSScript::StackFrame^ __clrcall get();
			}

			property BSTSmartPointer<BSScript::IFunction^, BSTSmartPointerIntrusiveRefCount<BSScript::IFunction^>^>^ OwningFunction
			{
				BSTSmartPointer<BSScript::IFunction^, BSTSmartPointerIntrusiveRefCount<BSScript::IFunction^>^>^ __clrcall get();
			}

			property BSTSmartPointer<BSScript::ObjectTypeInfo^, BSTSmartPointerIntrusiveRefCount<BSScript::ObjectTypeInfo^>^>^ OwningObjectType
			{
				BSTSmartPointer<BSScript::ObjectTypeInfo^, BSTSmartPointerIntrusiveRefCount<BSScript::ObjectTypeInfo^>^>^ __clrcall get();
			}

			property System::UInt32 InstructionPointer
			{
				System::UInt32 __clrcall get();
			}

			property BSScript::Variable^ Self
			{
				BSScript::Variable^ __clrcall get();
			}

			property System::UInt32 Size
			{
				System::UInt32 __clrcall get();
			}

			property System::Boolean InstructionsValid
			{
				System::Boolean __clrcall get();
			}
		};

		generic <typename BSTFreeListElem_T1>
		public interface class BSTFreeListElem : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSTFreeListElem_T1 Element
			{
				BSTFreeListElem_T1 __clrcall get();
			}

			property BSTFreeListElem<BSTFreeListElem_T1>^ Next
			{
				BSTFreeListElem<BSTFreeListElem_T1>^ __clrcall get();
			}
		};

		public interface class MenuControls : public BSTEventSink<InputEvent^>, public BSTEventSink<MenuModeChangeEvent^>, public BSTSingletonSDM<MenuControls^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class QueuedReg : public NetScriptFramework::IMemoryObject
			{
			public:
				property MenuEventHandler^ Handler
				{
					MenuEventHandler^ __clrcall get();
				}

				property System::Boolean Add
				{
					System::Boolean __clrcall get();
				}
			};

			property BSTArray<MenuEventHandler^, BSTArrayHeapAllocator^>^ Handlers
			{
				BSTArray<MenuEventHandler^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<unknown^, BSTArrayHeapAllocator^>^ RegBuffer
			{
				BSTArray<unknown^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTSmartPointer<ClickHandler^, BSTSmartPointerIntrusiveRefCount<ClickHandler^>^>^ HandlerClick
			{
				BSTSmartPointer<ClickHandler^, BSTSmartPointerIntrusiveRefCount<ClickHandler^>^>^ __clrcall get();
			}

			property BSTSmartPointer<DirectionHandler^, BSTSmartPointerIntrusiveRefCount<DirectionHandler^>^>^ HandlerDirection
			{
				BSTSmartPointer<DirectionHandler^, BSTSmartPointerIntrusiveRefCount<DirectionHandler^>^>^ __clrcall get();
			}

			property BSTSmartPointer<ConsoleOpenHandler^, BSTSmartPointerIntrusiveRefCount<ConsoleOpenHandler^>^>^ HandlerConsoleOpen
			{
				BSTSmartPointer<ConsoleOpenHandler^, BSTSmartPointerIntrusiveRefCount<ConsoleOpenHandler^>^>^ __clrcall get();
			}

			property BSTSmartPointer<QuickSaveLoadHandler^, BSTSmartPointerIntrusiveRefCount<QuickSaveLoadHandler^>^>^ HandlerQuickSaveLoad
			{
				BSTSmartPointer<QuickSaveLoadHandler^, BSTSmartPointerIntrusiveRefCount<QuickSaveLoadHandler^>^>^ __clrcall get();
			}

			property BSTSmartPointer<MenuOpenHandler^, BSTSmartPointerIntrusiveRefCount<MenuOpenHandler^>^>^ HandlerMenuOpen
			{
				BSTSmartPointer<MenuOpenHandler^, BSTSmartPointerIntrusiveRefCount<MenuOpenHandler^>^>^ __clrcall get();
			}

			property BSTSmartPointer<FavoritesHandler^, BSTSmartPointerIntrusiveRefCount<FavoritesHandler^>^>^ HandlerFavorites
			{
				BSTSmartPointer<FavoritesHandler^, BSTSmartPointerIntrusiveRefCount<FavoritesHandler^>^>^ __clrcall get();
			}

			property BSTSmartPointer<ScreenshotHandler^, BSTSmartPointerIntrusiveRefCount<ScreenshotHandler^>^>^ HandlerScreenshot
			{
				BSTSmartPointer<ScreenshotHandler^, BSTSmartPointerIntrusiveRefCount<ScreenshotHandler^>^>^ __clrcall get();
			}

			property System::Boolean IsProcessing
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean BeastForm
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean RemapMode
			{
				System::Boolean __clrcall get();
			}

			static property MenuControls^ Instance
			{
				MenuControls^ __clrcall get()
				{
					return NetScriptFramework::MemoryObject::FromAddress<MenuControls^>(NetScriptFramework::Memory::ReadPointer(__VIDS::VID515124.Value, false));
				}
			}
		};

		public interface class ExtraInteraction : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSTSmartPointer<RefrInteraction^, BSTSmartPointerIntrusiveRefCount<RefrInteraction^>^>^ Interaction
			{
				BSTSmartPointer<RefrInteraction^, BSTSmartPointerIntrusiveRefCount<RefrInteraction^>^>^ __clrcall get();
			}
		};

		public interface class MovementArbitrationMaxWeightParameters : public MovementArbitrationMaxWeight<BSTSmartPointer<IMovementParameters^, unknown^>^>, public NetScriptFramework::IVirtualObject { };

		interface class BSScript::ObjectTypeInfo : public BSIntrusiveRefCounted, public NetScriptFramework::IMemoryObject
		{
		public:
			property BSFixedString^ Name
			{
				BSFixedString^ __clrcall get();
			}

			property BSTSmartPointer<BSScript::ObjectTypeInfo^, BSTSmartPointerIntrusiveRefCount<BSScript::ObjectTypeInfo^>^>^ ParentTypeInfo
			{
				BSTSmartPointer<BSScript::ObjectTypeInfo^, BSTSmartPointerIntrusiveRefCount<BSScript::ObjectTypeInfo^>^>^ __clrcall get();
			}

			property BSFixedString^ DocString
			{
				BSFixedString^ __clrcall get();
			}
		};

		interface class BSScript::Variable::ValueData : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Int32 IntValue
			{
				System::Int32 __clrcall get();
			}

			property System::UInt32 UintValue
			{
				System::UInt32 __clrcall get();
			}

			property System::Single FloatValue
			{
				System::Single __clrcall get();
			}

			property System::Boolean BoolValue
			{
				System::Boolean __clrcall get();
			}

			property System::IntPtr PointerValue
			{
				System::IntPtr __clrcall get();
			}

			property BSTSmartPointer<BSScript::Array^, BSTSmartPointerIntrusiveRefCount<BSScript::Array^>^>^ ArrayValue
			{
				BSTSmartPointer<BSScript::Array^, BSTSmartPointerIntrusiveRefCount<BSScript::Array^>^>^ __clrcall get();
			}

			property BSTSmartPointer<BSScript::Object^, BSTSmartPointerIntrusiveRefCount<BSScript::Object^>^>^ ObjectValue
			{
				BSTSmartPointer<BSScript::Object^, BSTSmartPointerIntrusiveRefCount<BSScript::Object^>^>^ __clrcall get();
			}

			property BSFixedString^ StringValue
			{
				BSFixedString^ __clrcall get();
			}
		};

		interface class BSScript::Object : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::UInt32 PackedData
			{
				System::UInt32 __clrcall get();
			}

			property BSTSmartPointer<BSScript::ObjectTypeInfo^, BSTSmartPointerIntrusiveRefCount<BSScript::ObjectTypeInfo^>^>^ ObjectType
			{
				BSTSmartPointer<BSScript::ObjectTypeInfo^, BSTSmartPointerIntrusiveRefCount<BSScript::ObjectTypeInfo^>^>^ __clrcall get();
			}

			property BSFixedString^ CurrentState
			{
				BSFixedString^ __clrcall get();
			}

			property System::IntPtr LockStructure
			{
				System::IntPtr __clrcall get();
			}

			property System::IntPtr Handle
			{
				System::IntPtr __clrcall get();
			}

			property System::Int32 RefCountAndHandleLock
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class BSPrecomputedNavmeshInfoSearch : public BSNavmeshInfoSearch, public NetScriptFramework::IVirtualObject { };

		public interface class BSResourceStreamParser : public BSResourceNiBinaryStream, public BSStreamParserData, public NetScriptFramework::IVirtualObject { };

		generic <typename BSTFreeList_T1>
		public interface class BSTFreeList : public NetScriptFramework::IVirtualObject
		{
		public:
			property System::UInt32 Lock
			{
				System::UInt32 __clrcall get();
			}

			property BSTFreeListElem<unknown^>^ Free
			{
				BSTFreeListElem<unknown^>^ __clrcall get();
			}
		};

		generic <typename BSTStaticFreeList_T1, typename BSTStaticFreeList_T2>
		public interface class BSTStaticFreeList : public BSTFreeList<BSTStaticFreeList_T1>, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::IntPtr Elements
			{
				System::IntPtr __clrcall get();
			}
		};

		interface class hkpWorld;

		public interface class hkpSimulation : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class LastProcessingStep : System::Int32
			{
				INTEGRATE = 0,
				COLLIDE = 1,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			enum class FindContacts : System::Int32
			{
				FIND_CONTACTS_DEFAULT = 0,
				FIND_CONTACTS_EXTRA = 1,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class ResetCollisionInformation : System::Int32
			{
				RESET_TOI = 1,
				RESET_TIM = 2,
				RESET_AABB = 4,
				RESET_ALL = 7,
			};
		};

		public interface class hkpEntityEntityBroadPhaseListener : public hkReferencedObject, public hkpBroadPhaseListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpWorldOperationQueue : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpWorldExtension : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpWorldObject : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class BroadPhaseType : System::Int32
			{
				BROAD_PHASE_INVALID = 0,
				BROAD_PHASE_ENTITY = 1,
				BROAD_PHASE_PHANTOM = 2,
				BROAD_PHASE_BORDER = 3,
				BROAD_PHASE_MAX_ID = 4,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			enum class MtChecks : System::Int32
			{
				MULTI_THREADING_CHECKS_ENABLE = 0,
				MULTI_THREADING_CHECKS_IGNORE = 1,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			property hkpWorld^ m_world
			{
				hkpWorld^ __clrcall get();

				void __clrcall set(hkpWorld^ value);
			}

			property System::UInt64 m_userData
			{
				System::UInt64 __clrcall get();

				void __clrcall set(System::UInt64 value);
			}

			property hkpLinkedCollidable^ m_collidable
			{
				hkpLinkedCollidable^ __clrcall get();
			}

			property hkStringPtr^ m_name
			{
				hkStringPtr^ __clrcall get();
			}
		};

		public interface class hkpDynamicsContactMgr : public hkpContactMgr, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSuspendInactiveAgentsUtil : public hkReferencedObject, public hkpIslandActivationListener, public hkpWorldDeletionListener, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class OperationMode : System::Int32
			{
				SUSPEND_1N_AGENT_TRACKS = 0,
				SUSPEND_ALL_COLLECTION_AGENTS = 1,
				SUSPEND_UNUSED_CACHES = 2,
			};

			enum class InitContactsMode : System::Int32
			{
				INIT_CONTACTS_FIND = 0,
				INIT_CONTACTS_DO_NOT_FIND = 1,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpAabbTreeWorldManager : public hkpTreeWorldManager, public hkpEntityListener, public hkpPhantomListener, public hkpIslandActivationListener, public hkpWorldPostSimulationListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpFirstPersonCharacter : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class CharacterControls : public NetScriptFramework::IMemoryObject { };

			enum class ControlFlags : System::Int32
			{
				NO_FLAGS = 0,
				CAN_DETACH_FROM_CHAR = 1,
				HAS_USER_CONTROL = 2,
				MAKE_OCCLUDING_OBJECTS_TRANSPARENT = 4,
				DISABLE_JUMP = 8,
				INVERT_UP_DOWN = 0x10,
				DISABLE_DPAD = 0x20,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpKdTreeWorldManager : public hkpTreeWorldManager, public hkpEntityListener, public hkpPhantomListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpPhantom : public hkpWorldObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCollisionCallbackUtil : public hkpWorldExtension, public hkpConstraintListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpContinuousSimulation : public hkpSimulation, public NetScriptFramework::IVirtualObject { };

		public interface class hkpReportContactMgr : public hkpDynamicsContactMgr, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Factory : public hkpContactMgrFactory, public NetScriptFramework::IVirtualObject { };
		};

		public interface class hkpContactPointAddedEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Type : System::Int32
			{
				TYPE_TOI = 0,
				TYPE_MANIFOLD = 1,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkSpuCollisionCallbackUtil::Event : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class EventType : System::Int32
			{
				CONTACT_POINT_ADDED = 0,
				CONTACT_POINT_PROCESS = 1,
				CONTACT_POINT_REMOVED = 2,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpContactPointRemovedEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpContactProcessEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpFirstPersonCharacterCinfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::AddReference : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::RemoveReference : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::SetWorldObjectShape : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::UpdateWorldObjectShape : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpShapePhantom : public hkpPhantom, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpBroadPhaseBorder : public hkReferencedObject, public hkpWorldDeletionListener, public hkpPhantomOverlapListener, public hkpWorldPostSimulationListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpAabbPhantom : public hkpPhantom, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class OrderByUid : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpMultiThreadedSimulation : public hkpContinuousSimulation, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MtBroadPhaseBorderListener : public hkpBroadPhaseListener, public NetScriptFramework::IVirtualObject { };

			interface class MtEntityEntityBroadPhaseListener : public hkpBroadPhaseListener, public NetScriptFramework::IVirtualObject { };

			interface class MtPhantomBroadPhaseListener : public hkpBroadPhaseListener, public NetScriptFramework::IVirtualObject { };
		};

		public interface class hkpCollidableAddedEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCollidableRemovedEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpManifoldPointAddedEvent : public hkpContactPointAddedEvent, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpToiPointAddedEvent : public hkpContactPointAddedEvent, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkSpuCollisionCallbackUtil::ContactPointAddedEvent : public hkSpuCollisionCallbackUtil::Event, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkSpuCollisionCallbackUtil::ContactPointProcessEvent : public hkSpuCollisionCallbackUtil::Event, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class ContactPoint : public hkContactPoint, public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkSpuCollisionCallbackUtil::ContactPointRemovedEvent : public hkSpuCollisionCallbackUtil::Event, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::AddPhantom : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::AddPhantomBatch : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::RemovePhantom : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::RemovePhantomBatch : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::UpdateFilterOnPhantom : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::UpdatePhantomBP : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCharacterProxy : public hkReferencedObject, public hkpEntityListener, public hkpPhantomListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class BGSWaterCollisionManager::bshkAutoWater : public hkpAabbPhantom, public BGSWaterCollisionManager::BGSWaterUpdateI, public NetScriptFramework::IVirtualObject { };

		public interface class hkpCharacterProxyCinfo : public hkpCharacterControllerCinfo, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkaDetectRagdollPenetration::Setup : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkAvoidBox : public hkpAabbPhantom, public NetScriptFramework::IVirtualObject { };

		public interface class hkpCachingShapePhantom : public hkpShapePhantom, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class CollisionDetail : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class OrderByUid : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSimpleShapePhantom : public hkpShapePhantom, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class CollisionDetail : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class OrderByUid : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpVehicleLinearCastWheelCollide::WheelState : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpVehicleRayCastWheelCollide : public hkpVehicleWheelCollide, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpWindRegion : public hkReferencedObject, public hkpWorldPostSimulationListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class ahkpCharacterProxy : public hkpCharacterProxy, public NetScriptFramework::IVirtualObject { };

		public interface class bhkCharacterProxyCinfo : public hkpCharacterProxyCinfo, public hkSerializableCinfo, public NetScriptFramework::IVirtualObject { };

		public interface class hkpCharacterProxyIntegrateCommand : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpCharacterProxyJobUtil::CharacterJobBatch : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		generic <typename hkInplaceArray_T1, typename hkInplaceArray_T2, typename hkInplaceArray_T3>
		interface class hkInplaceArray;

		public interface class hkpAllCdPointCollector : public hkpCdPointCollector, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpAllCdBodyPairCollector : public hkpCdBodyPairCollector, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpAllRayHitCollector : public hkpRayHitCollector, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpMultiRayConvexAgent : public hkpIterativeLinearCastAgent, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class ContactPointInfo : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpMultiSphereAgent : public hkpCollisionAgent, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class KeyAgentPair : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpShapeCollectionAgent : public hkpCollisionAgent, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class KeyAgentPair : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpDynamicsCpIdMgr : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpAgentNnTrack : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkBinaryPackfileReader : public hkPackfileReader, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class BinaryPackfileData : public hkPackfileData, public NetScriptFramework::IVirtualObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class PackfileObject : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkGeometryMatchingUtils::FullMap : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class VertexTriangleEntry : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class VertexHit : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		interface class hkGeometryMatchingUtils::TriangleMap : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Hit : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpBreakOffPartsListener::ContactImpulseLimitBreachedEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class PointInfo;
		};

		public interface class hkpEntityContactCollector : public hkpContactListener, public hkpEntityListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class ContactPoint : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpContactUpdateEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpVehicleBrake::WheelBreakingOutput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpVehicleSteering::SteeringAnglesOutput : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkStringBuf : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class ReplaceType : System::Int32
			{
				REPLACE_ONE = 0,
				REPLACE_ALL = 1,
			};
		};

		public interface class hkXmlObjectWriter : public hkObjectWriter, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class NameFromAddress : public NetScriptFramework::IVirtualObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class SequentialNameFromAddress : public hkXmlObjectWriter::NameFromAddress, public NetScriptFramework::IVirtualObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class bhkCharacterPointCollector : public hkpAllCdPointCollector, public NetScriptFramework::IVirtualObject { };

		public interface class bhkFilteredCdBodyCollector : public hkpAllCdBodyPairCollector, public NetScriptFramework::IVirtualObject { };

		public interface class hkpCpuCharacterProxyCollector : public hkpAllCdPointCollector, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpConstraintInstance;

		public interface class hkpViolatedConstraintArray : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaRagdollInstance : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSimpleContactConstraintData : public hkpConstraintData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConstraintSchemaInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpBreakableConstraintEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConstraintBrokenEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConstraintInfoExtended : public hkpConstraintInfo, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConstraintRepairedEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpImpulseLimitBreachedElem : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpContactImpulseLimitBreachedListenerInfo::SingleImpulseElem : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::AddConstraint : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::RemoveConstraint : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSimpleConstraintContactMgr : public hkpDynamicsContactMgr, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Factory : public hkpContactMgrFactory, public NetScriptFramework::IVirtualObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaRagdollRigidBodyController : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConstraintQueryIn : public hkpConstraintQueryStepInfo, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpContactImpulseLimitBreachedListenerInfo::ListenerData : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpContactPointConfirmedEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpCharacterRigidBody::VertPointInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpBreakOffPartsListener::ContactImpulseLimitBreachedEvent::PointInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCollisionEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class CallbackSource : System::Int32
			{
				SOURCE_A = 0,
				SOURCE_B = 1,
				SOURCE_WORLD = 2,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConstraintSolverResources : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class VelocityAccumTransformBackup : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			generic <typename BufferState_T1>
			interface class BufferState : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpEndOfStepCallbackUtil::Collision : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpContactPointEvent : public hkpCollisionEvent, public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Type : System::Int32
			{
				TYPE_TOI = 0,
				TYPE_EXPAND_MANIFOLD = 1,
				TYPE_MANIFOLD = 2,
				TYPE_MANIFOLD_AT_END_OF_STEP = 3,
				TYPE_MANIFOLD_FROM_SAVED_CONTACT_POINT = 4,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpEndOfStepCallbackUtil::NewCollision : public hkpEndOfStepCallbackUtil::Collision, public NetScriptFramework::IMemoryObject { };

		interface class hkCriticalSection;

		public interface class hkpBroadPhase : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class BroadPhaseType : System::Int32
			{
				BROADPHASE_16BIT = 0,
				BROADPHASE_32BIT = 1,
				BROADPHASE_HYBRID = 2,
			};

			enum class Capabilities : System::Int32
			{
				SUPPORT_SPU_RAY_CAST = 1,
				SUPPORT_SPU_LINEAR_CAST = 2,
				SUPPORT_SPU_AABB_QUERY = 4,
				SUPPORT_SPU_CLOSEST_POINTS = 8,
				SUPPORT_SPU_CHAR_PROXY_INT = 0x10,
				ISA_SWEEP_AND_PRUNE = 0x1000,
			};

			interface class Enable32BitBroadphase : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class hkpCastAabbInput : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class hkpCastRayInput : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDefaultMemoryTracker : public hkMemoryTracker, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class ClassAlloc : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkProcessFactory : public hkReferencedObject, public hkSingleton<hkProcessFactory^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class ProcessIdPair : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaMultithreadedChunkCache : public hkaDefaultChunkCache, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkCheckDeterminismUtil : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class Mode : System::Int32
			{
				MODE_IDLE = 0,
				MODE_WRITE = 1,
				MODE_COMPARE = 2,
			};

			interface class Fuid : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class JobInfo : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkServerDebugDisplayHandler : public hkReferencedObject, public hkProcess, public hkDebugDisplayHandler, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class UnbuiltGeometryInfo : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkStatsAllocator : public hkMemoryAllocator, public NetScriptFramework::IVirtualObject { };

		public interface class hkBlockStreamAllocator : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkCriticalSectionLock : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDebugDisplay : public hkReferencedObject, public hkSingleton<hkDebugDisplay^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkFreeListAllocator : public hkMemoryAllocator, public hkMemoryAllocator::ExtendedInterface, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class FreeListCinfo : public NetScriptFramework::IMemoryObject { };

			interface class Cinfo : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkLeakDetectAllocator : public hkMemoryAllocator, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class AllocInfo : public NetScriptFramework::IMemoryObject { };

			interface class Dynamic;
		};

		public interface class hkpBreakOffPartsUtil : public hkpWorldExtension, public hkpContactImpulseLimitBreachedListener, public hkpEntityListener, public hkpConstraintListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class GameControlFunctor : public hkReferencedObject, public NetScriptFramework::IVirtualObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			enum class BreakOffGameControlResult : System::Int32
			{
				PROCESSING_ERROR = 0,
				BREAK_OFF = 1,
				DO_NOT_BREAK_OFF = 2,
				USE_LIMIT = 3,
			};

			interface class LimitContactImpulseUtil : public hkReferencedObject, public hkpCollisionListener, public NetScriptFramework::IVirtualObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class LimitContactImpulseUtilCpuOnly : public hkpBreakOffPartsUtil::LimitContactImpulseUtil, public NetScriptFramework::IVirtualObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class LimitContactImpulseUtilDefault : public hkpBreakOffPartsUtil::LimitContactImpulseUtil, public NetScriptFramework::IVirtualObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkp3AxisSweep : public hkpBroadPhase, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class hkpBpNode : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class hkpBpMarker : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class hkpBpEndPoint : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			enum class hkpBpMarkerUse : System::Int32
			{
				HK_BP_NO_MARKER = 0,
				HK_BP_USE_MARKER = 1,
			};

			enum class hkpBpQuerySingleType : System::Int32
			{
				HK_BP_REPORT_HANDLES = 0,
				HK_BP_REPORT_NODES = 1,
				HK_BP_COLLECTOR = 2,
			};

			enum class MarkerHandling : System::Int32
			{
				MARKERS_ADD_NEW_OVERLAPS = 0,
				MARKERS_IGNORE = 1,
				MARKERS_REMOVE_NEW_OVERLAPS = 2,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class hkpBpAxis : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		generic <typename hkPadSpu_T1>
		public interface class hkPadSpu : public NetScriptFramework::IMemoryObject { };

		public interface class hkTrackerSnapshot : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Allocation : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkpHybridBroadPhase : public hkpBroadPhase, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Handle : public NetScriptFramework::IMemoryObject
			{
			public:
				enum class BitField_8 : System::UInt32
				{
					m_spHandle_0 = 1,
					m_spHandle_1 = 2,
					m_spHandle_2 = 4,
					m_spHandle_3 = 8,
					m_spHandle_4 = 0x10,
					m_spHandle_5 = 0x20,
					m_spHandle_6 = 0x40,
					m_spHandle_7 = 0x80,
					m_spHandle_8 = 0x100,
					m_spHandle_9 = 0x200,
					m_spHandle_10 = 0x400,
					m_spHandle_11 = 0x800,
					m_spHandle_12 = 0x1000,
					m_spHandle_13 = 0x2000,
					m_spHandle_14 = 0x4000,
					m_spHandle_15 = 0x8000,
					m_spHandle_16 = 0x10000,
					m_spHandle_17 = 0x20000,
					m_spHandle_18 = 0x40000,
					m_spHandle_19 = 0x80000,
					m_spHandle_20 = 0x100000,
					m_group_0 = 0x200000,
					m_group_1 = 0x400000,
					m_group_2 = 0x800000,
					m_group_3 = 0x1000000,
					m_skips_0 = 0x2000000,
					m_skips_1 = 0x4000000,
					m_skips_2 = 0x8000000,
					m_skips_3 = 0x10000000,
					m_skips_4 = 0x20000000,
					m_skips_5 = 0x40000000,
					m_skips_6 = 0x80000000,
				};

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			enum class Group : System::Int32
			{
				GROUP_GHOST = 0,
				GROUP_PHANTOM = 1,
				GROUP_STATIC = 2,
				GROUP_DYNAMIC = 3,
				GROUP_USER = 4,
				GROUPS_COUNT = 5,
				FIRST_QUERY_GROUP = 1,
			};

			enum class GroupsMasks : System::Int32
			{
				ALL_GROUPS = -1,
				ALL_GROUPS_BUT_PHANTOM_AND_GHOST = -4,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkBlockStreamTlAllocator : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCharacterProxyIntegrateJob : public hkpCharacterProxyJob, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpWorldGetClosestPointsJob : public hkpCollisionQueryJob, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpWorldLinearCastJob : public hkpCollisionQueryJob, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpWorldRayCastJob : public hkpRayCastQueryJob, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpWorldRayCastWithAutoBundleJob : public hkpRayCastQueryJob, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkTrackerScanSnapshot : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Block : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		generic <typename hkPointerMultiMap_T1, typename hkPointerMultiMap_T2>
		public interface class hkPointerMultiMap : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkTrackerScanCalculator : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Unknown : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkgpVertexTriangleTopologyBase : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Triangle : public NetScriptFramework::IMemoryObject { };

			enum class CheckFlag : System::Int32
			{
				CHECK_FLAG_NULL_EDGE = 1,
				CHECK_FLAG_ALL = 1,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class Edge : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkCommandRouter : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		generic <typename hkgpVertexTriangleTopology_T1>
		public interface class hkgpVertexTriangleTopology : public hkgpVertexTriangleTopologyBase, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Edge : public NetScriptFramework::IMemoryObject { };
		};

		interface class BGSSoundDescriptorForm;

		public interface class BGSPickupPutdownSounds : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			property BGSSoundDescriptorForm^ PickupSound
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}

			property BGSSoundDescriptorForm^ PutdownSound
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}
		};

		interface class TESQuest;

		public interface class BGSBaseAlias : public NetScriptFramework::IVirtualObject
		{
		public:
			enum class BaseAliasFlags : System::UInt32
			{
				None = 0,
				Reserves = 1,
				Optional = 2,
				QuestObject = 4,
				AllowReuse = 8,
				AllowDead = 0x10,
				LoadedOnly = 0x20,
				Essential = 0x40,
				AllowDisabled = 0x80,
				StoreName = 0x100,
				AllowReserved = 0x200,
				Protected = 0x400,
				ForcedFromAlias = 0x800,
				AllowDestroyed = 0x1000,
				FindPlayerClosest = 0x2000,
				UsesNames = 0x4000,
				InitiallyDisabled = 0x8000,
				AllowCleared = 0x10000,
				ClearNameOnRemove = 0x20000,
				ActorsOnly = 0x40000,
				Transient = 0x80000,
				ExternalLink = 0x100000,
				NoPickpocket = 0x200000,
				DataAlias = 0x400000,
				SceneOptional = 0x1000000,
				CreateIn = 0x80000000,
			};

			enum class BaseAliasFillTypes : System::Int16
			{
				Conditions = 0,
				Forced = 1,
				FromAlias = 2,
				FromEvent = 3,
				Created = 4,
				FromExternal = 5,
				UniqueActor = 6,
				NearAlias = 7,
			};

			property BSFixedString^ AliasName
			{
				BSFixedString^ __clrcall get();
			}

			/// <summary>
			/// Gets the parent quest where this alias is.
			/// </summary>
			property TESQuest^ OwnerQuest
			{
				TESQuest^ __clrcall get();
			}

			property System::Int32 AliasID
			{
				System::Int32 __clrcall get();
			}

			property BGSBaseAlias::BaseAliasFlags AliasFlags
			{
				BGSBaseAlias::BaseAliasFlags __clrcall get();
			}

			property BGSBaseAlias::BaseAliasFillTypes AliasFillType
			{
				BGSBaseAlias::BaseAliasFillTypes __clrcall get();
			}
		};

		public interface class BGSStoryTeller : public BSTEventSink<TESQuestStageItemDoneEvent^>, public BSTSingletonSDM<BGSStoryTeller^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSTArray<TESQuest^, BSTArrayHeapAllocator^>^ QueuedStartQuests
			{
				BSTArray<TESQuest^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<TESQuest^, BSTArrayHeapAllocator^>^ RunningQuests
			{
				BSTArray<TESQuest^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<TESQuest^, BSTArrayHeapAllocator^>^ QueuedStopQuests
			{
				BSTArray<TESQuest^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<TESQuest^, BSTArrayHeapAllocator^>^ InfoClearQuests
			{
				BSTArray<TESQuest^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<TESQuest^, BSTArrayHeapAllocator^>^ HelloTopicQuests
			{
				BSTArray<TESQuest^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<TESQuest^, BSTArrayHeapAllocator^>^ GreetingTopicQuests
			{
				BSTArray<TESQuest^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property System::Boolean StartUpQuestsInitialized
			{
				System::Boolean __clrcall get();
			}

			property BSTHashMap2<System::UInt32, BSTArray<BSTTuple<System::UInt32, System::UInt32>^, BSTArrayHeapAllocator^>^>^ QuestStageWaitMap
			{
				BSTHashMap2<System::UInt32, BSTArray<BSTTuple<System::UInt32, System::UInt32>^, BSTArrayHeapAllocator^>^>^ __clrcall get();
			}
		};

		public interface class ExtraFromAlias : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property TESQuest^ Quest
			{
				TESQuest^ __clrcall get();
			}

			property System::UInt32 AliasId
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class BGSLocAlias : public BGSBaseAlias, public NetScriptFramework::IVirtualObject { };

		public interface class BGSRefAlias : public BGSBaseAlias, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class ForcedFillType : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::UInt32 ForcedRefHandle
				{
					System::UInt32 __clrcall get();
				}
			};

			interface class FromEventFillType : public NetScriptFramework::IMemoryObject
			{
			public:
				property QuestEvents ForcedFromEvent
				{
					QuestEvents __clrcall get();
				}

				property System::UInt32 ForcedEventData
				{
					System::UInt32 __clrcall get();
				}
			};

			interface class FromExternalFillType : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESQuest^ ExternalQuest
				{
					TESQuest^ __clrcall get();
				}

				property System::UInt32 ExternalAlias
				{
					System::UInt32 __clrcall get();
				}
			};

			interface class NearAliasFillType : public NetScriptFramework::IMemoryObject
			{
			public:
				enum class NearFillTypes : System::Int32
				{
					LinkedChildren = 0,
					LinkedParents = 1,
				};

				property System::UInt32 NearAlias
				{
					System::UInt32 __clrcall get();
				}

				property BGSRefAlias::NearAliasFillType::NearFillTypes NearFillType
				{
					BGSRefAlias::NearAliasFillType::NearFillTypes __clrcall get();
				}
			};

			interface class GenericFillType;

			interface class FromAliasFillType;

			interface class CreatedFillType;

			interface class UniqueActorFillType;

			interface class GenericFillType : public NetScriptFramework::IMemoryObject
			{
			public:
				property BGSRefAlias::ForcedFillType^ Forced
				{
					BGSRefAlias::ForcedFillType^ __clrcall get();
				}

				property BGSRefAlias::FromAliasFillType^ FromAlias
				{
					BGSRefAlias::FromAliasFillType^ __clrcall get();
				}

				property BGSRefAlias::FromEventFillType^ FromEvent
				{
					BGSRefAlias::FromEventFillType^ __clrcall get();
				}

				property BGSRefAlias::CreatedFillType^ Created
				{
					BGSRefAlias::CreatedFillType^ __clrcall get();
				}

				property BGSRefAlias::FromExternalFillType^ FromExternal
				{
					BGSRefAlias::FromExternalFillType^ __clrcall get();
				}

				property BGSRefAlias::UniqueActorFillType^ UniqueActor
				{
					BGSRefAlias::UniqueActorFillType^ __clrcall get();
				}

				property BGSRefAlias::NearAliasFillType^ NearAlias
				{
					BGSRefAlias::NearAliasFillType^ __clrcall get();
				}
			};

			property BGSRefAlias::GenericFillType^ FillData
			{
				BGSRefAlias::GenericFillType^ __clrcall get();
			}

			property TESCondition^ Conditions
			{
				TESCondition^ __clrcall get();
			}

			/// <summary>
			/// Clears this alias from pointing to anything.
			/// </summary>
			void Clear();

			/// <summary>
			/// Gets or sets the reference that this alias points to.
			/// </summary>
			property TESObjectREFR^ Reference
			{
				TESObjectREFR^ __clrcall get();

				void __clrcall set(TESObjectREFR^ value);
			}
		};

		interface class NiAVObject;

		public interface class SkyObject : public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPointer<NiAVObject^>^ RootNode
			{
				NiPointer<NiAVObject^>^ __clrcall get();
			}
		};

		public interface class NiCollisionObject : public NiObject, public NetScriptFramework::IVirtualObject
		{
		public:
			/// <summary>
			/// Gets the owner object or node.
			/// </summary>
			property NiAVObject^ OwnerObject
			{
				NiAVObject^ __clrcall get();
			}
		};

		public interface class ImageSpaceModifierInstance : public NiObject, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Single Strength
			{
				System::Single __clrcall get();
			}

			property NiPointer<NiAVObject^>^ Target
			{
				NiPointer<NiAVObject^>^ __clrcall get();
			}

			property System::Single Age
			{
				System::Single __clrcall get();
			}

			property System::UInt32 ModifierInstanceFlags
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class bhkNiCollisionObject : public NiCollisionObject, public NetScriptFramework::IVirtualObject
		{
		public:
			/// <summary>
			/// Gets the havok world object wrapper.
			/// </summary>
			property bhkWorldObject^ WorldObject
			{
				bhkWorldObject^ __clrcall get();
			}
		};

		public interface class ImageSpaceModifierInstanceTemp : public ImageSpaceModifierInstance, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Single Duration
			{
				System::Single __clrcall get();
			}
		};

		public interface class ImageSpaceModifierInstanceForm : public ImageSpaceModifierInstance, public NetScriptFramework::IVirtualObject { };

		public interface class NiCollisionData : public NiCollisionObject, public NetScriptFramework::IVirtualObject { };

		public interface class bhkCollisionObject : public bhkNiCollisionObject, public NetScriptFramework::IVirtualObject { };

		public interface class bhkPCollisionObject : public bhkNiCollisionObject, public NetScriptFramework::IVirtualObject { };

		public interface class ImageSpaceModifierInstanceDOF : public ImageSpaceModifierInstanceTemp, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property NetScriptFramework::FixedMemoryArray<System::Single>^ Values
				{
					NetScriptFramework::FixedMemoryArray<System::Single>^ __clrcall get();
				}
			};

			enum class DOFMode : System::SByte
			{
				FrontBack = 0,
				Front = 1,
				Back = 2,
				None = 3,
			};

			enum class DOFDataIndices : System::Int32
			{
				FadeAmount = 0,
				FadeR = 1,
				FadeG = 2,
				FadeB = 3,
				BlurRadius = 4,
				DoubleVisionStrength = 5,
				RadialBlurStrength = 6,
				RadialBlurRampup = 7,
				RadialBlurStart = 8,
				RadialBlurRampdown = 9,
				RadialBlurDownStart = 0xA,
				RadialBlurCenterX = 0xB,
				RadialBlurCenterY = 0xC,
				DOFStrength = 0xD,
				DOFDistance = 0xE,
				DOFRange = 0xF,
				DOFMode = 0x10,
				MotionBlurStrength = 0x11,
			};

			property ImageSpaceModifierInstanceDOF::Data^ DOFData
			{
				ImageSpaceModifierInstanceDOF::Data^ __clrcall get();
			}
		};

		public interface class ImageSpaceModifierInstanceRB : public ImageSpaceModifierInstanceTemp, public NetScriptFramework::IVirtualObject { };

		public interface class bhkBlendCollisionObject : public bhkCollisionObject, public NetScriptFramework::IVirtualObject { };

		public interface class bhkCartTether : public bhkCollisionObject, public NetScriptFramework::IVirtualObject { };

		public interface class bhkSPCollisionObject : public bhkPCollisionObject, public NetScriptFramework::IVirtualObject { };

		public interface class bhkAttachmentCollisionObject : public bhkBlendCollisionObject, public NetScriptFramework::IVirtualObject { };

		public interface class WeaponObject : public bhkBlendCollisionObject, public NetScriptFramework::IVirtualObject { };

		interface class NiNode;

		public interface class ExtraCell3D : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPointer<NiNode^>^ CellNode
			{
				NiPointer<NiNode^>^ __clrcall get();
			}
		};

		public interface class Stars : public SkyObject, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPointer<NiNode^>^ StarsRoot
			{
				NiPointer<NiNode^>^ __clrcall get();
			}

			property System::Single Alpha
			{
				System::Single __clrcall get();
			}
		};

		public interface class DeferredHideLimb : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Single DismemberTimer
			{
				System::Single __clrcall get();
			}

			property System::Int32 LimbIndex
			{
				System::Int32 __clrcall get();
			}

			property NiPointer<NiNode^>^ DismemberedLimbRoot
			{
				NiPointer<NiNode^>^ __clrcall get();
			}

			property NiPointer<NiNode^>^ ReplacementLimb
			{
				NiPointer<NiNode^>^ __clrcall get();
			}

			property DeferredHideLimb^ Next
			{
				DeferredHideLimb^ __clrcall get();
			}

			property System::Boolean Explosion
			{
				System::Boolean __clrcall get();
			}
		};

		interface class TESObjectCELL;

		public interface class BSTempEffect : public NiObject, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Single LifeTime
			{
				System::Single __clrcall get();
			}

			property TESObjectCELL^ Cell
			{
				TESObjectCELL^ __clrcall get();
			}

			property System::Single Age
			{
				System::Single __clrcall get();
			}

			property System::Boolean Initialized
			{
				System::Boolean __clrcall get();
			}

			property System::UInt32 EffectId
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class TESCellFullyLoadedEvent : public NetScriptFramework::IMemoryObject
		{
		public:
			property TESObjectCELL^ Cell
			{
				TESObjectCELL^ __clrcall get();
			}
		};

		public interface class ExtraPersistentCell : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property TESObjectCELL^ PersistentCell
			{
				TESObjectCELL^ __clrcall get();
			}
		};

		public interface class ExtraWaterCurrentZoneData : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSTHashMap2<unknown^, System::IntPtr>^ ReferenceToActionMap
			{
				BSTHashMap2<unknown^, System::IntPtr>^ __clrcall get();
			}

			property System::IntPtr CellAction
			{
				System::IntPtr __clrcall get();
			}

			property TESObjectCELL^ AffectedCell
			{
				TESObjectCELL^ __clrcall get();
			}

			property NiPoint3^ AngularVelocity
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ LinearVelocity
			{
				NiPoint3^ __clrcall get();
			}
		};

		public interface class GridCellArray : public GridArray, public NetScriptFramework::IVirtualObject
		{
		public:
			/// <summary>
			/// Gets the cell in the grid. The arguments are not cell coordinates in world space but rather cell index in the grid!
			/// </summary>
			/// <param name="x">The index of cell in grid.</param>
			/// <param name="y">The index of cell in grid.</param>
			TESObjectCELL^ GetCell(System::Int32 x, System::Int32 y);
		};

		public interface class TESFile : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class ErrorsEnum : System::Int32
			{
				None = 0,
				NotFound = 1,
				NoFile = 2,
				NoForm = 3,
				NoChunk = 4,
				NoID = 5,
				BadFile = 6,
				BadID = 7,
				FormOpen = 8,
				FileOpen = 9,
				WriteFailure = 0xA,
				InvalidFile = 0xB,
				FileInUse = 0xC,
				CreateFailure = 0xD,
			};

			interface class FormData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::UInt32 Form
				{
					System::UInt32 __clrcall get();
				}

				property System::UInt32 Length
				{
					System::UInt32 __clrcall get();
				}

				property System::UInt32 Flags
				{
					System::UInt32 __clrcall get();
				}

				property System::UInt32 FormId
				{
					System::UInt32 __clrcall get();
				}

				property System::UInt32 VersionControl
				{
					System::UInt32 __clrcall get();
				}

				property System::UInt16 FormVersion
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 VcVersion
				{
					System::UInt16 __clrcall get();
				}
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Master = 1,
				Altered = 2,
				Checked = 4,
				Active = 8,
				OptimizedFile = 0x10,
				TempIDOwner = 0x20,
				Delocalized = 0x80,
				PrecalcDataOnly = 0x100,
				SmallFile = 0x200,
			};

			interface class FormGroup : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESFile::FormData^ GroupData
				{
					TESFile::FormData^ __clrcall get();
				}

				property System::UInt64 GroupOffset
				{
					System::UInt64 __clrcall get();
				}
			};

			property TESFile::ErrorsEnum LastError
			{
				TESFile::ErrorsEnum __clrcall get();
			}

			property TESFile^ ThreadSafeParent
			{
				TESFile^ __clrcall get();
			}

			property System::IntPtr ThreadSafeFileMap
			{
				System::IntPtr __clrcall get();
			}

			property BSFile^ LockedFile
			{
				BSFile^ __clrcall get();
			}

			property BSFile^ File
			{
				BSFile^ __clrcall get();
			}

			property System::IntPtr FormUserDataBitArray
			{
				System::IntPtr __clrcall get();
			}

			property System::IntPtr FormVersionBitArray
			{
				System::IntPtr __clrcall get();
			}

			property System::IntPtr FormIdBitArray
			{
				System::IntPtr __clrcall get();
			}

			property System::IntPtr Path
			{
				System::IntPtr __clrcall get();
			}

			property System::String^ Buffer
			{
				System::String^ __clrcall get();
			}

			property System::UInt32 BufferAllocSize
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 FirstCellOffset
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 CurrentCellOffset
			{
				System::UInt32 __clrcall get();
			}

			property TESObjectCELL^ CurrentCell
			{
				TESObjectCELL^ __clrcall get();
			}

			property System::UInt32 CurrentRefOffset
			{
				System::UInt32 __clrcall get();
			}

			property TESFile::FormData^ CurrentForm
			{
				TESFile::FormData^ __clrcall get();
			}

			property System::UInt32 CurrentChunkId
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 ActualChunkSize
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 FileSize
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 FileOffset
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 FormOffset
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 ChunkOffset
			{
				System::UInt32 __clrcall get();
			}

			property TESFile::FormData^ SaveForm
			{
				TESFile::FormData^ __clrcall get();
			}

			property System::UInt32 SaveFormOffset
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt64 SaveChunkOffset
			{
				System::UInt64 __clrcall get();
			}

			property System::Boolean IsBigEndian
			{
				System::Boolean __clrcall get();
			}

			property WIN32_FIND_DATA^ FileData
			{
				WIN32_FIND_DATA^ __clrcall get();
			}

			property System::UInt32 Flags
			{
				System::UInt32 __clrcall get();
			}

			property TESFile::RecordFlags RecordFlag
			{
				TESFile::RecordFlags __clrcall get();
			}

			property BSSimpleList<System::String^>^ Masters
			{
				BSSimpleList<System::String^>^ __clrcall get();
			}

			property BSSimpleList<System::IntPtr>^ MastersData
			{
				BSSimpleList<System::IntPtr>^ __clrcall get();
			}

			property System::UInt32 MasterCount
			{
				System::UInt32 __clrcall get();
			}

			property System::IntPtr MasterPtrs
			{
				System::IntPtr __clrcall get();
			}

			property _FILETIME^ DeletedFormTime
			{
				_FILETIME^ __clrcall get();
			}

			property System::Byte CompileIndex
			{
				System::Byte __clrcall get();
			}

			property System::UInt16 SmallFileCompileIndex
			{
				System::UInt16 __clrcall get();
			}

			property BSString^ Author
			{
				BSString^ __clrcall get();
			}

			property BSString^ Description
			{
				BSString^ __clrcall get();
			}

			property System::String^ DecompressedFormBuffer
			{
				System::String^ __clrcall get();
			}

			property System::UInt32 DecompressedFormBufferSize
			{
				System::UInt32 __clrcall get();
			}

			property System::IntPtr ReservedDecompressionBuffer
			{
				System::IntPtr __clrcall get();
			}

			property System::UInt32 ReservedDecompressionBufferSize
			{
				System::UInt32 __clrcall get();
			}

			/// <summary>
			/// Gets the name of mod file.
			/// </summary>
			property System::String^ Name
			{
				System::String^ __clrcall get();
			}

			/// <summary>
			/// Gets the index of file. The index will be between 0 and 255 if ESP or ESM and will be between 0 and 4095 if ESL. Check RecordFlag for the SmallFile flag to see how to handle the index.
			/// </summary>
			property System::Int32 Index
			{
				System::Int32 __clrcall get();
			}

			/// <summary>
			/// Check if this is a small file type (ESL).
			/// </summary>
			property System::Boolean IsSmallFile
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class ReferenceEffect : public BSTempEffect, public NetScriptFramework::IVirtualObject
		{
		public:
			property ReferenceEffectController^ Controller
			{
				ReferenceEffectController^ __clrcall get();
			}

			property System::UInt32 TargetObjRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 AimAtTargetObjRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property System::Boolean Finished
			{
				System::Boolean __clrcall get();

				void __clrcall set(System::Boolean value);
			}

			property System::Boolean OwnController
			{
				System::Boolean __clrcall get();
			}
		};

		generic <typename BSTEventSource_T1>
		public interface class BSTEventSource : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSTArray<BSTEventSink<BSTEventSource_T1>^, BSTArrayHeapAllocator^>^ EventSinks
			{
				BSTArray<BSTEventSink<BSTEventSource_T1>^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<BSTEventSink<BSTEventSource_T1>^, BSTArrayHeapAllocator^>^ PendingEventRegisters
			{
				BSTArray<BSTEventSink<BSTEventSource_T1>^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<BSTEventSink<BSTEventSource_T1>^, BSTArrayHeapAllocator^>^ PendingEventUnregisters
			{
				BSTArray<BSTEventSink<BSTEventSource_T1>^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property Mutex^ EventSourceLock
			{
				Mutex^ __clrcall get();
			}

			property System::Boolean EventSourceNotifying
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class BSTempEffectDebris : public BSTempEffect, public NetScriptFramework::IVirtualObject { };

		public interface class BSTempEffectGeometryDecal : public BSTempEffect, public NetScriptFramework::IVirtualObject { };

		public interface class BSTempEffectParticle : public BSTempEffect, public NetScriptFramework::IVirtualObject { };

		public interface class BSTempEffectSimpleDecal : public BSTempEffect, public NetScriptFramework::IVirtualObject { };

		public interface class BSTempEffectSPG : public BSTempEffect, public NetScriptFramework::IVirtualObject { };

		public interface class BSTempEffectWeaponBlood : public BSTempEffect, public NetScriptFramework::IVirtualObject { };

		public interface class BSTerrainEffect : public BSTempEffect, public BSTEventSink<PositionPlayerEvent^>, public NetScriptFramework::IVirtualObject { };

		public interface class TESFileArray : public BSStaticArray<TESFile^>, public NetScriptFramework::IMemoryObject { };

		public interface class TESFileCollection : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSTArray<TESFile^, BSTArrayHeapAllocator^>^ Files
			{
				BSTArray<TESFile^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<TESFile^, BSTArrayHeapAllocator^>^ SmallFiles
			{
				BSTArray<TESFile^, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		public interface class TESFileContainer : public NetScriptFramework::IMemoryObject
		{
		public:
			property TESFileArray^ FileArray
			{
				TESFileArray^ __clrcall get();
			}
		};

		public interface class BGSMoviePlayer : public MoviePlayer, public BSTEventSink<InputEvent^>, public BSTEventSource<BSMusicEvent^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSPlayerMusicChanger : public BSTEventSink<BGSActorCellEvent^>, public BSTEventSink<BGSActorDeathEvent^>, public BSTEventSource<BSMusicEvent^>, public BSTSingletonImplicit1<BGSPlayerMusicChanger^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSSaveLoadManager : public BSTEventSink<BSSaveDataEvent^>, public BSTEventSink<RaceSexMenuEvent::NameChangedEvent^>, public BSTEventSink<BSSystemEvent^>, public BSTEventSource<BGSSaveLoadManagerEvent^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Thread;
		};

		public interface class bhkCharacterController : public NiRefObject, public BSTEventSource<bhkCharacterMoveFinishEvent^>, public NetScriptFramework::IVirtualObject { };

		public interface class BSGamepadDevice : public BSInputDevice, public BSTEventSource<BSGamepadEvent^>, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Int32 UserIndex
			{
				System::Int32 __clrcall get();
			}

			property System::Boolean Connected
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean ListeningForInput
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class BSGamerProfile : public BSTEventSink<BSSaveDataEvent^>, public BSTEventSource<BSGamerProfileEvent^>, public NetScriptFramework::IVirtualObject { };

		public interface class BShkbAnimationGraph : public BSIRagdollDriver, public BSIntrusiveRefCounted, public BSTEventSource<BSTransformDeltaEvent^>, public BSTEventSource<BSAnimationGraphEvent^>, public NetScriptFramework::IVirtualObject
		{
		public:
			property hkbBehaviorGraph^ BehaviourGraph
			{
				hkbBehaviorGraph^ __clrcall get();
			}

			property bhkWorld^ World
			{
				bhkWorld^ __clrcall get();
			}
		};

		public interface class BSPathEventManager : public BSTSingletonSDM<BSPathEventManager^, BSTSingletonSDMOpStaticBuffer0^>, public BSTEventSource<BSPathEvent^>, public NetScriptFramework::IVirtualObject { };

		public interface class BSSaveDataSystemUtility : public BSTEventSource<BSSaveDataEvent^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Entry : public NetScriptFramework::IVirtualObject { };
		};

		interface class BSScript::ErrorLogger : public BSTEventSource<BSScript::LogEvent^>, public NetScriptFramework::IVirtualObject { };

		interface class BSScript::Internal::VirtualMachine : public BSScript::IVirtualMachine, public BSScript::IVMObjectBindInterface, public BSScript::IVMSaveLoadInterface, public BSScript::IVMDebugInterface, public BSTEventSource<BSScript::StatsEvent^>, public NetScriptFramework::IVirtualObject { };

		public interface class BSSystemUtility : public BSTEventSink<BSGamepadEvent^>, public BSTEventSource<BSSystemEvent^>, public NetScriptFramework::IVirtualObject { };

		public interface class BSTaskManager : public SynchronizedMap<System::Int64, NiPointer<BSTask^>^>, public BSTEventSource<BSTaskManagerWaitAction^>, public NetScriptFramework::IVirtualObject { };

		interface class BSThreadEvent::anonymous_namespace::Source : public BSTEventSource<BSThreadEvent::ThreadEvent^>, public BSTSingletonSDM<BSThreadEvent::anonymous_namespace::Source^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class SkyrimVM : public BSScript::IFreezeQuery, public BSScript::IStackCallbackSaveInterface, public BSTEventSink<TESActivateEvent^>, public BSTEventSink<TESActiveEffectApplyRemoveEvent^>, public BSTEventSink<TESActorLocationChangeEvent^>, public BSTEventSink<TESBookReadEvent^>, public BSTEventSink<TESCellAttachDetachEvent^>, public BSTEventSink<TESCellFullyLoadedEvent^>, public BSTEventSink<TESCombatEvent^>, public BSTEventSink<TESContainerChangedEvent^>, public BSTEventSink<TESDeathEvent^>, public BSTEventSink<TESDestructionStageChangedEvent^>, public BSTEventSink<TESEnterBleedoutEvent^>, public BSTEventSink<TESEquipEvent^>, public BSTEventSink<TESFormDeleteEvent^>, public BSTEventSink<TESFurnitureEvent^>, public BSTEventSink<TESGrabReleaseEvent^>, public BSTEventSink<TESHitEvent^>, public BSTEventSink<TESInitScriptEvent^>, public BSTEventSink<TESLoadGameEvent^>, public BSTEventSink<TESLockChangedEvent^>, public BSTEventSink<TESMagicEffectApplyEvent^>, public BSTEventSink<TESMagicWardHitEvent^>, public BSTEventSink<TESMoveAttachDetachEvent^>, public BSTEventSink<TESObjectLoadedEvent^>, public BSTEventSink<TESObjectREFRTranslationEvent^>, public BSTEventSink<TESOpenCloseEvent^>, public BSTEventSink<TESPackageEvent^>, public BSTEventSink<TESPerkEntryRunEvent^>, public BSTEventSink<TESQuestInitEvent^>, public BSTEventSink<TESQuestStageEvent^>, public BSTEventSink<TESResetEvent^>, public BSTEventSink<TESResolveNPCTemplatesEvent^>, public BSTEventSink<TESSceneEvent^>, public BSTEventSink<TESSceneActionEvent^>, public BSTEventSink<TESScenePhaseEvent^>, public BSTEventSink<TESSellEvent^>, public BSTEventSink<TESSleepStartEvent^>, public BSTEventSink<TESSleepStopEvent^>, public BSTEventSink<TESSpellCastEvent^>, public BSTEventSink<TESTopicInfoEvent^>, public BSTEventSink<TESTrackedStatsEvent^>, public BSTEventSink<TESTrapHitEvent^>, public BSTEventSink<TESTriggerEvent^>, public BSTEventSink<TESTriggerEnterEvent^>, public BSTEventSink<TESTriggerLeaveEvent^>, public BSTEventSink<TESUniqueIDChangeEvent^>, public BSTEventSink<TESSwitchRaceCompleteEvent^>, public BSTEventSink<TESPlayerBowShotEvent^>, public BSTEventSink<TESFastTravelEndEvent^>, public BSTEventSink<PositionPlayerEvent^>, public BSTEventSink<BSScript::StatsEvent^>, public BSTSingletonSDM<SkyrimVM^, BSTSingletonSDMOpStaticBuffer0^>, public BSTEventSource<SkyrimScript::StatsEvent^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class EventRelayFunctor : public TESObjectREFRDef::IAliasFunctor, public NetScriptFramework::IVirtualObject { };

			interface class ISendEventFilter : public NetScriptFramework::IMemoryObject { };

			interface class SleepStartEventFunctor : public BSScript::IFunctionArguments, public NetScriptFramework::IVirtualObject { };

			interface class SleepStopEventFunctor : public BSScript::IFunctionArguments, public NetScriptFramework::IVirtualObject { };

			interface class InventoryEventFilter : public SkyrimVM::ISendEventFilter, public NetScriptFramework::IVirtualObject { };

			interface class EffectEventRelayFunctor;
		};

		public interface class ICellAttachDetachEventSource : public BSTSingletonExplicit<ICellAttachDetachEventSource^>, public BSTEventSource<CellAttachDetachEvent^>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSFootstepManager : public BSTEventSource<BGSFootstepEvent^>, public BSTSingletonSDM<BGSFootstepManager^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IMemoryObject { };

		public interface class BSInputDeviceManager : public BSTEventSource<InputEvent^>, public BSTSingletonSDM<BSInputDeviceManager^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IMemoryObject
		{
		public:
			property NetScriptFramework::FixedMemoryArray<BSIInputDevice^>^ Devices
			{
				NetScriptFramework::FixedMemoryArray<BSIInputDevice^>^ __clrcall get();
			}

			property System::Boolean QueuedGamepadEnableValue
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean ValueQueued
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean PollingEnabled
			{
				System::Boolean __clrcall get();
			}

			property BSTEventSource<BSRemoteGamepadEvent^>^ RemoteGamepadEventSource
			{
				BSTEventSource<BSRemoteGamepadEvent^>^ __clrcall get();
			}

			/// <summary>
			/// Gets the instance.
			/// </summary>
			static property BSInputDeviceManager^ Instance
			{
				BSInputDeviceManager^ __clrcall get()
				{
					return NetScriptFramework::MemoryObject::FromAddress<BSInputDeviceManager^>(NetScriptFramework::Memory::ReadPointer(__VIDS::VID516574.Value, false));
				}
			}
		};

		public interface class ScriptEventSourceHolder : public BSTEventSource<BGSEventProcessedEvent^>, public BSTEventSource<TESActivateEvent^>, public BSTEventSource<TESActiveEffectApplyRemoveEvent^>, public BSTEventSource<TESActorLocationChangeEvent^>, public BSTEventSource<TESBookReadEvent^>, public BSTEventSource<TESCellAttachDetachEvent^>, public BSTEventSource<TESCellFullyLoadedEvent^>, public BSTEventSource<TESCellReadyToApplyDecalsEvent^>, public BSTEventSource<TESCombatEvent^>, public BSTEventSource<TESContainerChangedEvent^>, public BSTEventSource<TESDeathEvent^>, public BSTEventSource<TESDestructionStageChangedEvent^>, public BSTEventSource<TESEnterBleedoutEvent^>, public BSTEventSource<TESEquipEvent^>, public BSTEventSource<TESFormDeleteEvent^>, public BSTEventSource<TESFurnitureEvent^>, public BSTEventSource<TESGrabReleaseEvent^>, public BSTEventSource<TESHitEvent^>, public BSTEventSource<TESInitScriptEvent^>, public BSTEventSource<TESLoadGameEvent^>, public BSTEventSource<TESLockChangedEvent^>, public BSTEventSource<TESMagicEffectApplyEvent^>, public BSTEventSource<TESMagicWardHitEvent^>, public BSTEventSource<TESMoveAttachDetachEvent^>, public BSTEventSource<TESObjectLoadedEvent^>, public BSTEventSource<TESObjectREFRTranslationEvent^>, public BSTEventSource<TESOpenCloseEvent^>, public BSTEventSource<TESPackageEvent^>, public BSTEventSource<TESPerkEntryRunEvent^>, public BSTEventSource<TESQuestInitEvent^>, public BSTEventSource<TESQuestStageEvent^>, public BSTEventSource<TESQuestStageItemDoneEvent^>, public BSTEventSource<TESQuestStartStopEvent^>, public BSTEventSource<TESResetEvent^>, public BSTEventSource<TESResolveNPCTemplatesEvent^>, public BSTEventSource<TESSceneEvent^>, public BSTEventSource<TESSceneActionEvent^>, public BSTEventSource<TESScenePhaseEvent^>, public BSTEventSource<TESSellEvent^>, public BSTEventSource<TESSleepStartEvent^>, public BSTEventSource<TESSleepStopEvent^>, public BSTEventSource<TESSpellCastEvent^>, public BSTEventSource<TESPlayerBowShotEvent^>, public BSTEventSource<TESTopicInfoEvent^>, public BSTEventSource<TESTrackedStatsEvent^>, public BSTEventSource<TESTrapHitEvent^>, public BSTEventSource<TESTriggerEvent^>, public BSTEventSource<TESTriggerEnterEvent^>, public BSTEventSource<TESTriggerLeaveEvent^>, public BSTEventSource<TESUniqueIDChangeEvent^>, public BSTEventSource<TESWaitStartEvent^>, public BSTEventSource<TESWaitStopEvent^>, public BSTEventSource<TESSwitchRaceCompleteEvent^>, public BSTEventSource<TESFastTravelEndEvent^>, public NetScriptFramework::IMemoryObject
		{
		public:
			static property ScriptEventSourceHolder^ Instance
			{
				ScriptEventSourceHolder^ __clrcall get()
				{
					return NetScriptFramework::MemoryObject::FromAddress<ScriptEventSourceHolder^>(NetScriptFramework::Memory::InvokeCdecl(__VIDS::VID14108.Value));
				}
			}
		};

		public interface class bhkCharProxyController : public hkpCharacterProxyListener, public bhkCharacterController, public NetScriptFramework::IVirtualObject { };

		public interface class bhkCharRigidBodyController : public bhkCharacterController, public hkpCharacterRigidBodyListener, public NetScriptFramework::IVirtualObject { };

		public interface class BSWin32GamerProfile : public BSGamerProfile, public NetScriptFramework::IVirtualObject { };

		public interface class BSWin32SaveDataSystemUtility : public BSSaveDataSystemUtility, public NetScriptFramework::IVirtualObject { };

		public interface class BSWin32SystemUtility : public BSSystemUtility, public NetScriptFramework::IVirtualObject { };

		public interface class IOManager : public BSTaskManager, public NetScriptFramework::IVirtualObject { };

		interface class SkyrimScript::Logger : public BSScript::ErrorLogger, public NetScriptFramework::IVirtualObject { };

		public interface class TES : public ICellAttachDetachEventSource, public BSTEventSink<BSResource::ArchiveStreamOpenedEvent^>, public BSTEventSink<PositionPlayerEvent^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class SystemEventAdapter : public BSTEventSink<BSSystemEvent^>, public NetScriptFramework::IVirtualObject { };

			interface class NPCDeadData;

			/// <summary>
			/// Gets the cell grid of worldspace.
			/// </summary>
			property GridCellArray^ CellGrid
			{
				GridCellArray^ __clrcall get();
			}

			/// <summary>
			/// Gets the current interior cell.
			/// </summary>
			property TESObjectCELL^ CurrentInteriorCell
			{
				TESObjectCELL^ __clrcall get();
			}

			/// <summary>
			/// Gets the TES game world handler.
			/// </summary>
			static property TES^ Instance
			{
				TES^ __clrcall get()
				{
					return NetScriptFramework::MemoryObject::FromAddress<TES^>(NetScriptFramework::Memory::ReadPointer(__VIDS::VID516923.Value, false));
				}
			}

			/// <summary>
			/// Gets the uGridsToLoad:General INI setting value.
			/// </summary>
			static property System::Int32 GridsToLoad
			{
				System::Int32 __clrcall get()
				{
					return NetScriptFramework::Memory::ReadInt32(__VIDS::VID501244.Value + 8, false);
				}
			}

			/// <summary>
			/// Gets loaded cells.
			/// </summary>
			System::Collections::Generic::List<TESObjectCELL^>^ GetLoadedCells();
		};

		generic <typename GPtr_T1>
		interface class GPtr;

		public interface class HUDObject : public NetScriptFramework::IVirtualObject
		{
		public:
			enum class HUDComponentTypes : System::Int32
			{
				This = 0,
				HudElements = 1,
				QuestUpdateBaseInstance = 2,
				EnemyHealthMeter = 3,
				StealthMeterInstance = 4,
				SneakAnimInstance = 5,
				BracketsInstance = 6,
				RolloverNameInstance = 7,
				SneakTextHolder = 8,
				SneakTextInstance = 9,
			};

			property GPtr<GFxMovieView^>^ View
			{
				GPtr<GFxMovieView^>^ __clrcall get();
			}

			property GFxValue^ Root
			{
				GFxValue^ __clrcall get();
			}
		};

		public interface class IMenu : public FxDelegateHandler, public NetScriptFramework::IVirtualObject
		{
		public:
			property GPtr<GFxMovieView^>^ View
			{
				GPtr<GFxMovieView^>^ __clrcall get();
			}

			property System::Byte MenuDepth
			{
				System::Byte __clrcall get();
			}

			property IMenuFlags MenuFlags
			{
				IMenuFlags __clrcall get();
			}

			property InputContextIds Context
			{
				InputContextIds __clrcall get();
			}

			property GPtr<FxDelegate^>^ Delegate
			{
				GPtr<FxDelegate^>^ __clrcall get();
			}
		};

		public interface class ItemList : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Item : public NetScriptFramework::IMemoryObject
			{
			public:
				property StandardItemData^ ItemData
				{
					StandardItemData^ __clrcall get();
				}

				property GFxValue^ Obj
				{
					GFxValue^ __clrcall get();
				}
			};

			property GPtr<GFxMovieView^>^ View
			{
				GPtr<GFxMovieView^>^ __clrcall get();
			}

			property GFxValue^ Root
			{
				GFxValue^ __clrcall get();
			}

			property GFxValue^ EntryList
			{
				GFxValue^ __clrcall get();
			}

			property BSTArray<ItemList::Item^, BSTArrayHeapAllocator^>^ Items
			{
				BSTArray<ItemList::Item^, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		public interface class ItemCard : public NetScriptFramework::IMemoryObject
		{
		public:
			property GFxValue^ Obj
			{
				GFxValue^ __clrcall get();
			}

			property BSString^ InfoText
			{
				BSString^ __clrcall get();
			}

			property GPtr<GFxMovieView^>^ View
			{
				GPtr<GFxMovieView^>^ __clrcall get();
			}
		};

		public interface class JournalTab : public FxDelegateHandler, public NetScriptFramework::IVirtualObject
		{
		public:
			property GPtr<GFxMovieView^>^ View
			{
				GPtr<GFxMovieView^>^ __clrcall get();
			}
		};

		public interface class BSScaleformRenderer : public NetScriptFramework::IMemoryObject
		{
		public:
			property GPtr<GFxRenderConfig^>^ Config
			{
				GPtr<GFxRenderConfig^>^ __clrcall get();
			}
		};

		public interface class HUDMeter : public HUDObject, public NetScriptFramework::IVirtualObject { };

		generic <typename GPtr_T1>
		public interface class GPtr : public NetScriptFramework::IMemoryObject
		{
		public:
			property GPtr_T1 Target
			{
				GPtr_T1 __clrcall get();
			}
		};

		public interface class BarterMenu : public IMenu, public NetScriptFramework::IVirtualObject
		{
		public:
			property ItemList^ Items
			{
				ItemList^ __clrcall get();
			}

			property ItemCard^ Card
			{
				ItemCard^ __clrcall get();
			}

			property BottomBar^ Bottom
			{
				BottomBar^ __clrcall get();
			}

			property GFxValue^ Root
			{
				GFxValue^ __clrcall get();
			}

			property System::Boolean PcControlsReady
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class Compass : public HUDObject, public NetScriptFramework::IVirtualObject { };

		public interface class Console : public IMenu, public NetScriptFramework::IVirtualObject { };

		public interface class ConsoleNativeUIMenu : public IMenu, public NetScriptFramework::IVirtualObject { };

		public interface class ContainerMenu : public IMenu, public NetScriptFramework::IVirtualObject
		{
		public:
			property GFxValue^ Root
			{
				GFxValue^ __clrcall get();
			}

			property ItemList^ Items
			{
				ItemList^ __clrcall get();
			}

			property ItemCard^ Card
			{
				ItemCard^ __clrcall get();
			}

			property BottomBar^ Bottom
			{
				BottomBar^ __clrcall get();
			}

			property System::Int32 Value
			{
				System::Int32 __clrcall get();
			}

			property System::Boolean PcControlsReady
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class CraftingMenu : public IMenu, public NetScriptFramework::IVirtualObject
		{
		public:
			property CraftingSubMenus::CraftingSubMenu^ SubMenu
			{
				CraftingSubMenus::CraftingSubMenu^ __clrcall get();
			}
		};

		public interface class CreationClubMenu : public IMenu, public MenuEventHandler, public GFxFunctionHandler, public BSTEventSink<MenuOpenCloseEvent^>, public NetScriptFramework::IVirtualObject
		{
		public:
			property ImageData^ Background
			{
				ImageData^ __clrcall get();
			}

			property ImageData^ Details
			{
				ImageData^ __clrcall get();
			}
		};

		public interface class CreditsMenu : public IMenu, public GFxFunctionHandler, public NetScriptFramework::IVirtualObject { };

		public interface class CursorMenu : public IMenu, public MenuEventHandler, public NetScriptFramework::IVirtualObject { };

		public interface class DialogueMenu : public IMenu, public BSTEventSink<MenuOpenCloseEvent^>, public NetScriptFramework::IVirtualObject { };

		public interface class EnemyHealth : public HUDObject, public NetScriptFramework::IVirtualObject { };

		public interface class FaderMenu : public IMenu, public NetScriptFramework::IVirtualObject { };

		public interface class FavoritesMenu : public IMenu, public MenuEventHandler, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESForm^ Item
				{
					TESForm^ __clrcall get();
				}

				property ExtraContainerChanges::ItemEntry^ EntryData
				{
					ExtraContainerChanges::ItemEntry^ __clrcall get();
				}
			};

			property GFxValue^ Root
			{
				GFxValue^ __clrcall get();
			}

			property BSTArray<FavoritesMenu::Data^, BSTArrayHeapAllocator^>^ Favorites
			{
				BSTArray<FavoritesMenu::Data^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property System::Boolean PcControlsReady
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean IsVampire
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class FloatingQuestMarker : public HUDObject, public NetScriptFramework::IVirtualObject { };

		public interface class GiftMenu : public IMenu, public NetScriptFramework::IVirtualObject
		{
		public:
			property GFxValue^ Root
			{
				GFxValue^ __clrcall get();
			}

			property ItemList^ Items
			{
				ItemList^ __clrcall get();
			}

			property ItemCard^ Card
			{
				ItemCard^ __clrcall get();
			}

			property System::Boolean PcControlsReady
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class HUDChargeMeter : public HUDObject, public NetScriptFramework::IVirtualObject { };

		public interface class HUDNotifications : public HUDObject, public NetScriptFramework::IVirtualObject
		{
		public:
			property GFxValue^ QuestNotificationRoot
			{
				GFxValue^ __clrcall get();
			}

			property GFxValue^ Objectives
			{
				GFxValue^ __clrcall get();
			}

			property System::Single LevelPoints
			{
				System::Single __clrcall get();
			}
		};

		public interface class InventoryMenu : public IMenu, public NetScriptFramework::IVirtualObject
		{
		public:
			property GFxValue^ Root
			{
				GFxValue^ __clrcall get();
			}

			property ItemList^ Items
			{
				ItemList^ __clrcall get();
			}

			property ItemCard^ Card
			{
				ItemCard^ __clrcall get();
			}

			property BottomBar^ Bottom
			{
				BottomBar^ __clrcall get();
			}

			property System::Boolean PcControlsReady
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class Journal_QuestsTab : public JournalTab, public NetScriptFramework::IVirtualObject { };

		public interface class Journal_StatsTab : public JournalTab, public NetScriptFramework::IVirtualObject { };

		public interface class Journal_SystemTab : public JournalTab, public BSTEventSink<BSSaveDataEvent^>, public BSTEventSink<BSGamerProfileEvent^>, public BSTEventSink<BGSSaveLoadManagerEvent^>, public BSTEventSink<BSRemoteGamepadEvent^>, public NetScriptFramework::IVirtualObject { };

		public interface class KinectMenu : public IMenu, public BSTEventSink<MenuOpenCloseEvent^>, public NetScriptFramework::IVirtualObject
		{
		public:
			property GFxValue^ Root
			{
				GFxValue^ __clrcall get();
			}
		};

		public interface class LevelUpMenu : public IMenu, public NetScriptFramework::IVirtualObject { };

		public interface class LoadingMenu : public IMenu, public NetScriptFramework::IVirtualObject
		{
		public:
			property GFxValue^ Root
			{
				GFxValue^ __clrcall get();
			}
		};

		public interface class LoadWaitSpinner : public IMenu, public BSTEventSink<BSSystemEvent^>, public BSTEventSink<BSGamerProfileEvent^>, public BSTEventSink<BGSSaveLoadManagerEvent^>, public NetScriptFramework::IVirtualObject
		{
		public:
			property GFxValue^ Root
			{
				GFxValue^ __clrcall get();
			}

			property System::Boolean FadeIn
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class LockpickingMenu : public IMenu, public MenuEventHandler, public BSTEventSink<MenuOpenCloseEvent^>, public NetScriptFramework::IVirtualObject { };

		public interface class MagicMenu : public IMenu, public NetScriptFramework::IVirtualObject
		{
		public:
			property ItemCard^ Card
			{
				ItemCard^ __clrcall get();
			}

			property BottomBar^ Bottom
			{
				BottomBar^ __clrcall get();
			}

			property GFxValue^ Root
			{
				GFxValue^ __clrcall get();
			}

			property System::Boolean PcControlsReady
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class MainMenu : public IMenu, public BSTEventSink<BSSystemEvent^>, public BSTEventSink<BSSaveDataEvent^>, public GFxFunctionHandler, public NetScriptFramework::IVirtualObject { };

		public interface class MessageBoxMenu : public IMenu, public NetScriptFramework::IVirtualObject { };

		public interface class ModManagerMenu : public IMenu, public MenuEventHandler, public GFxFunctionHandler, public NetScriptFramework::IVirtualObject { };

		public interface class SafeZoneMenu : public IMenu, public NetScriptFramework::IVirtualObject { };

		public interface class SleepWaitMenu : public IMenu, public NetScriptFramework::IVirtualObject
		{
		public:
			property GFxValue^ Root
			{
				GFxValue^ __clrcall get();
			}
		};

		public interface class StealthMeter : public HUDObject, public NetScriptFramework::IVirtualObject
		{
		public:
			property GFxValue^ StealthMeterObject
			{
				GFxValue^ __clrcall get();
			}

			property GFxValue^ SneakAnim
			{
				GFxValue^ __clrcall get();
			}

			property GFxValue^ SneakTextHolder
			{
				GFxValue^ __clrcall get();
			}

			property GFxValue^ SneakText
			{
				GFxValue^ __clrcall get();
			}
		};

		public interface class TitleSequenceMenu : public IMenu, public NetScriptFramework::IVirtualObject { };

		public interface class TrainingMenu : public IMenu, public BSTEventSink<MenuOpenCloseEvent^>, public NetScriptFramework::IVirtualObject
		{
		public:
			property ActorValueIndices Skill
			{
				ActorValueIndices __clrcall get();
			}

			property GFxValue^ TrainingMenuObj
			{
				GFxValue^ __clrcall get();
			}

			property GFxValue^ SkillName
			{
				GFxValue^ __clrcall get();
			}

			property GFxValue^ SkillMeter
			{
				GFxValue^ __clrcall get();
			}

			property GFxValue^ TrainerSkill
			{
				GFxValue^ __clrcall get();
			}

			property GFxValue^ TimesTrained
			{
				GFxValue^ __clrcall get();
			}

			property GFxValue^ TrainCost
			{
				GFxValue^ __clrcall get();
			}

			property GFxValue^ CurrentGold
			{
				GFxValue^ __clrcall get();
			}
		};

		public interface class TutorialMenu : public IMenu, public NetScriptFramework::IVirtualObject
		{
		public:
			property GFxValue^ Root
			{
				GFxValue^ __clrcall get();
			}
		};

		public interface class TweenMenu : public IMenu, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class FileData : public NetScriptFramework::IMemoryObject
			{
			public:
				property BSResource::ID^ FileHash
				{
					BSResource::ID^ __clrcall get();
				}

				property System::String^ FileName
				{
					System::String^ __clrcall get();
				}
			};
		};

		/// <summary>
		/// The game menu manager.
		/// </summary>
		public interface class MenuManager : public BSTSingletonSDM<MenuManager^, BSTSingletonSDMOpStaticBuffer0^>, public BSTEventSource<MenuOpenCloseEvent^>, public BSTEventSource<MenuModeChangeEvent^>, public BSTEventSource<System::IntPtr>, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class UIMenuEntry : public NetScriptFramework::IMemoryObject
			{
			public:
				property GPtr<IMenu^>^ Menu
				{
					GPtr<IMenu^>^ __clrcall get();
				}

				property System::IntPtr CreateFunc
				{
					System::IntPtr __clrcall get();
				}
			};

			property BSTArray<GPtr<IMenu^>^, BSTArrayHeapAllocator^>^ MenuStack
			{
				BSTArray<GPtr<IMenu^>^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTHashMap2<BSFixedString^, MenuManager::UIMenuEntry^>^ MenuMap
			{
				BSTHashMap2<BSFixedString^, MenuManager::UIMenuEntry^>^ __clrcall get();
			}

			property Mutex^ MenuTableLock
			{
				Mutex^ __clrcall get();
			}

			/// <summary>
			/// Gets the pause game counter due to menus.
			/// </summary>
			property System::Int32 PauseGameCounter
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 NumItemMenus
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 NumDisablePauseMenu
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 NumAllowSaving
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 NumDontHideCursorWhenTopmost
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 NumCustomRendering
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 NumApplicationMenus
			{
				System::Int32 __clrcall get();
			}

			property System::Boolean Modal
			{
				System::Boolean __clrcall get();
			}

			property BSTimer^ UiTimer
			{
				BSTimer^ __clrcall get();
			}

			property System::Boolean ShowMenus
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean ClosingAllMenus
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Gets the menu manager instance.
			/// </summary>
			static property MenuManager^ Instance
			{
				MenuManager^ __clrcall get()
				{
					return NetScriptFramework::MemoryObject::FromAddress<MenuManager^>(NetScriptFramework::Memory::ReadPointer(__VIDS::VID514178.Value, false));
				}
			}

			/// <summary>
			/// Check if a menu is open.
			/// </summary>
			/// <param name="name">The name of menu.</param>
			System::Boolean IsMenuOpen(System::String^ name);

			/// <summary>
			/// Shows a message in the top left HUD.
			/// </summary>
			/// <param name="message">The message to show.</param>
			/// <param name="uiSound">The sound to play. This should be null unless you want to play some sound, for example "UISneakAttack".</param>
			/// <param name="unk">Unknown, game sets to true.</param>
			static void ShowHUDMessage(System::String^ message, System::String^ uiSound, System::Boolean unk)
			{
				if(message == nullptr) return;
				if(uiSound != nullptr && uiSound->Length == 0) uiSound = nullptr;
				auto allocMessage = NetScriptFramework::Memory::AllocateString(message, false);
				auto allocSound = uiSound != nullptr ? NetScriptFramework::Memory::AllocateString(uiSound, false) : nullptr;
				try
				{
					Memory::InvokeCdecl(__VIDS::VID52050.Value, allocMessage->Address, allocSound != nullptr ? allocSound->Address : System::IntPtr::Zero, unk ? 1 : 0);
				}
				finally
				{
					delete allocMessage;
					if(allocSound != nullptr) delete allocSound;
				}
			}
		};

		public interface class BSScaleformManager : public BSTSingletonSDM<BSScaleformManager^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IMemoryObject
		{
		public:
			property System::IntPtr Loader
			{
				System::IntPtr __clrcall get();
			}

			property BSScaleformRenderer^ Renderer
			{
				BSScaleformRenderer^ __clrcall get();
			}

			property GPtr<GFxDrawTextManager^>^ TextManager
			{
				GPtr<GFxDrawTextManager^>^ __clrcall get();
			}

			property GPtr<BSScaleformImageLoader^>^ ImageLoader
			{
				GPtr<BSScaleformImageLoader^>^ __clrcall get();
			}

			property BSString^ ValidNameChars
			{
				BSString^ __clrcall get();
			}

			static property BSScaleformManager^ Instance
			{
				BSScaleformManager^ __clrcall get()
				{
					return NetScriptFramework::MemoryObject::FromAddress<BSScaleformManager^>(NetScriptFramework::Memory::ReadPointer(__VIDS::VID516573.Value, false));
				}
			}
		};

		public interface class ActorValueMeter : public HUDMeter, public NetScriptFramework::IVirtualObject
		{
		public:
			property ActorValueIndices ActorValue
			{
				ActorValueIndices __clrcall get();
			}
		};

		public interface class ShoutMeter : public HUDMeter, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Single Cooldown
			{
				System::Single __clrcall get();
			}
		};

		public interface class JournalMenu : public IMenu, public MenuEventHandler, public BSTEventSink<BSSystemEvent^>, public NetScriptFramework::IVirtualObject
		{
		public:
			property Journal_QuestsTab^ QuestsTab
			{
				Journal_QuestsTab^ __clrcall get();
			}

			property Journal_StatsTab^ StatsTab
			{
				Journal_StatsTab^ __clrcall get();
			}

			property Journal_SystemTab^ SystemTab
			{
				Journal_SystemTab^ __clrcall get();
			}
		};

		public interface class HUDMenu : public IMenu, public BSTEventSink<UserEventEnabledEvent^>, public BSTEventSink<BSRemoteGamepadEvent^>, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSTArray<HUDObject^, BSTArrayHeapAllocator^>^ Objects
			{
				BSTArray<HUDObject^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property ActorValueMeter^ Health
			{
				ActorValueMeter^ __clrcall get();
			}

			property ActorValueMeter^ Stamina
			{
				ActorValueMeter^ __clrcall get();
			}

			property ActorValueMeter^ Magicka
			{
				ActorValueMeter^ __clrcall get();
			}

			property ShoutMeter^ Shout
			{
				ShoutMeter^ __clrcall get();
			}

			property GFxValue^ Root
			{
				GFxValue^ __clrcall get();
			}
		};

		generic <typename hkArrayBase_T1>
		interface class hkArrayBase;

		public interface class hkpCollidableMediator : public hkKdTreeBuildInput::Mediator, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkSolverAllocator : public hkMemoryAllocator, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Element : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		interface class hkStackTracer::CallTree : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Node : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDelayedFreeAllocator : public hkMemoryAllocator, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Alloc : public NetScriptFramework::IMemoryObject { };

			interface class Limits : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkFileSystem::DirectoryListing : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkFreeListMemorySystem : public hkMemorySystem, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class ThreadData : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			enum class SetupFlags : System::Int32
			{
				USE_LIFO_ALLOCATOR_FOR_TEMP = 1,
				USE_SOLVER_ALLOCATOR_FOR_LIFO_SLABS = 2,
				USE_THREAD_MEMORY = 4,
				DEFAULT_SETUP_FLAGS = 5,
			};
		};

		public interface class hkSimpleMemorySystem : public hkMemorySystem, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MemoryAllocators : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		interface class BGSKeyword;

		public interface class TESForm : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class InGameFormFlags : System::UInt16
			{
				None = 0,
				WantsDelete = 1,
				ForcedPersistent = 2,
				NoFavorAllowed = 0x10,
				IsSkyObject = 0x20,
				RefOriginalPersistent = 0x40,
				RefPermanentlyDeleted = 0x80,
			};

			enum class ChangeFlags : System::UInt32
			{
				None = 0,
				Flags = 1,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property TESFileContainer^ FormSourceFiles
			{
				TESFileContainer^ __clrcall get();
			}

			/// <summary>
			/// Gets the flags of this form.
			/// </summary>
			property System::UInt32 FormFlags
			{
				System::UInt32 __clrcall get();
			}

			/// <summary>
			/// Gets the unique identifier of this form.
			/// </summary>
			property System::UInt32 FormId
			{
				System::UInt32 __clrcall get();
			}

			property TESForm::InGameFormFlags FormGameFlags
			{
				TESForm::InGameFormFlags __clrcall get();
			}

			/// <summary>
			/// Gets the type identifier of this form.
			/// </summary>
			property FormTypes FormType
			{
				FormTypes __clrcall get();
			}

			/// <summary>
			/// Gets the editor name for this form. Not all form types have this info and may return empty or null string.
			/// </summary>
			property System::String^ EditorId
			{
				System::String^ __clrcall get();
			}

			/// <summary>
			/// Iterate through all game forms.
			/// </summary>
			/// <param name="func">The function to run on each form. If you return false the iteration stops.</param>
			/// <returns></returns>
			static void ForEachForm(System::Func<TESForm^, bool>^ func)
			{
				if(func == nullptr) throw gcnew System::ArgumentNullException("func");
				auto formLocker = __VIDS::VID514360.Value;
				NetScriptFramework::Memory::InvokeCdecl(__VIDS::VID66976.Value, formLocker);
				try
				{
					auto ptr = NetScriptFramework::Memory::ReadPointer(__VIDS::VID514351.Value, false);
					if(ptr != System::IntPtr::Zero)
					{
						int capacity = NetScriptFramework::Memory::ReadInt32(ptr + 0xC, false);
						int count = capacity - NetScriptFramework::Memory::ReadInt32(ptr + 0x10, false);
						System::IntPtr _curPtr = NetScriptFramework::Memory::ReadPointer(ptr + 0x28, false);
						System::IntPtr _endPtr = _curPtr;
						if(_curPtr != System::IntPtr::Zero) _endPtr = _curPtr + 0x18 * capacity;
						while(_curPtr != _endPtr)
						{
							if(NetScriptFramework::Memory::ReadPointer(_curPtr + 0x10, false) != System::IntPtr::Zero)
							{
								auto form = NetScriptFramework::MemoryObject::FromAddress<TESForm^>(NetScriptFramework::Memory::ReadPointer(_curPtr + 8, false));
								if(form != nullptr && !func(form))
									break;
							}
							_curPtr = _curPtr + 0x18;
						}
					}
				}
				finally
				{
					NetScriptFramework::Memory::InvokeCdecl(__VIDS::VID66982.Value, formLocker);
				}
			}

			/// <summary>
			/// Gets the gold value of this form.
			/// </summary>
			property System::Int32 GoldValue
			{
				System::Int32 __clrcall get();
			}

			/// <summary>
			/// Check if form has a 3D model. This does not check if the model is loaded now! It only checks if it potentially has a world model.
			/// </summary>
			property System::Boolean Has3D
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Check if form has the specified keyword.
			/// </summary>
			/// <param name="keyword">The keyword to check for.</param>
			System::Boolean HasKeyword(BGSKeyword^ keyword);

			/// <summary>
			/// Check if form has the specified keyword.
			/// </summary>
			/// <param name="keyword">The keyword to check for.</param>
			System::Boolean HasKeywordText(System::String^ keyword);

			/// <summary>
			/// Lookups the form by identifier.
			/// </summary>
			/// <param name="formId">The form identifier.</param>
			/// <returns></returns>
			static TESForm^ LookupFormById(System::UInt32 formId)

			{
				return NetScriptFramework::MemoryObject::FromAddress<TESForm^>(NetScriptFramework::Memory::InvokeCdecl(__VIDS::VID14461.Value, formId));
			}

			/// <summary>
			/// Lookups the form by identifier from specific file.
			/// </summary>
			/// <param name="formId">The form identifier.</param>
			/// <param name="fileName">The file name.</param>
			/// <returns></returns>
			static TESForm^ LookupFormFromFile(System::UInt32 formId, System::String^ fileName);

			/// <summary>
			/// Gets the name of form.
			/// </summary>
			property System::String^ Name
			{
				System::String^ __clrcall get();
			}

			/// <summary>
			/// Determines whether this form has the "known" flag set. This is used for forms like spells and words of power.
			/// </summary>
			property System::Boolean PlayerKnows
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class BGSKeywordForm : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			/// <summary>
			/// Gets or sets the keywords pointer array.
			/// </summary>
			property System::IntPtr Keywords
			{
				System::IntPtr __clrcall get();

				void __clrcall set(System::IntPtr value);
			}

			/// <summary>
			/// Gets or sets the count of keywords in keyword pointer array.
			/// </summary>
			property System::Int32 Count
			{
				System::Int32 __clrcall get();

				void __clrcall set(System::Int32 value);
			}
		};

		interface class ExtraLinkedRef::Data : public NetScriptFramework::IMemoryObject
		{
		public:
			property BGSKeyword^ Keyword
			{
				BGSKeyword^ __clrcall get();
			}

			property TESObjectREFR^ ObjectRef
			{
				TESObjectREFR^ __clrcall get();
			}
		};

		interface class ExtraLinkedRefChildren::Data : public NetScriptFramework::IMemoryObject
		{
		public:
			property BGSKeyword^ Keyword
			{
				BGSKeyword^ __clrcall get();
			}

			property System::UInt32 RefHandle
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class BGSKeyword : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			/// <summary>
			/// Gets the keyword text.
			/// </summary>
			property BSFixedString^ KeywordText
			{
				BSFixedString^ __clrcall get();
			}
		};

		public interface class TESEffectShader : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DataFlags : System::UInt32
			{
				None = 0,
				DisableTextureShader = 1,
				GreyscaleToColor = 2,
				GreyscaleToAlpha = 4,
				DisableParticleShader = 8,
				EdgeColorSubtractive = 0x10,
				SkinOnly = 0x20,
				IgnoreTexAlpha = 0x40,
				FillTexProjectedUV = 0x80,
				IgnoreBaseGeomTexAlpha = 0x100,
				Lighting = 0x200,
				IgnoreWeapons = 0x400,
				Alpha = 0x800,
				PreferDismemberedLimb = 0x1000,
				ParticleAnimated = 0x8000,
				ParticleGreyscaleColor = 0x10000,
				ParticleGreyscaleAlpha = 0x20000,
				UseBloodGeometry = 0x1000000,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			interface class Data;

			property TESEffectShader::Data^ EffectData
			{
				TESEffectShader::Data^ __clrcall get();
			}

			property TESTexture^ FillTexture
			{
				TESTexture^ __clrcall get();
			}

			property TESTexture^ ParticleShaderTexture
			{
				TESTexture^ __clrcall get();
			}

			property TESTexture^ HolesTexture
			{
				TESTexture^ __clrcall get();
			}

			property TESTexture^ MembranePaletteTexture
			{
				TESTexture^ __clrcall get();
			}

			property TESTexture^ ParticlePaletteTexture
			{
				TESTexture^ __clrcall get();
			}
		};

		public interface class BGSPerk : public TESForm, public TESFullName, public TESDescription, public TESIcon, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Boolean Trait
				{
					System::Boolean __clrcall get();
				}

				property System::SByte Level
				{
					System::SByte __clrcall get();
				}

				property System::SByte NumRanks
				{
					System::SByte __clrcall get();
				}

				property System::Boolean Playable
				{
					System::Boolean __clrcall get();
				}

				property System::Boolean Hidden
				{
					System::Boolean __clrcall get();
				}
			};

			interface class AddPerkVisitor : public PerkRankVisitor, public NetScriptFramework::IVirtualObject { };

			interface class ApplyPerksVisitor : public PerkRankVisitor, public NetScriptFramework::IVirtualObject { };

			interface class FindPerkInRanksVisitor : public PerkRankVisitor, public NetScriptFramework::IVirtualObject { };

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				NonPlayable = 4,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property BGSPerk::Data^ PerkData
			{
				BGSPerk::Data^ __clrcall get();
			}

			property TESCondition^ PerkConditions
			{
				TESCondition^ __clrcall get();
			}

			property BSTArray<BGSPerkEntry^, BSTArrayHeapAllocator^>^ PerkEntries
			{
				BSTArray<BGSPerkEntry^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BGSPerk^ NextPerk
			{
				BGSPerk^ __clrcall get();
			}
		};

		public interface class BGSAssociationType : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class AssociationFlags : System::UInt32
			{
				None = 0,
				Family = 1,
			};

			enum class RecordFlags : System::UInt32
			{
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property System::IntPtr AssociationLabels
			{
				System::IntPtr __clrcall get();
			}

			property BGSAssociationType::AssociationFlags Flags
			{
				BGSAssociationType::AssociationFlags __clrcall get();
			}
		};

		public interface class BGSOutfit : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property BSTArray<TESForm^, BSTArrayHeapAllocator^>^ OutfitItems
			{
				BSTArray<TESForm^, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		public interface class TESCombatStyle : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class CombatStyleGeneralData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Single OffensiveMult
				{
					System::Single __clrcall get();
				}

				property System::Single DefensiveMult
				{
					System::Single __clrcall get();
				}

				property System::Single GroupOffensiveMult
				{
					System::Single __clrcall get();
				}

				property System::Single MeleeScoreMult
				{
					System::Single __clrcall get();
				}

				property System::Single MagicScoreMult
				{
					System::Single __clrcall get();
				}

				property System::Single RangedScoreMult
				{
					System::Single __clrcall get();
				}

				property System::Single ShoutScoreMult
				{
					System::Single __clrcall get();
				}

				property System::Single UnarmedScoreMult
				{
					System::Single __clrcall get();
				}

				property System::Single StaffScoreMult
				{
					System::Single __clrcall get();
				}

				property System::Single AvoidThreatChance
				{
					System::Single __clrcall get();
				}
			};

			interface class CombatStyleMeleeData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Single AttackIncapacitatedMult
				{
					System::Single __clrcall get();
				}

				property System::Single PowerAttackIncapacitatedMult
				{
					System::Single __clrcall get();
				}

				property System::Single PowerAttackBlockingMult
				{
					System::Single __clrcall get();
				}

				property System::Single BashMult
				{
					System::Single __clrcall get();
				}

				property System::Single BashRecoilMult
				{
					System::Single __clrcall get();
				}

				property System::Single BashAttackMult
				{
					System::Single __clrcall get();
				}

				property System::Single BashPowerAttackMult
				{
					System::Single __clrcall get();
				}

				property System::Single SpecialAttackMult
				{
					System::Single __clrcall get();
				}
			};

			interface class CombatStyleCloseRangeData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Single CircleMult
				{
					System::Single __clrcall get();
				}

				property System::Single FallbackMult
				{
					System::Single __clrcall get();
				}

				property System::Single FlankDistanceMult
				{
					System::Single __clrcall get();
				}

				property System::Single StalkTimeMult
				{
					System::Single __clrcall get();
				}
			};

			interface class CombatStyleLongRangeData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Single StrafeMult
				{
					System::Single __clrcall get();
				}
			};

			interface class CombatStyleFlightData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Single HoverChance
				{
					System::Single __clrcall get();
				}

				property System::Single DiveBombChance
				{
					System::Single __clrcall get();
				}

				property System::Single GroundAttackChance
				{
					System::Single __clrcall get();
				}

				property System::Single HoverTimeMult
				{
					System::Single __clrcall get();
				}

				property System::Single GroundAttackTimeMult
				{
					System::Single __clrcall get();
				}

				property System::Single PerchAttackChance
				{
					System::Single __clrcall get();
				}

				property System::Single PerchAttackTimeMult
				{
					System::Single __clrcall get();
				}

				property System::Single FlyingAttackChance
				{
					System::Single __clrcall get();
				}
			};

			enum class DataFlags : System::UInt32
			{
				None = 0,
				DuelingStyle = 1,
				FlankingStyle = 2,
				AllowDualWielding = 4,
			};

			interface class FLAG : public NetScriptFramework::IMemoryObject { };

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
				AllowDualWielding = 0x80000,
			};

			property TESCombatStyle::CombatStyleGeneralData^ GeneralData
			{
				TESCombatStyle::CombatStyleGeneralData^ __clrcall get();
			}

			property TESCombatStyle::CombatStyleMeleeData^ MeleeData
			{
				TESCombatStyle::CombatStyleMeleeData^ __clrcall get();
			}

			property TESCombatStyle::CombatStyleCloseRangeData^ CloseRangeData
			{
				TESCombatStyle::CombatStyleCloseRangeData^ __clrcall get();
			}

			property TESCombatStyle::CombatStyleLongRangeData^ LongRangeData
			{
				TESCombatStyle::CombatStyleLongRangeData^ __clrcall get();
			}

			property TESCombatStyle::CombatStyleFlightData^ FlightData
			{
				TESCombatStyle::CombatStyleFlightData^ __clrcall get();
			}

			property TESCombatStyle::DataFlags CombatStyleFlags
			{
				TESCombatStyle::DataFlags __clrcall get();
			}
		};

		public interface class TESObject : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class ChangeFlags : System::UInt32
			{
				None = 0,
				ObjectValue = 2,
				ObjectFullName = 4,
			};
		};

		public interface class BGSEquipSlot : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class EquipSlotFlags : System::UInt32
			{
				None = 0,
				UseAllParents = 1,
				ParentsOptional = 2,
				ItemSlot = 4,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property BSTArray<BGSEquipSlot^, BSTArrayHeapAllocator^>^ ParentSlots
			{
				BSTArray<BGSEquipSlot^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BGSEquipSlot::EquipSlotFlags SlotFlags
			{
				BGSEquipSlot::EquipSlotFlags __clrcall get();
			}
		};

		public interface class BGSSoundCategory : public TESForm, public TESFullName, public BSISoundCategory, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class SoundCategoryDataFlags : System::UInt32
			{
				None = 0,
				MuteWhenSubmerged = 1,
				ShouldAppearOnMenu = 2,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property BGSSoundCategory::SoundCategoryDataFlags SoundCategoryFlags
			{
				BGSSoundCategory::SoundCategoryDataFlags __clrcall get();
			}

			property BGSSoundCategory^ ParentCategory
			{
				BGSSoundCategory^ __clrcall get();
			}

			property System::UInt16 Attenuation
			{
				System::UInt16 __clrcall get();
			}

			property System::UInt16 StaticMult
			{
				System::UInt16 __clrcall get();
			}

			property System::UInt16 DefaultMenuValue
			{
				System::UInt16 __clrcall get();
			}

			property System::Single VolumeMult
			{
				System::Single __clrcall get();
			}

			property System::Single FrequencyMult
			{
				System::Single __clrcall get();
			}
		};

		public interface class BGSSoundOutput : public TESForm, public BSISoundOutputModel, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class SoundOutputTypes : System::Int32
			{
				UsesHRTF = 0,
				DefinedSpeakerOutput = 1,
			};

			interface class DynamicAttenuationCharacteristics : public BSISoundOutputModel::BSIAttenuationCharacteristics, public NetScriptFramework::IVirtualObject
			{
			public:
				property System::Single MinDistance
				{
					System::Single __clrcall get();
				}

				property System::Single MaxDistance
				{
					System::Single __clrcall get();
				}

				property NetScriptFramework::FixedMemoryArray<System::Byte>^ Curve
				{
					NetScriptFramework::FixedMemoryArray<System::Byte>^ __clrcall get();
				}
			};

			enum class DataFlags : System::Byte
			{
				None = 0,
				AttenuatesWithDistance = 1,
				AllowsRumble = 2,
			};

			interface class SpeakerChannel : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Byte L
				{
					System::Byte __clrcall get();
				}

				property System::Byte R
				{
					System::Byte __clrcall get();
				}

				property System::Byte C
				{
					System::Byte __clrcall get();
				}

				property System::Byte Lfe
				{
					System::Byte __clrcall get();
				}

				property System::Byte Rl
				{
					System::Byte __clrcall get();
				}

				property System::Byte Rr
				{
					System::Byte __clrcall get();
				}

				property System::Byte Bl
				{
					System::Byte __clrcall get();
				}

				property System::Byte Br
				{
					System::Byte __clrcall get();
				}
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property BGSSoundOutput::DataFlags Flags
				{
					BGSSoundOutput::DataFlags __clrcall get();
				}

				property System::Byte ReverbSendPct
				{
					System::Byte __clrcall get();
				}
			};

			interface class SpeakerData : public NetScriptFramework::IMemoryObject
			{
			public:
				property NetScriptFramework::FixedMemoryArray<BGSSoundOutput::SpeakerChannel^>^ Channels
				{
					NetScriptFramework::FixedMemoryArray<BGSSoundOutput::SpeakerChannel^>^ __clrcall get();
				}
			};

			property BGSSoundOutput::Data^ SoundOutputData
			{
				BGSSoundOutput::Data^ __clrcall get();
			}

			property BGSSoundOutput::SoundOutputTypes SoundOutputType
			{
				BGSSoundOutput::SoundOutputTypes __clrcall get();
			}

			property BGSSoundOutput::DynamicAttenuationCharacteristics^ Attenuation
			{
				BGSSoundOutput::DynamicAttenuationCharacteristics^ __clrcall get();
			}

			property BGSSoundOutput::SpeakerData^ SpeakerOutputs
			{
				BGSSoundOutput::SpeakerData^ __clrcall get();
			}
		};

		public interface class BGSReverbParameters : public TESForm, public BSIReverbType, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::UInt16 DecayTime
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 HfReference
				{
					System::UInt16 __clrcall get();
				}

				property System::SByte RoomFilter
				{
					System::SByte __clrcall get();
				}

				property System::SByte RoomHFFilter
				{
					System::SByte __clrcall get();
				}

				property System::SByte Reflections
				{
					System::SByte __clrcall get();
				}

				property System::SByte Reverb
				{
					System::SByte __clrcall get();
				}

				property System::SByte DecayHFRatio
				{
					System::SByte __clrcall get();
				}

				property System::SByte ReflectionDelay
				{
					System::SByte __clrcall get();
				}

				property System::SByte ReverbDelay
				{
					System::SByte __clrcall get();
				}

				property System::SByte DiffusionPct
				{
					System::SByte __clrcall get();
				}

				property System::SByte DensityPct
				{
					System::SByte __clrcall get();
				}
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property BGSReverbParameters::Data^ ReverbData
			{
				BGSReverbParameters::Data^ __clrcall get();
			}
		};

		public interface class BGSRagdoll : public TESForm, public TESModel, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
			};
		};

		/// <summary>
		/// Image space modifier form.
		/// </summary>
		public interface class TESImageSpaceModifier : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class RadialBlurInstanceData : public NetScriptFramework::IMemoryObject
			{
			public:
				property NiPointer<NiFloatInterpolator^>^ Strength
				{
					NiPointer<NiFloatInterpolator^>^ __clrcall get();
				}

				property NiPointer<NiFloatInterpolator^>^ RampUp
				{
					NiPointer<NiFloatInterpolator^>^ __clrcall get();
				}

				property NiPointer<NiFloatInterpolator^>^ Start
				{
					NiPointer<NiFloatInterpolator^>^ __clrcall get();
				}

				property NiPointer<NiFloatInterpolator^>^ RampDown
				{
					NiPointer<NiFloatInterpolator^>^ __clrcall get();
				}

				property NiPointer<NiFloatInterpolator^>^ DownStart
				{
					NiPointer<NiFloatInterpolator^>^ __clrcall get();
				}
			};

			interface class DOFInstanceData : public NetScriptFramework::IMemoryObject
			{
			public:
				property NiPointer<NiFloatInterpolator^>^ Strength
				{
					NiPointer<NiFloatInterpolator^>^ __clrcall get();
				}

				property NiPointer<NiFloatInterpolator^>^ Distance
				{
					NiPointer<NiFloatInterpolator^>^ __clrcall get();
				}

				property NiPointer<NiFloatInterpolator^>^ Range
				{
					NiPointer<NiFloatInterpolator^>^ __clrcall get();
				}
			};

			interface class DOFBaseData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Int32 Strength
				{
					System::Int32 __clrcall get();
				}

				property System::Int32 Distance
				{
					System::Int32 __clrcall get();
				}

				property System::Int32 Range
				{
					System::Int32 __clrcall get();
				}

				property System::Boolean UseTarget
				{
					System::Boolean __clrcall get();
				}

				property ImageSpaceModifierInstanceDOF::DOFMode Mode
				{
					ImageSpaceModifierInstanceDOF::DOFMode __clrcall get();
				}
			};

			generic <typename MultAdd_T1>
			interface class MultAdd : public NetScriptFramework::IMemoryObject
			{
			public:
				property MultAdd_T1 MultiplierValue
				{
					MultAdd_T1 __clrcall get();
				}

				property MultAdd_T1 AdditiveValue
				{
					MultAdd_T1 __clrcall get();
				}
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			interface class BloomInstanceData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::IntPtr Empty
				{
					System::IntPtr __clrcall get();
				}
			};

			interface class CinematicInstanceData : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESImageSpaceModifier::MultAdd<NiPointer<NiFloatInterpolator^>^>^ Saturation
				{
					TESImageSpaceModifier::MultAdd<NiPointer<NiFloatInterpolator^>^>^ __clrcall get();
				}

				property TESImageSpaceModifier::MultAdd<NiPointer<NiFloatInterpolator^>^>^ Brightness
				{
					TESImageSpaceModifier::MultAdd<NiPointer<NiFloatInterpolator^>^>^ __clrcall get();
				}

				property TESImageSpaceModifier::MultAdd<NiPointer<NiFloatInterpolator^>^>^ Contrast
				{
					TESImageSpaceModifier::MultAdd<NiPointer<NiFloatInterpolator^>^>^ __clrcall get();
				}

				property TESImageSpaceModifier::MultAdd<NiPointer<NiFloatInterpolator^>^>^ Empty
				{
					TESImageSpaceModifier::MultAdd<NiPointer<NiFloatInterpolator^>^>^ __clrcall get();
				}
			};

			interface class BloomBaseData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::IntPtr Empty
				{
					System::IntPtr __clrcall get();
				}
			};

			interface class CinematicBaseData : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESImageSpaceModifier::MultAdd<System::Single>^ Saturation
				{
					TESImageSpaceModifier::MultAdd<System::Single>^ __clrcall get();
				}

				property TESImageSpaceModifier::MultAdd<System::Single>^ Brightness
				{
					TESImageSpaceModifier::MultAdd<System::Single>^ __clrcall get();
				}

				property TESImageSpaceModifier::MultAdd<System::Single>^ Contrast
				{
					TESImageSpaceModifier::MultAdd<System::Single>^ __clrcall get();
				}

				property TESImageSpaceModifier::MultAdd<System::Single>^ Empty
				{
					TESImageSpaceModifier::MultAdd<System::Single>^ __clrcall get();
				}
			};

			generic <typename MinMax_T1>
			interface class MinMax : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESImageSpaceModifier::MultAdd<MinMax_T1>^ Min
				{
					TESImageSpaceModifier::MultAdd<MinMax_T1>^ __clrcall get();
				}

				property TESImageSpaceModifier::MultAdd<MinMax_T1>^ Max
				{
					TESImageSpaceModifier::MultAdd<MinMax_T1>^ __clrcall get();
				}
			};

			interface class HDRInstanceData : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESImageSpaceModifier::MultAdd<NiPointer<NiFloatInterpolator^>^>^ EyeAdaptSpeed
				{
					TESImageSpaceModifier::MultAdd<NiPointer<NiFloatInterpolator^>^>^ __clrcall get();
				}

				property TESImageSpaceModifier::MultAdd<NiPointer<NiFloatInterpolator^>^>^ BloomBlurRadius
				{
					TESImageSpaceModifier::MultAdd<NiPointer<NiFloatInterpolator^>^>^ __clrcall get();
				}

				property TESImageSpaceModifier::MultAdd<NiPointer<NiFloatInterpolator^>^>^ BloomThreshold
				{
					TESImageSpaceModifier::MultAdd<NiPointer<NiFloatInterpolator^>^>^ __clrcall get();
				}

				property TESImageSpaceModifier::MultAdd<NiPointer<NiFloatInterpolator^>^>^ BloomScale
				{
					TESImageSpaceModifier::MultAdd<NiPointer<NiFloatInterpolator^>^>^ __clrcall get();
				}

				property TESImageSpaceModifier::MinMax<NiPointer<NiFloatInterpolator^>^>^ TargetLum
				{
					TESImageSpaceModifier::MinMax<NiPointer<NiFloatInterpolator^>^>^ __clrcall get();
				}

				property TESImageSpaceModifier::MultAdd<NiPointer<NiFloatInterpolator^>^>^ SunlightScale
				{
					TESImageSpaceModifier::MultAdd<NiPointer<NiFloatInterpolator^>^>^ __clrcall get();
				}

				property TESImageSpaceModifier::MultAdd<NiPointer<NiFloatInterpolator^>^>^ SkyScale
				{
					TESImageSpaceModifier::MultAdd<NiPointer<NiFloatInterpolator^>^>^ __clrcall get();
				}

				property System::IntPtr Empty
				{
					System::IntPtr __clrcall get();
				}
			};

			interface class HDRBaseData : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESImageSpaceModifier::MultAdd<System::Single>^ EyeAdaptSpeed
				{
					TESImageSpaceModifier::MultAdd<System::Single>^ __clrcall get();
				}

				property TESImageSpaceModifier::MultAdd<System::Single>^ BloomBlurRadius
				{
					TESImageSpaceModifier::MultAdd<System::Single>^ __clrcall get();
				}

				property TESImageSpaceModifier::MultAdd<System::Single>^ BloomThreshold
				{
					TESImageSpaceModifier::MultAdd<System::Single>^ __clrcall get();
				}

				property TESImageSpaceModifier::MultAdd<System::Single>^ BloomScale
				{
					TESImageSpaceModifier::MultAdd<System::Single>^ __clrcall get();
				}

				property TESImageSpaceModifier::MinMax<System::Single>^ TargetLum
				{
					TESImageSpaceModifier::MinMax<System::Single>^ __clrcall get();
				}

				property TESImageSpaceModifier::MultAdd<System::Single>^ SunlightScale
				{
					TESImageSpaceModifier::MultAdd<System::Single>^ __clrcall get();
				}

				property TESImageSpaceModifier::MultAdd<System::Single>^ SkyScale
				{
					TESImageSpaceModifier::MultAdd<System::Single>^ __clrcall get();
				}

				property System::IntPtr Empty
				{
					System::IntPtr __clrcall get();
				}
			};

			interface class BaseData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Boolean Animatable
				{
					System::Boolean __clrcall get();
				}

				property System::Single Duration
				{
					System::Single __clrcall get();
				}

				property TESImageSpaceModifier::HDRBaseData^ Hdr
				{
					TESImageSpaceModifier::HDRBaseData^ __clrcall get();
				}

				property TESImageSpaceModifier::BloomBaseData^ Bloom
				{
					TESImageSpaceModifier::BloomBaseData^ __clrcall get();
				}

				property TESImageSpaceModifier::CinematicBaseData^ Cinematic
				{
					TESImageSpaceModifier::CinematicBaseData^ __clrcall get();
				}

				property System::UInt32 TintColor
				{
					System::UInt32 __clrcall get();
				}

				property System::Int32 BlurRadius
				{
					System::Int32 __clrcall get();
				}

				property System::Int32 DoubleVisionStrength
				{
					System::Int32 __clrcall get();
				}

				property System::Int32 RadialBlurStrength
				{
					System::Int32 __clrcall get();
				}

				property System::Int32 RadialBlurRampUp
				{
					System::Int32 __clrcall get();
				}

				property System::Int32 RadialBlurStart
				{
					System::Int32 __clrcall get();
				}

				property System::Boolean UseTargetForRadialBlur
				{
					System::Boolean __clrcall get();
				}

				property NiPoint2^ RadialBlurCenter
				{
					NiPoint2^ __clrcall get();
				}

				property TESImageSpaceModifier::DOFBaseData^ Dof
				{
					TESImageSpaceModifier::DOFBaseData^ __clrcall get();
				}

				property System::Int32 RadialBlurRampDown
				{
					System::Int32 __clrcall get();
				}

				property System::Int32 RadialBlurDownStart
				{
					System::Int32 __clrcall get();
				}

				property System::UInt32 FadeColor
				{
					System::UInt32 __clrcall get();
				}

				property System::Int32 MotionBlurStrength
				{
					System::Int32 __clrcall get();
				}
			};

			property TESImageSpaceModifier::BaseData^ ImageSpaceData
			{
				TESImageSpaceModifier::BaseData^ __clrcall get();
			}

			property TESImageSpaceModifier::HDRInstanceData^ Hdr
			{
				TESImageSpaceModifier::HDRInstanceData^ __clrcall get();
			}

			property TESImageSpaceModifier::BloomInstanceData^ Bloom
			{
				TESImageSpaceModifier::BloomInstanceData^ __clrcall get();
			}

			property TESImageSpaceModifier::CinematicInstanceData^ Cinematic
			{
				TESImageSpaceModifier::CinematicInstanceData^ __clrcall get();
			}

			property NiPointer<NiFloatInterpolator^>^ BlurRadius
			{
				NiPointer<NiFloatInterpolator^>^ __clrcall get();
			}

			property NiPointer<NiFloatInterpolator^>^ DoubleVisionStrength
			{
				NiPointer<NiFloatInterpolator^>^ __clrcall get();
			}

			property NiPointer<NiColorInterpolator^>^ TintColor
			{
				NiPointer<NiColorInterpolator^>^ __clrcall get();
			}

			property NiPointer<NiColorInterpolator^>^ FadeColor
			{
				NiPointer<NiColorInterpolator^>^ __clrcall get();
			}

			property TESImageSpaceModifier::RadialBlurInstanceData^ RadialBlur
			{
				TESImageSpaceModifier::RadialBlurInstanceData^ __clrcall get();
			}

			property TESImageSpaceModifier::DOFInstanceData^ Dof
			{
				TESImageSpaceModifier::DOFInstanceData^ __clrcall get();
			}

			property NiPointer<NiColorInterpolator^>^ MotionBlurStrength
			{
				NiPointer<NiColorInterpolator^>^ __clrcall get();
			}

			property BSString^ FormEditorId
			{
				BSString^ __clrcall get();
			}

			/// <summary>
			/// Applies this image space modifier now.
			/// </summary>
			/// <param name="strength">The strength. Set 1.0 for normal.</param>
			/// <param name="node">Unknown node. This is null in almost all cases.</param>
			void Apply(System::Single strength, NiNode^ node);

			/// <summary>
			/// Removes this image space modifier.
			/// </summary>
			void Remove();
		};

		public interface class BGSCollisionLayer : public TESForm, public TESDescription, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class LayerFlags : System::UInt32
			{
				None = 0,
				TriggerVolume = 1,
				Sensor = 2,
				NavmeshObstacle = 4,
			};

			enum class RecordFlags : System::UInt32
			{
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property System::Int32 CollisionIndex
			{
				System::Int32 __clrcall get();
			}

			property Color^ DebugColor
			{
				Color^ __clrcall get();
			}

			property BGSCollisionLayer::LayerFlags Flags
			{
				BGSCollisionLayer::LayerFlags __clrcall get();
			}

			property BSFixedString^ Name
			{
				BSFixedString^ __clrcall get();
			}

			property BSTArray<BGSCollisionLayer^, BSTArrayHeapAllocator^>^ CollidesWith
			{
				BSTArray<BGSCollisionLayer^, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		public interface class BGSColorForm : public TESForm, public TESFullName, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class ColorFlags : System::UInt32
			{
				None = 0,
				Playable = 1,
			};

			enum class RecordFlags : System::UInt32
			{
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property Color^ ColorValue
			{
				Color^ __clrcall get();
			}

			property BGSColorForm::ColorFlags Flags
			{
				BGSColorForm::ColorFlags __clrcall get();
			}
		};

		public interface class BGSConstructibleObject : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			/// <summary>
			/// Gets the requirements.
			/// </summary>
			property TESContainer^ Requirements
			{
				TESContainer^ __clrcall get();
			}

			property TESCondition^ Conditions
			{
				TESCondition^ __clrcall get();
			}

			/// <summary>
			/// Gets or sets the created item.
			/// </summary>
			property TESForm^ CreatedItem
			{
				TESForm^ __clrcall get();

				void __clrcall set(TESForm^ value);
			}

			/// <summary>
			/// Gets or sets the required keyword for the crafting station where this object can be made.
			/// </summary>
			property BGSKeyword^ CraftingStationKeyword
			{
				BGSKeyword^ __clrcall get();

				void __clrcall set(BGSKeyword^ value);
			}

			/// <summary>
			/// Gets or sets the count of how many items are created from one craft.
			/// </summary>
			property System::Int16 CreatedCount
			{
				System::Int16 __clrcall get();

				void __clrcall set(System::Int16 value);
			}
		};

		public interface class BGSDebris : public TESForm, public BGSPreloadable, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property BSSimpleList<BGSDebrisData^>^ Data
			{
				BSSimpleList<BGSDebrisData^>^ __clrcall get();
			}
		};

		public interface class BGSDefaultObjectManager : public TESForm, public BSTSingletonImplicit1<BGSDefaultObjectManager^>, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DefaultObjectTypes : System::Int32
			{
				Misc = 0,
				FaceGen = 1,
				Movement = 2,
				Actions = 3,
				Items = 4,
				Sounds = 5,
				Keywords = 6,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
			};

			interface class DefaultObjectData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::String^ Name
				{
					System::String^ __clrcall get();
				}

				property FormTypes Type
				{
					FormTypes __clrcall get();
				}

				property System::IntPtr UniqueID
				{
					System::IntPtr __clrcall get();
				}

				property BGSDefaultObjectManager::DefaultObjectTypes DoType
				{
					BGSDefaultObjectManager::DefaultObjectTypes __clrcall get();
				}
			};

			property NetScriptFramework::FixedMemoryArray<TESForm^>^ Objects
			{
				NetScriptFramework::FixedMemoryArray<TESForm^>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<System::Boolean>^ ObjectsInitialized
			{
				NetScriptFramework::FixedMemoryArray<System::Boolean>^ __clrcall get();
			}

			/// <summary>
			/// Gets the default object manager instance.
			/// </summary>
			static property BGSDefaultObjectManager^ Instance
			{
				BGSDefaultObjectManager^ __clrcall get()
				{
					return NetScriptFramework::MemoryObject::FromAddress<BGSDefaultObjectManager^>(NetScriptFramework::Memory::InvokeCdecl(__VIDS::VID10878.Value));
				}
			}
		};

		public interface class BGSEncounterZone : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class EncounterZoneGameData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::UInt32 DetachTime
				{
					System::UInt32 __clrcall get();
				}

				property System::UInt32 AttachTime
				{
					System::UInt32 __clrcall get();
				}

				property System::UInt32 ResetTime
				{
					System::UInt32 __clrcall get();
				}

				property System::UInt16 ZoneLevel
				{
					System::UInt16 __clrcall get();
				}
			};

			enum class EncounterZoneFlags : System::Byte
			{
				None = 0,
				NeverResets = 1,
				MatchPCBelowMinimumLevel = 2,
				DisableCombatBoundary = 4,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			enum class ChangeFlags : System::UInt32
			{
				None = 0,
				ZoneFlags = 2,
				GameData = 0x80000000,
			};

			interface class EncounterZoneData;

			property BGSEncounterZone::EncounterZoneData^ ZoneData
			{
				BGSEncounterZone::EncounterZoneData^ __clrcall get();
			}

			property BGSEncounterZone::EncounterZoneGameData^ ZoneGameData
			{
				BGSEncounterZone::EncounterZoneGameData^ __clrcall get();
			}
		};

		public interface class BGSListForm : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			enum class ChangeFlags : System::UInt32
			{
				None = 0,
				AddedForm = 0x80000000,
			};

			property BSTArray<TESForm^, BSTArrayHeapAllocator^>^ Forms
			{
				BSTArray<TESForm^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ ScriptAddedTempForms
			{
				BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property System::Int32 ScriptAddedFormCount
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class TESIdleForm : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DataFlags : System::Byte
			{
				None = 0,
				Parent = 1,
				Sequence = 2,
				NoAttacking = 4,
				Blocking = 8,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::SByte LoopMin
				{
					System::SByte __clrcall get();
				}

				property System::SByte LoopMax
				{
					System::SByte __clrcall get();
				}

				property TESIdleForm::DataFlags IdleFlags
				{
					TESIdleForm::DataFlags __clrcall get();
				}

				property System::Byte AnimationGroupSelection
				{
					System::Byte __clrcall get();
				}

				property System::UInt16 ReplayDelay
				{
					System::UInt16 __clrcall get();
				}
			};

			property TESCondition^ Conditions
			{
				TESCondition^ __clrcall get();
			}

			property TESIdleForm::Data^ IdleData
			{
				TESIdleForm::Data^ __clrcall get();
			}

			property NiFormArray^ ChildIdles
			{
				NiFormArray^ __clrcall get();
			}

			property TESIdleForm^ ParentIdle
			{
				TESIdleForm^ __clrcall get();
			}

			property TESIdleForm^ PreviousIdle
			{
				TESIdleForm^ __clrcall get();
			}

			property BSFixedString^ AnimationFileName
			{
				BSFixedString^ __clrcall get();
			}

			property BSFixedString^ AnimationEventName
			{
				BSFixedString^ __clrcall get();
			}

			property BSString^ FormEditorId
			{
				BSString^ __clrcall get();
			}
		};

		public interface class BGSLensFlare : public TESForm, public BSLensFlareRenderData, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
			};
		};

		public interface class BGSLightingTemplate : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class InteriorInheritFlags : System::UInt32
			{
				None = 0,
				AmbientColor = 1,
				DirectionalColor = 2,
				FogColor = 4,
				FogNear = 8,
				FogFar = 0x10,
				DirectionalRotation = 0x20,
				DirectionalFade = 0x40,
				ClipDistance = 0x80,
				FogPower = 0x100,
				FogMax = 0x200,
				LightFadeDistances = 0x400,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			interface class InteriorData : public NetScriptFramework::IMemoryObject
			{
			public:
				property Color^ AmbientColor
				{
					Color^ __clrcall get();
				}

				property Color^ DirectionalColor
				{
					Color^ __clrcall get();
				}

				property Color^ FogColorNear
				{
					Color^ __clrcall get();
				}

				property System::Single FogNear
				{
					System::Single __clrcall get();
				}

				property System::Single FogFar
				{
					System::Single __clrcall get();
				}

				property System::UInt32 DirectionalXY
				{
					System::UInt32 __clrcall get();
				}

				property System::UInt32 DirectionalZ
				{
					System::UInt32 __clrcall get();
				}

				property System::Single DirectionalFade
				{
					System::Single __clrcall get();
				}

				property System::Single ClipDist
				{
					System::Single __clrcall get();
				}

				property System::Single FogPower
				{
					System::Single __clrcall get();
				}

				property BGSDirectionalAmbientLightingColors^ DirectionalAmbientLightingColors
				{
					BGSDirectionalAmbientLightingColors^ __clrcall get();
				}

				property Color^ FogColorFar
				{
					Color^ __clrcall get();
				}

				property System::Single FogClamp
				{
					System::Single __clrcall get();
				}

				property System::Single LightFadeStart
				{
					System::Single __clrcall get();
				}

				property System::Single LightFadeEnd
				{
					System::Single __clrcall get();
				}

				property BGSLightingTemplate::InteriorInheritFlags LightingTemplateInheritanceFlags
				{
					BGSLightingTemplate::InteriorInheritFlags __clrcall get();
				}
			};

			property BGSLightingTemplate::InteriorData^ Interior
			{
				BGSLightingTemplate::InteriorData^ __clrcall get();
			}

			property BGSDirectionalAmbientLightingColors^ DirectionalAmbientLightingColors
			{
				BGSDirectionalAmbientLightingColors^ __clrcall get();
			}
		};

		public interface class BGSMusicType : public TESForm, public BSIMusicType, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property BSFixedString^ FormEditorID
			{
				BSFixedString^ __clrcall get();
			}
		};

		public interface class BGSMenuIcon : public TESForm, public TESIcon, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
			};
		};

		public interface class BGSMovementType : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MaxSpeeds : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::IntPtr Speeds
				{
					System::IntPtr __clrcall get();
				}

				property System::Single RotateWhileMovingRun
				{
					System::Single __clrcall get();
				}
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			enum class SpeedDirections : System::Int32
			{
				Left = 0,
				Right = 1,
				Forward = 2,
				Back = 3,
				Rotations = 4,
			};

			enum class SpeedTypes : System::Int32
			{
				Walk = 0,
				Run = 1,
			};

			interface class MovementTypeData : public NetScriptFramework::IMemoryObject
			{
			public:
				property BSFixedString^ TypeName
				{
					BSFixedString^ __clrcall get();
				}

				property BGSMovementType::MaxSpeeds^ SpeedData
				{
					BGSMovementType::MaxSpeeds^ __clrcall get();
				}

				property System::Single Directional
				{
					System::Single __clrcall get();
				}

				property System::Single MovementSpeed
				{
					System::Single __clrcall get();
				}

				property System::Single RotationSpeed
				{
					System::Single __clrcall get();
				}
			};

			property BGSMovementType::MovementTypeData^ MovementData
			{
				BGSMovementType::MovementTypeData^ __clrcall get();
			}
		};

		public interface class BGSMusicTrackFormWrapper : public TESForm, public BSIMusicTrack, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property BGSMusicTrack^ Track
			{
				BGSMusicTrack^ __clrcall get();
			}
		};

		public interface class BGSReferenceEffect : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DataFlags : System::UInt32
			{
				None = 0,
				FaceTarget = 1,
				AttachToCamera = 2,
				InheritRotation = 4,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			interface class Data;

			property BGSReferenceEffect::Data^ ReferenceEffectData
			{
				BGSReferenceEffect::Data^ __clrcall get();
			}
		};

		public interface class BGSShaderParticleGeometryData : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class SettingValue : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Single FloatValue
				{
					System::Single __clrcall get();
				}

				property System::Int32 IntValue
				{
					System::Int32 __clrcall get();
				}
			};

			enum class ValueTypes : System::Int32
			{
				GravityVelocity = 0,
				RotationVelocity = 1,
				ParticleSizeX = 2,
				ParticleSizeY = 3,
				CenterOffsetMin = 4,
				CenterOffsetMax = 5,
				StartRotationRange = 6,
				NumSubtexturesX = 7,
				NumSubtexturesY = 8,
				ParticleType = 9,
				BoxSize = 0xA,
				ParticleDensity = 0xB,
			};

			enum class ParticleTypes : System::Int32
			{
				Rain = 0,
				Snow = 1,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property BSTArray<BGSShaderParticleGeometryData::SettingValue^, BSTArrayHeapAllocator^>^ ParticleValues
			{
				BSTArray<BGSShaderParticleGeometryData::SettingValue^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property TESTexture^ ParticleTexture
			{
				TESTexture^ __clrcall get();
			}
		};

		public interface class BGSStoryManagerTreeForm : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::UInt32 LastVisitorId
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class BGSVoiceType : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class VoiceTypeDataFlags : System::Byte
			{
				None = 0,
				AllowDefaultDialogue = 1,
				Female = 2,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property BGSVoiceType::VoiceTypeDataFlags VoiceTypeFlags
			{
				BGSVoiceType::VoiceTypeDataFlags __clrcall get();
			}

			property BSString^ FormEditorId
			{
				BSString^ __clrcall get();
			}
		};

		public interface class BGSVolumetricLighting : public TESForm, public BSVolumetricLightingRenderData, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};
		};

		public interface class TESGlobal : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class GlobalValueTypes : System::SByte
			{
				Float = 0x66,
				Int32 = 0x6C,
				Int16 = 0x73,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Constant = 0x40,
				Ignored = 0x1000,
			};

			property BSString^ FormEditorId
			{
				BSString^ __clrcall get();
			}

			/// <summary>
			/// Gets the value type of the global.
			/// </summary>
			property TESGlobal::GlobalValueTypes ValueType
			{
				TESGlobal::GlobalValueTypes __clrcall get();
			}

			/// <summary>
			/// Gets or sets the float value. This will throw an exception if trying to edit a constant global.
			/// </summary>
			property System::Single FloatValue
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}

			/// <summary>
			/// Gets or sets the integer value. This will throw an exception if trying to edit a constant global.
			/// </summary>
			property System::Int32 Int32Value
			{
				System::Int32 __clrcall get();

				void __clrcall set(System::Int32 value);
			}

			/// <summary>
			/// Gets or sets the short value. This will throw an exception if trying to edit a constant global.
			/// </summary>
			property System::Int16 Int16Value
			{
				System::Int16 __clrcall get();

				void __clrcall set(System::Int16 value);
			}
		};

		public interface class TESClass : public TESForm, public TESFullName, public TESDescription, public TESTexture, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class SkillWeights : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Byte OneHanded
				{
					System::Byte __clrcall get();
				}

				property System::Byte TwoHanded
				{
					System::Byte __clrcall get();
				}

				property System::Byte Archery
				{
					System::Byte __clrcall get();
				}

				property System::Byte Block
				{
					System::Byte __clrcall get();
				}

				property System::Byte Smithing
				{
					System::Byte __clrcall get();
				}

				property System::Byte HeavyArmor
				{
					System::Byte __clrcall get();
				}

				property System::Byte LightArmor
				{
					System::Byte __clrcall get();
				}

				property System::Byte Pickpocket
				{
					System::Byte __clrcall get();
				}

				property System::Byte Lockpicking
				{
					System::Byte __clrcall get();
				}

				property System::Byte Sneak
				{
					System::Byte __clrcall get();
				}

				property System::Byte Alchemy
				{
					System::Byte __clrcall get();
				}

				property System::Byte Speech
				{
					System::Byte __clrcall get();
				}

				property System::Byte Alteration
				{
					System::Byte __clrcall get();
				}

				property System::Byte Conjuration
				{
					System::Byte __clrcall get();
				}

				property System::Byte Destruction
				{
					System::Byte __clrcall get();
				}

				property System::Byte Illusion
				{
					System::Byte __clrcall get();
				}

				property System::Byte Restoration
				{
					System::Byte __clrcall get();
				}

				property System::Byte Enchanting
				{
					System::Byte __clrcall get();
				}
			};

			interface class AttributeWeights : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Byte Health
				{
					System::Byte __clrcall get();
				}

				property System::Byte Magicka
				{
					System::Byte __clrcall get();
				}

				property System::Byte Stamina
				{
					System::Byte __clrcall get();
				}
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			enum class ChangeFlags : System::UInt32
			{
				None = 0,
				TagSkills = 2,
			};

			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property SkillsEnum8 Teaches
				{
					SkillsEnum8 __clrcall get();
				}

				property System::Byte MaximumTrainingLevel
				{
					System::Byte __clrcall get();
				}

				property TESClass::SkillWeights^ SkillWeights
				{
					TESClass::SkillWeights^ __clrcall get();
				}

				property System::Single BleedoutDefault
				{
					System::Single __clrcall get();
				}

				property System::UInt32 VoicePoints
				{
					System::UInt32 __clrcall get();
				}

				property TESClass::AttributeWeights^ AttributeWeights
				{
					TESClass::AttributeWeights^ __clrcall get();
				}
			};

			property TESClass::Data^ ClassData
			{
				TESClass::Data^ __clrcall get();
			}
		};

		public interface class TESImageSpace : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class HDRData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Single EyeAdaptSpeed
				{
					System::Single __clrcall get();
				}

				property System::Single BloomBlurRadius
				{
					System::Single __clrcall get();
				}

				property System::Single BloomThreshold
				{
					System::Single __clrcall get();
				}

				property System::Single BloomScale
				{
					System::Single __clrcall get();
				}

				property System::Single ReceiveBloomThreshold
				{
					System::Single __clrcall get();
				}

				property System::Single White
				{
					System::Single __clrcall get();
				}

				property System::Single SunlightScale
				{
					System::Single __clrcall get();
				}

				property System::Single SkyScale
				{
					System::Single __clrcall get();
				}

				property System::Single EyeAdaptStrength
				{
					System::Single __clrcall get();
				}
			};

			interface class CinematicData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Single Saturation
				{
					System::Single __clrcall get();
				}

				property System::Single Brightness
				{
					System::Single __clrcall get();
				}

				property System::Single Contrast
				{
					System::Single __clrcall get();
				}
			};

			interface class TintData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Single Amount
				{
					System::Single __clrcall get();
				}

				property System::Single Red
				{
					System::Single __clrcall get();
				}

				property System::Single Green
				{
					System::Single __clrcall get();
				}

				property System::Single Blue
				{
					System::Single __clrcall get();
				}
			};

			enum class SkyBlurRadiusEnum : System::UInt16
			{
				Radius0 = 0x4000,
				Radius1 = 0x4120,
				Radius2 = 0x4190,
				Radius3 = 0x41D0,
				Radius4 = 0x4208,
				Radius5 = 0x4228,
				Radius6 = 0x4248,
				Radius7 = 0x4268,
				NoSky_Radius0 = 0x40C0,
				NoSky_Radius1 = 0x4160,
				NoSky_Radius2 = 0x41B0,
				NoSky_Radius3 = 0x41F0,
				NoSky_Radius4 = 0x4218,
				NoSky_Radius5 = 0x4238,
				NoSky_Radius6 = 0x4258,
				NoSky_Radius7 = 0x4278,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			interface class DOFData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Single Strength
				{
					System::Single __clrcall get();
				}

				property System::Single Distance
				{
					System::Single __clrcall get();
				}

				property System::Single Range
				{
					System::Single __clrcall get();
				}

				property TESImageSpace::SkyBlurRadiusEnum SkyBlurRadius
				{
					TESImageSpace::SkyBlurRadiusEnum __clrcall get();
				}
			};

			interface class BaseData : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESImageSpace::HDRData^ Hdr
				{
					TESImageSpace::HDRData^ __clrcall get();
				}

				property TESImageSpace::CinematicData^ Cinematic
				{
					TESImageSpace::CinematicData^ __clrcall get();
				}

				property TESImageSpace::TintData^ Tint
				{
					TESImageSpace::TintData^ __clrcall get();
				}

				property TESImageSpace::DOFData^ DepthOfField
				{
					TESImageSpace::DOFData^ __clrcall get();
				}
			};

			property TESImageSpace::BaseData^ ImageSpaceData
			{
				TESImageSpace::BaseData^ __clrcall get();
			}
		};

		public interface class TESObjectLAND : public TESForm, public TESChildCell, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DataFlags : System::UInt32
			{
				None = 0,
				VertexNormals_HeightMap = 1,
				VertexColors = 2,
				Layers = 4,
				MPCD = 0x400,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
				Compressed = 0x40000,
			};

			interface class NormalData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::SByte X
				{
					System::SByte __clrcall get();
				}

				property System::SByte Y
				{
					System::SByte __clrcall get();
				}

				property System::SByte Z
				{
					System::SByte __clrcall get();
				}
			};

			interface class LoadedLandData;

			property TESObjectLAND::DataFlags LandFlags
			{
				TESObjectLAND::DataFlags __clrcall get();
			}

			property TESObjectCELL^ ParentCell
			{
				TESObjectCELL^ __clrcall get();
			}

			property NiPointer<QueuedFile^>^ QueuedTextures
			{
				NiPointer<QueuedFile^>^ __clrcall get();
			}

			property System::IntPtr LoadedData
			{
				System::IntPtr __clrcall get();
			}
		};

		public interface class TESWordOfPower : public TESForm, public TESFullName, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property BSFixedString^ Translation
			{
				BSFixedString^ __clrcall get();
			}
		};

		public interface class Script : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			property ScriptHeader^ Header
			{
				ScriptHeader^ __clrcall get();
			}

			property System::String^ Text
			{
				System::String^ __clrcall get();
			}

			property ScriptFunction::ScriptData^ Data
			{
				ScriptFunction::ScriptData^ __clrcall get();
			}

			property System::Single ProfilerTimer
			{
				System::Single __clrcall get();
			}

			property System::Single QuestScriptDelay
			{
				System::Single __clrcall get();
			}

			property System::Single QuestScriptGetSecondsBuffer
			{
				System::Single __clrcall get();
			}

			property TESQuest^ ParentQuest
			{
				TESQuest^ __clrcall get();
			}

			property BSSimpleList<ScriptReferencedObject^>^ ReferencedObjects
			{
				BSSimpleList<ScriptReferencedObject^>^ __clrcall get();
			}

			property BSSimpleList<ScriptVariable^>^ Variables
			{
				BSSimpleList<ScriptVariable^>^ __clrcall get();
			}
		};

		public interface class TESEyes : public TESForm, public TESFullName, public TESTexture, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DataFlags : System::Byte
			{
				None = 0,
				Playable = 1,
				NotMale = 2,
				NotFemale = 4,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				NonPlayable = 4,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property TESEyes::DataFlags EyeFlags
			{
				TESEyes::DataFlags __clrcall get();
			}
		};

		public interface class TESLoadScreen : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				DisplaysInMainMenu = 0x400,
				Ignored = 0x1000,
			};

			interface class LoadNIFData;

			property TESCondition^ Conditions
			{
				TESCondition^ __clrcall get();
			}

			property TESLoadScreen::LoadNIFData^ NIFData
			{
				TESLoadScreen::LoadNIFData^ __clrcall get();
			}

			property BSFixedString^ LoadingText
			{
				BSFixedString^ __clrcall get();
			}
		};

		public interface class TESObjectANIO : public TESForm, public TESModelTextureSwap, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property BSFixedString^ FormEditorId
			{
				BSFixedString^ __clrcall get();
			}

			property BSFixedString^ UnloadEventName
			{
				BSFixedString^ __clrcall get();
			}
		};

		public interface class NavMeshInfoMap : public TESForm, public BSNavmeshInfoMap, public PrecomputedNavmeshInfoPathMap, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
			};

			property System::Boolean UpdateAll
			{
				System::Boolean __clrcall get();
			}

			property BSTHashMap2<System::UInt32, System::IntPtr>^ InfoMap
			{
				BSTHashMap2<System::UInt32, System::IntPtr>^ __clrcall get();
			}

			property BSTHashMap2<System::UInt64, BSTArray<BSNavmeshInfo^, BSTArrayHeapAllocator^>^>^ CkNavMeshInfoMap
			{
				BSTHashMap2<System::UInt64, BSTArray<BSNavmeshInfo^, BSTArrayHeapAllocator^>^>^ __clrcall get();
			}

			property MutexRW^ MapLock
			{
				MutexRW^ __clrcall get();
			}

			property System::Boolean Init
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class TESBoundObject : public TESObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property NiNPShortPoint3^ BoundMin
				{
					NiNPShortPoint3^ __clrcall get();
				}

				property NiNPShortPoint3^ BoundMax
				{
					NiNPShortPoint3^ __clrcall get();
				}
			};

			property TESBoundObject::Data^ BoundData
			{
				TESBoundObject::Data^ __clrcall get();
			}
		};

		public interface class BGSIdleCollection : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class IdleCollectionFlags : System::Byte
			{
				None = 0,
				PickSequence = 1,
				OldPickConditions = 2,
				DoOnce = 4,
				LooseOnly = 8,
				NoSandbox = 0x10,
			};

			property BGSIdleCollection::IdleCollectionFlags IdleFlags
			{
				BGSIdleCollection::IdleCollectionFlags __clrcall get();
			}

			property System::SByte IdleCount
			{
				System::SByte __clrcall get();
			}

			property System::IntPtr IdleArray
			{
				System::IntPtr __clrcall get();
			}

			property System::Single TimerCheckForIdle
			{
				System::Single __clrcall get();
			}
		};

		public interface class BGSEquipType : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			property BGSEquipSlot^ EquipSlot
			{
				BGSEquipSlot^ __clrcall get();
			}
		};

		public interface class BGSSoundDescriptor : public BSISoundDescriptor, public NetScriptFramework::IVirtualObject
		{
		public:
			property BGSSoundCategory^ Category
			{
				BGSSoundCategory^ __clrcall get();
			}

			property System::UInt32 AlternateSoundFormId
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class BGSAction : public BGSKeyword, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property System::Int32 Index
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class TESImageSpaceModifiableForm : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			property TESImageSpaceModifier^ ImageSpaceModifying
			{
				TESImageSpaceModifier^ __clrcall get();
			}
		};

		public interface class BGSEntryPointPerkEntry : public BGSPerkEntry, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class EntryPointFunctionTypes : System::SByte
			{
				SetValue = 1,
				AddValue = 2,
				MultiplyValue = 3,
				AddRangeToValue = 4,
				AddActorValueMult = 5,
				AbsoluteValue = 6,
				NegativeAbsoluteValue = 7,
				AddLeveledList = 8,
				AddActivateChoice = 9,
				SelectSpell = 0xA,
				SelectText = 0xB,
				SetToActorValueMult = 0xC,
				MultiplyActorValueMult = 0xD,
				Multiply1PlusActorValueMult = 0xE,
				SetText = 0xF,
			};

			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property PerkEntryPoints8 EntryPoint
				{
					PerkEntryPoints8 __clrcall get();
				}

				property BGSEntryPointPerkEntry::EntryPointFunctionTypes Function
				{
					BGSEntryPointPerkEntry::EntryPointFunctionTypes __clrcall get();
				}

				property System::SByte NumArgs
				{
					System::SByte __clrcall get();
				}
			};

			property BGSEntryPointPerkEntry::Data^ EntryData
			{
				BGSEntryPointPerkEntry::Data^ __clrcall get();
			}

			property BGSEntryPointFunctionData^ FunctionData
			{
				BGSEntryPointFunctionData^ __clrcall get();
			}

			property TESCondition^ Conditions
			{
				TESCondition^ __clrcall get();
			}

			property BGSPerk^ Perk
			{
				BGSPerk^ __clrcall get();
			}
		};

		public interface class BGSLocationRefType : public BGSKeyword, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};
		};

		public interface class BGSMessage : public TESForm, public TESFullName, public TESDescription, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MessageBoxButton : public NetScriptFramework::IMemoryObject
			{
			public:
				property BSFixedString^ Text
				{
					BSFixedString^ __clrcall get();
				}

				property TESCondition^ Conditions
				{
					TESCondition^ __clrcall get();
				}
			};

			enum class MessageFlags : System::UInt32
			{
				None = 0,
				MessageBox = 1,
				InitialDelay = 2,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property BGSMenuIcon^ Icon
			{
				BGSMenuIcon^ __clrcall get();
			}

			property TESQuest^ OwnerQuest
			{
				TESQuest^ __clrcall get();
			}

			property BSSimpleList<BGSMessage::MessageBoxButton^>^ MenuButtons
			{
				BSSimpleList<BGSMessage::MessageBoxButton^>^ __clrcall get();
			}

			property BGSMessage::MessageFlags Options
			{
				BGSMessage::MessageFlags __clrcall get();
			}

			property System::Int32 DisplayTime
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class BGSOverridePackCollection : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			property BGSListForm^ SpectatorOverRidePackList
			{
				BGSListForm^ __clrcall get();
			}

			property BGSListForm^ ObserveCorpseOverRidePackList
			{
				BGSListForm^ __clrcall get();
			}

			property BGSListForm^ GuardWarnOverRidePackList
			{
				BGSListForm^ __clrcall get();
			}

			property BGSListForm^ EnterCombatOverRidePackList
			{
				BGSListForm^ __clrcall get();
			}
		};

		/// <summary>
		/// Leveled list component of form.
		/// </summary>
		public interface class TESLeveledList : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			/// <summary>
			/// Entry of leveled list.
			/// </summary>
			interface class Entry : public NetScriptFramework::IMemoryObject
			{
			public:
				/// <summary>
				/// Extra data of the entry.
				/// </summary>
				interface class Data : public NetScriptFramework::IMemoryObject
				{
				public:
					/// <summary>
					/// Gets or sets the owner form. This is either an NPC or faction.
					/// </summary>
					property TESForm^ Owner
					{
						TESForm^ __clrcall get();

						void __clrcall set(TESForm^ value);
					}

					/// <summary>
					/// Gets or sets the health. This is not a per cent here as it is in the creation kit! It's instead ratio where 1.2 is 120 per cent.
					/// </summary>
					property System::Single Health
					{
						System::Single __clrcall get();

						void __clrcall set(System::Single value);
					}

					/// <summary>
					/// Gets or sets the global. This is only possible if the owner is set and is an NPC!
					/// </summary>
					property TESGlobal^ Global
					{
						TESGlobal^ __clrcall get();

						void __clrcall set(TESGlobal^ value);
					}

					/// <summary>
					/// Gets or sets the required rank. This is only possible if owner is set and is a faction!
					/// </summary>
					property System::Int32 RequiredRank
					{
						System::Int32 __clrcall get();

						void __clrcall set(System::Int32 value);
					}
				};

				/// <summary>
				/// Gets or sets the form.
				/// </summary>
				property TESForm^ Form
				{
					TESForm^ __clrcall get();

					void __clrcall set(TESForm^ value);
				}

				/// <summary>
				/// Gets or sets the count.
				/// </summary>
				property System::Int16 Count
				{
					System::Int16 __clrcall get();

					void __clrcall set(System::Int16 value);
				}

				/// <summary>
				/// Gets or sets the player level when this item can begin appearing.
				/// </summary>
				property System::Int16 Level
				{
					System::Int16 __clrcall get();

					void __clrcall set(System::Int16 value);
				}

				/// <summary>
				/// Gets or sets the extra data.
				/// </summary>
				property TESLeveledList::Entry::Data^ Extra
				{
					TESLeveledList::Entry::Data^ __clrcall get();

					void __clrcall set(TESLeveledList::Entry::Data^ value);
				}
			};

			/// <summary>
			/// Gets or sets the leveled list array data base address.
			/// </summary>
			property System::IntPtr LeveledListEntriesArray
			{
				System::IntPtr __clrcall get();

				void __clrcall set(System::IntPtr value);
			}

			/// <summary>
			/// Gets or sets the skip chance of leveled list in per cent. This is only used if the global is not set.
			/// </summary>
			property System::Byte LeveledListSkipChance
			{
				System::Byte __clrcall get();

				void __clrcall set(System::Byte value);
			}

			/// <summary>
			/// Gets or sets the leveled list flags.
			/// </summary>
			property TESLeveledListFlags LeveledListFlagsValue
			{
				TESLeveledListFlags __clrcall get();

				void __clrcall set(TESLeveledListFlags value);
			}

			/// <summary>
			/// Gets or sets the amount of entries in the leveled list array. Setting this manually is not a good idea unless you're also changing the array.
			/// </summary>
			property System::Byte LeveledListEntriesCount
			{
				System::Byte __clrcall get();

				void __clrcall set(System::Byte value);
			}

			/// <summary>
			/// Gets or sets the global that is used to calculate the "skip" chance of this leveled list. If no global then regular skip chance variable on this form is used instead.
			/// </summary>
			property TESGlobal^ LeveledListSkipChanceGlobal
			{
				TESGlobal^ __clrcall get();

				void __clrcall set(TESGlobal^ value);
			}

			/// <summary>
			/// Gets the value at specified index.
			/// </summary>
			property TESLeveledList::Entry^ default[System::Int32]
			{
				TESLeveledList::Entry^ get(System::Int32 index);
			}

			/// <summary>
			/// Gets all the leveled list entries.
			/// </summary>
			System::Collections::Generic::List<TESLeveledList::Entry^>^ GetLeveledListEntries();

			/// <summary>
			/// Sets all the leveled list entries.
			/// </summary>
			/// <param name="entries">The entries.</param>
			void SetLeveledListEntries(System::Collections::Generic::IReadOnlyList<TESLeveledList::Entry^>^ entries);

			/// <summary>
			/// Add an entry to leveled list. This will throw an exception if there are already 255 entries.
			/// </summary>
			/// <param name="form">The form of object to add.</param>
			/// <param name="count">The count of object.</param>
			/// <param name="level">The level.</param>
			/// <param name="extra">Extra data of form. This is optional.</param>
			void AddLeveledListEntry(TESForm^ form, System::Int16 count, System::UInt16 level, ExtraContainerChanges::ItemEntry^ extra);
		};

		interface class TESEffectShader::Data : public NetScriptFramework::IMemoryObject
		{
		public:
			property D3DBLEND MembraneShaderSourceBlendMode
			{
				D3DBLEND __clrcall get();
			}

			property D3DBLENDOP MembraneShaderBlendOperation
			{
				D3DBLENDOP __clrcall get();
			}

			property D3DCMPFUNC MembraneShaderZTestFunction
			{
				D3DCMPFUNC __clrcall get();
			}

			property Color^ FillTextureEffectColorKey1
			{
				Color^ __clrcall get();
			}

			property System::Single FillTextureEffectAlphaFadeInTime
			{
				System::Single __clrcall get();
			}

			property System::Single FillTextureEffectFullAlphaTime
			{
				System::Single __clrcall get();
			}

			property System::Single FillTextureEffectAlphaFadeOutTime
			{
				System::Single __clrcall get();
			}

			property System::Single FillTextureEffectPersistentAlphaRatio
			{
				System::Single __clrcall get();
			}

			property System::Single FillTextureEffectAlphaPulseAmplitude
			{
				System::Single __clrcall get();
			}

			property System::Single FillTextureEffectAlphaPulseFrequency
			{
				System::Single __clrcall get();
			}

			property System::Single FillTextureEffectTextureAnimationSpeedU
			{
				System::Single __clrcall get();
			}

			property System::Single FillTextureEffectTextureAnimationSpeedV
			{
				System::Single __clrcall get();
			}

			property System::Single EdgeEffectFallOff
			{
				System::Single __clrcall get();
			}

			property Color^ EdgeEffectColor
			{
				Color^ __clrcall get();
			}

			property System::Single EdgeEffectAlphaFadeInTime
			{
				System::Single __clrcall get();
			}

			property System::Single EdgeEffectFullAlphaTime
			{
				System::Single __clrcall get();
			}

			property System::Single EdgeEffectAlphaFadeOutTime
			{
				System::Single __clrcall get();
			}

			property System::Single EdgeEffectPersistentAlphaRatio
			{
				System::Single __clrcall get();
			}

			property System::Single EdgeEffectAlphaPulseAmplitude
			{
				System::Single __clrcall get();
			}

			property System::Single EdgeEffectAlphaPulseFrequency
			{
				System::Single __clrcall get();
			}

			property System::Single FillTextureEffectFullAlphaRatio
			{
				System::Single __clrcall get();
			}

			property System::Single EdgeEffectFullAlphaRatio
			{
				System::Single __clrcall get();
			}

			property D3DBLEND MembraneShaderDestBlendMode
			{
				D3DBLEND __clrcall get();
			}

			property D3DBLEND ParticleShaderSourceBlendMode
			{
				D3DBLEND __clrcall get();
			}

			property D3DBLENDOP ParticleShaderBlendOperation
			{
				D3DBLENDOP __clrcall get();
			}

			property D3DCMPFUNC ParticleShaderZTestOperation
			{
				D3DCMPFUNC __clrcall get();
			}

			property D3DBLEND ParticleShaderDestBlendMode
			{
				D3DBLEND __clrcall get();
			}

			property System::Single ParticleShaderParticleBirthRampUpTime
			{
				System::Single __clrcall get();
			}

			property System::Single ParticleShaderFullParticleBirthTime
			{
				System::Single __clrcall get();
			}

			property System::Single ParticleShaderParticleBirthRampDownTime
			{
				System::Single __clrcall get();
			}

			property System::Single ParticleShaderFullParticleBirthRatio
			{
				System::Single __clrcall get();
			}

			property System::Single ParticleShaderPersistantParticleCount
			{
				System::Single __clrcall get();
			}

			property System::Single ParticleShaderParticleLifetime
			{
				System::Single __clrcall get();
			}

			property System::Single ParticleShaderParticleLifetimeVariance
			{
				System::Single __clrcall get();
			}

			property System::Single ParticleShaderInitialSpeedAlongNormal
			{
				System::Single __clrcall get();
			}

			property System::Single ParticleShaderAccelerationAlongNormal
			{
				System::Single __clrcall get();
			}

			property System::Single ParticleShaderInitialVelocity1
			{
				System::Single __clrcall get();
			}

			property System::Single ParticleShaderInitialVelocity2
			{
				System::Single __clrcall get();
			}

			property System::Single ParticleShaderInitialVelocity3
			{
				System::Single __clrcall get();
			}

			property System::Single ParticleShaderAcceleration1
			{
				System::Single __clrcall get();
			}

			property System::Single ParticleShaderAcceleration2
			{
				System::Single __clrcall get();
			}

			property System::Single ParticleShaderAcceleration3
			{
				System::Single __clrcall get();
			}

			property System::Single ParticleShaderScaleKey1
			{
				System::Single __clrcall get();
			}

			property System::Single ParticleShaderScaleKey2
			{
				System::Single __clrcall get();
			}

			property System::Single ParticleShaderScaleKey1Time
			{
				System::Single __clrcall get();
			}

			property System::Single ParticleShaderScaleKey2Time
			{
				System::Single __clrcall get();
			}

			property Color^ ColorKey1
			{
				Color^ __clrcall get();
			}

			property Color^ ColorKey2
			{
				Color^ __clrcall get();
			}

			property Color^ ColorKey3
			{
				Color^ __clrcall get();
			}

			property System::Single ColorKey1ColorAlpha
			{
				System::Single __clrcall get();
			}

			property System::Single ColorKey2ColorAlpha
			{
				System::Single __clrcall get();
			}

			property System::Single ColorKey3ColorAlpha
			{
				System::Single __clrcall get();
			}

			property System::Single ColorKey1ColorKeyTime
			{
				System::Single __clrcall get();
			}

			property System::Single ColorKey2ColorKeyTime
			{
				System::Single __clrcall get();
			}

			property System::Single ColorKey3ColorKeyTime
			{
				System::Single __clrcall get();
			}

			property System::Single ParticleShaderInitialSpeedAlongNormalVariance
			{
				System::Single __clrcall get();
			}

			property System::Single ParticleShaderInitialRotation
			{
				System::Single __clrcall get();
			}

			property System::Single ParticleShaderInitialRotationVariance
			{
				System::Single __clrcall get();
			}

			property System::Single ParticleShaderRotationSpeed
			{
				System::Single __clrcall get();
			}

			property System::Single ParticleShaderRotationSpeedVariance
			{
				System::Single __clrcall get();
			}

			property BGSDebris^ AddonModels
			{
				BGSDebris^ __clrcall get();
			}

			property System::Single HolesStartTime
			{
				System::Single __clrcall get();
			}

			property System::Single HolesEndTime
			{
				System::Single __clrcall get();
			}

			property System::Single HolesStartVal
			{
				System::Single __clrcall get();
			}

			property System::Single HolesEndVal
			{
				System::Single __clrcall get();
			}

			property System::Single EdgeWidthAlphaUnits
			{
				System::Single __clrcall get();
			}

			property Color^ EdgeColor
			{
				Color^ __clrcall get();
			}

			property System::Single ExplosionWindSpeed
			{
				System::Single __clrcall get();
			}

			property System::Single TextureCountU
			{
				System::Single __clrcall get();
			}

			property System::Single TextureCountV
			{
				System::Single __clrcall get();
			}

			property System::Single AddonModelsFadeInTime
			{
				System::Single __clrcall get();
			}

			property System::Single AddonModelsFadeOutTime
			{
				System::Single __clrcall get();
			}

			property System::Single AddonModelsScaleStart
			{
				System::Single __clrcall get();
			}

			property System::Single AddonModelsScaleEnd
			{
				System::Single __clrcall get();
			}

			property System::Single AddonModelsScaleInTime
			{
				System::Single __clrcall get();
			}

			property System::Single AddonModelsScaleOutTime
			{
				System::Single __clrcall get();
			}

			property BGSSoundDescriptorForm^ AmbientSound
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}

			property Color^ FillTextureEffectColorKey2
			{
				Color^ __clrcall get();
			}

			property Color^ FillTextureEffectColorKey3
			{
				Color^ __clrcall get();
			}

			property System::Single FillTextureEffectColorKeyScaleTimeColorKey1Scale
			{
				System::Single __clrcall get();
			}

			property System::Single FillTextureEffectColorKeyScaleTimeColorKey2Scale
			{
				System::Single __clrcall get();
			}

			property System::Single FillTextureEffectColorKeyScaleTimeColorKey3Scale
			{
				System::Single __clrcall get();
			}

			property System::Single FillTextureEffectColorKeyScaleTimeColorKey1Time
			{
				System::Single __clrcall get();
			}

			property System::Single FillTextureEffectColorKeyScaleTimeColorKey2Time
			{
				System::Single __clrcall get();
			}

			property System::Single FillTextureEffectColorKeyScaleTimeColorKey3Time
			{
				System::Single __clrcall get();
			}

			property System::Single ColorScale
			{
				System::Single __clrcall get();
			}

			property System::Single BirthPositionOffset
			{
				System::Single __clrcall get();
			}

			property System::Single BirthPositionOffsetVariance
			{
				System::Single __clrcall get();
			}

			property System::Single ParticleShaderAnimatedStartFrame
			{
				System::Single __clrcall get();
			}

			property System::Single ParticleShaderAnimatedStartFrameVariance
			{
				System::Single __clrcall get();
			}

			property System::Single ParticleShaderAnimatedEndFrame
			{
				System::Single __clrcall get();
			}

			property System::Single ParticleShaderAnimatedLoopStartFrame
			{
				System::Single __clrcall get();
			}

			property System::Single ParticleShaderAnimatedLoopStartVariance
			{
				System::Single __clrcall get();
			}

			property System::Single ParticleShaderAnimatedFrameCount
			{
				System::Single __clrcall get();
			}

			property System::Single ParticleShaderAnimatedFrameCountVariance
			{
				System::Single __clrcall get();
			}

			property TESEffectShader::DataFlags EffectFlags
			{
				TESEffectShader::DataFlags __clrcall get();
			}

			property System::Single FillTextureEffectTextureScaleU
			{
				System::Single __clrcall get();
			}

			property System::Single FillTextureEffectTextureScaleV
			{
				System::Single __clrcall get();
			}

			property System::Int32 SceneGraphEmitDepthLimit
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class UIBlurManager : public BSTEventSink<DefaultObjectsReadyEvent::Event^>, public BSTSingletonSDM<UIBlurManager^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject
		{
		public:
			property TESImageSpaceModifier^ BlurEffect
			{
				TESImageSpaceModifier^ __clrcall get();
			}

			property System::Int32 BlurCount
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class ExtraCellImageSpace : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property TESImageSpace^ ImageSpace
			{
				TESImageSpace^ __clrcall get();
			}
		};

		public interface class ExtraCellMusicType : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BGSMusicType^ MusicType
			{
				BGSMusicType^ __clrcall get();
			}
		};

		public interface class ExtraCombatStyle : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property TESCombatStyle^ CombatStyle
			{
				TESCombatStyle^ __clrcall get();
			}
		};

		public interface class ExtraEncounterZone : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BGSEncounterZone^ EncounterZone
			{
				BGSEncounterZone^ __clrcall get();
			}
		};

		public interface class ExtraGlobal : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property TESGlobal^ Global
			{
				TESGlobal^ __clrcall get();
			}
		};

		interface class ExtraRoomRefData::Data : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSSimpleList<System::UInt32>^ PortalRefHandles
			{
				BSSimpleList<System::UInt32>^ __clrcall get();
			}

			property BSSimpleList<System::UInt32>^ RoomRefHandles
			{
				BSSimpleList<System::UInt32>^ __clrcall get();
			}

			property System::SByte Master
			{
				System::SByte __clrcall get();
			}

			property BGSLightingTemplate^ LightingTemplate
			{
				BGSLightingTemplate^ __clrcall get();
			}

			property TESImageSpace^ ImageSpace
			{
				TESImageSpace^ __clrcall get();
			}
		};

		public interface class TESRegionDataSound : public TESRegionData, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DataFlags : System::UInt32
			{
				None = 0,
				Pleasant = 1,
				Cloudy = 2,
				Rainy = 4,
				Snowy = 8,
			};

			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property BGSSoundDescriptorForm^ Sound
				{
					BGSSoundDescriptorForm^ __clrcall get();
				}

				property TESRegionDataSound::DataFlags SoundFlags
				{
					TESRegionDataSound::DataFlags __clrcall get();
				}

				property System::Single Chance
				{
					System::Single __clrcall get();
				}
			};

			property BGSMusicType^ Music
			{
				BGSMusicType^ __clrcall get();
			}

			property BSTArray<TESRegionDataSound::Data^, BSTArrayHeapAllocator^>^ Sounds
			{
				BSTArray<TESRegionDataSound::Data^, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		interface class BGSPerkRankArray::Data : public NetScriptFramework::IMemoryObject
		{
		public:
			property BGSPerk^ Perk
			{
				BGSPerk^ __clrcall get();
			}

			property System::SByte CurrentRank
			{
				System::SByte __clrcall get();
			}
		};

		public interface class DialogueResponse : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class EmotionTypes : System::Int32
			{
				Neutral = 0,
				Anger = 1,
				Disgust = 2,
				Fear = 3,
				Sad = 4,
				Happy = 5,
				Surprise = 6,
				Puzzled = 7,
			};

			property BSString^ ResponseText
			{
				BSString^ __clrcall get();
			}

			property DialogueResponse::EmotionTypes EmotionType
			{
				DialogueResponse::EmotionTypes __clrcall get();
			}

			property System::Int32 EmotionValue
			{
				System::Int32 __clrcall get();
			}

			property BSFixedString^ Voice
			{
				BSFixedString^ __clrcall get();
			}

			property TESIdleForm^ SpeakerIdle
			{
				TESIdleForm^ __clrcall get();
			}

			property TESIdleForm^ ListenerIdle
			{
				TESIdleForm^ __clrcall get();
			}

			property BGSSoundDescriptorForm^ VoiceSound
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}

			property System::Boolean UseEmotion
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean SoundLip
			{
				System::Boolean __clrcall get();
			}
		};

		interface class TESContainer::Data : public NetScriptFramework::IMemoryObject
		{
		public:
			property TESForm^ Owner
			{
				TESForm^ __clrcall get();
			}

			property TESGlobal^ Global
			{
				TESGlobal^ __clrcall get();
			}

			property System::Single Condition
			{
				System::Single __clrcall get();
			}
		};

		interface class BGSQuestInstanceText::GlobalValueData : public NetScriptFramework::IMemoryObject
		{
		public:
			property TESGlobal^ Global
			{
				TESGlobal^ __clrcall get();
			}

			property System::Single Value
			{
				System::Single __clrcall get();
			}
		};

		public interface class Calendar : public BSTSingletonSDM<Calendar^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IMemoryObject
		{
		public:
			property TESGlobal^ GameYear
			{
				TESGlobal^ __clrcall get();
			}

			property TESGlobal^ GameMonth
			{
				TESGlobal^ __clrcall get();
			}

			property TESGlobal^ GameDay
			{
				TESGlobal^ __clrcall get();
			}

			property TESGlobal^ GameHour
			{
				TESGlobal^ __clrcall get();
			}

			property TESGlobal^ GameDaysPassed
			{
				TESGlobal^ __clrcall get();
			}

			property TESGlobal^ TimeScale
			{
				TESGlobal^ __clrcall get();
			}

			property System::Int32 MidnightsPassed
			{
				System::Int32 __clrcall get();
			}

			property System::Single RawDaysPassed
			{
				System::Single __clrcall get();
			}
		};

		public interface class ScriptLocals : public NetScriptFramework::IMemoryObject
		{
		public:
			property Script^ MasterScript
			{
				Script^ __clrcall get();
			}

			property System::Byte Flags
			{
				System::Byte __clrcall get();
			}

			property BSSimpleList<ActionObject^>^ ActionList
			{
				BSSimpleList<ActionObject^>^ __clrcall get();
			}

			property BSSimpleList<ScriptLocal^>^ LocalList
			{
				BSSimpleList<ScriptLocal^>^ __clrcall get();
			}

			property ScriptEffectData^ EffectData
			{
				ScriptEffectData^ __clrcall get();
			}
		};

		public interface class ObjectEquipParams : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSExtraDataList^ ExtraDataList
			{
				BSExtraDataList^ __clrcall get();
			}

			property System::Int32 Count
			{
				System::Int32 __clrcall get();
			}

			property BGSEquipSlot^ EquipSlot
			{
				BGSEquipSlot^ __clrcall get();
			}

			property System::Boolean PlayEquipSounds
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean ForceEquip
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean ShowMessage
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class TESPackage : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class ProcedureTypes : System::Int32
			{
				None = -1,
				Find = 0,
				Follow = 1,
				Escort = 2,
				Eat = 3,
				Sleep = 4,
				Wander = 5,
				Travel = 6,
				Accompany = 7,
				UseItemAt = 8,
				Ambush = 9,
				FleeNotCombat = 0xA,
				CastMagic = 0xB,
				Sandbox = 0xC,
				Patrol = 0xD,
				Guard = 0xE,
				Dialogue = 0xF,
				UseWeapon = 0x10,
				Find2 = 0x11,
				Package = 0x12,
				PackageTemplate = 0x13,
				Activate = 0x14,
				Alarm = 0x15,
				Flee = 0x16,
				Trespass = 0x17,
				Spectator = 0x18,
				ReactToDead = 0x19,
				GetUpFromChairBed = 0x1A,
				DoNothing = 0x1B,
				InGameDialogue = 0x1C,
				Surface = 0x1D,
				SearchForAttacker = 0x1E,
				AvoidPlayer = 0x1F,
				ReactToDestroyedObject = 0x20,
				ReactToGrenadeOrMine = 0x21,
				StealWarning = 0x22,
				PickPocketWarning = 0x23,
				MovementBlocked = 0x24,
				VampireFeed = 0x25,
				Cannibal = 0x26,
			};

			enum class GeneralFlags : System::UInt32
			{
				None = 0,
				OffersServices = 1,
				MustComplete = 4,
				MaintainSpeedAtGoal = 8,
				UnlocksDoorsAtPackageStart = 0x40,
				UnlocksDoorsAtPackageEnd = 0x80,
				ContinueIfPCNear = 0x200,
				OncePerDay = 0x400,
				PreferredSpeed = 0x2000,
				AlwaysSneak = 0x20000,
				AllowSwimming = 0x40000,
				IgnoreCombat = 0x100000,
				WeaponsUnequipped = 0x200000,
				WeaponDrawn = 0x800000,
				NoCombatAlert = 0x8000000,
				WearSleepOutfit = 0x20000000,
			};

			enum class ProcedureTypes8 : System::SByte
			{
				None = -1,
				Find = 0,
				Follow = 1,
				Escort = 2,
				Eat = 3,
				Sleep = 4,
				Wander = 5,
				Travel = 6,
				Accompany = 7,
				UseItemAt = 8,
				Ambush = 9,
				FleeNotCombat = 0xA,
				CastMagic = 0xB,
				Sandbox = 0xC,
				Patrol = 0xD,
				Guard = 0xE,
				Dialogue = 0xF,
				UseWeapon = 0x10,
				Find2 = 0x11,
				Package = 0x12,
				PackageTemplate = 0x13,
				Activate = 0x14,
				Alarm = 0x15,
				Flee = 0x16,
				Trespass = 0x17,
				Spectator = 0x18,
				ReactToDead = 0x19,
				GetUpFromChairBed = 0x1A,
				DoNothing = 0x1B,
				InGameDialogue = 0x1C,
				Surface = 0x1D,
				SearchForAttacker = 0x1E,
				AvoidPlayer = 0x1F,
				ReactToDestroyedObject = 0x20,
				ReactToGrenadeOrMine = 0x21,
				StealWarning = 0x22,
				PickPocketWarning = 0x23,
				MovementBlocked = 0x24,
				VampireFeed = 0x25,
				Cannibal = 0x26,
			};

			enum class InterruptTargets8 : System::SByte
			{
				None = -1,
				Spectator = 0,
				ObserveDead = 1,
				GuardWarn = 2,
				Combat = 3,
			};

			enum class PreferredSpeedTypes : System::SByte
			{
				Walk = 0,
				Jog = 1,
				Run = 2,
				FastWalk = 3,
			};

			enum class InterruptFlags : System::UInt16
			{
				None = 0,
				HellosToPlayer = 1,
				RandomConversations = 2,
				ObserveCombatBehaviour = 4,
				GreetCorpseBehaviour = 8,
				ReactionToPlayerActions = 0x10,
				FriendlyFireComments = 0x20,
				AggroRadiusBehavior = 0x40,
				AllowIdleChatter = 0x80,
				WorldInteractions = 0x200,
			};

			enum class DayOfWeekEnum : System::SByte
			{
				Any = -1,
				Sunday = 0,
				Monday = 1,
				Tuesday = 2,
				Wednesday = 3,
				Thursday = 4,
				Friday = 5,
				Saturday = 6,
				Weekdays = 7,
				Weekends = 8,
				MondayWednesdayFriday = 9,
				TuesdayThursday = 0xA,
			};

			enum class EventActionTypes : System::Int32
			{
				Begin = 0,
				End = 1,
				Change = 2,
				Patrol = 3,
			};

			enum class ObjectTypes : System::Int32
			{
				None = 0,
				ACTI = 1,
				ARMO = 2,
				BOOK = 3,
				CONT = 4,
				DOOR = 5,
				INGR = 6,
				LIGH = 7,
				MISC = 8,
				FLOR = 9,
				FURN = 0xA,
				WEAP = 0xB,
				AMMO = 0xC,
				KEYM = 0xD,
				ALCH = 0xE,
				FOOD = 0xF,
			};

			enum class InterruptTargets : System::Int32
			{
				None = -1,
				Spectator = 0,
				ObserveDead = 1,
				GuardWarn = 2,
				Combat = 3,
			};

			enum class ChangeFlags : System::UInt32
			{
				None = 0,
				WaitingFlag = 0x4000000,
				NeverRunFlag = 0x80000000,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			enum class TopicTypes : System::Int32
			{
				TopicRef = 0,
				TopicSubtype = 1,
			};

			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESPackage::GeneralFlags PackageFlags
				{
					TESPackage::GeneralFlags __clrcall get();
				}

				property TESPackage::ProcedureTypes8 PackageType
				{
					TESPackage::ProcedureTypes8 __clrcall get();
				}

				property TESPackage::InterruptTargets8 InterruptOverrideType
				{
					TESPackage::InterruptTargets8 __clrcall get();
				}

				property TESPackage::PreferredSpeedTypes MaxSpeed
				{
					TESPackage::PreferredSpeedTypes __clrcall get();
				}

				property TESPackage::InterruptFlags FoBehaviorFlags
				{
					TESPackage::InterruptFlags __clrcall get();
				}

				property System::UInt16 PackageSpecificFlags
				{
					System::UInt16 __clrcall get();
				}
			};

			interface class ScheduleData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::SByte Month
				{
					System::SByte __clrcall get();
				}

				property TESPackage::DayOfWeekEnum DayOfWeek
				{
					TESPackage::DayOfWeekEnum __clrcall get();
				}

				property System::SByte Date
				{
					System::SByte __clrcall get();
				}

				property System::SByte Hour
				{
					System::SByte __clrcall get();
				}

				property System::SByte Minute
				{
					System::SByte __clrcall get();
				}

				property System::Int32 DurationMinutes
				{
					System::Int32 __clrcall get();
				}
			};

			interface class TargetStore : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::UInt32 ObjectRefHandle
				{
					System::UInt32 __clrcall get();
				}

				property TESForm^ Form
				{
					TESForm^ __clrcall get();
				}

				property TESPackage::ObjectTypes ObjectType
				{
					TESPackage::ObjectTypes __clrcall get();
				}

				property System::UInt32 AliasId
				{
					System::UInt32 __clrcall get();
				}

				property TESPackage::InterruptTargets InterruptTarget
				{
					TESPackage::InterruptTargets __clrcall get();
				}
			};

			interface class TargetData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::SByte TargetType
				{
					System::SByte __clrcall get();
				}

				property TESPackage::TargetStore^ Target
				{
					TESPackage::TargetStore^ __clrcall get();
				}

				property System::Int32 Value
				{
					System::Int32 __clrcall get();
				}
			};

			interface class EventActionData;

			interface class TopicData;

			interface class EventActionData : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESIdleForm^ Idle
				{
					TESIdleForm^ __clrcall get();
				}

				property TESPackage::EventActionTypes EventActionType
				{
					TESPackage::EventActionTypes __clrcall get();
				}

				property TESPackage::TopicData^ Topic
				{
					TESPackage::TopicData^ __clrcall get();
				}
			};

			property TESPackage::Data^ BaseData
			{
				TESPackage::Data^ __clrcall get();
			}

			property TESPackageData^ PackageData
			{
				TESPackageData^ __clrcall get();
			}

			property PackageLocation^ PackageLocationData
			{
				PackageLocation^ __clrcall get();
			}

			property TESPackage::TargetData^ PackageTargetData
			{
				TESPackage::TargetData^ __clrcall get();
			}

			property BGSIdleCollection^ IdleCollection
			{
				BGSIdleCollection^ __clrcall get();
			}

			property TESPackage::ScheduleData^ PackageSchedule
			{
				TESPackage::ScheduleData^ __clrcall get();
			}

			property TESCondition^ PackageConditions
			{
				TESCondition^ __clrcall get();
			}

			property TESCombatStyle^ CombatStyle
			{
				TESCombatStyle^ __clrcall get();
			}

			property TESQuest^ OwnerQuest
			{
				TESQuest^ __clrcall get();
			}

			property TESPackage::EventActionData^ OnBegin
			{
				TESPackage::EventActionData^ __clrcall get();
			}

			property TESPackage::EventActionData^ OnEnd
			{
				TESPackage::EventActionData^ __clrcall get();
			}

			property TESPackage::EventActionData^ OnChange
			{
				TESPackage::EventActionData^ __clrcall get();
			}

			property TESPackage::ProcedureTypes ProcedureType
			{
				TESPackage::ProcedureTypes __clrcall get();
			}

			property System::Int32 RefCount
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class BGSSoundDescriptorForm : public TESForm, public BSISoundDescriptor, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property BGSSoundDescriptor^ SoundDescriptor
			{
				BGSSoundDescriptor^ __clrcall get();
			}
		};

		public interface class TESObjectSTAT : public TESBoundObject, public TESModelTextureSwap, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DataFlags : System::UInt32
			{
				None = 0,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				NeverFades = 4,
				Deleted = 0x20,
				HasTreeLOD = 0x40,
				AddOnLODObject = 0x80,
				HiddenFromLocalMap = 0x200,
				HasDistantLOD = 0x8000,
				UsesHDLODTexture = 0x20000,
				HasCurrents = 0x80000,
				IsMarker = 0x800000,
				Obstacle = 0x2000000,
				NavMeshGeneration_Filter = 0x4000000,
				NavMeshGeneration_BoundingBox = 0x8000000,
				ShowInWorldMap = 0x10000000,
				NavMeshGeneration_Ground = 0x40000000,
			};

			interface class Data;

			property TESObjectSTAT::Data^ StaticData
			{
				TESObjectSTAT::Data^ __clrcall get();
			}
		};

		public interface class TESAmmo : public TESBoundObject, public TESFullName, public TESModelTextureSwap, public TESIcon, public BGSMessageIcon, public TESValueForm, public TESWeightForm, public BGSDestructibleObjectForm, public BGSPickupPutdownSounds, public TESDescription, public BGSKeywordForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DataFlags : System::Byte
			{
				None = 0,
				IgnoresNormalWeaponResistance = 1,
				NonPlayable = 2,
				NonBolt = 4,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				NonPlayable = 4,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			interface class Data;

			property TESAmmo::Data^ AmmoData
			{
				TESAmmo::Data^ __clrcall get();
			}

			property BSFixedString^ ShortDescription
			{
				BSFixedString^ __clrcall get();
			}
		};

		public interface class BGSMenuDisplayObject : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			/// <summary>
			/// Gets or sets the menu display object.
			/// </summary>
			property TESBoundObject^ MenuDisplayObject
			{
				TESBoundObject^ __clrcall get();

				void __clrcall set(TESBoundObject^ value);
			}
		};

		public interface class BGSStandardSoundDef : public BGSSoundDescriptor, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class SoundPlaybackCharacteristics : public BSISoundDescriptor::BSIPlaybackCharacteristics, public NetScriptFramework::IVirtualObject
			{
			public:
				property System::Byte FrequencyShift
				{
					System::Byte __clrcall get();
				}

				property System::Byte FrequencyVariance
				{
					System::Byte __clrcall get();
				}

				property System::Byte Priority
				{
					System::Byte __clrcall get();
				}

				property System::Byte DbVariance
				{
					System::Byte __clrcall get();
				}

				property System::UInt16 StaticAttenuation
				{
					System::UInt16 __clrcall get();
				}
			};

			interface class LengthCharacteristics : public NetScriptFramework::IMemoryObject
			{
			public:
				enum class LoopFlags : System::Byte
				{
					None = 0,
					Loop = 8,
					EnvelopeFast = 0x10,
					EnvelopeSlow = 0x20,
				};

				property BGSStandardSoundDef::LengthCharacteristics::LoopFlags Looping
				{
					BGSStandardSoundDef::LengthCharacteristics::LoopFlags __clrcall get();
				}

				property System::Byte RumbleSendValue
				{
					System::Byte __clrcall get();
				}
			};

			property BSTArray<BSResource::ID^, BSTArrayHeapAllocator^>^ SoundFiles
			{
				BSTArray<BSResource::ID^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BGSStandardSoundDef::SoundPlaybackCharacteristics^ SoundCharacteristics
			{
				BGSStandardSoundDef::SoundPlaybackCharacteristics^ __clrcall get();
			}

			property TESCondition^ Conditions
			{
				TESCondition^ __clrcall get();
			}

			property BGSSoundOutput^ OutputModel
			{
				BGSSoundOutput^ __clrcall get();
			}

			property BGSStandardSoundDef::LengthCharacteristics^ LengthData
			{
				BGSStandardSoundDef::LengthCharacteristics^ __clrcall get();
			}
		};

		public interface class BGSAddonNode : public TESBoundObject, public TESModelTextureSwap, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class AddonDataFlags : System::Byte
			{
				None = 0,
				AlwaysLoaded = 3,
			};

			enum class RecordFlags : System::UInt32
			{
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			interface class AddonData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::UInt16 MasterParticleCap
				{
					System::UInt16 __clrcall get();
				}

				property BGSAddonNode::AddonDataFlags Flags
				{
					BGSAddonNode::AddonDataFlags __clrcall get();
				}
			};

			property System::Int32 Index
			{
				System::Int32 __clrcall get();
			}

			property BGSSoundDescriptorForm^ Sound
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}

			property BGSAddonNode::AddonData^ Data
			{
				BGSAddonNode::AddonData^ __clrcall get();
			}
		};

		public interface class TESObjectMISC : public TESBoundObject, public TESFullName, public TESModelTextureSwap, public TESIcon, public TESValueForm, public TESWeightForm, public BGSDestructibleObjectForm, public BGSMessageIcon, public BGSPickupPutdownSounds, public BGSKeywordForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				NonPlayable = 4,
				Deleted = 0x20,
				Ignored = 0x1000,
			};
		};

		public interface class BGSArtObject : public TESBoundObject, public TESModelTextureSwap, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class ArtTypes : System::Int32
			{
				MagicCastingArt = 0,
				MagicHitEffect = 1,
				MagicEnchantEffect = 2,
			};

			enum class RecordFlags : System::UInt32
			{
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property BGSArtObject::ArtTypes ArtType
			{
				BGSArtObject::ArtTypes __clrcall get();
			}
		};

		public interface class BGSCameraShot : public TESForm, public TESModel, public TESImageSpaceModifiableForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class CameraActions : System::Int32
			{
				Shoot = 0,
				Fly = 1,
				Hit = 2,
				Zoom = 3,
			};

			enum class CameraObjects : System::Int32
			{
				Attacker = 0,
				Projectile = 1,
				Target = 2,
				LeadActor = 3,
			};

			enum class DataFlags : System::UInt32
			{
				None = 0,
				PositionFollowsLocation = 1,
				RotationFollowsTarget = 2,
				DontFollowBone = 4,
				FirstPersonCamera = 8,
				NoTracer = 0x10,
				StartAtTimeZero = 0x20,
			};

			enum class RecordFlags : System::UInt32
			{
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property BGSCameraShot::CameraActions CameraAction
				{
					BGSCameraShot::CameraActions __clrcall get();
				}

				property BGSCameraShot::CameraObjects Location
				{
					BGSCameraShot::CameraObjects __clrcall get();
				}

				property BGSCameraShot::CameraObjects Target
				{
					BGSCameraShot::CameraObjects __clrcall get();
				}

				property BGSCameraShot::DataFlags Flags
				{
					BGSCameraShot::DataFlags __clrcall get();
				}

				property System::Single PlayerTimeMult
				{
					System::Single __clrcall get();
				}

				property System::Single TargetTimeMult
				{
					System::Single __clrcall get();
				}

				property System::Single GlobalTimeMult
				{
					System::Single __clrcall get();
				}

				property System::Single MaxTime
				{
					System::Single __clrcall get();
				}

				property System::Single MinTime
				{
					System::Single __clrcall get();
				}

				property System::Single TargetPercentBetweenActors
				{
					System::Single __clrcall get();
				}

				property System::Single NearTargetDistance
				{
					System::Single __clrcall get();
				}
			};

			property BGSCameraShot::Data^ ShotData
			{
				BGSCameraShot::Data^ __clrcall get();
			}
		};

		public interface class BGSHazard : public TESBoundObject, public TESFullName, public TESModel, public BGSPreloadable, public TESImageSpaceModifiableForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DataFlags : System::UInt32
			{
				None = 0,
				PCOnly = 1,
				InheritDuration = 2,
				AlignToNormal = 4,
				InheritRadius = 8,
				DropToGround = 0x10,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			interface class Data;

			property BGSHazard::Data^ HazardData
			{
				BGSHazard::Data^ __clrcall get();
			}
		};

		public interface class BGSTextureSet : public TESBoundObject, public BSTextureSet, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class TextureFlags : System::UInt16
			{
				None = 0,
				NoSpecularMap = 1,
				FacegenTextures = 2,
				HasModelSpaceNormalMap = 4,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property NetScriptFramework::FixedMemoryArray<TESTexture^>^ Textures
			{
				NetScriptFramework::FixedMemoryArray<TESTexture^>^ __clrcall get();
			}

			property DecalData^ DecalInfo
			{
				DecalData^ __clrcall get();
			}

			property BGSTextureSet::TextureFlags TextureSetFlags
			{
				BGSTextureSet::TextureFlags __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<BSResource::ID^>^ TextureFileIDs
			{
				NetScriptFramework::FixedMemoryArray<BSResource::ID^>^ __clrcall get();
			}
		};

		public interface class BGSIdleMarker : public TESBoundObject, public TESModel, public BGSIdleCollection, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
				ChildCanUse = 0x20000000,
			};
		};

		public interface class BGSNote : public TESBoundObject, public TESModel, public TESFullName, public TESIcon, public BGSPickupPutdownSounds, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
			};

			enum class ChangeFlags : System::UInt32
			{
				None = 0,
				NoteRead = 0x80000000,
			};
		};

		public interface class BGSProjectile : public TESBoundObject, public TESFullName, public TESModel, public BGSPreloadable, public BGSDestructibleObjectForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class Flags : System::UInt16
			{
				None = 0,
				HitScan = 1,
				Explosion = 2,
				ExplosionAltTrigger = 4,
				MuzzleFlash = 8,
				CanTurnOff = 0x20,
				CanPickUp = 0x40,
				Supersonic = 0x80,
				PinsLimbs = 0x100,
				PassSMTransparent = 0x200,
				DisableCombatAimCorrection = 0x400,
				ContinuousUpdate = 0x800,
			};

			enum class Types : System::UInt16
			{
				Missile = 1,
				Grenade = 2,
				Beam = 4,
				Flamethrower = 8,
				Cone = 0x10,
				Barrier = 0x20,
				Arrow = 0x40,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			interface class Data;

			property BGSProjectile::Data^ ProjectileData
			{
				BGSProjectile::Data^ __clrcall get();
			}

			property TESModel^ MuzzleFlashModel
			{
				TESModel^ __clrcall get();
			}

			property SoundLevels SoundLevel
			{
				SoundLevels __clrcall get();
			}
		};

		public interface class BGSStaticCollection : public TESBoundObject, public TESModelTextureSwap, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
			};
		};

		public interface class TESBoundAnimObject : public TESBoundObject, public NetScriptFramework::IVirtualObject { };

		public interface class TESLevItem : public TESBoundObject, public TESLeveledList, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			enum class ChangeFlags : System::UInt32
			{
				None = 0,
				AddedObject = 0x80000000,
			};
		};

		public interface class TESLevSpell : public TESBoundObject, public TESLeveledList, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			enum class ChangeFlags : System::UInt32
			{
				None = 0,
				AddedObject = 0x80000000,
			};
		};

		public interface class TESProduceForm : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class Seasons : System::Int32
			{
				None = -1,
				Spring = 0,
				Summer = 1,
				Fall = 2,
				Winter = 3,
			};

			property BGSSoundDescriptorForm^ HarvestSound
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}

			property TESBoundObject^ ProduceItem
			{
				TESBoundObject^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<System::SByte>^ ProduceChance
			{
				NetScriptFramework::FixedMemoryArray<System::SByte>^ __clrcall get();
			}
		};

		public interface class TESGrass : public TESBoundObject, public TESModel, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class GrassWaterStates : System::Int32
			{
				AboveOnlyAtLeast = 0,
				AboveOnlyAtMost = 1,
				BelowOnlyAtLeast = 2,
				BelowOnlyAtMost = 3,
				BothAtLeast = 4,
				BothAtMost = 5,
				BothAtMostAbove = 6,
				BothAtMostBelow = 7,
			};

			enum class DataFlags : System::Byte
			{
				None = 0,
				VertexLighting = 1,
				UniformScale = 2,
				FitSlope = 4,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::SByte Density
				{
					System::SByte __clrcall get();
				}

				property System::SByte MinSlopeDegrees
				{
					System::SByte __clrcall get();
				}

				property System::SByte MaxSlopeDegrees
				{
					System::SByte __clrcall get();
				}

				property System::UInt16 DistanceFromWaterLevel
				{
					System::UInt16 __clrcall get();
				}

				property TESGrass::GrassWaterStates WaterState
				{
					TESGrass::GrassWaterStates __clrcall get();
				}

				property System::Single PositionRange
				{
					System::Single __clrcall get();
				}

				property System::Single HeightRange
				{
					System::Single __clrcall get();
				}

				property System::Single ColorRange
				{
					System::Single __clrcall get();
				}

				property System::Single WavePeriod
				{
					System::Single __clrcall get();
				}

				property TESGrass::DataFlags GrassFlags
				{
					TESGrass::DataFlags __clrcall get();
				}
			};

			property TESGrass::Data^ GrassData
			{
				TESGrass::Data^ __clrcall get();
			}
		};

		interface class TESLoadScreen::LoadNIFData : public NetScriptFramework::IMemoryObject
		{
		public:
			property TESBoundObject^ LoadNIF
			{
				TESBoundObject^ __clrcall get();
			}

			property System::Single InitialScale
			{
				System::Single __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<System::Int16>^ RotationConstraints
			{
				NetScriptFramework::FixedMemoryArray<System::Int16>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<System::Int16>^ RotationOffsetConstraints
			{
				NetScriptFramework::FixedMemoryArray<System::Int16>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<System::Single>^ InitialTranslationOffset
			{
				NetScriptFramework::FixedMemoryArray<System::Single>^ __clrcall get();
			}

			property TESModel^ CameraPath
			{
				TESModel^ __clrcall get();
			}
		};

		public interface class ShaderReferenceEffect : public ReferenceEffect, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSSoundHandle^ SoundHandle
			{
				BSSoundHandle^ __clrcall get();
			}

			property NiPointer<NiAVObject^>^ LastRootNode
			{
				NiPointer<NiAVObject^>^ __clrcall get();
			}

			property TESBoundObject^ WornObject
			{
				TESBoundObject^ __clrcall get();
			}

			property TESEffectShader^ EffectData
			{
				TESEffectShader^ __clrcall get();
			}

			property System::IntPtr EffectShaderData
			{
				System::IntPtr __clrcall get();
			}

			property System::UInt32 EffectShaderFlags
			{
				System::UInt32 __clrcall get();
			}

			property System::Int32 PushCount
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class ExtraLocationRefType : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BGSLocationRefType^ LocationRefType
			{
				BGSLocationRefType^ __clrcall get();
			}
		};

		public interface class ExtraTeleportName : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BGSMessage^ Message
			{
				BGSMessage^ __clrcall get();
			}
		};

		public interface class ExtraTextDisplayData : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DisplayTypes : System::Int32
			{
				Uninitialized = -1,
				CustomName = -2,
			};

			property BSFixedString^ DisplayName
			{
				BSFixedString^ __clrcall get();
			}

			property BGSMessage^ DisplayNameText
			{
				BGSMessage^ __clrcall get();
			}

			property TESQuest^ OwnerQuest
			{
				TESQuest^ __clrcall get();
			}

			property ExtraTextDisplayData::DisplayTypes OwnerInstance
			{
				ExtraTextDisplayData::DisplayTypes __clrcall get();
			}

			property System::Single TemperFactor
			{
				System::Single __clrcall get();
			}

			property System::UInt16 CustomNameLength
			{
				System::UInt16 __clrcall get();
			}
		};

		interface class BGSRefAlias::FromAliasFillType : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::UInt32 ForcedFromAlias
			{
				System::UInt32 __clrcall get();
			}

			property BGSLocationRefType^ ForcedRefType
			{
				BGSLocationRefType^ __clrcall get();
			}
		};

		interface class BGSRefAlias::CreatedFillType : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class AliasData : public NetScriptFramework::IMemoryObject
			{
			public:
				enum class CreateTypes : System::UInt16
				{
					At = 0,
					In = 0x8000,
				};

				property System::UInt16 Alias
				{
					System::UInt16 __clrcall get();
				}

				property BGSRefAlias::CreatedFillType::AliasData::CreateTypes Create
				{
					BGSRefAlias::CreatedFillType::AliasData::CreateTypes __clrcall get();
				}
			};

			enum class Levels : System::Int16
			{
				Easy = 0,
				Medium = 1,
				Hard = 2,
				VeryHard = 3,
				None = 4,
			};

			property TESBoundObject^ Object
			{
				TESBoundObject^ __clrcall get();
			}

			property BGSRefAlias::CreatedFillType::AliasData^ Alias
			{
				BGSRefAlias::CreatedFillType::AliasData^ __clrcall get();
			}

			property BGSRefAlias::CreatedFillType::Levels Level
			{
				BGSRefAlias::CreatedFillType::Levels __clrcall get();
			}
		};

		public interface class QueuedItem : public NetScriptFramework::IMemoryObject
		{
		public:
			property QueuedItem^ Next
			{
				QueuedItem^ __clrcall get();
			}

			property TESBoundObject^ Object
			{
				TESBoundObject^ __clrcall get();
			}

			property ObjectEquipParams^ EquipParams
			{
				ObjectEquipParams^ __clrcall get();
			}

			property NiPointer<QueuedFile^>^ QueuedFiles
			{
				NiPointer<QueuedFile^>^ __clrcall get();
			}

			property System::Boolean Equip
			{
				System::Boolean __clrcall get();
			}
		};

		/// <summary>
		/// Shout form.
		/// </summary>
		public interface class TESShout : public TESForm, public TESFullName, public BGSMenuDisplayObject, public BGSEquipType, public TESDescription, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				TreatSpellsAsPowers = 0x80,
				Ignored = 0x1000,
			};

			interface class WordData;

			property NetScriptFramework::FixedMemoryArray<TESShout::WordData^>^ Words
			{
				NetScriptFramework::FixedMemoryArray<TESShout::WordData^>^ __clrcall get();
			}
		};

		public interface class AlarmPackage : public TESPackage, public NetScriptFramework::IVirtualObject { };

		public interface class BGSApparatus : public TESObjectMISC, public TESQualityForm, public TESDescription, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				Deleted = 0x20,
				Ignored = 0x1000,
			};
		};

		public interface class BGSCameraPath : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class PathFlags : System::Byte
			{
				None = 0,
				ZoomDisable = 1,
				ZoomShotList = 2,
				DynamicTimes = 4,
				RandomPaths = 0x40,
				AllowNoShots = 0x80,
			};

			enum class RecordFlags : System::UInt32
			{
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property TESCondition^ Conditions
			{
				TESCondition^ __clrcall get();
			}

			property BSSimpleList<BGSCameraShot^>^ Shots
			{
				BSSimpleList<BGSCameraShot^>^ __clrcall get();
			}

			property BGSCameraPath::PathFlags Flags
			{
				BGSCameraPath::PathFlags __clrcall get();
			}

			property NiFormArray^ ChildPaths
			{
				NiFormArray^ __clrcall get();
			}

			property BGSCameraPath^ ParentPath
			{
				BGSCameraPath^ __clrcall get();
			}

			property BGSCameraPath^ PrevPath
			{
				BGSCameraPath^ __clrcall get();
			}
		};

		public interface class BGSHeadPart : public TESForm, public TESFullName, public TESModelTextureSwap, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class HeadPartFlags : System::Byte
			{
				None = 0,
				Playable = 1,
				Male = 2,
				Female = 4,
				IsExtraPart = 8,
				UseSolidTint = 0x10,
			};

			enum class HeadPartTypes : System::Int32
			{
				Misc = 0,
				Face = 1,
				Eyes = 2,
				Hair = 3,
				FacialHair = 4,
				Scar = 5,
				Eyebrows = 6,
			};

			enum class MorphIndices : System::Int32
			{
				RaceMorph = 0,
				DefaultMorph = 1,
				ChargenMorph = 2,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				NonPlayable = 4,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property BGSHeadPart::HeadPartFlags PartFlags
			{
				BGSHeadPart::HeadPartFlags __clrcall get();
			}

			property BGSHeadPart::HeadPartTypes PartType
			{
				BGSHeadPart::HeadPartTypes __clrcall get();
			}

			property BSTArray<BGSHeadPart^, BSTArrayHeapAllocator^>^ ExtraParts
			{
				BSTArray<BGSHeadPart^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BGSTextureSet^ TextureSet
			{
				BGSTextureSet^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<TESModelTri^>^ Morphs
			{
				NetScriptFramework::FixedMemoryArray<TESModelTri^>^ __clrcall get();
			}

			property BGSColorForm^ Color
			{
				BGSColorForm^ __clrcall get();
			}

			property BGSListForm^ ValidRaces
			{
				BGSListForm^ __clrcall get();
			}

			property BSFixedString^ FormEditorID
			{
				BSFixedString^ __clrcall get();
			}
		};

		public interface class BGSImpactData : public TESForm, public TESModel, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class Orientations : System::Int32
			{
				SurfaceNormal = 0,
				ProjVector = 1,
				ProjReflect = 2,
			};

			enum class DataFlags : System::Byte
			{
				None = 0,
				NoDecalData = 1,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Single EffectDuration
				{
					System::Single __clrcall get();
				}

				property BGSImpactData::Orientations Orientation
				{
					BGSImpactData::Orientations __clrcall get();
				}

				property System::Single AngleThreshold
				{
					System::Single __clrcall get();
				}

				property System::Single PlacementRadius
				{
					System::Single __clrcall get();
				}

				property SoundLevels SoundLevel
				{
					SoundLevels __clrcall get();
				}

				property BGSImpactData::DataFlags Flags
				{
					BGSImpactData::DataFlags __clrcall get();
				}

				property ImpactResults8 ResultOverride
				{
					ImpactResults8 __clrcall get();
				}
			};

			property BGSImpactData::Data^ ImpactData
			{
				BGSImpactData::Data^ __clrcall get();
			}

			property BGSTextureSet^ DecalTextureSet
			{
				BGSTextureSet^ __clrcall get();
			}

			property BGSTextureSet^ DecalTextureSet2
			{
				BGSTextureSet^ __clrcall get();
			}

			property BGSSoundDescriptorForm^ Sound1
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}

			property BGSSoundDescriptorForm^ Sound2
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}

			property BGSHazard^ Hazard
			{
				BGSHazard^ __clrcall get();
			}

			property DecalData^ Decal
			{
				DecalData^ __clrcall get();
			}
		};

		public interface class BGSMovableStatic : public TESFullName, public BGSDestructibleObjectForm, public TESObjectSTAT, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class StaticFlags : System::Byte
			{
				None = 0,
				OnLocalMap = 1,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				MustUpdateAnims = 0x100,
				HiddenFromLocalMap = 0x200,
				Ignored = 0x1000,
				HasDistantLOD = 0x8000,
				RandomAnimStart = 0x10000,
				HasCurrents = 0x80000,
				Obstacle = 0x2000000,
				NavMeshGeneration_Filter = 0x4000000,
				NavMeshGeneration_BoundingBox = 0x8000000,
				NavMeshGeneration_Ground = 0x40000000,
			};

			property BGSSoundDescriptorForm^ SoundLoop
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}

			property unknown^ MovableStaticFlags
			{
				unknown^ __clrcall get();
			}
		};

		interface class BGSReferenceEffect::Data : public NetScriptFramework::IMemoryObject
		{
		public:
			property BGSArtObject^ ArtObject
			{
				BGSArtObject^ __clrcall get();
			}

			property TESEffectShader^ EffectShader
			{
				TESEffectShader^ __clrcall get();
			}

			property BGSReferenceEffect::DataFlags Flags
			{
				BGSReferenceEffect::DataFlags __clrcall get();
			}
		};

		public interface class BGSSceneActionPackage : public BGSSceneAction, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSTArray<TESPackage^, BSTArrayHeapAllocator^>^ Packages
			{
				BSTArray<TESPackage^, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		public interface class TESObjectLIGH : public TESBoundAnimObject, public TESFullName, public TESModelTextureSwap, public TESIcon, public BGSMessageIcon, public TESWeightForm, public TESValueForm, public BGSDestructibleObjectForm, public BGSEquipType, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DataFlags : System::UInt32
			{
				None = 0,
				Dynamic = 1,
				CanCarry = 2,
				Negative = 4,
				Flicker = 8,
				DeepCopy = 0x10,
				OffByDefault = 0x20,
				FlickerSlow = 0x40,
				Pulse = 0x80,
				PulseSlow = 0x100,
				Spotlight = 0x200,
				SpotShadow = 0x400,
				HemiShadow = 0x800,
				OmniShadow = 0x1000,
				PortalStrict = 0x2000,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
				RandomAnimStart = 0x10000,
				PortalStrict = 0x20000,
				Obstacle = 0x2000000,
			};

			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Int32 Time
				{
					System::Int32 __clrcall get();
				}

				property System::Int32 Radius
				{
					System::Int32 __clrcall get();
				}

				property Color^ LightColor
				{
					Color^ __clrcall get();
				}

				property TESObjectLIGH::DataFlags LightFlags
				{
					TESObjectLIGH::DataFlags __clrcall get();
				}

				property System::Single FallOffExponent
				{
					System::Single __clrcall get();
				}

				property System::Single Fov
				{
					System::Single __clrcall get();
				}

				property System::Single NearDistance
				{
					System::Single __clrcall get();
				}

				/// <summary>
				/// This is CK value times 100.
				/// </summary>
				property System::Single FlickerPeriodRecip
				{
					System::Single __clrcall get();

					void __clrcall set(System::Single value);
				}

				property System::Single FlickerIntensityAmplitude
				{
					System::Single __clrcall get();
				}

				property System::Single FlickerMovementAmplitude
				{
					System::Single __clrcall get();
				}
			};

			property TESObjectLIGH::Data^ LightData
			{
				TESObjectLIGH::Data^ __clrcall get();
			}

			property System::Single Fade
			{
				System::Single __clrcall get();
			}

			property BGSSoundDescriptorForm^ Sound
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}

			property NiColor^ EmittanceColor
			{
				NiColor^ __clrcall get();
			}

			property BGSLensFlare^ LensFlare
			{
				BGSLensFlare^ __clrcall get();
			}
		};

		interface class TESAIForm::PackageList : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSSimpleList<TESPackage^>^ Packages
			{
				BSSimpleList<TESPackage^>^ __clrcall get();
			}
		};

		public interface class TESWeather : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class FogData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Single DayNear
				{
					System::Single __clrcall get();
				}

				property System::Single DayFar
				{
					System::Single __clrcall get();
				}

				property System::Single NightNear
				{
					System::Single __clrcall get();
				}

				property System::Single NightFar
				{
					System::Single __clrcall get();
				}

				property System::Single DayPower
				{
					System::Single __clrcall get();
				}

				property System::Single NightPower
				{
					System::Single __clrcall get();
				}

				property System::Single DayMax
				{
					System::Single __clrcall get();
				}

				property System::Single NightMax
				{
					System::Single __clrcall get();
				}
			};

			interface class SkyStaticFunctor : public NetScriptFramework::IMemoryObject { };

			enum class DataFlags : System::Byte
			{
				None = 0,
				Pleasant = 1,
				Cloudy = 2,
				Rainy = 4,
				Snow = 8,
				PermAurora = 0x10,
				AuroraFollowsSun = 0x20,
			};

			interface class PackedColor : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Byte Red
				{
					System::Byte __clrcall get();

					void __clrcall set(System::Byte value);
				}

				property System::Byte Green
				{
					System::Byte __clrcall get();

					void __clrcall set(System::Byte value);
				}

				property System::Byte Blue
				{
					System::Byte __clrcall get();

					void __clrcall set(System::Byte value);
				}
			};

			enum class SoundTypes : System::Int32
			{
				Default = 0,
				Precip = 1,
				Wind = 2,
				Thunder = 3,
			};

			enum class ColorTimes : System::Int32
			{
				Sunrise = 0,
				Day = 1,
				Sunset = 2,
				Night = 3,
			};

			enum class ColorTypes : System::Int32
			{
				SkyUpper = 0,
				FogNear = 1,
				Unknown = 2,
				Ambient = 3,
				Sunlight = 4,
				Sun = 5,
				Stars = 6,
				SkyLower = 7,
				Horizon = 8,
				EffectLighting = 9,
				CloudLODDiffuse = 0xA,
				CloudLODAmbient = 0xB,
				FogFar = 0xC,
				SkyStatics = 0xD,
				WaterMultiplier = 0xE,
				SunGlare = 0xF,
				MoonGlare = 0x10,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::SByte WindSpeed
				{
					System::SByte __clrcall get();
				}

				property System::SByte TransDelta
				{
					System::SByte __clrcall get();
				}

				property System::SByte SunGlare
				{
					System::SByte __clrcall get();
				}

				property System::SByte SunDamage
				{
					System::SByte __clrcall get();
				}

				property System::SByte PrecipitationBeginFadeIn
				{
					System::SByte __clrcall get();
				}

				property System::SByte PrecipitationEndFadeOut
				{
					System::SByte __clrcall get();
				}

				property System::SByte ThunderLightningBeginFadeIn
				{
					System::SByte __clrcall get();
				}

				property System::SByte ThunderLightningEndFadeOut
				{
					System::SByte __clrcall get();
				}

				property System::SByte ThunderLightningFrequency
				{
					System::SByte __clrcall get();
				}

				property TESWeather::DataFlags WeatherFlags
				{
					TESWeather::DataFlags __clrcall get();
				}

				property TESWeather::PackedColor^ LightningColor
				{
					TESWeather::PackedColor^ __clrcall get();
				}

				property System::SByte VisualEffectBegin
				{
					System::SByte __clrcall get();
				}

				property System::SByte VisualEffectEnd
				{
					System::SByte __clrcall get();
				}

				property System::SByte WindDirection
				{
					System::SByte __clrcall get();
				}

				property System::SByte WindDirectionRange
				{
					System::SByte __clrcall get();
				}
			};

			interface class SoundData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::UInt32 SoundFormId
				{
					System::UInt32 __clrcall get();
				}

				property TESWeather::SoundTypes Type
				{
					TESWeather::SoundTypes __clrcall get();
				}
			};

			interface class WeatherSoundList;

			property NetScriptFramework::FixedMemoryArray<TESTexture1024^>^ CloudTextures
			{
				NetScriptFramework::FixedMemoryArray<TESTexture1024^>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<System::SByte>^ CloudLayerSpeedY
			{
				NetScriptFramework::FixedMemoryArray<System::SByte>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<System::SByte>^ CloudLayerSpeedX
			{
				NetScriptFramework::FixedMemoryArray<System::SByte>^ __clrcall get();
			}

			property System::IntPtr CloudColorData
			{
				System::IntPtr __clrcall get();
			}

			property System::IntPtr CloudAlpha
			{
				System::IntPtr __clrcall get();
			}

			property System::UInt32 CloudLayerDisabledBits
			{
				System::UInt32 __clrcall get();
			}

			property TESWeather::Data^ WeatherInfo
			{
				TESWeather::Data^ __clrcall get();
			}

			property TESWeather::FogData^ FogInfo
			{
				TESWeather::FogData^ __clrcall get();
			}

			property System::IntPtr ColorData
			{
				System::IntPtr __clrcall get();
			}

			property TESWeather::WeatherSoundList^ Sounds
			{
				TESWeather::WeatherSoundList^ __clrcall get();
			}

			property BSTArray<TESObjectSTAT^, BSTArrayHeapAllocator^>^ SkyStatics
			{
				BSTArray<TESObjectSTAT^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property System::Int32 NumCloudLayers
			{
				System::Int32 __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<TESImageSpace^>^ ImageSpaces
			{
				NetScriptFramework::FixedMemoryArray<TESImageSpace^>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<BGSDirectionalAmbientLightingColors^>^ DirectionalAmbientLightingColors
			{
				NetScriptFramework::FixedMemoryArray<BGSDirectionalAmbientLightingColors^>^ __clrcall get();
			}

			property TESModel^ Aurora
			{
				TESModel^ __clrcall get();
			}

			property BGSLensFlare^ SunGlareLensFlare
			{
				BGSLensFlare^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<BGSVolumetricLighting^>^ VolumetricLighting
			{
				NetScriptFramework::FixedMemoryArray<BGSVolumetricLighting^>^ __clrcall get();
			}

			property BGSShaderParticleGeometryData^ PrecipitationData
			{
				BGSShaderParticleGeometryData^ __clrcall get();
			}

			property BGSReferenceEffect^ ReferenceEffect
			{
				BGSReferenceEffect^ __clrcall get();
			}
		};

		public interface class TESLevCharacter : public TESBoundAnimObject, public TESLeveledList, public TESModelTextureSwap, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			enum class ChangeFlags : System::UInt32
			{
				None = 0,
				AddedObject = 0x80000000,
			};
		};

		public interface class TESKey : public TESObjectMISC, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				NonPlayable = 4,
				Deleted = 0x20,
				Ignored = 0x1000,
			};
		};

		public interface class TESSound : public TESBoundAnimObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property BGSSoundDescriptorForm^ Descriptor
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}
		};

		interface class TESAmmo::Data : public NetScriptFramework::IMemoryObject
		{
		public:
			property BGSProjectile^ Projectile
			{
				BGSProjectile^ __clrcall get();
			}

			property TESAmmo::DataFlags AmmoFlags
			{
				TESAmmo::DataFlags __clrcall get();
			}

			property System::Single Damage
			{
				System::Single __clrcall get();
			}
		};

		public interface class TESObjectBOOK : public TESBoundObject, public TESFullName, public TESModelTextureSwap, public TESIcon, public TESValueForm, public TESWeightForm, public TESDescription, public BGSDestructibleObjectForm, public BGSMessageIcon, public BGSPickupPutdownSounds, public BGSKeywordForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DataFlags : System::Byte
			{
				None = 0,
				AdvancesActorValue = 1,
				CantTake = 2,
				TeachesSpell = 4,
				HasBeenRead = 8,
			};

			enum class BookTypes : System::SByte
			{
				BookTome = 0,
				NoteScroll = -1,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			enum class ChangeFlags : System::UInt32
			{
				None = 0,
				TeachesSkill = 0x20,
				Read = 0x40,
			};

			interface class Data;

			interface class TeachData;

			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESObjectBOOK::DataFlags BookFlags
				{
					TESObjectBOOK::DataFlags __clrcall get();
				}

				property TESObjectBOOK::BookTypes BookType
				{
					TESObjectBOOK::BookTypes __clrcall get();
				}

				property TESObjectBOOK::TeachData^ Teaches
				{
					TESObjectBOOK::TeachData^ __clrcall get();
				}
			};

			property TESObjectBOOK::Data^ BookData
			{
				TESObjectBOOK::Data^ __clrcall get();
			}

			property TESObjectSTAT^ InventoryModel
			{
				TESObjectSTAT^ __clrcall get();
			}

			property TESDescription^ ItemCardDescription
			{
				TESDescription^ __clrcall get();
			}

			/// <summary>
			/// Check if the book has been read by player.
			/// </summary>
			property System::Boolean IsRead
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Check if this is a spellbook.
			/// </summary>
			property System::Boolean IsSpellBook
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Check if this is a skillbook.
			/// </summary>
			property System::Boolean IsSkillBook
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class TESObjectCONT : public TESBoundAnimObject, public TESContainer, public TESFullName, public TESModelTextureSwap, public TESWeightForm, public BGSDestructibleObjectForm, public BGSOpenCloseForm, public TESMagicCasterForm, public TESMagicTargetForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DataFlags : System::Byte
			{
				None = 0,
				AllowsSoundsWhenAnimation = 1,
				Respawn = 2,
				ShowOwner = 4,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
				HasDistantLOD = 0x8000,
				RandomAnimStart = 0x10000,
				Obstacle = 0x2000000,
				NavMeshGeneration_Filter = 0x4000000,
				NavMeshGeneration_BoundingBox = 0x8000000,
				NavMeshGeneration_Ground = 0x40000000,
			};

			property TESObjectCONT::DataFlags ContainerFlags
			{
				TESObjectCONT::DataFlags __clrcall get();
			}

			property BGSSoundDescriptorForm^ OpenSound
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}

			property BGSSoundDescriptorForm^ CloseSound
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}
		};

		public interface class TESObjectDOOR : public TESBoundAnimObject, public TESFullName, public TESModelTextureSwap, public BGSDestructibleObjectForm, public BGSOpenCloseForm, public TESMagicCasterForm, public TESMagicTargetForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DataFlags : System::Byte
			{
				None = 0,
				Automatic = 2,
				Hidden = 4,
				MinimalUse = 8,
				Sliding = 0x10,
				DoNotOpenInCombatSearch = 0x20,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
				HasDistantLOD = 0x8000,
				RandomAnimStart = 0x10000,
				IsMarker = 0x800000,
			};

			enum class ChangeFlags : System::UInt32
			{
				None = 0,
				TeleportExtra = 0x20000,
			};

			property BGSSoundDescriptorForm^ OpenSound
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}

			property BGSSoundDescriptorForm^ CloseSound
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}

			property BGSSoundDescriptorForm^ LoopSound
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}

			property TESObjectDOOR::DataFlags DoorFlags
			{
				TESObjectDOOR::DataFlags __clrcall get();
			}

			property BSTArray<TESForm^, BSTArrayHeapAllocator^>^ RandomTeleports
			{
				BSTArray<TESForm^, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		public interface class TESObjectTREE : public TESBoundObject, public TESModel, public TESFullName, public TESProduceForm, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Single TrunkFlexibility
				{
					System::Single __clrcall get();
				}

				property System::Single BranchFlexibility
				{
					System::Single __clrcall get();
				}

				property System::Single TrunkAmplitude
				{
					System::Single __clrcall get();
				}

				property System::Single FrontAmplitude
				{
					System::Single __clrcall get();
				}

				property System::Single BackAmplitude
				{
					System::Single __clrcall get();
				}

				property System::Single SideAmplitude
				{
					System::Single __clrcall get();
				}

				property System::Single FrontFrequency
				{
					System::Single __clrcall get();
				}

				property System::Single BackFrequency
				{
					System::Single __clrcall get();
				}

				property System::Single SideFrequency
				{
					System::Single __clrcall get();
				}

				property System::Single LeafFlexibility
				{
					System::Single __clrcall get();
				}

				property System::Single LeafAmplitude
				{
					System::Single __clrcall get();
				}

				property System::Single LeafFrequency
				{
					System::Single __clrcall get();
				}
			};

			enum class TreeTypes : System::Int32
			{
				ShortAndThin = 0,
				ShortAndThick = 1,
				TallAndThin = 2,
				TallAndThick = 3,
			};

			interface class BoneData : public NetScriptFramework::IMemoryObject
			{
			public:
				property NiMatrix33^ LocalBoneRotation
				{
					NiMatrix33^ __clrcall get();
				}

				property NiPoint3^ WorldBoneDirection
				{
					NiPoint3^ __clrcall get();
				}

				property System::Int32 ParentWorldBoneRotationIndex
				{
					System::Int32 __clrcall get();
				}
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
				HasDistantLOD = 0x8000,
			};

			interface class BaseTreeData : public BSIntrusiveRefCounted, public NetScriptFramework::IMemoryObject
			{
			public:
				property BSTArray<TESObjectTREE::BoneData^, BSTArrayHeapAllocator^>^ BranchBones
				{
					BSTArray<TESObjectTREE::BoneData^, BSTArrayHeapAllocator^>^ __clrcall get();
				}

				property BSTArray<NiMatrix33^, BSTArrayHeapAllocator^>^ ParentWorldBoneRotations
				{
					BSTArray<NiMatrix33^, BSTArrayHeapAllocator^>^ __clrcall get();
				}
			};

			property TESObjectTREE::Data^ TreeData
			{
				TESObjectTREE::Data^ __clrcall get();
			}

			property TESObjectTREE::BaseTreeData^ BaseData
			{
				TESObjectTREE::BaseTreeData^ __clrcall get();
			}

			property TESObjectTREE::TreeTypes TreeType
			{
				TESObjectTREE::TreeTypes __clrcall get();
			}
		};

		public interface class TESSoulGem : public TESObjectMISC, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
				CanHoldNPCSoul = 0x20000,
			};

			property TESSoulGem^ LinkedSoulGem
			{
				TESSoulGem^ __clrcall get();
			}

			property SoulLevels CurrentSoul
			{
				SoulLevels __clrcall get();
			}

			property SoulLevels SoulCapacity
			{
				SoulLevels __clrcall get();
			}
		};

		public interface class DialoguePackage : public TESPackage, public NetScriptFramework::IVirtualObject { };

		public interface class BGSRefAliasInstanceData : public NetScriptFramework::IMemoryObject
		{
		public:
			property TESQuest^ Quest
			{
				TESQuest^ __clrcall get();
			}

			property BGSBaseAlias^ Alias
			{
				BGSBaseAlias^ __clrcall get();
			}

			property BSTArray<TESPackage^, BSTArrayHeapAllocator^>^ InstancedPackages
			{
				BSTArray<TESPackage^, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		interface class ExtraAttachedArrows3D::Data : public NetScriptFramework::IMemoryObject
		{
		public:
			property NiPointer<NiAVObject^>^ ArrowObject
			{
				NiPointer<NiAVObject^>^ __clrcall get();
			}

			property System::UInt64 TimeStamp
			{
				System::UInt64 __clrcall get();
			}

			property BGSProjectile^ Source
			{
				BGSProjectile^ __clrcall get();
			}
		};

		public interface class ExtraLeveledItemBase : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property TESLevItem^ LeveledItem
			{
				TESLevItem^ __clrcall get();
			}
		};

		interface class ExtraLock::Data : public NetScriptFramework::IMemoryObject
		{
		public:
			/// <summary>
			/// Gets or sets the lock level. This is the actual level and not difficulty rank.
			/// </summary>
			property System::SByte LockLevel
			{
				System::SByte __clrcall get();

				void __clrcall set(System::SByte value);
			}

			/// <summary>
			/// Gets or sets the key item. This is null if no key assigned.
			/// </summary>
			property TESObjectMISC^ KeyItem
			{
				TESObjectMISC^ __clrcall get();

				void __clrcall set(TESObjectMISC^ value);
			}

			/// <summary>
			/// Gets or sets the options for lock.
			/// </summary>
			property ExtraLockDataFlags Flags
			{
				ExtraLockDataFlags __clrcall get();

				void __clrcall set(ExtraLockDataFlags value);
			}

			/// <summary>
			/// Gets or sets the amount of tries for bashing lock.
			/// </summary>
			property System::Int32 Tries
			{
				System::Int32 __clrcall get();

				void __clrcall set(System::Int32 value);
			}

			/// <summary>
			/// Gets the difficulty rank for picking the lock.
			/// </summary>
			/// <param name="obj">The object that is locked.</param>
			ExtraLockDifficultyRanks GetDifficultyRank(TESObjectREFR^ obj);

			/// <summary>
			/// Check if this lock is broken due to bashing.
			/// </summary>
			property System::Boolean IsBroken
			{
				System::Boolean __clrcall get();
			}
		};

		interface class ExtraRunOncePacks::Data : public NetScriptFramework::IMemoryObject
		{
		public:
			property TESPackage^ Package
			{
				TESPackage^ __clrcall get();
			}

			property System::SByte Day
			{
				System::SByte __clrcall get();
			}
		};

		public interface class TrespassPackage : public TESPackage, public NetScriptFramework::IVirtualObject { };

		public interface class FleePackage : public TESPackage, public NetScriptFramework::IVirtualObject { };

		public interface class SpectatorPackage : public TESPackage, public NetScriptFramework::IVirtualObject { };

		public interface class TESCustomPackageData : public TESPackageData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BGSPackageDataList^ Data
			{
				BGSPackageDataList^ __clrcall get();
			}

			property IProcedureTreeItem^ ProcedureTree
			{
				IProcedureTreeItem^ __clrcall get();
			}

			property BSTSmartPointer<BGSPackageDataNameMap^, BSTSmartPointerIntrusiveRefCount<BGSPackageDataNameMap^>^>^ NameMap
			{
				BSTSmartPointer<BGSPackageDataNameMap^, BSTSmartPointerIntrusiveRefCount<BGSPackageDataNameMap^>^>^ __clrcall get();
			}

			property TESPackage^ TemplateParent
			{
				TESPackage^ __clrcall get();
			}

			property System::UInt16 Version
			{
				System::UInt16 __clrcall get();
			}

			property System::Boolean AlwaysRecheckConditions
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class ActorPackage : public NetScriptFramework::IMemoryObject
		{
		public:
			property Mutex^ PackageLock
			{
				Mutex^ __clrcall get();
			}

			property TESPackage^ Package
			{
				TESPackage^ __clrcall get();
			}

			property ActorPackageData^ Data
			{
				ActorPackageData^ __clrcall get();
			}

			property System::UInt32 TargetRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property System::Int32 CurrentProcedureIndex
			{
				System::Int32 __clrcall get();
			}

			property System::Single PackageStartTime
			{
				System::Single __clrcall get();
			}

			property System::UInt32 ModifiedPackageFlag
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt16 ModifiedInterruptFlag
			{
				System::UInt16 __clrcall get();
			}

			property ActorPackageFlags PackageFlags
			{
				ActorPackageFlags __clrcall get();
			}

			property System::SByte PreferredSpeed
			{
				System::SByte __clrcall get();
			}
		};

		interface class BGSDecalGroup::CreationData : public NetScriptFramework::IMemoryObject
		{
		public:
			property NiPoint3^ Origin
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ Direction
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ SurfaceNormal
			{
				NiPoint3^ __clrcall get();
			}

			property System::UInt32 ObjRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property NiPointer<NiAVObject^>^ AvObj
			{
				NiPointer<NiAVObject^>^ __clrcall get();
			}

			property NiNode^ Clone
			{
				NiNode^ __clrcall get();
			}

			property BGSTextureSet^ TexSet
			{
				BGSTextureSet^ __clrcall get();
			}

			property BGSTextureSet^ TexSet2
			{
				BGSTextureSet^ __clrcall get();
			}

			property TESObjectCELL^ ParentCell
			{
				TESObjectCELL^ __clrcall get();
			}
		};

		interface class anonymous_namespace::FavoriteShoutHandler : public anonymous_namespace::FavoriteItemHandler<TESShout^, ShoutAttack::Event^>, public NetScriptFramework::IVirtualObject { };

		public interface class WeatherType : public NetScriptFramework::IMemoryObject
		{
		public:
			property TESWeather^ Weather
			{
				TESWeather^ __clrcall get();
			}

			property System::Int32 Chance
			{
				System::Int32 __clrcall get();
			}

			property TESGlobal^ Global
			{
				TESGlobal^ __clrcall get();
			}
		};

		public interface class ExtraAliasInstanceArray : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSTArray<BGSRefAliasInstanceData^, BSTArrayHeapAllocator^>^ Aliases
			{
				BSTArray<BGSRefAliasInstanceData^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property Mutex^ Lock
			{
				Mutex^ __clrcall get();
			}
		};

		public interface class ExtraTresPassPackage : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property TrespassPackage^ Package
			{
				TrespassPackage^ __clrcall get();
			}
		};

		public interface class SkyStaticFindFunctor : public TESWeather::SkyStaticFunctor, public NetScriptFramework::IVirtualObject { };

		public interface class TESClimate : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class TimingData : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class Interval : public NetScriptFramework::IMemoryObject
				{
				public:
					property System::Byte Begin
					{
						System::Byte __clrcall get();
					}

					property System::Byte End
					{
						System::Byte __clrcall get();
					}
				};

				property unknown^ Sunrise
				{
					unknown^ __clrcall get();
				}

				property unknown^ Sunset
				{
					unknown^ __clrcall get();
				}

				property System::Byte Volatility
				{
					System::Byte __clrcall get();
				}

				property System::Byte MoonPhaseData
				{
					System::Byte __clrcall get();
				}
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property TESModel^ NightSky
			{
				TESModel^ __clrcall get();
			}

			property BSSimpleList<WeatherType^>^ WeatherList
			{
				BSSimpleList<WeatherType^>^ __clrcall get();
			}

			property TESTexture^ SunSkyObject
			{
				TESTexture^ __clrcall get();
			}

			property TESTexture^ SunGlareSkyObject
			{
				TESTexture^ __clrcall get();
			}

			property TESClimate::TimingData^ Timing
			{
				TESClimate::TimingData^ __clrcall get();
			}
		};

		public interface class TESRegionDataWeather : public TESRegionData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSSimpleList<WeatherType^>^ WeatherTypes
			{
				BSSimpleList<WeatherType^>^ __clrcall get();
			}
		};

		interface class SpellItem;

		interface class TESShout::WordData : public NetScriptFramework::IMemoryObject
		{
		public:
			property TESWordOfPower^ Word
			{
				TESWordOfPower^ __clrcall get();
			}

			property SpellItem^ Spell
			{
				SpellItem^ __clrcall get();
			}

			property System::Single RecoveryTime
			{
				System::Single __clrcall get();
			}
		};

		public interface class BGSAbilityPerkEntry : public BGSPerkEntry, public NetScriptFramework::IVirtualObject
		{
		public:
			property SpellItem^ Ability
			{
				SpellItem^ __clrcall get();
			}
		};

		interface class BGSAttackData::Data : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Single DamageMult
			{
				System::Single __clrcall get();
			}

			property System::Single AttackChance
			{
				System::Single __clrcall get();
			}

			property SpellItem^ AttackSpell
			{
				SpellItem^ __clrcall get();
			}

			property BGSAttackData::AttackFlags Flags
			{
				BGSAttackData::AttackFlags __clrcall get();
			}

			property System::Single AttackAngle
			{
				System::Single __clrcall get();
			}

			property System::Single StrikeAngle
			{
				System::Single __clrcall get();
			}

			property System::Single StaggerOffset
			{
				System::Single __clrcall get();
			}

			property BGSKeyword^ AttackType
			{
				BGSKeyword^ __clrcall get();
			}

			property System::Single KnockDown
			{
				System::Single __clrcall get();
			}

			property System::Single RecoveryTime
			{
				System::Single __clrcall get();
			}

			property System::Single StaminaMult
			{
				System::Single __clrcall get();
			}
		};

		public interface class BGSEntryPointFunctionDataActivateChoice : public BGSEntryPointFunctionData, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class ActivateChoiceFlags : System::UInt16
			{
				None = 0,
				RunImmediately = 1,
				ReplaceDefault = 2,
			};

			property BSFixedString^ Label
			{
				BSFixedString^ __clrcall get();
			}

			property BGSPerk^ Perk
			{
				BGSPerk^ __clrcall get();
			}

			property SpellItem^ AppliedSpell
			{
				SpellItem^ __clrcall get();
			}

			property BGSEntryPointFunctionDataActivateChoice::ActivateChoiceFlags Flags1
			{
				BGSEntryPointFunctionDataActivateChoice::ActivateChoiceFlags __clrcall get();
			}

			property System::UInt16 Flags2
			{
				System::UInt16 __clrcall get();
			}
		};

		interface class TESSpellList::Data : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::IntPtr Spells
			{
				System::IntPtr __clrcall get();
			}

			property System::IntPtr LeveledSpells
			{
				System::IntPtr __clrcall get();
			}

			property System::IntPtr Shouts
			{
				System::IntPtr __clrcall get();
			}

			property System::Int32 NumSpells
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 NumLeveledSpells
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 NumShouts
			{
				System::Int32 __clrcall get();
			}
		};

		interface class TESObjectBOOK::TeachData : public NetScriptFramework::IMemoryObject
		{
		public:
			property ActorValueIndices SkillToAdvance
			{
				ActorValueIndices __clrcall get();
			}

			property SpellItem^ SpellToTeach
			{
				SpellItem^ __clrcall get();
			}
		};

		interface class BGSImpactDataSet;

		public interface class BGSMaterialType : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class MaterialSurfaceFlags : System::UInt32
			{
				None = 0,
				Stairs = 1,
				ArrowsStick = 2,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property BGSMaterialType^ ParentType
			{
				BGSMaterialType^ __clrcall get();
			}

			property BSFixedString^ MaterialName
			{
				BSFixedString^ __clrcall get();
			}

			property System::UInt32 MaterialID
			{
				System::UInt32 __clrcall get();
			}

			property NiColor^ MaterialColor
			{
				NiColor^ __clrcall get();
			}

			property System::Single Buoyancy
			{
				System::Single __clrcall get();
			}

			property BGSMaterialType::MaterialSurfaceFlags MaterialFlags
			{
				BGSMaterialType::MaterialSurfaceFlags __clrcall get();
			}

			property BGSImpactDataSet^ HavokImpactDataSet
			{
				BGSImpactDataSet^ __clrcall get();
			}
		};

		public interface class BGSFootstep : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property BSFixedString^ Tag
			{
				BSFixedString^ __clrcall get();
			}

			property BGSImpactDataSet^ ImpactSet
			{
				BGSImpactDataSet^ __clrcall get();
			}
		};

		interface class BGSHazard::Data : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Int32 Limit
			{
				System::Int32 __clrcall get();
			}

			property System::Single Radius
			{
				System::Single __clrcall get();
			}

			property System::Single Lifetime
			{
				System::Single __clrcall get();
			}

			property System::Single ImageSpaceRadius
			{
				System::Single __clrcall get();
			}

			property System::Single TargetInterval
			{
				System::Single __clrcall get();
			}

			property BGSHazard::DataFlags Flags
			{
				BGSHazard::DataFlags __clrcall get();
			}

			property SpellItem^ Spell
			{
				SpellItem^ __clrcall get();
			}

			property TESObjectLIGH^ Light
			{
				TESObjectLIGH^ __clrcall get();
			}

			property BGSImpactDataSet^ ImpactDataSet
			{
				BGSImpactDataSet^ __clrcall get();
			}

			property BGSSoundDescriptorForm^ Sound
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}
		};

		public interface class BGSBlockBashData : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			property BGSImpactDataSet^ BlockBashImpactDataSet
			{
				BGSImpactDataSet^ __clrcall get();
			}

			property BGSMaterialType^ AltBlockMaterialType
			{
				BGSMaterialType^ __clrcall get();
			}
		};

		public interface class BGSImpactDataSet : public TESForm, public BGSPreloadable, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property BSTHashMap2<BGSMaterialType^, BGSImpactData^>^ ImpactMap
			{
				BSTHashMap2<BGSMaterialType^, BGSImpactData^>^ __clrcall get();
			}
		};

		public interface class BGSFootstepSet : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class MovementTypes : System::Int32
			{
				Walk = 0,
				Run = 1,
				Sneak = 2,
				Bleedout = 3,
				Swim = 4,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property System::IntPtr Entries
			{
				System::IntPtr __clrcall get();
			}
		};

		public interface class TESLandTexture : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class TextureHavokData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Int32 Friction
				{
					System::Int32 __clrcall get();
				}

				property System::Int32 Restitution
				{
					System::Int32 __clrcall get();
				}
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property BGSTextureSet^ TextureSet
			{
				BGSTextureSet^ __clrcall get();
			}

			property TESLandTexture::TextureHavokData^ HavokData
			{
				TESLandTexture::TextureHavokData^ __clrcall get();
			}

			property BGSMaterialType^ MaterialType
			{
				BGSMaterialType^ __clrcall get();
			}

			property System::SByte SpecularExponent
			{
				System::SByte __clrcall get();
			}

			property System::Int32 ShaderTextureIndex
			{
				System::Int32 __clrcall get();
			}

			property BSSimpleList<TESGrass^>^ TextureGrassList
			{
				BSSimpleList<TESGrass^>^ __clrcall get();
			}
		};

		interface class hkpAction;

		public interface class hkpSimulationIsland : public hkpConstraintOwner, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class BitField_31 : System::Byte
			{
				m_splitCheckRequested_0 = 1,
				m_splitCheckRequested_1 = 2,
				m_isSparse_0 = 4,
				m_isSparse_1 = 8,
				m_actionListCleanupNeeded_0 = 0x10,
				m_actionListCleanupNeeded_1 = 0x20,
				m_allowIslandLocking_0 = 0x40,
				m_allowIslandLocking_1 = 0x80,
			};

			enum class BitField_32 : System::Byte
			{
				m_isInActiveIslandsArray_0 = 1,
				m_isInActiveIslandsArray_1 = 2,
				m_activeMark_0 = 4,
				m_activeMark_1 = 8,
				m_tryToIncreaseIslandSizeMark_0 = 0x10,
				m_tryToIncreaseIslandSizeMark_1 = 0x20,
				m_inIntegrateJob_0 = 0x40,
				m_inIntegrateJob_1 = 0x80,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpPhysicsSystem : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpLazyAddToWorld : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::AddAction : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::RemoveAction : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpWorld : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class CachedAabbUpdate : System::Int32
			{
				SHIFT_BROADPHASE_UPDATE_ENTITY_AABBS = 0,
				SHIFT_BROADPHASE_IGNORE_ENTITY_AABBS = 1,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class IgnoreForceMultithreadedSimulation : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			enum class MtAccessChecking : System::Int32
			{
				MT_ACCESS_CHECKING_ENABLED = 0,
				MT_ACCESS_CHECKING_DISABLED = 1,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class ReintegrationRecollideMode : System::Int32
			{
				RR_MODE_REINTEGRATE = 1,
				RR_MODE_RECOLLIDE_BROADPHASE = 2,
				RR_MODE_RECOLLIDE_NARROWPHASE = 4,
				RR_MODE_ALL = 7,
			};
		};

		public interface class hkpAction : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpDisplayBindingData::PhysicsSystem : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpPhysicsData : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class SplitPhysicsSystemsOutput : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		interface class hkWorldMemoryAvailableWatchDog::MemUsageInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class ahkpWorld : public hkpWorld, public NetScriptFramework::IVirtualObject { };

		public interface class hkpUnaryAction : public hkpAction, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpBinaryAction : public hkpAction, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpArrayAction : public hkpAction, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpNullAction : public hkpAction, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class anonymous_namespace::hkpTiltPreventAction : public hkpUnaryAction, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::hkpWheelAction : public hkpUnaryAction, public NetScriptFramework::IVirtualObject { };

		public interface class hkLiquidAction : public hkpUnaryAction, public NetScriptFramework::IVirtualObject { };

		public interface class hkOrientHingedBodyAction : public hkpUnaryAction, public NetScriptFramework::IVirtualObject { };

		public interface class hkpAngularDashpotAction : public hkpBinaryAction, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpDashpotAction : public hkpBinaryAction, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpEaseConstraintsAction : public hkpArrayAction, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class CollectSupportedConstraints : public hkpConstraintUtils::CollectConstraintsFilter, public NetScriptFramework::IVirtualObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpEasePenetrationAction : public hkpUnaryAction, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpMotorAction : public hkpUnaryAction, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpMouseSpringAction : public hkpUnaryAction, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpReorientAction : public hkpUnaryAction, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSpringAction : public hkpBinaryAction, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpVehicleInstance : public hkpUnaryAction, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class WheelInfo : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpWindAction : public hkpUnaryAction, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSafeEaseConstraintsAction : public hkpEaseConstraintsAction, public hkpConstraintListener, public NetScriptFramework::IVirtualObject { };

		public interface class hkpVehicleManager : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpVehicleIntegrateJob : public hkpVehicleJob, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpMultithreadedVehicleManager : public hkpVehicleManager, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class VehicleCommandBatch : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkpVehicleCastBatchingManager : public hkpVehicleManager, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpVehicleLinearCastBatchingManager : public hkpVehicleCastBatchingManager, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class LinearCastBatch : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpVehicleRayCastBatchingManager : public hkpVehicleCastBatchingManager, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class RaycastBatch : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		interface class TESTopic;

		public interface class BGSDialogueBranch : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DialogueBranchFlags : System::UInt32
			{
				None = 0,
				TopLevel = 1,
				Blocking = 2,
				Exclusive = 4,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property BGSDialogueBranch::DialogueBranchFlags DialogueFlags
			{
				BGSDialogueBranch::DialogueBranchFlags __clrcall get();
			}

			property TESQuest^ Quest
			{
				TESQuest^ __clrcall get();
			}

			property TESTopic^ StartingTopic
			{
				TESTopic^ __clrcall get();
			}

			property DialogueTypes DialogueType
			{
				DialogueTypes __clrcall get();
			}
		};

		public interface class BGSSceneActionDialogue : public BGSSceneAction, public NetScriptFramework::IVirtualObject
		{
		public:
			property TESTopic^ Topic
			{
				TESTopic^ __clrcall get();
			}

			property System::Int32 HeadtrackActorId
			{
				System::Int32 __clrcall get();
			}

			property System::Single LoopingMax
			{
				System::Single __clrcall get();
			}

			property System::Single LoopingMin
			{
				System::Single __clrcall get();
			}

			property BGSSceneAction::EmotionTypes EmotionType
			{
				BGSSceneAction::EmotionTypes __clrcall get();
			}

			property System::UInt32 EmotionValue
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class TESTopicInfo : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class FavorLevels : System::SByte
			{
				None = 0,
				Small = 1,
				Medium = 2,
				Large = 3,
			};

			enum class DataFlags : System::UInt16
			{
				None = 0,
				StartSceneOnEnd = 1,
				Random = 2,
				SayOnce = 4,
				RequiresPlayerActivation = 8,
				InfoRefusal = 0x10,
				RandomEnd = 0x20,
				EndRunningScene = 0x40,
				IsForceGreet = 0x80,
				PlayerAddress = 0x100,
				ForceSubtitle = 0x200,
				CanMoveWhileGreeting = 0x400,
				NoLIPFile = 0x800,
				PostProcess = 0x1000,
				CustomSoundOutput = 0x2000,
				SpendsFavorPoints = 0x4000,
			};

			enum class ChangeFlags : System::UInt32
			{
				None = 0,
				SaidOnce = 0x80000000,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			enum class EmotionTypes : System::Int32
			{
				Neutral = 0,
				Anger = 1,
				Disgust = 2,
				Fear = 3,
				Sad = 4,
				Happy = 5,
				Surprise = 6,
				Puzzled = 7,
			};

			enum class ResponseDataFlags : System::Byte
			{
				None = 0,
				UseEmotionAnimation = 1,
			};

			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESTopicInfo::DataFlags TopicInfoFlags
				{
					TESTopicInfo::DataFlags __clrcall get();
				}

				property System::UInt16 HoursUntilReset
				{
					System::UInt16 __clrcall get();
				}
			};

			interface class ResponseData : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESTopicInfo::EmotionTypes EmotionType
				{
					TESTopicInfo::EmotionTypes __clrcall get();
				}

				property System::Int32 EmotionValue
				{
					System::Int32 __clrcall get();
				}

				property System::Byte ResponseNumber
				{
					System::Byte __clrcall get();
				}

				property BGSSoundDescriptorForm^ Sound
				{
					BGSSoundDescriptorForm^ __clrcall get();
				}

				property TESTopicInfo::ResponseDataFlags ResponseFlags
				{
					TESTopicInfo::ResponseDataFlags __clrcall get();
				}

				property BSFixedString^ ResponseText
				{
					BSFixedString^ __clrcall get();
				}

				property TESIdleForm^ SpeakerIdle
				{
					TESIdleForm^ __clrcall get();
				}

				property TESIdleForm^ ListenerIdle
				{
					TESIdleForm^ __clrcall get();
				}

				property TESTopicInfo::ResponseData^ Next
				{
					TESTopicInfo::ResponseData^ __clrcall get();
				}
			};

			property TESTopic^ ParentTopic
			{
				TESTopic^ __clrcall get();
			}

			property TESTopicInfo^ DataInfo
			{
				TESTopicInfo^ __clrcall get();
			}

			property TESCondition^ Conditions
			{
				TESCondition^ __clrcall get();
			}

			property System::UInt16 IndexInParentInfoArray
			{
				System::UInt16 __clrcall get();
			}

			property System::Boolean SaidOnce
			{
				System::Boolean __clrcall get();
			}

			property TESTopicInfo::FavorLevels FavorLevel
			{
				TESTopicInfo::FavorLevels __clrcall get();
			}

			property TESTopicInfo::Data^ TopicData
			{
				TESTopicInfo::Data^ __clrcall get();
			}

			property System::UInt32 FileOffset
			{
				System::UInt32 __clrcall get();
			}
		};

		interface class TESPackage::TopicData : public NetScriptFramework::IMemoryObject
		{
		public:
			property TESPackage::TopicTypes TopicType
			{
				TESPackage::TopicTypes __clrcall get();
			}

			property TESTopic^ Topic
			{
				TESTopic^ __clrcall get();
			}
		};

		public interface class TESTopic : public TESForm, public TESFullName, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DataFlags : System::Byte
			{
				None = 0,
				DoAllBeforeRepeating = 1,
			};

			enum class SubTypes : System::Int16
			{
				Custom = 0,
				ForceGreet = 1,
				Rumors = 2,
				Unk3 = 3,
				Intimidate = 4,
				Flatter = 5,
				Bribe = 6,
				AskGift = 7,
				Gift = 8,
				AskFavor = 9,
				Favor = 0xA,
				ShowRelationships = 0xB,
				Follow = 0xC,
				Reject = 0xD,
				Scene = 0xE,
				Show = 0xF,
				Agree = 0x10,
				Refuse = 0x11,
				ExitFavorState = 0x12,
				MoralRefusal = 0x13,
				FlyingMountLand = 0x14,
				FlyingMountCancelLand = 0x15,
				FlyingMountAcceptTarget = 0x16,
				FlyingMountRejectTarget = 0x17,
				FlyingMountNoTarget = 0x18,
				FlyingMountDestinationReached = 0x19,
				Attack = 0x1A,
				PowerAttack = 0x1B,
				Bash = 0x1C,
				Hit = 0x1D,
				Flee = 0x1E,
				Bleedout = 0x1F,
				AvoidThreat = 0x20,
				Death = 0x21,
				GroupStrategy = 0x22,
				Block = 0x23,
				Taunt = 0x24,
				AllyKilled = 0x25,
				Steal = 0x26,
				Yield = 0x27,
				AcceptYield = 0x28,
				PickpocketCombat = 0x29,
				Assault = 0x2A,
				Murder = 0x2B,
				AssaultNPC = 0x2C,
				MurderNPC = 0x2D,
				PickpocketNPC = 0x2E,
				StealFromNPC = 0x2F,
				TrespassAgainstNPC = 0x30,
				Trespass = 0x31,
				WereTransformCrime = 0x32,
				VoicePowerStartShort = 0x33,
				VoicePowerStartLong = 0x34,
				VoicePowerEndShort = 0x35,
				VoicePowerEndLong = 0x36,
				AlertIdle = 0x37,
				LostIdle = 0x38,
				NormalToAlert = 0x39,
				AlertToCombat = 0x3A,
				NormalToCombat = 0x3B,
				AlertToNormal = 0x3C,
				CombatToNormal = 0x3D,
				CombatToLost = 0x3E,
				LostToNormal = 0x3F,
				LostToCombat = 0x40,
				DetectFriendDie = 0x41,
				ServiceRefusal = 0x42,
				Repair = 0x43,
				Travel = 0x44,
				Training = 0x45,
				BarterExit = 0x46,
				RepairExit = 0x47,
				Recharge = 0x48,
				RechargeExit = 0x49,
				TrainingExit = 0x4A,
				ObserveCombat = 0x4B,
				NoticeCorpse = 0x4C,
				TimeToGo = 0x4D,
				GoodBye = 0x4E,
				Hello = 0x4F,
				SwingMeleeWeapon = 0x50,
				ShootBow = 0x51,
				ZKeyObject = 0x52,
				Jump = 0x53,
				KnockOverObject = 0x54,
				DestroyObject = 0x55,
				StandonFurniture = 0x56,
				LockedObject = 0x57,
				PickpocketTopic = 0x58,
				PursueIdleTopic = 0x59,
				SharedInfo = 0x5A,
				PlayerCastProjectileSpell = 0x5B,
				PlayerCastSelfSpell = 0x5C,
				PlayerShout = 0x5D,
				Idle = 0x5E,
				EnterSprintBreath = 0x5F,
				EnterBowZoomBreath = 0x60,
				ExitBowZoomBreath = 0x61,
				ActorCollidewithActor = 0x62,
				PlayerinIronSights = 0x63,
				OutofBreath = 0x64,
				CombatGrunt = 0x65,
				LeaveWaterBreath = 0x66,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESTopic::DataFlags TopicFlags
				{
					TESTopic::DataFlags __clrcall get();
				}

				property DialogueTypes8 DialogueType
				{
					DialogueTypes8 __clrcall get();
				}

				property TESTopic::SubTypes SubType
				{
					TESTopic::SubTypes __clrcall get();
				}
			};

			property TESTopic::Data^ TopicData
			{
				TESTopic::Data^ __clrcall get();
			}

			property System::Int32 PriorityAndJournalIndex
			{
				System::Int32 __clrcall get();
			}

			property BGSDialogueBranch^ OwnerBranch
			{
				BGSDialogueBranch^ __clrcall get();
			}

			property TESQuest^ OwnerQuest
			{
				TESQuest^ __clrcall get();
			}

			property System::IntPtr TopicInfos
			{
				System::IntPtr __clrcall get();
			}

			property System::Int32 NumTopicInfos
			{
				System::Int32 __clrcall get();
			}

			property System::UInt32 FirstFileOffset
			{
				System::UInt32 __clrcall get();
			}

			property BSFixedString^ FormEditorId
			{
				BSFixedString^ __clrcall get();
			}
		};

		interface class ExtraSayTopicInfoOnceADay::Data : public NetScriptFramework::IMemoryObject
		{
		public:
			property TESTopicInfo^ Info
			{
				TESTopicInfo^ __clrcall get();
			}

			property System::Int32 DateStamp
			{
				System::Int32 __clrcall get();
			}

			property System::Single HourStamp
			{
				System::Single __clrcall get();
			}
		};

		interface class TESFaction;

		public interface class BGSLocation : public TESForm, public TESFullName, public BGSKeywordForm, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class UniqueNPCData : public NetScriptFramework::IMemoryObject
			{
			public:
				property Actor^ ActorInstance
				{
					Actor^ __clrcall get();
				}

				property System::UInt32 RefID
				{
					System::UInt32 __clrcall get();
				}

				property BGSLocation^ EditorLoc
				{
					BGSLocation^ __clrcall get();
				}
			};

			interface class OverrideData : public NetScriptFramework::IMemoryObject
			{
			public:
				property BSTArray<unknown^, BSTArrayHeapAllocator^>^ AddedData
				{
					BSTArray<unknown^, BSTArrayHeapAllocator^>^ __clrcall get();
				}

				property BSTSet<System::UInt32>^ RemovedData
				{
					BSTSet<System::UInt32>^ __clrcall get();
				}
			};

			interface class KeywordData : public NetScriptFramework::IMemoryObject
			{
			public:
				property BGSKeyword^ Keyword
				{
					BGSKeyword^ __clrcall get();
				}

				property System::Single Data
				{
					System::Single __clrcall get();
				}
			};

			interface class UnloadedRefData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::UInt32 RefId
				{
					System::UInt32 __clrcall get();
				}

				property System::UInt32 ParentSpaceId
				{
					System::UInt32 __clrcall get();
				}

				property System::UInt32 CellKey
				{
					System::UInt32 __clrcall get();
				}
			};

			enum class ChangeFlags : System::UInt32
			{
				None = 0,
				KeywordData = 0x40000000,
				Cleared = 0x80000000,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
				Cleared = 0x80000000,
			};

			interface class SpecialRefData : public NetScriptFramework::IMemoryObject
			{
			public:
				property BGSLocationRefType^ Type
				{
					BGSLocationRefType^ __clrcall get();
				}

				property BGSLocation::UnloadedRefData^ RefData
				{
					BGSLocation::UnloadedRefData^ __clrcall get();
				}
			};

			/// <summary>
			/// Gets the parent location.
			/// </summary>
			property BGSLocation^ ParentLocation
			{
				BGSLocation^ __clrcall get();
			}

			property TESFaction^ UnreportedCrimeFaction
			{
				TESFaction^ __clrcall get();
			}

			property BGSMusicType^ MusicType
			{
				BGSMusicType^ __clrcall get();
			}

			property System::UInt32 WorldLocMarkerRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property System::Single WorldLocRadius
			{
				System::Single __clrcall get();
			}

			property System::UInt32 HorseLocMarkerRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property BSTArray<BGSLocation::SpecialRefData^, BSTArrayHeapAllocator^>^ SpecialRefs
			{
				BSTArray<BGSLocation::SpecialRefData^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<BGSLocation::UniqueNPCData^, BSTArrayHeapAllocator^>^ UniqueNPCs
			{
				BSTArray<BGSLocation::UniqueNPCData^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BGSLocation::OverrideData^ Override
			{
				BGSLocation::OverrideData^ __clrcall get();
			}

			property NiPointer<QueuedPromoteLocationReferencesTask^>^ PromoteRefsTask
			{
				NiPointer<QueuedPromoteLocationReferencesTask^>^ __clrcall get();
			}

			property BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ PromotedRefHandles
			{
				BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property System::Int32 LoadedCount
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 FileOffset
			{
				System::Int32 __clrcall get();
			}

			property BSTArray<BGSLocation::KeywordData^, BSTArrayHeapAllocator^>^ KeywordDataArray
			{
				BSTArray<BGSLocation::KeywordData^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property System::UInt32 LastChecked
			{
				System::UInt32 __clrcall get();
			}

			property System::Boolean Cleared
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean EverCleared
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class ExtraFactionChanges : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESFaction^ Faction
				{
					TESFaction^ __clrcall get();
				}

				property System::SByte Rank
				{
					System::SByte __clrcall get();
				}
			};

			property BSTArray<ExtraFactionChanges::Data^, BSTArrayHeapAllocator^>^ FactionChanges
			{
				BSTArray<ExtraFactionChanges::Data^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property TESFaction^ CrimeFaction
			{
				TESFaction^ __clrcall get();
			}

			property System::Boolean RemoveCrimeFaction
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class Crime : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ ActorsKnowOfCrimeRefHandles
			{
				BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property TESFaction^ CrimeFaction
			{
				TESFaction^ __clrcall get();
			}

			property Mutex^ Lock
			{
				Mutex^ __clrcall get();
			}
		};

		public interface class ProcessLists : public BSTSingletonSDM<ProcessLists^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class GetActorsFilter : public NetScriptFramework::IVirtualObject { };

			property System::Boolean RunDetection
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean ShowDetectionStats
			{
				System::Boolean __clrcall get();
			}

			property System::UInt32 StatDetectActorRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property System::Boolean ProcessHigh
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean ProcessLow
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean ProcessMHigh
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean ProcessMLow
			{
				System::Boolean __clrcall get();
			}

			property System::Int32 NumberHighActors
			{
				System::Int32 __clrcall get();
			}

			property System::Single RemoveExcessDeadTimer
			{
				System::Single __clrcall get();
			}

			property BSSemaphore^ MovementSyncSema
			{
				BSSemaphore^ __clrcall get();
			}

			property BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ HighActorRefHandles
			{
				BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ LowActorRefHandles
			{
				BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ MiddleHighActorRefHandles
			{
				BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ MiddleLowActorRefHandles
			{
				BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<BSTArray<System::UInt32, BSTArrayHeapAllocator^>^>^ AllProcessesActorRefHandles
			{
				NetScriptFramework::FixedMemoryArray<BSTArray<System::UInt32, BSTArrayHeapAllocator^>^>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<BSSimpleList<Crime^>^>^ GlobalCrimes
			{
				NetScriptFramework::FixedMemoryArray<BSSimpleList<Crime^>^>^ __clrcall get();
			}

			property BSTArray<NiPointer<BSTempEffect^>^, BSTArrayHeapAllocator^>^ GlobalTempEffects
			{
				BSTArray<NiPointer<BSTempEffect^>^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property Mutex^ GlobalEffectsLock
			{
				Mutex^ __clrcall get();
			}

			property BSTArray<NiPointer<BSTempEffect^>^, BSTArrayHeapAllocator^>^ MagicEffects
			{
				BSTArray<NiPointer<BSTempEffect^>^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property Mutex^ MagicEffectsLock
			{
				Mutex^ __clrcall get();
			}

			property BSTArray<NiPointer<BSTempEffect^>^, BSTArrayHeapAllocator^>^ InterfaceEffects
			{
				BSTArray<NiPointer<BSTempEffect^>^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property Mutex^ InterfaceEffectsLock
			{
				Mutex^ __clrcall get();
			}

			property BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ TempShouldMovesObjectRefHandles
			{
				BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ InitPackageLocationsQueueActorRefHandles
			{
				BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property Mutex^ PackageLocationsQueueLock
			{
				Mutex^ __clrcall get();
			}

			property BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ InitAnimPositionQueueActorRefHandles
			{
				BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<BSTSmartPointer<SyncQueueObj^, BSTSmartPointerIntrusiveRefCount<SyncQueueObj^>^>^, BSTArrayHeapAllocator^>^ SyncPositionQueue
			{
				BSTArray<BSTSmartPointer<SyncQueueObj^, BSTSmartPointerIntrusiveRefCount<SyncQueueObj^>^>^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property System::Single PlayerActionCommentTimer
			{
				System::Single __clrcall get();
			}

			property System::Single PlayerKnockObjectCommentTimer
			{
				System::Single __clrcall get();
			}

			property System::UInt32 CurrentLowActor
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 CurrentMiddleHighActor
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 CurrentMiddleLowActor
			{
				System::UInt32 __clrcall get();
			}

			property System::Boolean RunSchedules
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean RunMovement
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean RunAnimations
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean UpdateActorsInPlayerCell
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Gets the process lists instance.
			/// </summary>
			static property ProcessLists^ Instance
			{
				ProcessLists^ __clrcall get()
				{
					return NetScriptFramework::MemoryObject::FromAddress<ProcessLists^>(NetScriptFramework::Memory::ReadPointer(__VIDS::VID514167.Value, false));
				}
			}
		};

		interface class BGSEncounterZone::EncounterZoneData : public NetScriptFramework::IMemoryObject
		{
		public:
			property TESFaction^ ZoneOwner
			{
				TESFaction^ __clrcall get();
			}

			property BGSLocation^ Location
			{
				BGSLocation^ __clrcall get();
			}

			property System::SByte OwnerRank
			{
				System::SByte __clrcall get();
			}

			property System::SByte MinLevel
			{
				System::SByte __clrcall get();
			}

			property BGSEncounterZone::EncounterZoneFlags Flags
			{
				BGSEncounterZone::EncounterZoneFlags __clrcall get();
			}

			property System::SByte MaxLevel
			{
				System::SByte __clrcall get();
			}
		};

		public interface class TESActorBaseData : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DataFlags : System::UInt32
			{
				None = 0,
				Female = 1,
				Essential = 2,
				IsChargenFacePreset = 4,
				Respawn = 8,
				AutoCalcStats = 0x10,
				Unique = 0x20,
				DoesntAffectStealthMeter = 0x40,
				PCLevelMult = 0x80,
				UsesTemplate = 0x100,
				Protected = 0x800,
				Summonable = 0x4000,
				DoesntBleed = 0x10000,
				BleedoutOverride = 0x40000,
				OppositeGenderanims = 0x80000,
				SimpleActor = 0x100000,
				LoopedScript = 0x200000,
				LoopedAudio = 0x10000000,
				IsGhost = 0x20000000,
				Invulnerable = 0x80000000,
			};

			enum class TemplateUseFlags : System::UInt16
			{
				None = 0,
				Traits = 1,
				Stats = 2,
				Factions = 4,
				Spells = 8,
				AIData = 0x10,
				AIPackages = 0x20,
				Unused = 0x40,
				BaseData = 0x80,
				Inventory = 0x100,
				Script = 0x200,
				AIDefPackList = 0x400,
				AttackData = 0x800,
				Keywords = 0x1000,
			};

			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESActorBaseData::DataFlags ActorBaseFlags
				{
					TESActorBaseData::DataFlags __clrcall get();
				}

				property System::Int16 MagickaOffset
				{
					System::Int16 __clrcall get();
				}

				property System::Int16 StaminaOffset
				{
					System::Int16 __clrcall get();
				}

				property System::UInt16 Level
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 CalcLevelMin
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 CalcLevelMax
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 SpeedMult
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 BaseDisposition
				{
					System::UInt16 __clrcall get();
				}

				property TESActorBaseData::TemplateUseFlags TemplateFlags
				{
					TESActorBaseData::TemplateUseFlags __clrcall get();
				}

				property System::Int16 HealthOffset
				{
					System::Int16 __clrcall get();
				}

				property System::Int16 BleedoutOverride
				{
					System::Int16 __clrcall get();
				}
			};

			property TESActorBaseData::Data^ ActorData
			{
				TESActorBaseData::Data^ __clrcall get();
			}

			property TESLevItem^ DeathItem
			{
				TESLevItem^ __clrcall get();
			}

			property BGSVoiceType^ VoiceType
			{
				BGSVoiceType^ __clrcall get();
			}

			property TESForm^ BaseTemplateForm
			{
				TESForm^ __clrcall get();
			}

			property System::IntPtr TemplateForms
			{
				System::IntPtr __clrcall get();
			}

			property BSTArray<ExtraFactionChanges::Data^, BSTArrayHeapAllocator^>^ Factions
			{
				BSTArray<ExtraFactionChanges::Data^, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		public interface class ExtraLocation : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BGSLocation^ Location
			{
				BGSLocation^ __clrcall get();
			}
		};

		public interface class ExtraPlayerCrimeList : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSSimpleList<Crime^>^ Crimes
			{
				BSSimpleList<Crime^>^ __clrcall get();
			}
		};

		public interface class ExtraStartingPosition : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property NiPoint3^ Position
				{
					NiPoint3^ __clrcall get();
				}

				property NiPoint3^ Rotation
				{
					NiPoint3^ __clrcall get();
				}
			};

			property ExtraStartingPosition::Data^ StartPosition
			{
				ExtraStartingPosition::Data^ __clrcall get();
			}

			property BGSLocation^ Location
			{
				BGSLocation^ __clrcall get();
			}
		};

		public interface class ActorTargetCheck : public ProcessLists::GetActorsFilter, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::ActorTargetCheck : public ProcessLists::GetActorsFilter, public NetScriptFramework::IVirtualObject { };

		interface class TargetLock::SetTargetLockFilter : public ProcessLists::GetActorsFilter, public NetScriptFramework::IVirtualObject { };

		interface class CRITICAL_SECTION;

		public interface class AbstractHeap : public IMemoryHeap, public NetScriptFramework::IVirtualObject
		{
		public:
			property CRITICAL_SECTION^ CriticalSection
			{
				CRITICAL_SECTION^ __clrcall get();
			}

			property System::String^ Name
			{
				System::String^ __clrcall get();
			}

			property System::UInt64 MinFreeBlockSize
			{
				System::UInt64 __clrcall get();
			}

			property System::Int32 PageSize
			{
				System::Int32 __clrcall get();
			}

			property System::UInt32 PageSizeFlag
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt64 MemHeapSize
			{
				System::UInt64 __clrcall get();
			}

			property System::UInt64 InitialSize
			{
				System::UInt64 __clrcall get();
			}

			property System::UInt64 CurrentSize
			{
				System::UInt64 __clrcall get();
			}

			property System::UInt64 WastedMemory
			{
				System::UInt64 __clrcall get();
			}

			property System::UInt64 MemAllocated
			{
				System::UInt64 __clrcall get();
			}

			property System::UInt64 MemAllocatedHigh
			{
				System::UInt64 __clrcall get();
			}

			property System::UInt64 BlockMemAllocated
			{
				System::UInt64 __clrcall get();
			}

			property System::IntPtr MemHeap
			{
				System::IntPtr __clrcall get();
			}

			property System::Int32 NumBlocks
			{
				System::Int32 __clrcall get();
			}

			property System::IntPtr BlockHead
			{
				System::IntPtr __clrcall get();
			}

			property System::IntPtr BlockTail
			{
				System::IntPtr __clrcall get();
			}

			property System::Int32 NumFreeBlocks
			{
				System::Int32 __clrcall get();
			}

			property System::Boolean AllowDecommits
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean SupportsSwapping
			{
				System::Boolean __clrcall get();
			}

			property System::IntPtr SmallFreeLists
			{
				System::IntPtr __clrcall get();
			}

			property System::IntPtr LargeFreeTrees
			{
				System::IntPtr __clrcall get();
			}
		};

		public interface class BSThread : public NetScriptFramework::IVirtualObject
		{
		public:
			property CRITICAL_SECTION^ Lock
			{
				CRITICAL_SECTION^ __clrcall get();
			}

			property System::IntPtr Thread
			{
				System::IntPtr __clrcall get();
			}

			property System::IntPtr OwnerThread
			{
				System::IntPtr __clrcall get();
			}

			property System::UInt32 ThreadId
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 OwnerThreadId
			{
				System::UInt32 __clrcall get();
			}

			property System::Boolean Initialized
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class NiSkinInstance : public NiObject, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPointer<NiSkinData^>^ SkinData
			{
				NiPointer<NiSkinData^>^ __clrcall get();
			}

			property NiPointer<NiSkinPartition^>^ SkinPartition
			{
				NiPointer<NiSkinPartition^>^ __clrcall get();
			}

			property NiAVObject^ RootParent
			{
				NiAVObject^ __clrcall get();
			}

			property System::IntPtr Bones
			{
				System::IntPtr __clrcall get();
			}

			property System::IntPtr BoneWorldTransforms
			{
				System::IntPtr __clrcall get();
			}

			property System::UInt32 FrameId
			{
				System::UInt32 __clrcall get();
			}

			property System::Int32 NumMatrices
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 NumRegisters
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 AllocatedSize
			{
				System::Int32 __clrcall get();
			}

			property System::IntPtr BoneMatrices
			{
				System::IntPtr __clrcall get();
			}

			property System::IntPtr PrevBoneMatrices
			{
				System::IntPtr __clrcall get();
			}

			property System::IntPtr SkinToWorldWorldToSkinMatrix
			{
				System::IntPtr __clrcall get();
			}

			property CRITICAL_SECTION^ Lock
			{
				CRITICAL_SECTION^ __clrcall get();
			}
		};

		public interface class BSSmallBlockAllocator : public IMemoryStore, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Pool : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::IntPtr PageList
				{
					System::IntPtr __clrcall get();
				}

				property System::IntPtr CurrAlloc
				{
					System::IntPtr __clrcall get();
				}

				property System::Int32 TotalFreeBlocks
				{
					System::Int32 __clrcall get();
				}

				property System::Int32 TotalAllocatedBlocks
				{
					System::Int32 __clrcall get();
				}

				property System::Int32 TotalBytes
				{
					System::Int32 __clrcall get();
				}

				property System::Int32 ElementSize
				{
					System::Int32 __clrcall get();
				}

				property CRITICAL_SECTION^ Lock
				{
					CRITICAL_SECTION^ __clrcall get();
				}
			};

			interface class BlockPageInternal : public NetScriptFramework::IMemoryObject
			{
			public:
				property BSSmallBlockAllocator::BlockPageInternal^ Left
				{
					BSSmallBlockAllocator::BlockPageInternal^ __clrcall get();
				}

				property BSSmallBlockAllocator::BlockPageInternal^ Right
				{
					BSSmallBlockAllocator::BlockPageInternal^ __clrcall get();
				}

				property System::IntPtr Blocks
				{
					System::IntPtr __clrcall get();
				}

				property System::UInt16 TotalElem
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 FreeElem
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 ElemSize
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 Check
				{
					System::UInt16 __clrcall get();
				}
			};

			interface class FreeBlock : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::IntPtr Next
				{
					System::IntPtr __clrcall get();
				}
			};

			interface class BlockPage : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::IntPtr Left
				{
					System::IntPtr __clrcall get();
				}

				property System::IntPtr Right
				{
					System::IntPtr __clrcall get();
				}

				property System::IntPtr Blocks
				{
					System::IntPtr __clrcall get();
				}

				property System::UInt16 TotalElem
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 FreeElem
				{
					System::UInt16 __clrcall get();
				}
			};

			interface class MegaBlockPage : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::IntPtr Mem
				{
					System::IntPtr __clrcall get();
				}

				property NetScriptFramework::FixedMemoryArray<BSSmallBlockAllocator::BlockPageInternal^>^ BlockPages
				{
					NetScriptFramework::FixedMemoryArray<BSSmallBlockAllocator::BlockPageInternal^>^ __clrcall get();
				}

				property BSSmallBlockAllocator::MegaBlockPage^ Left
				{
					BSSmallBlockAllocator::MegaBlockPage^ __clrcall get();
				}

				property BSSmallBlockAllocator::MegaBlockPage^ Right
				{
					BSSmallBlockAllocator::MegaBlockPage^ __clrcall get();
				}

				property System::IntPtr FreeBlockPages
				{
					System::IntPtr __clrcall get();
				}

				property System::UInt16 NumFreeBlockPages
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 NextBlockPageAlloc
				{
					System::UInt16 __clrcall get();
				}

				property System::Boolean Decommitted
				{
					System::Boolean __clrcall get();
				}
			};

			property NetScriptFramework::FixedMemoryArray<BSSmallBlockAllocator::Pool^>^ Pools
			{
				NetScriptFramework::FixedMemoryArray<BSSmallBlockAllocator::Pool^>^ __clrcall get();
			}

			property CRITICAL_SECTION^ Lock
			{
				CRITICAL_SECTION^ __clrcall get();
			}

			property System::UInt32 AddressSpaceSize
			{
				System::UInt32 __clrcall get();
			}

			property System::IntPtr AllocBase
			{
				System::IntPtr __clrcall get();
			}

			property System::IntPtr BlockPageCommitMin
			{
				System::IntPtr __clrcall get();
			}

			property System::IntPtr BlockPageCommit
			{
				System::IntPtr __clrcall get();
			}

			property BSSmallBlockAllocator::MegaBlockPage^ MegaBlockPageList
			{
				BSSmallBlockAllocator::MegaBlockPage^ __clrcall get();
			}

			property BSSmallBlockAllocator::MegaBlockPage^ MegaBlockCurrAlloc
			{
				BSSmallBlockAllocator::MegaBlockPage^ __clrcall get();
			}

			property System::UInt32 TotalFreeBlockPages
			{
				System::UInt32 __clrcall get();
			}

			property System::Boolean AllowDecommits
			{
				System::Boolean __clrcall get();
			}
		};

		interface class anonymous_namespace::LogWriteThread : public BSThread, public BSTSingletonImplicit1<anonymous_namespace::LogWriteThread^>, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::VMInitThread : public BSThread, public NetScriptFramework::IVirtualObject { };

		public interface class BSTaskThread : public BSThread, public NetScriptFramework::IVirtualObject { };

		interface class BGSSaveLoadManager::Thread : public BSThread, public NetScriptFramework::IVirtualObject { };

		public interface class BSAudioManagerThread : public BSThread, public NetScriptFramework::IVirtualObject { };

		public interface class BSDismemberSkinInstance : public NiSkinInstance, public NetScriptFramework::IVirtualObject { };

		interface class BSJobs::JobThread : public BSThread, public NetScriptFramework::IVirtualObject { };

		interface class BSResource::CacheDrive::Impl : public BSThread, public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

		public interface class BSStepThread : public BSThread, public NetScriptFramework::IVirtualObject { };

		interface class BSSystemMonitor::MemOpsThread : public BSThread, public NetScriptFramework::IVirtualObject { };

		interface class BSSystemMonitor::SocketThread : public BSThread, public NetScriptFramework::IVirtualObject { };

		interface class JobListManager::ServingThread : public BSThread, public BSTSingletonSDM<JobListManager::ServingThread^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class InitTESThread : public BSThread, public NetScriptFramework::IVirtualObject { };

		public interface class MemoryHeap : public AbstractHeap, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Boolean DeletingHeap
			{
				System::Boolean __clrcall get();
			}
		};

		/// <summary>
		/// Game's memory related functions.
		/// </summary>
		public interface class MemoryManager : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class ThreadScrapHeap : public NetScriptFramework::IMemoryObject
			{
			public:
				property ScrapHeap^ Heap
				{
					ScrapHeap^ __clrcall get();
				}

				property MemoryManager::ThreadScrapHeap^ Next
				{
					MemoryManager::ThreadScrapHeap^ __clrcall get();
				}

				property System::UInt32 OwningThreadId
				{
					System::UInt32 __clrcall get();
				}
			};

			property System::Boolean Initialized
			{
				System::Boolean __clrcall get();
			}

			property System::UInt16 NumHeaps
			{
				System::UInt16 __clrcall get();
			}

			property System::UInt16 NumPhysicalHeaps
			{
				System::UInt16 __clrcall get();
			}

			property System::IntPtr Heaps
			{
				System::IntPtr __clrcall get();
			}

			property System::IntPtr AllowOtherContextAllocs
			{
				System::IntPtr __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<IMemoryHeap^>^ HeapsByContext
			{
				NetScriptFramework::FixedMemoryArray<IMemoryHeap^>^ __clrcall get();
			}

			property MemoryManager::ThreadScrapHeap^ ThreadHeap
			{
				MemoryManager::ThreadScrapHeap^ __clrcall get();
			}

			property System::IntPtr PhysicalHeaps
			{
				System::IntPtr __clrcall get();
			}

			property IMemoryHeap^ BigAllocHeap
			{
				IMemoryHeap^ __clrcall get();
			}

			property IMemoryHeap^ EmergencyHeap
			{
				IMemoryHeap^ __clrcall get();
			}

			property BSSmallBlockAllocator^ SmallBlockAllocator
			{
				BSSmallBlockAllocator^ __clrcall get();
			}

			property CompactingStore::Store^ CompactStore
			{
				CompactingStore::Store^ __clrcall get();
			}

			property IMemoryHeap^ ExternalHavokAllocator
			{
				IMemoryHeap^ __clrcall get();
			}

			property System::Boolean SpecialHeaps
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean AllowPoolUse
			{
				System::Boolean __clrcall get();
			}

			property System::UInt32 SysAllocBytes
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 MallocBytes
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 AlignmentForPools
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 MainThreadMemoryProblemPassSignal
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt64 FailedAllocationSize
			{
				System::UInt64 __clrcall get();
			}

			property System::UInt32 NumMemoryProblemPassesRun
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt64 TimeOfLastMemoryProblemPass
			{
				System::UInt64 __clrcall get();
			}

			property IMemoryHeap^ DefaultHeap
			{
				IMemoryHeap^ __clrcall get();
			}

			static property MemoryManager^ Instance
			{
				MemoryManager^ __clrcall get()
				{
					return NetScriptFramework::MemoryObject::FromAddress<MemoryManager^>(__VIDS::VID514110.Value);
				}
			}

			/// <summary>
			/// Initializes this instance if it's not already initialized.
			/// </summary>
			static void Initialize()
			{
				if (NetScriptFramework::Memory::ReadInt32(__VIDS::VID514112.Value, false) == 2)
					return;

				NetScriptFramework::Memory::InvokeCdecl(__VIDS::VID66862.Value, __VIDS::VID514110.Value, __VIDS::VID514112.Value);
			}

			/// <summary>
			/// Determines whether the memory manager of game is initialized. It is still ok to use the memory related functions as we will initialize it ourself if it's not already.
			/// </summary>
			static System::Boolean IsInitialized()
			{
				return NetScriptFramework::Memory::ReadInt32(__VIDS::VID514112.Value, false) == 2;
			}

			/// <summary>
			/// Allocates the memory with specified size.
			/// </summary>
			/// <param name="size">The size.</param>
			/// <param name="align">The alignment.</param>
			static System::IntPtr Allocate(System::Int32 size, System::Int32 align)
			{
				if (size < 0)
					throw gcnew System::ArgumentOutOfRangeException("size", "Size of allocation can not be negative!");
				if (align < 0)
					throw gcnew System::ArgumentOutOfRangeException("align", "Alignment can not be negative!");

				Initialize();

				return NetScriptFramework::Memory::InvokeCdecl(__VIDS::VID66859.Value, __VIDS::VID514110.Value, size, align, align > 0 ? 1 : 0);
			}

			/// <summary>
			/// Frees the specified memory allocation.
			/// </summary>
			/// <param name="buf">The buffer returned from Allocate.</param>
			/// <param name="aligned">Was this allocated as aligned memory?</param>
			static void Free(System::IntPtr buf, System::Boolean aligned)
			{
				if (buf == System::IntPtr::Zero)
					throw gcnew System::ArgumentNullException("buf");

				Initialize();

				NetScriptFramework::Memory::InvokeCdecl(__VIDS::VID66861.Value, __VIDS::VID514110.Value, buf, aligned ? 1 : 0);
			}
		};

		public interface class BackgroundProcessThread : public BSTaskThread, public NetScriptFramework::IVirtualObject { };

		public interface class BSTaskManagerThread : public BSTaskThread, public NetScriptFramework::IVirtualObject { };

		public interface class UnitTestMemoryHeap : public MemoryHeap, public NetScriptFramework::IVirtualObject { };

		interface class TESNPC;

		public interface class TESFaction : public TESForm, public TESFullName, public TESReactionForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DataFlags : System::UInt32
			{
				None = 0,
				HiddenFromNPC = 1,
				SpecialCombat = 2,
				PlayerIsExpelled = 4,
				PlayerIsEnemy = 8,
				TrackCrime = 0x40,
				IgnoresCrimes_Murder = 0x80,
				IgnoresCrimes_Assult = 0x100,
				IgnoresCrimes_Stealing = 0x200,
				IngoresCrimes_Trespass = 0x400,
				DoNotReportCrimesAgainstMembers = 0x800,
				CrimeGold_UseDefaults = 0x1000,
				IgnoresCrimes_Pickpocket = 0x2000,
				Vendor = 0x4000,
				CanBeOwner = 0x8000,
				IgnoresCrimes_Werewolf = 0x10000,
			};

			interface class RankData : public NetScriptFramework::IMemoryObject
			{
			public:
				property BSFixedString^ MaleRankTitle
				{
					BSFixedString^ __clrcall get();
				}

				property BSFixedString^ FemaleRankTitle
				{
					BSFixedString^ __clrcall get();
				}

				property TESTexture^ TextureInsignia
				{
					TESTexture^ __clrcall get();
				}
			};

			interface class CrimeDataValues : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Boolean Arrest
				{
					System::Boolean __clrcall get();
				}

				property System::Boolean AttackOnSight
				{
					System::Boolean __clrcall get();
				}

				property System::UInt16 MurderCrimeGold
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 AssaultCrimeGold
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 TrespassCrimeGold
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 PickpocketCrimeGold
				{
					System::UInt16 __clrcall get();
				}

				property System::Single StealCrimeGoldMult
				{
					System::Single __clrcall get();
				}

				property System::UInt16 EscapeCrimeGold
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 WerewolfCrimeGold
				{
					System::UInt16 __clrcall get();
				}
			};

			interface class VendorDataValues : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::UInt16 StartHour
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 EndHour
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt32 LocationRadius
				{
					System::UInt32 __clrcall get();
				}

				property System::Boolean BuysStolen
				{
					System::Boolean __clrcall get();
				}

				property System::Boolean NotBuySell
				{
					System::Boolean __clrcall get();
				}

				property System::Boolean BuysNonStolen
				{
					System::Boolean __clrcall get();
				}
			};

			enum class ChangeFlags : System::UInt32
			{
				None = 0,
				FactionFlags = 2,
				FactionReactions = 4,
				FactionCrimeCounts = 0x80000000,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			interface class CrimeData : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESObjectREFR^ FactionJailMarker
				{
					TESObjectREFR^ __clrcall get();
				}

				property TESObjectREFR^ FactionWaitMarker
				{
					TESObjectREFR^ __clrcall get();
				}

				property TESObjectREFR^ FactionStolenContainer
				{
					TESObjectREFR^ __clrcall get();
				}

				property TESObjectREFR^ FactionPlayerInventoryContainer
				{
					TESObjectREFR^ __clrcall get();
				}

				property BGSListForm^ CrimeGroup
				{
					BGSListForm^ __clrcall get();
				}

				property BGSOutfit^ JailOutfit
				{
					BGSOutfit^ __clrcall get();
				}

				property TESFaction::CrimeDataValues^ CrimeValues
				{
					TESFaction::CrimeDataValues^ __clrcall get();
				}
			};

			interface class VendorData : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESFaction::VendorDataValues^ VendorValues
				{
					TESFaction::VendorDataValues^ __clrcall get();
				}

				property PackageLocation^ VendorLocation
				{
					PackageLocation^ __clrcall get();
				}

				property TESCondition^ VendorConditions
				{
					TESCondition^ __clrcall get();
				}

				property BGSListForm^ VendorSellBuyList
				{
					BGSListForm^ __clrcall get();
				}

				property TESObjectREFR^ MerchantContainer
				{
					TESObjectREFR^ __clrcall get();
				}

				property System::Int32 LastDayReset
				{
					System::Int32 __clrcall get();
				}
			};

			property BSTHashMap2<TESNPC^, System::UInt32>^ CrimeGoldMap
			{
				BSTHashMap2<TESNPC^, System::UInt32>^ __clrcall get();
			}

			property TESFaction::DataFlags FactionFlags
			{
				TESFaction::DataFlags __clrcall get();
			}

			property TESFaction::CrimeData^ CrimeSettings
			{
				TESFaction::CrimeData^ __clrcall get();
			}

			property TESFaction::VendorData^ VendorSettings
			{
				TESFaction::VendorData^ __clrcall get();
			}

			property BSSimpleList<TESFaction::RankData^>^ RankSettings
			{
				BSSimpleList<TESFaction::RankData^>^ __clrcall get();
			}

			property System::Int32 MajorCrime
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 MinorCrime
			{
				System::Int32 __clrcall get();
			}

			property AITimeStamp^ ResistArrestTimeStamp
			{
				AITimeStamp^ __clrcall get();
			}

			property System::Single PcEnemyFlagTimeStamp
			{
				System::Single __clrcall get();
			}
		};

		public interface class BGSRelationship : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RelationshipRankEnum : System::Byte
			{
				Lover = 0,
				Ally = 1,
				Confidant = 2,
				Friend = 3,
				Acquaintance = 4,
				Rival = 5,
				Foe = 6,
				Enemy = 7,
				Archnemesis = 8,
			};

			enum class RelationshipFlags : System::Byte
			{
				None = 0,
				Secret = 0x80,
			};

			enum class ChangeFlags : System::UInt32
			{
				RelationshipData = 2,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Secret = 0x40,
				Ignored = 0x1000,
			};

			property TESNPC^ FirstNPC
			{
				TESNPC^ __clrcall get();
			}

			property TESNPC^ SecondNPC
			{
				TESNPC^ __clrcall get();
			}

			property BGSAssociationType^ AssociationType
			{
				BGSAssociationType^ __clrcall get();
			}

			property BGSRelationship::RelationshipRankEnum Rank
			{
				BGSRelationship::RelationshipRankEnum __clrcall get();
			}

			property BGSRelationship::RelationshipFlags Flags
			{
				BGSRelationship::RelationshipFlags __clrcall get();
			}
		};

		interface class BGSRefAlias::UniqueActorFillType : public NetScriptFramework::IMemoryObject
		{
		public:
			property TESNPC^ UniqueActor
			{
				TESNPC^ __clrcall get();
			}
		};

		interface class TES::NPCDeadData : public NetScriptFramework::IMemoryObject
		{
		public:
			property TESNPC^ NPCBaseForm
			{
				TESNPC^ __clrcall get();
			}

			property System::UInt16 Count
			{
				System::UInt16 __clrcall get();
			}
		};

		interface class MagicItem;

		public interface class MagicCaster : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class PostCreationCallback;

			property BSTArray<BSSoundHandle^, BSTArrayHeapAllocator^>^ SoundHandles
			{
				BSTArray<BSSoundHandle^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property System::UInt32 DesiredTargetRefHandle
			{
				System::UInt32 __clrcall get();
			}

			/// <summary>
			/// Gets the item that is being cast now. This is null unless actively charging or casting.
			/// </summary>
			property MagicItem^ CastItem
			{
				MagicItem^ __clrcall get();
			}

			/// <summary>
			/// Gets the state of this cast.
			/// </summary>
			property MagicCastingStates State
			{
				MagicCastingStates __clrcall get();
			}

			/// <summary>
			/// Gets the timer in seconds. For charging state it's the time left in seconds until charge is complete and can be released. For concentration state it's the amount of time in seconds we have been channeling for.
			/// </summary>
			property System::Single Timer
			{
				System::Single __clrcall get();
			}

			/// <summary>
			/// Gets the cost of spell or the cost per second for concentration type spells. This is only valid while state is not none.
			/// </summary>
			property System::Single Cost
			{
				System::Single __clrcall get();
			}

			property System::Single MagnitudeOverride
			{
				System::Single __clrcall get();
			}

			property System::Single NextTargetUpdate
			{
				System::Single __clrcall get();
			}

			property System::Single ProjectileTimer
			{
				System::Single __clrcall get();
			}

			/// <summary>
			/// Interrupts the currently casting spell.
			/// </summary>
			void InterruptCast();
		};

		interface class anonymous_namespace::FavoriteSpellHandler : public anonymous_namespace::FavoriteItemHandler<MagicItem^, SpellAttack::Event^>, public NetScriptFramework::IVirtualObject { };

		public interface class TESObjectREFR : public TESForm, public BSHandleRefObject, public BSTEventSink<BSAnimationGraphEvent^>, public IAnimationGraphManagerHolder, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class ChangeFlags : System::UInt32
			{
				None = 0,
				Moved = 2,
				HavokMoved = 4,
				CellChanged = 8,
				Scale = 0x10,
				Inventory = 0x20,
				OwnershipExtra = 0x40,
				BaseObject = 0x80,
				ItemExtraData = 0x400,
				AmmoExtra = 0x800,
				LockExtra = 0x1000,
				Empty = 0x200000,
				OpenDefaultState = 0x400000,
				OpenState = 0x800000,
				Promoted = 0x2000000,
				ActivatingChildren = 0x4000000,
				LeveledInventory = 0x8000000,
				Animation = 0x10000000,
				EncZoneExtra = 0x20000000,
				CreatedOnlyExtra = 0x40000000,
				GameOnlyExtra = 0x80000000,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				HiddenFromLocalMap = 0x40,
				TurnOffFire = 0x80,
				MotionBlur = 0x200,
				Persistent = 0x400,
				InitiallyDisabled = 0x800,
				Ignored = 0x1000,
				IsFullLOD = 0x10000,
				NoAIAcquire = 0x2000000,
				CollisionGeometry_Filter = 0x4000000,
				CollisionGeometry_BoundingBox = 0x8000000,
				ReflectedByAutoWater = 0x10000000,
				DontHavokSettle = 0x20000000,
				Multibound = 0x80000000,
			};

			/// <summary>
			/// Gets the base form of this reference.
			/// </summary>
			property TESForm^ BaseForm
			{
				TESForm^ __clrcall get();
			}

			/// <summary>
			/// Gets the rotation of object.
			/// </summary>
			property NiPoint3^ Rotation
			{
				NiPoint3^ __clrcall get();
			}

			/// <summary>
			/// Gets the position of object reference.
			/// </summary>
			property NiPoint3^ Position
			{
				NiPoint3^ __clrcall get();
			}

			/// <summary>
			/// Gets the parent cell of this reference.
			/// </summary>
			property TESObjectCELL^ ParentCell
			{
				TESObjectCELL^ __clrcall get();
			}

			/// <summary>
			/// Gets the extra data of this reference.
			/// </summary>
			property BSExtraDataList^ ExtraDataList
			{
				BSExtraDataList^ __clrcall get();
			}

			property System::UInt16 RefScale
			{
				System::UInt16 __clrcall get();
			}

			property System::SByte ModelState
			{
				System::SByte __clrcall get();
			}

			property System::Boolean PreDestroyed
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Activate this object.
			/// </summary>
			/// <param name="activator">The object who is performing this activation.</param>
			/// <param name="skipEvents">Skip script processing and use default object activate processing only?</param>
			System::Boolean Activate(TESObjectREFR^ activator, System::Boolean skipEvents);

			/// <summary>
			/// Gets the current location of object.
			/// </summary>
			property BGSLocation^ CurrentLocation
			{
				BGSLocation^ __clrcall get();
			}

			/// <summary>
			/// Gets the extra data by type.
			/// </summary>
			/// <param name="type">The type of extra data.</param>
			BSExtraData^ GetExtraData(ExtraDataTypes type);

			/// <summary>
			/// Gets the magic caster component of object.
			/// </summary>
			/// <param name="slot">The slot. Only left, right, other are valid (other is voice slot).</param>
			MagicCaster^ GetMagicCaster(EquippedSpellSlots slot);

			/// <summary>
			/// Gets the root skeleton node.
			/// </summary>
			/// <param name="firstPerson">Get first person or third person skeleton?</param>
			NiNode^ GetSkeletonNode(System::Boolean firstPerson);

			/// <summary>
			/// Check if this object is capable of having objects in it as container.
			/// </summary>
			property System::Boolean HasInventory
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Gets the inventory of object. This may return null.
			/// </summary>
			property ExtraContainerChanges::Data^ Inventory
			{
				ExtraContainerChanges::Data^ __clrcall get();
			}

			/// <summary>
			/// Gets the root node of object. This is null if not loaded.
			/// </summary>
			property NiNode^ Node
			{
				NiNode^ __clrcall get();
			}

			/// <summary>
			/// Force open the inventory of this object. Does nothing if this object is not a container or actor. If type is set to Normal and this object is not an actor the type may be overwritten to steal if the player does not own the container!
			/// </summary>
			/// <param name="type">The type of opening. If type is set to Normal and this object is not an actor the type may be overwritten to steal if the player does not own the container!</param>
			void OpenInventory(ContainerOpenTypes type);

			/// <summary>
			/// Sets the animation graph variable and returns if successful. If false is returned it's most likely the variable was not found in the animation graph.
			/// </summary>
			/// <param name="name">The variable name.</param>
			/// <param name="value">The value to set.</param>
			System::Boolean SetAnimationVariableBool(System::String^ name, System::Boolean value);

			/// <summary>
			/// Translates to specified position and rotation at given speed.
			/// </summary>
			/// <param name="x">The X coordinate where to translate to.</param>
			/// <param name="y">The Y coordinate where to translate to.</param>
			/// <param name="z">The Z coordinate where to translate to.</param>
			/// <param name="angleX">The X angle where to translate to. This is in degrees.</param>
			/// <param name="angleY">The Y angle where to translate to. This is in degrees.</param>
			/// <param name="angleZ">The Z angle where to translate to. This is in degrees.</param>
			/// <param name="moveSpeed">The speed at which to move. This is units per seconds.</param>
			/// <param name="rotateSpeed">The speed at which to rotate. Zero means rotate by the time translation finishes.</param>
			System::Boolean TranslateTo(System::Single x, System::Single y, System::Single z, System::Single angleX, System::Single angleY, System::Single angleZ, System::Single moveSpeed, System::Single rotateSpeed);

			/// <summary>
			/// Casts a spell from this object reference.
			/// </summary>
			/// <param name="spell">The spell to cast.</param>
			/// <param name="target">The target to cast at.</param>
			/// <param name="blame">The actor who will receive blame. This is optional and may be null.</param>
			System::Boolean CastSpell(MagicItem^ spell, TESObjectREFR^ target, Actor^ blame);

			/// <summary>
			/// Gets the lock data.
			/// </summary>
			/// <param name="allowTeleportTargetLockData">Get teleport target lock data if missing? This can be useful for doors. You should set this true unless you only want current object's own lock.</param>
			ExtraLock^ GetLockData(System::Boolean allowTeleportTargetLockData);

			/// <summary>
			/// Plays a shader effect on this object.
			/// </summary>
			/// <param name="effect">The effect to play.</param>
			/// <param name="duration">The duration to play. Set negative for infinite.</param>
			void PlayEffect(TESEffectShader^ effect, System::Single duration);

			/// <summary>
			/// Stops an effect on this object.
			/// </summary>
			/// <param name="effect">The effect to stop.</param>
			void StopEffect(TESEffectShader^ effect);
		};

		public interface class ExtraMagicCaster : public BSExtraData, public MagicCaster, public NetScriptFramework::IVirtualObject { };

		public interface class Explosion : public TESObjectREFR, public NetScriptFramework::IVirtualObject { };

		public interface class NonActorMagicCaster : public ExtraMagicCaster, public NetScriptFramework::IVirtualObject { };

		public interface class ChainExplosion : public Explosion, public BSTEventSink<BeamProjectileImpactEvent^>, public NetScriptFramework::IVirtualObject { };

		interface class ActiveEffect;

		public interface class ActiveEffectReferenceEffectController : public ReferenceEffectController, public NetScriptFramework::IVirtualObject
		{
		public:
			property ActiveEffect^ Effect
			{
				ActiveEffect^ __clrcall get();
			}

			property System::UInt32 TargetRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property NiPoint3^ WindPoint
			{
				NiPoint3^ __clrcall get();
			}
		};

		public interface class CommandedActorData : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::UInt32 CommandedActorRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property ActiveEffect^ Effect
			{
				ActiveEffect^ __clrcall get();
			}
		};

		generic <typename hkMapBase_T1, typename hkMapBase_T2, typename hkMapBase_T3>
		interface class hkMapBase;

		public interface class hkPooledAllocator : public hkMemoryAllocator, public NetScriptFramework::IVirtualObject { };

		public interface class hkTempDetectAllocator : public hkMemoryAllocator, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class AllocInfo : public NetScriptFramework::IMemoryObject { };

			interface class SizeInfo : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkCheckingMemorySystem : public hkMemorySystem, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class CheckBits : System::Int32
			{
				CHECK_NONE = 0,
				CHECK_LEAKS = 2,
				CHECK_CALLSTACK = 4,
				CHECK_PAD_BLOCK = 8,
				CHECK_DELAYED_FREE = 0x10,
				CHECK_DEFAULT = 0x1E,
			};

			enum class AllocatorBits : System::Int32
			{
				ALLOCATOR_INVALID = 0,
				ALLOCATOR_HEAP = 1,
				ALLOCATOR_TEMP = 2,
				ALLOCATOR_SOLVER = 4,
				ALLOCATOR_MAX = 5,
			};

			interface class AllocInfo : public NetScriptFramework::IMemoryObject { };

			interface class AllocationContext : public NetScriptFramework::IMemoryObject { };

			interface class AllocatorForwarder : public hkMemoryAllocator, public NetScriptFramework::IVirtualObject { };
		};

		interface class hkLeakDetectAllocator::Dynamic : public NetScriptFramework::IMemoryObject { };

		public interface class hkOptimizerMemorySystem : public hkMemorySystem, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DetectBits : System::Int32
			{
				DETECT_NONE = 0,
				DETECT_TEMP = 1,
				DETECT_LIFO = 2,
				DETECT_ALL = 3,
			};

			interface class LifoCheckAllocator : public hkMemoryAllocator, public NetScriptFramework::IVirtualObject { };

			interface class ThreadData : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		interface class BGSExplosion;

		public interface class EffectSetting : public TESForm, public TESFullName, public BGSMenuDisplayObject, public BGSKeywordForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			interface class SoundPair : public NetScriptFramework::IMemoryObject
			{
			public:
				property MagicSoundTypes Type
				{
					MagicSoundTypes __clrcall get();
				}

				property BGSSoundDescriptorForm^ Sound
				{
					BGSSoundDescriptorForm^ __clrcall get();
				}
			};

			property System::IntPtr FilterValidationFunction
			{
				System::IntPtr __clrcall get();
			}

			property System::IntPtr FilterValidationItem
			{
				System::IntPtr __clrcall get();
			}

			/// <summary>
			/// Gets or sets the effect flags.
			/// </summary>
			property EffectSettingFlags EffectFlags
			{
				EffectSettingFlags __clrcall get();

				void __clrcall set(EffectSettingFlags value);
			}

			/// <summary>
			/// Gets or sets the base cost.
			/// </summary>
			property System::Single BaseCost
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}

			property TESForm^ AssociatedForm
			{
				TESForm^ __clrcall get();
			}

			/// <summary>
			/// Gets or sets the skill of this effect.
			/// </summary>
			property ActorValueIndices AssociatedSkill
			{
				ActorValueIndices __clrcall get();

				void __clrcall set(ActorValueIndices value);
			}

			property ActorValueIndices ResistVariable
			{
				ActorValueIndices __clrcall get();
			}

			property System::Int16 NumCounterEffects
			{
				System::Int16 __clrcall get();
			}

			/// <summary>
			/// Gets or sets the casting light.
			/// </summary>
			property TESObjectLIGH^ CastingLight
			{
				TESObjectLIGH^ __clrcall get();

				void __clrcall set(TESObjectLIGH^ value);
			}

			/// <summary>
			/// Gets or sets the taper weight.
			/// </summary>
			property System::Single TaperWeight
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}

			/// <summary>
			/// Gets or sets the hit shader.
			/// </summary>
			property TESEffectShader^ HitShader
			{
				TESEffectShader^ __clrcall get();

				void __clrcall set(TESEffectShader^ value);
			}

			/// <summary>
			/// Gets or sets the enchant shader.
			/// </summary>
			property TESEffectShader^ EnchantShader
			{
				TESEffectShader^ __clrcall get();

				void __clrcall set(TESEffectShader^ value);
			}

			property System::Int32 MinimumSkill
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 SpellmakingArea
			{
				System::Int32 __clrcall get();
			}

			property System::Single SpellmakingChargeTime
			{
				System::Single __clrcall get();
			}

			property System::Single TaperCurve
			{
				System::Single __clrcall get();
			}

			property System::Single TaperDuration
			{
				System::Single __clrcall get();
			}

			property System::Single SecondaryActorValueWeight
			{
				System::Single __clrcall get();
			}

			/// <summary>
			/// Gets the archetype of effect.
			/// </summary>
			property Archetypes Archetype
			{
				Archetypes __clrcall get();
			}

			/// <summary>
			/// Gets or sets the actor value associated with effect.
			/// </summary>
			property ActorValueIndices PrimaryActorValue
			{
				ActorValueIndices __clrcall get();

				void __clrcall set(ActorValueIndices value);
			}

			/// <summary>
			/// Gets or sets the magic projectile.
			/// </summary>
			property BGSProjectile^ MagicProjectile
			{
				BGSProjectile^ __clrcall get();

				void __clrcall set(BGSProjectile^ value);
			}

			property BGSExplosion^ Explosion
			{
				BGSExplosion^ __clrcall get();
			}

			/// <summary>
			/// Gets or sets the casting type.
			/// </summary>
			property EffectSettingCastingTypes CastingType
			{
				EffectSettingCastingTypes __clrcall get();

				void __clrcall set(EffectSettingCastingTypes value);
			}

			/// <summary>
			/// Gets or sets the delivery (target type).
			/// </summary>
			property EffectSettingTargetTypes Delivery
			{
				EffectSettingTargetTypes __clrcall get();

				void __clrcall set(EffectSettingTargetTypes value);
			}

			/// <summary>
			/// Gets or sets the second actor value.
			/// </summary>
			property ActorValueIndices SecondaryActorValue
			{
				ActorValueIndices __clrcall get();

				void __clrcall set(ActorValueIndices value);
			}

			/// <summary>
			/// Gets or sets the casting art.
			/// </summary>
			property BGSArtObject^ CastingArt
			{
				BGSArtObject^ __clrcall get();

				void __clrcall set(BGSArtObject^ value);
			}

			/// <summary>
			/// Gets or sets the hit effect art.
			/// </summary>
			property BGSArtObject^ HitEffectArt
			{
				BGSArtObject^ __clrcall get();

				void __clrcall set(BGSArtObject^ value);
			}

			/// <summary>
			/// Gets or sets the impact data.
			/// </summary>
			property BGSImpactDataSet^ ImpactData
			{
				BGSImpactDataSet^ __clrcall get();

				void __clrcall set(BGSImpactDataSet^ value);
			}

			/// <summary>
			/// Gets or sets the skill usage multiplier.
			/// </summary>
			property System::Single SkillUsageMultiplier
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}

			/// <summary>
			/// Gets or sets the dual casting art.
			/// </summary>
			property BGSArtObject^ DualCastingArt
			{
				BGSArtObject^ __clrcall get();

				void __clrcall set(BGSArtObject^ value);
			}

			/// <summary>
			/// Gets or sets the dual casting scale.
			/// </summary>
			property System::Single DualCastingScale
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}

			property BGSArtObject^ EnchantEffectArt
			{
				BGSArtObject^ __clrcall get();
			}

			property BGSReferenceEffect^ HitVisuals
			{
				BGSReferenceEffect^ __clrcall get();
			}

			property BGSReferenceEffect^ EnchantVisuals
			{
				BGSReferenceEffect^ __clrcall get();
			}

			property SpellItem^ EquipAbility
			{
				SpellItem^ __clrcall get();
			}

			property TESImageSpaceModifier^ ImageSpaceModifier
			{
				TESImageSpaceModifier^ __clrcall get();
			}

			property BGSPerk^ Perk
			{
				BGSPerk^ __clrcall get();
			}

			property SoundLevels CastingSoundLevel
			{
				SoundLevels __clrcall get();
			}

			property System::Single AiScore
			{
				System::Single __clrcall get();
			}

			property System::Single AiDelayTimer
			{
				System::Single __clrcall get();
			}

			property BSSimpleList<EffectSetting^>^ CounterEffects
			{
				BSSimpleList<EffectSetting^>^ __clrcall get();
			}

			property BSTArray<unknown^, BSTArrayHeapAllocator^>^ EffectSounds
			{
				BSTArray<unknown^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSFixedString^ MagicItemDescription
			{
				BSFixedString^ __clrcall get();
			}

			property System::Int32 EffectLoadedCount
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 AssociatedItemLoadedCount
			{
				System::Int32 __clrcall get();
			}

			property TESCondition^ Conditions
			{
				TESCondition^ __clrcall get();
			}
		};

		public interface class BGSDualCastDataDEF : public NetScriptFramework::IMemoryObject
		{
		public:
			property BGSProjectile^ PProjectile
			{
				BGSProjectile^ __clrcall get();
			}

			property BGSExplosion^ PExplosion
			{
				BGSExplosion^ __clrcall get();
			}

			property TESEffectShader^ PEffectShader
			{
				TESEffectShader^ __clrcall get();
			}

			property BGSArtObject^ PHitEffectArt
			{
				BGSArtObject^ __clrcall get();
			}

			property BGSImpactDataSet^ PImpactDataSet
			{
				BGSImpactDataSet^ __clrcall get();
			}

			property BGSDualCastDataFlags Flags
			{
				BGSDualCastDataFlags __clrcall get();
			}
		};

		interface class BGSDestructibleObjectForm::DestructibleObjectStage : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::SByte ModelDamageStage
			{
				System::SByte __clrcall get();
			}

			property System::SByte HealthPercentage
			{
				System::SByte __clrcall get();
			}

			property BGSDestructibleObjectForm::DestructibleObjectStageFlags Flags
			{
				BGSDestructibleObjectForm::DestructibleObjectStageFlags __clrcall get();
			}

			property System::Int32 SelfDamagePerSecond
			{
				System::Int32 __clrcall get();
			}

			property BGSExplosion^ Explosion
			{
				BGSExplosion^ __clrcall get();
			}

			property BGSDebris^ Debris
			{
				BGSDebris^ __clrcall get();
			}

			property System::Int32 DebrisCount
			{
				System::Int32 __clrcall get();
			}

			property TESModelTextureSwap^ ReplacementModel
			{
				TESModelTextureSwap^ __clrcall get();
			}
		};

		public interface class MagicTarget : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class SpellDispelData : public NetScriptFramework::IMemoryObject
			{
			public:
				property MagicItem^ Spell
				{
					MagicItem^ __clrcall get();
				}

				property System::UInt32 CasterRefHandle
				{
					System::UInt32 __clrcall get();
				}

				property BSTSmartPointer<ActiveEffect^, BSTSmartPointerIntrusiveRefCount<ActiveEffect^>^>^ Effect
				{
					BSTSmartPointer<ActiveEffect^, BSTSmartPointerIntrusiveRefCount<ActiveEffect^>^>^ __clrcall get();
				}

				property MagicTarget::SpellDispelData^ Next
				{
					MagicTarget::SpellDispelData^ __clrcall get();
				}
			};

			interface class ForEachActiveEffectVisitor : public NetScriptFramework::IVirtualObject { };

			interface class IPostCreationModification : public NetScriptFramework::IVirtualObject { };

			interface class DispelFromBoundObject : public MagicTarget::ForEachActiveEffectVisitor, public NetScriptFramework::IVirtualObject { };

			property MagicTarget::SpellDispelData^ PostUpdateDispelList
			{
				MagicTarget::SpellDispelData^ __clrcall get();
			}

			property System::Byte MagicTargetFlags
			{
				System::Byte __clrcall get();
			}

			/// <summary>
			/// Gets the active magic effects list.
			/// </summary>
			property BSSimpleList<ActiveEffect^>^ ActiveEffects
			{
				BSSimpleList<ActiveEffect^>^ __clrcall get();
			}

			/// <summary>
			/// Dispels all effects with specified archetype.
			/// </summary>
			/// <param name="archetype">The effect types to remove.</param>
			/// <param name="onlyFromCaster">Only remove effects whose caster is this object. If this is null then remove all effects of this archetype.</param>
			void DispelEffectsWithArchetype(Archetypes archetype, TESObjectREFR^ onlyFromCaster);

			/// <summary>
			/// Finds the first effect that matches archetype.
			/// </summary>
			/// <param name="archetype">The archetype to search for.</param>
			/// <param name="allowInactive">Allow effect to have inactive flag?</param>
			ActiveEffect^ FindFirstEffectWithArchetype(Archetypes archetype, System::Boolean allowInactive);

			/// <summary>
			/// Check if this target has a magic effect.
			/// </summary>
			/// <param name="effect">The effect to search.</param>
			System::Boolean HasMagicEffect(EffectSetting^ effect);

			/// <summary>
			/// Check if this owner has any magic effects that deal damage.
			/// </summary>
			System::Boolean HasMagicEffectThatCausesDamage();

			/// <summary>
			/// Check if target has magic effect with the specified keyword.
			/// </summary>
			/// <param name="keyword">The keyword to check.</param>
			/// <param name="item">If a magic effect is found the item where it came from will be set here. If multiple magic effects with the specified keyword then only the first item will be returned.</param>
			System::Boolean HasMagicEffectWithKeyword(BGSKeyword^ keyword, MagicItem^% item);

			/// <summary>
			/// Check if target has magic effect with the specified keyword.
			/// </summary>
			/// <param name="keyword">The keyword name to check.</param>
			/// <param name="item">If a magic effect is found the item where it came from will be set here. If multiple magic effects with the specified keyword then only the first item will be returned.</param>
			System::Boolean HasMagicEffectWithKeywordText(System::String^ keyword, MagicItem^% item);
		};

		public interface class BGSDualCastData : public TESBoundObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property BGSDualCastDataDEF^ DualCastData
			{
				BGSDualCastDataDEF^ __clrcall get();
			}
		};

		/// <summary>
		/// Magic effect instance.
		/// </summary>
		public interface class ActiveEffect : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class EffectItem : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Single Magnitude
				{
					System::Single __clrcall get();

					void __clrcall set(System::Single value);
				}

				property System::Int32 Area
				{
					System::Int32 __clrcall get();

					void __clrcall set(System::Int32 value);
				}

				property System::Int32 Duration
				{
					System::Int32 __clrcall get();

					void __clrcall set(System::Int32 value);
				}

				property EffectSetting^ Effect
				{
					EffectSetting^ __clrcall get();

					void __clrcall set(EffectSetting^ value);
				}

				property System::Single Cost
				{
					System::Single __clrcall get();

					void __clrcall set(System::Single value);
				}

				property TESCondition^ Conditions
				{
					TESCondition^ __clrcall get();
				}
			};

			interface class ForEachHitEffectVisitor : public NetScriptFramework::IVirtualObject { };

			property ActiveEffectReferenceEffectController^ HitEffectController
			{
				ActiveEffectReferenceEffectController^ __clrcall get();
			}

			property BSSoundHandle^ PersistentSound
			{
				BSSoundHandle^ __clrcall get();
			}

			property NiPointer<NiNode^>^ SourceNode
			{
				NiPointer<NiNode^>^ __clrcall get();
			}

			property MagicItem^ Item
			{
				MagicItem^ __clrcall get();
			}

			property ActiveEffect::EffectItem^ EffectData
			{
				ActiveEffect::EffectItem^ __clrcall get();
			}

			property TESBoundObject^ Source
			{
				TESBoundObject^ __clrcall get();
			}

			property BSSimpleList<ReferenceEffect^>^ HitEffects
			{
				BSSimpleList<ReferenceEffect^>^ __clrcall get();
			}

			property MagicItem^ DisplacementItem
			{
				MagicItem^ __clrcall get();
			}

			property System::Single ElapsedSeconds
			{
				System::Single __clrcall get();
			}

			property System::Single Duration
			{
				System::Single __clrcall get();
			}

			property System::Single Magnitude
			{
				System::Single __clrcall get();
			}

			property System::Int32 ConditionStatus
			{
				System::Int32 __clrcall get();
			}

			property System::UInt16 UniqueId
			{
				System::UInt16 __clrcall get();
			}

			property EquippedSpellSlots CastSource
			{
				EquippedSpellSlots __clrcall get();
			}

			/// <summary>
			/// Gets the base effect that this instance is created from.
			/// </summary>
			property EffectSetting^ BaseEffect
			{
				EffectSetting^ __clrcall get();
			}

			/// <summary>
			/// Gets the caster actor.
			/// </summary>
			property Actor^ Caster
			{
				Actor^ __clrcall get();
			}

			/// <summary>
			/// Dispel (remove) this effect.
			/// </summary>
			void Dispel();

			/// <summary>
			/// Check if effect is marked as inactive.
			/// </summary>
			property System::Boolean IsInactive
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Gets the target of effect.
			/// </summary>
			property Actor^ Target
			{
				Actor^ __clrcall get();
			}
		};

		interface class anonymous_namespace::CanCastWornEnchantmentVisitor : public MagicTarget::ForEachActiveEffectVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::CheckSummonedActorEffect : public MagicTarget::ForEachActiveEffectVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::CloakEffectCallbackFunctor : public MagicTarget::IPostCreationModification, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::CollectUsedUniqueIDsFunctor : public MagicTarget::ForEachActiveEffectVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::CountActorValueEffects : public MagicTarget::ForEachActiveEffectVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::DispelAppropriateEffectsVisitor : public MagicTarget::ForEachActiveEffectVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::DispelEffectFunctor : public MagicTarget::ForEachActiveEffectVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::FindAppropriateDisplaceEffect : public MagicTarget::ForEachActiveEffectVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::HasSameUsageEffect : public MagicTarget::ForEachActiveEffectVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::MagicCastOnTarget : public MagicTarget::ForEachActiveEffectVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::MagicMenuAddActiveEffectVisitor : public MagicTarget::ForEachActiveEffectVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::PrintPapyrusObjectsOnMagicEffectToConsole : public MagicTarget::ForEachActiveEffectVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::ResetElapsedTimeMatchingEffects : public MagicTarget::ForEachActiveEffectVisitor, public NetScriptFramework::IVirtualObject { };

		public interface class EffectsCausingDamageFunctor : public MagicTarget::ForEachActiveEffectVisitor, public NetScriptFramework::IVirtualObject { };

		public interface class FindActiveEffectByIDFunctor : public MagicTarget::ForEachActiveEffectVisitor, public NetScriptFramework::IVirtualObject { };

		public interface class FindEffectKeywordOnTargetFunctor : public MagicTarget::ForEachActiveEffectVisitor, public MagicItemFindKeywordFunctor, public NetScriptFramework::IVirtualObject { };

		public interface class FindMaxMagnitudeVisitor : public MagicTarget::ForEachActiveEffectVisitor, public NetScriptFramework::IVirtualObject { };

		public interface class FinishActiveEffectVisitor : public MagicTarget::ForEachActiveEffectVisitor, public NetScriptFramework::IVirtualObject { };

		public interface class HoldWardSpellsActiveEffectVisitor : public MagicTarget::ForEachActiveEffectVisitor, public NetScriptFramework::IVirtualObject { };

		public interface class IsSpellTargetFunctor : public MagicTarget::ForEachActiveEffectVisitor, public NetScriptFramework::IVirtualObject { };

		public interface class IsSpellTypeTargetFunctor : public MagicTarget::ForEachActiveEffectVisitor, public NetScriptFramework::IVirtualObject { };

		public interface class KeywordDispelFunctor : public MagicTarget::ForEachActiveEffectVisitor, public NetScriptFramework::IVirtualObject { };

		interface class MagicCaster::PostCreationCallback : public MagicTarget::IPostCreationModification, public NetScriptFramework::IVirtualObject { };

		public interface class NonActorMagicTarget : public BSExtraData, public MagicTarget, public NetScriptFramework::IVirtualObject
		{
		public:
			property TESObjectREFR^ TargetObject
			{
				TESObjectREFR^ __clrcall get();
			}

			property BSSimpleList<ActiveEffect^>^ ActiveEffects
			{
				BSSimpleList<ActiveEffect^>^ __clrcall get();
			}
		};

		interface class SkyrimScript::anonymous_namespace::FindActiveEffectFunctor : public MagicTarget::ForEachActiveEffectVisitor, public NetScriptFramework::IVirtualObject { };

		interface class SkyrimVM::EffectEventRelayFunctor : public MagicTarget::ForEachActiveEffectVisitor, public NetScriptFramework::IVirtualObject { };

		interface class StartSpellHelpers::EffectGatherFunctor : public MagicTarget::ForEachActiveEffectVisitor, public NetScriptFramework::IVirtualObject { };

		public interface class ValueModifierEffect : public ActiveEffect, public NetScriptFramework::IVirtualObject
		{
		public:
			property ActorValueIndices ActorValue
			{
				ActorValueIndices __clrcall get();
			}
		};

		public interface class MagicItem : public TESBoundObject, public TESFullName, public BGSKeywordForm, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class PreloadableVisitor : public NetScriptFramework::IVirtualObject { };

			interface class SkillUsageData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::IntPtr Effect
				{
					System::IntPtr __clrcall get();
				}

				property ActorValueIndices Skill
				{
					ActorValueIndices __clrcall get();
				}

				property System::Single Magnitude
				{
					System::Single __clrcall get();
				}

				property System::Boolean Custom
				{
					System::Boolean __clrcall get();
				}
			};

			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Int32 CostOverride
				{
					System::Int32 __clrcall get();
				}

				property System::UInt32 Flags
				{
					System::UInt32 __clrcall get();
				}
			};

			property BSTArray<ActiveEffect::EffectItem^, BSTArrayHeapAllocator^>^ Effects
			{
				BSTArray<ActiveEffect::EffectItem^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property System::Int32 HostileCount
			{
				System::Int32 __clrcall get();
			}

			property EffectSetting^ AVEffectSetting
			{
				EffectSetting^ __clrcall get();
			}

			property System::Int32 PreloadCount
			{
				System::Int32 __clrcall get();
			}

			property BSTSmartPointer<QueuedFile^, BSTSmartPointerIntrusiveRefCount<QueuedFile^>^>^ PreloadedItem
			{
				BSTSmartPointer<QueuedFile^, BSTSmartPointerIntrusiveRefCount<QueuedFile^>^>^ __clrcall get();
			}
		};

		interface class anonymous_namespace::AttachLightHitEffectVisitor : public ActiveEffect::ForEachHitEffectVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::StopHitEffectsVisitor : public ActiveEffect::ForEachHitEffectVisitor, public NetScriptFramework::IVirtualObject { };

		public interface class BoundItemEffect : public ActiveEffect, public BSTEventSink<ActorInventoryEvent^>, public NetScriptFramework::IVirtualObject { };

		public interface class CloakEffect : public ActiveEffect, public NetScriptFramework::IVirtualObject { };

		public interface class CommandEffect : public ActiveEffect, public NetScriptFramework::IVirtualObject { };

		public interface class CommandSummonedEffect : public ActiveEffect, public NetScriptFramework::IVirtualObject { };

		public interface class ConcussionEffect : public ActiveEffect, public NetScriptFramework::IVirtualObject { };

		public interface class CureEffect : public ActiveEffect, public NetScriptFramework::IVirtualObject { };

		public interface class DetectLifeEffect : public ActiveEffect, public NetScriptFramework::IVirtualObject { };

		public interface class StaggerEffect : public ActiveEffect, public NetScriptFramework::IVirtualObject { };

		public interface class DisguiseEffect : public ActiveEffect, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DetectionChecker : public DetectionCollector, public NetScriptFramework::IVirtualObject { };
		};

		public interface class DispelEffect : public ActiveEffect, public NetScriptFramework::IVirtualObject { };

		public interface class EtherealizationEffect : public ActiveEffect, public NetScriptFramework::IVirtualObject { };

		public interface class GuideEffect : public ActiveEffect, public NetScriptFramework::IVirtualObject { };

		public interface class LightEffect : public ActiveEffect, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class AttachBestLightVisitor : public MagicTarget::ForEachActiveEffectVisitor, public NetScriptFramework::IVirtualObject { };
		};

		public interface class LockEffect : public ActiveEffect, public NetScriptFramework::IVirtualObject { };

		public interface class OpenEffect : public ActiveEffect, public NetScriptFramework::IVirtualObject { };

		public interface class ScriptEffect : public ActiveEffect, public NetScriptFramework::IVirtualObject { };

		public interface class SoulTrapEffect : public ActiveEffect, public NetScriptFramework::IVirtualObject { };

		public interface class SpawnHazardEffect : public ActiveEffect, public NetScriptFramework::IVirtualObject { };

		interface class StartSpellHelpers::DoneEffectGatherFunctor : public StartSpellHelpers::EffectGatherFunctor, public NetScriptFramework::IVirtualObject { };

		interface class StartSpellHelpers::SpellEffectGatherFunctor : public StartSpellHelpers::EffectGatherFunctor, public NetScriptFramework::IVirtualObject { };

		public interface class SummonCreatureEffect : public ActiveEffect, public NetScriptFramework::IVirtualObject { };

		public interface class TelekinesisEffect : public ActiveEffect, public NetScriptFramework::IVirtualObject { };

		public interface class VampireLordEffect : public ActiveEffect, public NetScriptFramework::IVirtualObject { };

		public interface class WerewolfEffect : public ActiveEffect, public NetScriptFramework::IVirtualObject { };

		public interface class WerewolfFeedEffect : public ActiveEffect, public NetScriptFramework::IVirtualObject { };

		public interface class AbsorbEffect : public ValueModifierEffect, public NetScriptFramework::IVirtualObject { };

		public interface class AccumulatingValueModifierEffect : public ValueModifierEffect, public NetScriptFramework::IVirtualObject { };

		public interface class SpellItem : public MagicItem, public BGSEquipType, public BGSMenuDisplayObject, public TESDescription, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class SpellFlags : System::UInt32
			{
				None = 0,
				CostOverride = 1,
				FoodItem = 2,
				ExtendDuration = 8,
				PCStartSpell = 0x20000,
				InstantCast = 0x40000,
				IgnoreLOSCheck = 0x80000,
				IgnoreResistance = 0x100000,
				NoAbsorb = 0x200000,
				NoDualCastMods = 0x800000,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Int32 CostOverride
				{
					System::Int32 __clrcall get();
				}

				property SpellItem::SpellFlags SpellItemFlags
				{
					SpellItem::SpellFlags __clrcall get();
				}

				property SpellTypes SpellType
				{
					SpellTypes __clrcall get();
				}

				property System::Single ChargeTime
				{
					System::Single __clrcall get();
				}

				property EffectSettingCastingTypes CastingType
				{
					EffectSettingCastingTypes __clrcall get();
				}

				property EffectSettingTargetTypes Delivery
				{
					EffectSettingTargetTypes __clrcall get();
				}

				property System::Single CastDuration
				{
					System::Single __clrcall get();
				}

				property System::Single Range
				{
					System::Single __clrcall get();
				}

				property BGSPerk^ CastingPerk
				{
					BGSPerk^ __clrcall get();
				}
			};

			property SpellItem::Data^ SpellData
			{
				SpellItem::Data^ __clrcall get();
			}
		};

		public interface class AlchemyItem : public MagicItem, public TESModelTextureSwap, public TESIcon, public BGSMessageIcon, public TESWeightForm, public BGSEquipType, public BGSDestructibleObjectForm, public BGSPickupPutdownSounds, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class AlchemyItemFlags : System::UInt32
			{
				None = 0,
				CostOverride = 1,
				FoodItem = 2,
				ExtendDuration = 8,
				Medicine = 0x10000,
				Poison = 0x20000,
			};

			enum class RecordFlags : System::UInt32
			{
				Deleted = 0x20,
				Ignored = 0x1000,
				Medicine = 0x20000000,
			};

			interface class AlchemyItemData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Int32 CostOverride
				{
					System::Int32 __clrcall get();
				}

				property AlchemyItem::AlchemyItemFlags Flags
				{
					AlchemyItem::AlchemyItemFlags __clrcall get();
				}

				property SpellItem^ AddictionItem
				{
					SpellItem^ __clrcall get();
				}

				property System::Single AddictionChance
				{
					System::Single __clrcall get();
				}

				property BGSSoundDescriptorForm^ ConsumptionSound
				{
					BGSSoundDescriptorForm^ __clrcall get();
				}
			};

			property AlchemyItem::AlchemyItemData^ Data
			{
				AlchemyItem::AlchemyItemData^ __clrcall get();
			}

			property TESIcon^ MessageIcon
			{
				TESIcon^ __clrcall get();
			}
		};

		public interface class EnchantmentItem : public MagicItem, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class EnchantmentFlags : System::UInt32
			{
				None = 0,
				CostOverride = 1,
				FoodItem = 2,
				ExtendDuration = 8,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property System::Int32 CostOverride
			{
				System::Int32 __clrcall get();
			}

			property EnchantmentItem::EnchantmentFlags EnchantFlags
			{
				EnchantmentItem::EnchantmentFlags __clrcall get();
			}

			property EffectSettingCastingTypes CastingType
			{
				EffectSettingCastingTypes __clrcall get();
			}

			property System::Int32 ChargeOverride
			{
				System::Int32 __clrcall get();
			}

			property EffectSettingTargetTypes Delivery
			{
				EffectSettingTargetTypes __clrcall get();
			}

			property SpellTypes SpellType
			{
				SpellTypes __clrcall get();
			}

			property System::Single ChargeTime
			{
				System::Single __clrcall get();
			}

			property EnchantmentItem^ BaseEnchantment
			{
				EnchantmentItem^ __clrcall get();
			}

			property BGSListForm^ WornRestrictions
			{
				BGSListForm^ __clrcall get();
			}
		};

		interface class anonymous_namespace::PreloadCountVisitor : public MagicItem::PreloadableVisitor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::PreloadModelsVisitor : public MagicItem::PreloadableVisitor, public NetScriptFramework::IVirtualObject { };

		public interface class TargetValueModifierEffect : public ValueModifierEffect, public NetScriptFramework::IVirtualObject { };

		public interface class IngredientItem : public MagicItem, public TESModelTextureSwap, public TESIcon, public TESWeightForm, public BGSEquipType, public BGSDestructibleObjectForm, public BGSPickupPutdownSounds, public TESValueForm, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class GameData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::UInt16 KnownEffectFlags
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 PlayerUses
				{
					System::UInt16 __clrcall get();
				}
			};

			enum class IngredientDataFlags : System::UInt32
			{
				None = 0,
				CostOverride = 1,
				FoodItem = 2,
				ExtendDuration = 8,
				ReferencesPersist = 0x100,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			enum class ChangeFlags : System::UInt32
			{
				None = 0,
				IngredientUse = 0x80000000,
			};

			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Int32 CostOverride
				{
					System::Int32 __clrcall get();
				}

				property IngredientItem::IngredientDataFlags IngredientFlags
				{
					IngredientItem::IngredientDataFlags __clrcall get();
				}
			};

			property IngredientItem::Data^ IngredientData
			{
				IngredientItem::Data^ __clrcall get();
			}

			property IngredientItem::GameData^ IngredientGameData
			{
				IngredientItem::GameData^ __clrcall get();
			}
		};

		public interface class DarknessEffect : public ValueModifierEffect, public NetScriptFramework::IVirtualObject { };

		public interface class DisarmEffect : public StaggerEffect, public NetScriptFramework::IVirtualObject { };

		public interface class DualValueModifierEffect : public ValueModifierEffect, public NetScriptFramework::IVirtualObject { };

		public interface class GrabActorEffect : public ValueModifierEffect, public NetScriptFramework::IVirtualObject { };

		public interface class InvisibilityEffect : public ValueModifierEffect, public NetScriptFramework::IVirtualObject { };

		public interface class NightEyeEffect : public ValueModifierEffect, public NetScriptFramework::IVirtualObject { };

		public interface class ParalysisEffect : public ValueModifierEffect, public NetScriptFramework::IVirtualObject { };

		public interface class PeakValueModifierEffect : public ValueModifierEffect, public NetScriptFramework::IVirtualObject { };

		public interface class ReanimateEffect : public CommandEffect, public NetScriptFramework::IVirtualObject { };

		public interface class ScriptedRefEffect : public ScriptEffect, public NetScriptFramework::IVirtualObject { };

		public interface class SlowTimeEffect : public ScriptEffect, public NetScriptFramework::IVirtualObject { };

		public interface class ValueAndConditionsEffect : public ValueModifierEffect, public NetScriptFramework::IVirtualObject { };

		public interface class TESEnchantableForm : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			property EnchantmentItem^ FormEnchanting
			{
				EnchantmentItem^ __clrcall get();
			}

			property EffectSettingCastingTypes16 CastingType
			{
				EffectSettingCastingTypes16 __clrcall get();
			}

			property System::UInt16 AmountOfEnchantment
			{
				System::UInt16 __clrcall get();
			}
		};

		public interface class DemoralizeEffect : public TargetValueModifierEffect, public NetScriptFramework::IVirtualObject { };

		public interface class ScrollItem : public SpellItem, public TESModelTextureSwap, public BGSDestructibleObjectForm, public BGSPickupPutdownSounds, public TESWeightForm, public TESValueForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};
		};

		public interface class CalmEffect : public TargetValueModifierEffect, public NetScriptFramework::IVirtualObject { };

		public interface class EnhanceWeaponEffect : public DualValueModifierEffect, public BSTEventSink<ActorInventoryEvent^>, public NetScriptFramework::IVirtualObject { };

		public interface class ExtraEnchantment : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property EnchantmentItem^ Enchantment
			{
				EnchantmentItem^ __clrcall get();
			}

			property System::UInt16 ChargeAmount
			{
				System::UInt16 __clrcall get();
			}

			property System::Boolean RemoveOnUnequip
			{
				System::Boolean __clrcall get();
			}
		};

		/// <summary>
		/// Poisoned data of item.
		/// </summary>
		public interface class ExtraPoison : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			/// <summary>
			/// Gets or sets the poison entry.
			/// </summary>
			property AlchemyItem^ Item
			{
				AlchemyItem^ __clrcall get();

				void __clrcall set(AlchemyItem^ value);
			}

			/// <summary>
			/// Gets or sets the count of charges left.
			/// </summary>
			property System::Int32 Count
			{
				System::Int32 __clrcall get();

				void __clrcall set(System::Int32 value);
			}
		};

		public interface class FrenzyEffect : public TargetValueModifierEffect, public NetScriptFramework::IVirtualObject { };

		public interface class RallyEffect : public TargetValueModifierEffect, public NetScriptFramework::IVirtualObject { };

		public interface class TESObjectWEAP : public TESBoundObject, public TESFullName, public TESModelTextureSwap, public TESIcon, public TESEnchantableForm, public TESValueForm, public TESWeightForm, public TESAttackDamageForm, public BGSDestructibleObjectForm, public BGSEquipType, public BGSPreloadable, public BGSMessageIcon, public BGSPickupPutdownSounds, public BGSBlockBashData, public BGSKeywordForm, public TESDescription, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class RangedData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Single SightFov
				{
					System::Single __clrcall get();
				}

				property System::Single FiringRumbleLeftMotorStrength
				{
					System::Single __clrcall get();
				}

				property System::Single FiringRumbleRightMotorStrength
				{
					System::Single __clrcall get();
				}

				property System::Single FiringRumbleDuration
				{
					System::Single __clrcall get();
				}

				property WeaponRumblePatterns RumblePattern
				{
					WeaponRumblePatterns __clrcall get();
				}

				property System::SByte NumProjectiles
				{
					System::SByte __clrcall get();
				}
			};

			enum class DataFlags2 : System::UInt16
			{
				None = 0,
				PlayerOnly = 1,
				NPCsUseAmmo = 2,
				NoJamAfterReload = 4,
				MinorCrime = 0x10,
				RangeFixed = 0x20,
				NotUsedInNormalCombat = 0x40,
				DontUse3rdPersonISAnim = 0x100,
				BurstShot = 0x200,
				RumbleAlternate = 0x400,
				LongBursts = 0x800,
				NonHostile = 0x1000,
				BoundWeapon = 0x2000,
			};

			enum class AttackAnimations : System::Byte
			{
				AttackLeft = 0x1A,
				AttackRight = 0x20,
				Attack3 = 0x26,
				Attack4 = 0x2C,
				Attack5 = 0x32,
				Attack7 = 0x3E,
				Attack8 = 0x44,
				AttackLoop = 0x4A,
				AttackSpin = 0x50,
				AttackSpin2 = 0x56,
				PlaceMine = 0x61,
				PlaceMine2 = 0x67,
				AttackThrow = 0x6D,
				AttackThrow2 = 0x73,
				AttackThrow3 = 0x79,
				AttackThrow4 = 0x7F,
				AttackThrow5 = 0x85,
				Default = 0xFF,
			};

			enum class DataFlags1 : System::Byte
			{
				None = 0,
				IgnoresNormalWeaponResistance = 1,
				Automatic = 2,
				HasScope = 4,
				CantDrop = 8,
				HideBackpack = 0x10,
				EmbeddedWeapon = 0x20,
				DontUseFirstPersonISAnim = 0x40,
				NonPlayable = 0x80,
			};

			enum class CriticalDataFlags : System::Byte
			{
				None = 0,
				OnDeath = 1,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				NonPlayable = 4,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESObjectWEAP::RangedData^ RangedWeaponData
				{
					TESObjectWEAP::RangedData^ __clrcall get();
				}

				property System::Single Speed
				{
					System::Single __clrcall get();
				}

				property System::Single Reach
				{
					System::Single __clrcall get();
				}

				property System::Single MinRange
				{
					System::Single __clrcall get();
				}

				property System::Single MaxRange
				{
					System::Single __clrcall get();
				}

				property System::Single AnimationAttackMult
				{
					System::Single __clrcall get();
				}

				property System::Single StaggerValue
				{
					System::Single __clrcall get();
				}

				property WeaponHitBehaviors HitBehavior
				{
					WeaponHitBehaviors __clrcall get();
				}

				property ActorValueIndices Skill
				{
					ActorValueIndices __clrcall get();
				}

				property ActorValueIndices Resistance
				{
					ActorValueIndices __clrcall get();
				}

				property TESObjectWEAP::DataFlags2 WeaponFlags2
				{
					TESObjectWEAP::DataFlags2 __clrcall get();
				}

				property System::Byte BaseVATSToHitChance
				{
					System::Byte __clrcall get();
				}

				property TESObjectWEAP::AttackAnimations AttackAnimation
				{
					TESObjectWEAP::AttackAnimations __clrcall get();
				}

				property ActorValueIndices8 EmbeddedWeaponAV
				{
					ActorValueIndices8 __clrcall get();
				}

				property WeaponTypes8 AnimationType
				{
					WeaponTypes8 __clrcall get();
				}

				property TESObjectWEAP::DataFlags1 WeaponFlags1
				{
					TESObjectWEAP::DataFlags1 __clrcall get();
				}
			};

			interface class CriticalData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Single PercentMult
				{
					System::Single __clrcall get();
				}

				property SpellItem^ Effect
				{
					SpellItem^ __clrcall get();
				}

				property System::UInt16 Damage
				{
					System::UInt16 __clrcall get();
				}

				property TESObjectWEAP::CriticalDataFlags CriticalFlags
				{
					TESObjectWEAP::CriticalDataFlags __clrcall get();
				}
			};

			property TESObjectWEAP::Data^ WeaponData
			{
				TESObjectWEAP::Data^ __clrcall get();
			}

			property TESObjectWEAP::CriticalData^ WeaponCriticalData
			{
				TESObjectWEAP::CriticalData^ __clrcall get();
			}

			property BGSSoundDescriptorForm^ AttackSound
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}

			property BGSSoundDescriptorForm^ AttackSound2D
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}

			property BGSSoundDescriptorForm^ AttackLoopSound
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}

			property BGSSoundDescriptorForm^ AttackFailSound
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}

			property BGSSoundDescriptorForm^ IdleSound
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}

			property BGSSoundDescriptorForm^ EquipSound
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}

			property BGSSoundDescriptorForm^ UnequipSound
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}

			property BGSImpactDataSet^ ImpactDataSet
			{
				BGSImpactDataSet^ __clrcall get();
			}

			property TESObjectSTAT^ FirstPersonModelObject
			{
				TESObjectSTAT^ __clrcall get();
			}

			property TESObjectWEAP^ TemplateWeapon
			{
				TESObjectWEAP^ __clrcall get();
			}

			property BSFixedString^ EmbeddedNode
			{
				BSFixedString^ __clrcall get();
			}

			property SoundLevels SoundLevel
			{
				SoundLevels __clrcall get();
			}

			/// <summary>
			/// Fires this weapon (bow, crossbow).
			/// </summary>
			/// <param name="source">The source where weapon is fired from.</param>
			/// <param name="ammo">Overwrite ammo? If this is not set and source is actor then get source's ammo instead.</param>
			/// <param name="enchant">The enchantment on the weapon to use when firing.</param>
			/// <param name="poison">The poison on the weapon to use when firing.</param>
			void Fire(TESObjectREFR^ source, TESAmmo^ ammo, MagicItem^ enchant, MagicItem^ poison);
		};

		public interface class BanishEffect : public DemoralizeEffect, public NetScriptFramework::IVirtualObject { };

		public interface class BGSExplosion : public TESBoundObject, public TESFullName, public TESModel, public TESEnchantableForm, public BGSPreloadable, public TESImageSpaceModifiableForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DataFlags : System::UInt32
			{
				None = 0,
				AlwaysUsesWorldOrientation = 2,
				KnockDown_Always = 4,
				KnockDown_ByFormula = 8,
				IgnoreLOSCheck = 0x10,
				PushExplosionSourceRefOnly = 0x20,
				IgnoreImageSpaceSwap = 0x40,
				Chain = 0x80,
				NoControllerVibration = 0x100,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESObjectLIGH^ Light
				{
					TESObjectLIGH^ __clrcall get();
				}

				property BGSSoundDescriptorForm^ Sound1
				{
					BGSSoundDescriptorForm^ __clrcall get();
				}

				property BGSSoundDescriptorForm^ Sound2
				{
					BGSSoundDescriptorForm^ __clrcall get();
				}

				property BGSImpactDataSet^ ImpactDataSet
				{
					BGSImpactDataSet^ __clrcall get();
				}

				property TESObjectREFR^ ImpactPlacedObject
				{
					TESObjectREFR^ __clrcall get();
				}

				property BGSProjectile^ SpawnProjectile
				{
					BGSProjectile^ __clrcall get();
				}

				property System::Single Force
				{
					System::Single __clrcall get();
				}

				property System::Single Damage
				{
					System::Single __clrcall get();
				}

				property System::Single Radius
				{
					System::Single __clrcall get();
				}

				property System::Single ImageSpaceRadius
				{
					System::Single __clrcall get();
				}

				property System::Single VerticalOffsetMult
				{
					System::Single __clrcall get();
				}

				property BGSExplosion::DataFlags Flags
				{
					BGSExplosion::DataFlags __clrcall get();
				}

				property SoundLevels SoundLevel
				{
					SoundLevels __clrcall get();
				}
			};

			property BGSExplosion::Data^ ExplosionData
			{
				BGSExplosion::Data^ __clrcall get();
			}
		};

		public interface class TurnUndeadEffect : public DemoralizeEffect, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::FavoriteWeaponHandler : public anonymous_namespace::FavoriteItemHandler<TESObjectWEAP^, WeaponAttack::Event^>, public NetScriptFramework::IVirtualObject { };

		public interface class Projectile : public TESObjectREFR, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class LaunchData : public NetScriptFramework::IVirtualObject { };

			interface class ImpactData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::UInt32 CollideeObjectRefHandle
				{
					System::UInt32 __clrcall get();
				}

				property NiPointer<bhkCollisionObject^>^ CollisionObject
				{
					NiPointer<bhkCollisionObject^>^ __clrcall get();
				}
			};

			property BSSimpleList<System::IntPtr>^ Impacts
			{
				BSSimpleList<System::IntPtr>^ __clrcall get();
			}

			property NiPointer<ActorCause^>^ Cause
			{
				NiPointer<ActorCause^>^ __clrcall get();
			}

			property System::UInt32 ShooterObjRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 DesiredTargetObjRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property BSSoundHandle^ SoundHandle
			{
				BSSoundHandle^ __clrcall get();
			}

			property BSSoundHandle^ SoundCountdown
			{
				BSSoundHandle^ __clrcall get();
			}

			property NiPointer<QueuedFile^>^ ProjectileDBFiles
			{
				NiPointer<QueuedFile^>^ __clrcall get();
			}

			property System::Single Range
			{
				System::Single __clrcall get();
			}

			property TESObjectWEAP^ WeaponSource
			{
				TESObjectWEAP^ __clrcall get();
			}

			property TESAmmo^ AmmoSource
			{
				TESAmmo^ __clrcall get();
			}

			property System::Single DistanceMoved
			{
				System::Single __clrcall get();
			}

			property System::UInt32 ProjectileFlags
			{
				System::UInt32 __clrcall get();
			}
		};

		interface class BGSProjectile::Data : public NetScriptFramework::IMemoryObject
		{
		public:
			property BGSProjectile::Flags ProjectileFlags
			{
				BGSProjectile::Flags __clrcall get();
			}

			property BGSProjectile::Types ProjectileTypes
			{
				BGSProjectile::Types __clrcall get();
			}

			property System::Single Gravity
			{
				System::Single __clrcall get();
			}

			property System::Single Speed
			{
				System::Single __clrcall get();
			}

			property System::Single Range
			{
				System::Single __clrcall get();
			}

			property TESObjectLIGH^ Light
			{
				TESObjectLIGH^ __clrcall get();
			}

			property TESObjectLIGH^ MuzzleFlashLight
			{
				TESObjectLIGH^ __clrcall get();
			}

			property System::Single TracerChance
			{
				System::Single __clrcall get();
			}

			property System::Single ExplosionProximity
			{
				System::Single __clrcall get();
			}

			property System::Single ExplosionTimer
			{
				System::Single __clrcall get();
			}

			property BGSExplosion^ ExplosionType
			{
				BGSExplosion^ __clrcall get();
			}

			property BGSSoundDescriptorForm^ ActiveSoundLoop
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}

			property System::Single MuzzleFlashDuration
			{
				System::Single __clrcall get();
			}

			property System::Single FadeOutTime
			{
				System::Single __clrcall get();
			}

			property System::Single Force
			{
				System::Single __clrcall get();
			}

			property BGSSoundDescriptorForm^ CountdownSound
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}

			property BGSSoundDescriptorForm^ DeactivateSound
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}

			property TESObjectWEAP^ DefaultWeaponSource
			{
				TESObjectWEAP^ __clrcall get();
			}

			property System::Single ConeSpread
			{
				System::Single __clrcall get();
			}

			property System::Single CollisionRadius
			{
				System::Single __clrcall get();
			}

			property System::Single Lifetime
			{
				System::Single __clrcall get();
			}

			property System::Single RelaunchInterval
			{
				System::Single __clrcall get();
			}

			property BGSTextureSet^ DecalData
			{
				BGSTextureSet^ __clrcall get();
			}

			property BGSCollisionLayer^ CollisionLayer
			{
				BGSCollisionLayer^ __clrcall get();
			}
		};

		public interface class HitData : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class HitFlags : System::UInt32
			{
				None = 0,
				Blocked = 1,
				BlockWithWeapon = 2,
				BlockCandidate = 4,
				Critical = 8,
				CriticalOnDeath = 0x10,
				Fatal = 0x20,
				DismemberLimb = 0x40,
				ExplodeLimb = 0x80,
				CrippleLimb = 0x100,
				Disarm = 0x200,
				DisableWeapon = 0x400,
				SneakAttack = 0x800,
				IgnoreCritical = 0x1000,
				PredictDamage = 0x2000,
				PredictBaseDamage = 0x4000,
				Bash = 0x8000,
				TimedBash = 0x10000,
				PowerAttack = 0x20000,
				MeleeAttack = 0x40000,
				Ricochet = 0x80000,
				Explosion = 0x100000,
			};

			property System::UInt32 AggressorActorRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 TargetActorRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 SourceObjectRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property NiPointer<BGSAttackData^>^ AttackData
			{
				NiPointer<BGSAttackData^>^ __clrcall get();
			}

			property TESObjectWEAP^ Weapon
			{
				TESObjectWEAP^ __clrcall get();
			}

			property System::Single HealthDamage
			{
				System::Single __clrcall get();
			}

			property System::Single TotalDamage
			{
				System::Single __clrcall get();
			}

			property System::Single PhysicalDamage
			{
				System::Single __clrcall get();
			}

			property System::Single TargetedLimbDamage
			{
				System::Single __clrcall get();
			}

			property System::Single PercentBlocked
			{
				System::Single __clrcall get();
			}

			property System::Single ResistedPhysicalDamage
			{
				System::Single __clrcall get();
			}

			property System::Single ResistedTypedDamage
			{
				System::Single __clrcall get();
			}

			property System::Int32 Stagger
			{
				System::Int32 __clrcall get();
			}

			property System::Single SneakAttackBonus
			{
				System::Single __clrcall get();
			}

			property System::Single BonusHealthDamageMult
			{
				System::Single __clrcall get();
			}

			property System::Single PushBack
			{
				System::Single __clrcall get();
			}

			property System::Single ReflectedDamage
			{
				System::Single __clrcall get();
			}

			property System::Single CriticalDamageMult
			{
				System::Single __clrcall get();
			}

			property HitData::HitFlags HitFlag
			{
				HitData::HitFlags __clrcall get();
			}

			property System::Int32 EquipIndex
			{
				System::Int32 __clrcall get();
			}

			property System::UInt32 Material
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 DamageLimb
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class MissileProjectile : public Projectile, public NetScriptFramework::IVirtualObject
		{
		public:
			property ImpactResults ImpactResult
			{
				ImpactResults __clrcall get();
			}

			property System::Boolean WaitingToInitialize3D
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class BarrierProjectile : public Projectile, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class CollisionData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::UInt32 RefHandle
				{
					System::UInt32 __clrcall get();
				}

				property System::Int32 Count
				{
					System::Int32 __clrcall get();
				}
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
			};

			property System::Single Width
			{
				System::Single __clrcall get();
			}

			property BSTArray<BarrierProjectile::CollisionData^, BSTArrayHeapAllocator^>^ CollisionInfo
			{
				BSTArray<BarrierProjectile::CollisionData^, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		public interface class BeamProjectile : public Projectile, public BSTEventSink<BSProceduralGeomEvent^>, public BSTEventSource<BeamProjectileImpactEvent^>, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
			};
		};

		public interface class ConeProjectile : public Projectile, public NetScriptFramework::IVirtualObject
		{
		public:
			property ImpactResults ImpactResult
			{
				ImpactResults __clrcall get();
			}

			property System::Single EnvironmentTimer
			{
				System::Single __clrcall get();
			}

			property System::Single ConeAngleTangent
			{
				System::Single __clrcall get();
			}

			property System::Single InitialCollisionSphereRadius
			{
				System::Single __clrcall get();
			}

			property NiPoint3^ Origin
			{
				NiPoint3^ __clrcall get();
			}

			property hkRefPtr<hkpSphereShape^>^ CollisionShape
			{
				hkRefPtr<hkpSphereShape^>^ __clrcall get();
			}

			property BSTArray<System::IntPtr, BSTArrayHeapAllocator^>^ Collisions
			{
				BSTArray<System::IntPtr, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		public interface class FlameProjectile : public Projectile, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Single ExpirationTimer
			{
				System::Single __clrcall get();
			}

			property System::Single ConeAngle
			{
				System::Single __clrcall get();
			}
		};

		public interface class GrenadeProjectile : public Projectile, public NetScriptFramework::IVirtualObject
		{
		public:
			property BGSDecalGroup^ DecalGroup
			{
				BGSDecalGroup^ __clrcall get();
			}

			property System::Boolean CollisionGroupReset
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class ArrowProjectile : public MissileProjectile, public NetScriptFramework::IVirtualObject
		{
		public:
			property AlchemyItem^ Poison
			{
				AlchemyItem^ __clrcall get();
			}
		};

		interface class TESRegion;

		public interface class BGSAcousticSpace : public TESBoundObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property BGSSoundDescriptorForm^ LoopingSound
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}

			property TESRegion^ SoundRegion
			{
				TESRegion^ __clrcall get();
			}

			property BGSReverbParameters^ ReverbType
			{
				BGSReverbParameters^ __clrcall get();
			}
		};

		public interface class ExtraCellSkyRegion : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property TESRegion^ SkyRegion
			{
				TESRegion^ __clrcall get();
			}
		};

		public interface class TESRegionDataManager : public NetScriptFramework::IVirtualObject
		{
		public:
			property TESRegion^ LastLoadedRegion
			{
				TESRegion^ __clrcall get();
			}
		};

		public interface class ExtraCellAcousticSpace : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BGSAcousticSpace^ Space
			{
				BGSAcousticSpace^ __clrcall get();
			}
		};

		interface class TESRace;

		public interface class BGSAttackDataMap : public NiRefObject, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSTHashMap2<BSFixedString^, NiPointer<BGSAttackData^>^>^ AttackDataMap
			{
				BSTHashMap2<BSFixedString^, NiPointer<BGSAttackData^>^>^ __clrcall get();
			}

			property TESRace^ DefaultDataRace
			{
				TESRace^ __clrcall get();
			}
		};

		public interface class TESRaceForm : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			property TESRace^ Race
			{
				TESRace^ __clrcall get();
			}
		};

		public interface class BGSAttackDataForm : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPointer<BGSAttackDataMap^>^ AttackDataMap
			{
				NiPointer<BGSAttackDataMap^>^ __clrcall get();
			}
		};

		public interface class TESObjectARMA : public TESObject, public TESRaceForm, public BGSBipedObjectForm, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property NetScriptFramework::FixedMemoryArray<System::SByte>^ Priorities
				{
					NetScriptFramework::FixedMemoryArray<System::SByte>^ __clrcall get();
				}

				property NetScriptFramework::FixedMemoryArray<System::SByte>^ ModelRange
				{
					NetScriptFramework::FixedMemoryArray<System::SByte>^ __clrcall get();
				}

				property System::SByte DetectionSoundValue
				{
					System::SByte __clrcall get();
				}

				property System::Single WeaponAdjust
				{
					System::Single __clrcall get();
				}
			};

			property TESObjectARMA::Data^ ArmorAddonData
			{
				TESObjectARMA::Data^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<TESModelTextureSwap^>^ BipedModels
			{
				NetScriptFramework::FixedMemoryArray<TESModelTextureSwap^>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<TESModelTextureSwap^>^ BipedModel1stPersons
			{
				NetScriptFramework::FixedMemoryArray<TESModelTextureSwap^>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<BGSTextureSet^>^ SkinTextures
			{
				NetScriptFramework::FixedMemoryArray<BGSTextureSet^>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<BGSListForm^>^ SkinTextureSwapLists
			{
				NetScriptFramework::FixedMemoryArray<BGSListForm^>^ __clrcall get();
			}

			property BSTArray<TESRace^, BSTArrayHeapAllocator^>^ AdditionalRaces
			{
				BSTArray<TESRace^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BGSFootstepSet^ FootstepSet
			{
				BGSFootstepSet^ __clrcall get();
			}

			property BGSArtObject^ ArtObject
			{
				BGSArtObject^ __clrcall get();
			}
		};

		public interface class TESObjectARMO : public TESBoundObject, public TESFullName, public TESRaceForm, public TESEnchantableForm, public TESValueForm, public TESWeightForm, public BGSDestructibleObjectForm, public BGSPickupPutdownSounds, public TESBipedModelForm, public BGSEquipType, public BGSBipedObjectForm, public BGSBlockBashData, public BGSKeywordForm, public TESDescription, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				NonPlayable = 4,
				Deleted = 0x20,
				Shield = 0x40,
				Ignored = 0x1000,
			};

			/// <summary>
			/// Gets or sets the internal value of armor rating. This is the float value times 100 as integer.
			/// </summary>
			property System::Int32 ArmorRatingInternalValue
			{
				System::Int32 __clrcall get();

				void __clrcall set(System::Int32 value);
			}

			property BSTArray<TESObjectARMA^, BSTArrayHeapAllocator^>^ ArmorAddons
			{
				BSTArray<TESObjectARMA^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property TESObjectARMO^ TemplateArmor
			{
				TESObjectARMO^ __clrcall get();
			}

			/// <summary>
			/// Gets or sets the armor rating.
			/// </summary>
			property System::Single ArmorRating
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}
		};

		public interface class BipedObject : public NetScriptFramework::IMemoryObject
		{
		public:
			property TESForm^ Item
			{
				TESForm^ __clrcall get();
			}

			property TESObjectARMA^ Addon
			{
				TESObjectARMA^ __clrcall get();
			}

			property TESModel^ Part
			{
				TESModel^ __clrcall get();
			}

			property BGSTextureSet^ SkinTexture
			{
				BGSTextureSet^ __clrcall get();
			}

			property NiPointer<NiAVObject^>^ PartClone
			{
				NiPointer<NiAVObject^>^ __clrcall get();
			}
		};

		public interface class BipedAnim : public BSIntrusiveRefCounted, public NetScriptFramework::IMemoryObject
		{
		public:
			property NiNode^ RootNode
			{
				NiNode^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<BipedObject^>^ Objects
			{
				NetScriptFramework::FixedMemoryArray<BipedObject^>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<BipedObject^>^ BufferedObjects
			{
				NetScriptFramework::FixedMemoryArray<BipedObject^>^ __clrcall get();
			}

			property System::UInt32 ActorRefHandle
			{
				System::UInt32 __clrcall get();
			}
		};

		interface class anonymous_namespace::ArmorRatingVisitor : public anonymous_namespace::ArmorRatingVisitorBase, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSScrapArray<TESObjectARMO^>^ Armors
			{
				BSScrapArray<TESObjectARMO^>^ __clrcall get();
			}
		};

		public interface class BGSSkinForm : public BaseFormComponent, public NetScriptFramework::IVirtualObject
		{
		public:
			property TESObjectARMO^ Skin
			{
				TESObjectARMO^ __clrcall get();
			}
		};

		public interface class TESActorBase : public TESBoundAnimObject, public TESActorBaseData, public TESContainer, public TESSpellList, public TESAIForm, public TESFullName, public ActorValueOwner, public BGSDestructibleObjectForm, public BGSSkinForm, public BGSKeywordForm, public BGSAttackDataForm, public BGSPerkRankArray, public NetScriptFramework::IVirtualObject { };

		public interface class ExtraBiped : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSTSmartPointer<BipedAnim^, BSTSmartPointerIntrusiveRefCount<BipedAnim^>^>^ Biped
			{
				BSTSmartPointer<BipedAnim^, BSTSmartPointerIntrusiveRefCount<BipedAnim^>^>^ __clrcall get();
			}
		};

		public interface class TESNPC : public TESActorBase, public TESRaceForm, public BGSOverridePackCollection, public BSTEventSink<MenuOpenCloseEvent^>, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class SkillsData : public NetScriptFramework::IMemoryObject
			{
			public:
				property NetScriptFramework::FixedMemoryArray<System::Byte>^ Values
				{
					NetScriptFramework::FixedMemoryArray<System::Byte>^ __clrcall get();
				}

				property NetScriptFramework::FixedMemoryArray<System::Byte>^ Offsets
				{
					NetScriptFramework::FixedMemoryArray<System::Byte>^ __clrcall get();
				}

				property System::UInt16 Health
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 Magicka
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 Stamina
				{
					System::UInt16 __clrcall get();
				}

				property System::Single FarAwayModelDistance
				{
					System::Single __clrcall get();
				}
			};

			interface class FaceData : public NetScriptFramework::IMemoryObject
			{
			public:
				property NetScriptFramework::FixedMemoryArray<System::Single>^ Morphs
				{
					NetScriptFramework::FixedMemoryArray<System::Single>^ __clrcall get();
				}

				property NetScriptFramework::FixedMemoryArray<System::Int32>^ Parts
				{
					NetScriptFramework::FixedMemoryArray<System::Int32>^ __clrcall get();
				}
			};

			interface class FaceLayerData : public NetScriptFramework::IMemoryObject
			{
			public:
				property Color^ TintColor
				{
					Color^ __clrcall get();
				}

				property System::UInt16 TintIndex
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 Preset
				{
					System::UInt16 __clrcall get();
				}

				property System::UInt16 InterpolationValue
				{
					System::UInt16 __clrcall get();
				}
			};

			interface class CreatureSoundData : public NetScriptFramework::IMemoryObject { };

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
				Compressed = 0x40000,
				BleedoutOverride = 0x20000000,
			};

			enum class ChangeFlags : System::UInt32
			{
				None = 0,
				BaseData = 2,
				Attributes = 4,
				AIData = 8,
				SpellList = 0x10,
				FullName = 0x20,
				Factions = 0x40,
				NPCSkills = 0x200,
				Class = 0x400,
				Face = 0x800,
				DefaultOutfit = 0x1000,
				SleepOutfit = 0x2000,
				Gender = 0x1000000,
				Race = 0x2000000,
			};

			interface class HeadRelatedData : public NetScriptFramework::IMemoryObject
			{
			public:
				property BGSColorForm^ HairColor
				{
					BGSColorForm^ __clrcall get();
				}

				property BGSTextureSet^ FaceDetails
				{
					BGSTextureSet^ __clrcall get();
				}
			};

			enum class FaceMorphsEnum : System::Int32
			{
				Nose_LongShort = 0,
				Nose_UpDown = 1,
				Jaw_UpDown = 2,
				Jaw_NarrowWide = 3,
				Jaw_ForwardBack = 4,
				Cheeks_UpDown = 5,
				Cheeks_ForwardBack = 6,
				Eyes_UpDown = 7,
				Eyes_InOut = 8,
				Brows_UpDown = 9,
				Brows_InOut = 0xA,
				Brows_ForwardBack = 0xB,
				Lips_UpDown = 0xC,
				Lips_InOut = 0xD,
				Chin_NarrowWide = 0xE,
				Chin_UpDown = 0xF,
				Chin_UnderbiteOverbite = 0x10,
				Eyes_ForwardBack = 0x11,
				Unk = 0x12,
			};

			enum class FacePartsEnum : System::Int32
			{
				Nose = 0,
				Unknown = 1,
				Eyes = 2,
				Mouth = 3,
			};

			interface class SoundData : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESNPC^ SoundCreature
				{
					TESNPC^ __clrcall get();
				}

				property TESNPC::CreatureSoundData^ CreatureSounds
				{
					TESNPC::CreatureSoundData^ __clrcall get();
				}
			};

			property TESNPC::SkillsData^ NpcSkills
			{
				TESNPC::SkillsData^ __clrcall get();
			}

			property TESClass^ NpcClass
			{
				TESClass^ __clrcall get();
			}

			property System::IntPtr HeadData
			{
				System::IntPtr __clrcall get();
			}

			property BGSListForm^ GiftFilter
			{
				BGSListForm^ __clrcall get();
			}

			property TESCombatStyle^ CombatStyle
			{
				TESCombatStyle^ __clrcall get();
			}

			property System::UInt32 FileOffset
			{
				System::UInt32 __clrcall get();
			}

			property TESRace^ OriginalRace
			{
				TESRace^ __clrcall get();
			}

			property TESNPC^ FaceNPC
			{
				TESNPC^ __clrcall get();
			}

			property System::Single Height
			{
				System::Single __clrcall get();
			}

			property System::Single Weight
			{
				System::Single __clrcall get();
			}

			property TESNPC::SoundData^ Sounds
			{
				TESNPC::SoundData^ __clrcall get();
			}

			property BSFixedString^ ShortName
			{
				BSFixedString^ __clrcall get();
			}

			property TESObjectARMO^ FarSkin
			{
				TESObjectARMO^ __clrcall get();
			}

			property BGSOutfit^ DefaultOutfit
			{
				BGSOutfit^ __clrcall get();
			}

			property BGSOutfit^ SleepOutfit
			{
				BGSOutfit^ __clrcall get();
			}

			property BGSListForm^ DefaultPackageList
			{
				BGSListForm^ __clrcall get();
			}

			property TESFaction^ CrimeFaction
			{
				TESFaction^ __clrcall get();
			}

			property System::IntPtr HeadParts
			{
				System::IntPtr __clrcall get();
			}

			property System::SByte NumHeadParts
			{
				System::SByte __clrcall get();
			}

			property SoundLevels8 SoundLevel
			{
				SoundLevels8 __clrcall get();
			}

			property Color^ BodyTintColor
			{
				Color^ __clrcall get();
			}

			property BSTArray<BGSRelationship^, BSTArrayHeapAllocator^>^ Relationships
			{
				BSTArray<BGSRelationship^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property TESNPC::FaceData^ Face
			{
				TESNPC::FaceData^ __clrcall get();
			}

			property BSTArray<TESNPC::FaceLayerData^, BSTArrayHeapAllocator^>^ TintLayers
			{
				BSTArray<TESNPC::FaceLayerData^, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		public interface class ExtraLeveledCreature : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property TESActorBase^ OriginalBase
			{
				TESActorBase^ __clrcall get();
			}

			property TESActorBase^ TemplateBase
			{
				TESActorBase^ __clrcall get();
			}
		};

		interface class BSAnimationGraphManager;

		public interface class SimpleAnimationGraphManagerHolder : public IAnimationGraphManagerHolder, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSTSmartPointer<BSAnimationGraphManager^, BSTSmartPointerIntrusiveRefCount<BSAnimationGraphManager^>^>^ AnimationGraphManager
			{
				BSTSmartPointer<BSAnimationGraphManager^, BSTSmartPointerIntrusiveRefCount<BSAnimationGraphManager^>^>^ __clrcall get();
			}

			property NiPointer<SimpleAnimationGraphManagerLoadingTask^>^ LoadingTask
			{
				NiPointer<SimpleAnimationGraphManagerLoadingTask^>^ __clrcall get();
			}
		};

		interface class anonymous_namespace::DeferredUpdate : public BSTCommonStaticMessageQueue<BSTSmartPointer<BSAnimationGraphManager^, unknown^>^, UnknownGenArg_128^>, public BSTSingletonSDM<anonymous_namespace::DeferredUpdate^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject { };

		public interface class ExtraAnimGraphManager : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSTSmartPointer<BSAnimationGraphManager^, BSTSmartPointerIntrusiveRefCount<BSAnimationGraphManager^>^>^ AnimGraphMgr
			{
				BSTSmartPointer<BSAnimationGraphManager^, BSTSmartPointerIntrusiveRefCount<BSAnimationGraphManager^>^>^ __clrcall get();
			}
		};

		/// <summary>
		/// Actor magic caster type.
		/// </summary>
		public interface class ActorMagicCaster : public MagicCaster, public SimpleAnimationGraphManagerHolder, public BSTEventSink<BSAnimationGraphEvent^>, public NetScriptFramework::IVirtualObject
		{
		public:
			/// <summary>
			/// Gets the magic node. This is only set if actually wielding any magic. It is most likely where the effect will be fired from. e.g. MagicLeft
			/// </summary>
			property NiNode^ FireNode
			{
				NiNode^ __clrcall get();
			}

			/// <summary>
			/// Gets the caster race.
			/// </summary>
			property TESRace^ CasterRace
			{
				TESRace^ __clrcall get();
			}

			property bhkWorld^ HavokWorld
			{
				bhkWorld^ __clrcall get();

				void __clrcall set(bhkWorld^ value);
			}

			/// <summary>
			/// Gets the owner actor.
			/// </summary>
			property Actor^ Owner
			{
				Actor^ __clrcall get();
			}

			/// <summary>
			/// Gets the node where effect in hand would be placed if actor is wielding any magic. This is always set even if there's no actual magic equipped. e.g. NPC L MagicNode [LMag]
			/// </summary>
			property NiNode^ EffectNode
			{
				NiNode^ __clrcall get();
			}

			/// <summary>
			/// The light effect attached to the node.
			/// </summary>
			property BSLight^ EffectLight
			{
				BSLight^ __clrcall get();
			}

			/// <summary>
			/// Gets the type of caster this is.
			/// </summary>
			property EquippedSpellSlots ActorCasterType
			{
				EquippedSpellSlots __clrcall get();
			}
		};

		public interface class BookMenu : public IMenu, public SimpleAnimationGraphManagerHolder, public BSTEventSink<BSAnimationGraphEvent^>, public NetScriptFramework::IVirtualObject
		{
		public:
			property GPtr<GFxMovieView^>^ Book
			{
				GPtr<GFxMovieView^>^ __clrcall get();
			}

			property System::Boolean IsNote
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class ModelReferenceEffect : public ReferenceEffect, public SimpleAnimationGraphManagerHolder, public BSTEventSink<BSAnimationGraphEvent^>, public NetScriptFramework::IVirtualObject
		{
		public:
			property RefAttachTechniqueInput^ HitEffectArtData
			{
				RefAttachTechniqueInput^ __clrcall get();
			}

			property BGSArtObject^ ArtObject
			{
				BGSArtObject^ __clrcall get();
			}

			property NiPointer<NiAVObject^>^ ArtObject3D
			{
				NiPointer<NiAVObject^>^ __clrcall get();
			}
		};

		public interface class SummonPlacementEffect : public ReferenceEffect, public SimpleAnimationGraphManagerHolder, public BSTEventSink<BSAnimationGraphEvent^>, public NetScriptFramework::IVirtualObject { };

		public interface class LineNode : public SimpleAnimationGraphManagerHolder, public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

		public interface class MistMenu : public IMenu, public SimpleAnimationGraphManagerHolder, public MenuEventHandler, public NetScriptFramework::IVirtualObject
		{
		public:
			property NetScriptFramework::FixedMemoryArray<NiColor^>^ AmbientColors
			{
				NetScriptFramework::FixedMemoryArray<NiColor^>^ __clrcall get();
			}
		};

		public interface class StatsNode : public SimpleAnimationGraphManagerHolder, public BSTEventSink<BSAnimationGraphEvent^>, public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject { };

		interface class NiCamera;

		public interface class NiCullingProcess : public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Boolean UseVirtualAppend
			{
				System::Boolean __clrcall get();
			}

			property System::IntPtr VisibleSet
			{
				System::IntPtr __clrcall get();
			}

			property NiCamera^ Camera
			{
				NiCamera^ __clrcall get();
			}

			property NiFrustum^ Frustum
			{
				NiFrustum^ __clrcall get();
			}

			property NiFrustumPlanes^ Planes
			{
				NiFrustumPlanes^ __clrcall get();
			}

			property NiFrustumPlanes^ CustomCullPlanes
			{
				NiFrustumPlanes^ __clrcall get();
			}

			property System::Boolean CameraRelatedUpdates
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean UpdateAccumulateFlag
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean IgnorePreprocess
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean DoCustomCullPlanes
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class BSCullingProcess : public NiCullingProcess, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class CullingTypes : System::Int32
			{
				Normal = 0,
				AllPass = 1,
				AllFail = 2,
				IgnoreMultiBounds = 3,
				ForceMultiBoundsNoUpdate = 4,
			};

			interface class Data : public NetScriptFramework::IMemoryObject { };

			property unknown^ CullQueue
			{
				unknown^ __clrcall get();
			}

			property System::Int32 CullMode
			{
				System::Int32 __clrcall get();
			}

			property System::IntPtr CompoundFrustum
			{
				System::IntPtr __clrcall get();
			}

			property System::Boolean RecurseToGeometry
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class BSFadeNodeCuller : public NiCullingProcess, public NetScriptFramework::IVirtualObject { };

		public interface class BSGeometryListCullingProcess : public BSCullingProcess, public NetScriptFramework::IVirtualObject { };

		public interface class BSParabolicCullingProcess : public BSCullingProcess, public NetScriptFramework::IVirtualObject { };

		generic <typename hkMap_T1, typename hkMap_T2, typename hkMap_T3, typename hkMap_T4>
		interface class hkMap;

		generic <typename hkPointerMap_T1, typename hkPointerMap_T2, typename hkPointerMap_T3>
		public interface class hkPointerMap : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class InternalInitializer : System::Int32
			{
				UNINITIALIZED = 0,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpPairCollisionFilter : public hkpCollisionFilter, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class PairFilterKey : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class PairFilterPointerMapOperations : public NetScriptFramework::IMemoryObject { };

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MapPairFilterKeyOverrideType : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkDataWorldCloner : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConstraintCollisionFilter : public hkpPairCollisionFilter, public hkpConstraintListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		generic <typename hkMapBase_T1, typename hkMapBase_T2, typename hkMapBase_T3>
		public interface class hkMapBase : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Pair : public NetScriptFramework::IMemoryObject { };

			enum class InternalInitializer : System::Int32
			{
				UNINITIALIZED = 0,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		generic <typename hkMap_T1, typename hkMap_T2, typename hkMap_T3, typename hkMap_T4>
		public interface class hkMap : public hkMapBase<hkDataObject::Handle^, hkMap_T1, hkMap_T3>, public NetScriptFramework::IMemoryObject
		{
		public:
			enum class InternalInitializer : System::Int32
			{
				UNINITIALIZED = 0,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::ConstraintCollisionFilterConstraintBroken : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject { };

		interface class hkJobQueue;

		interface class hkCpuJobThreadPool::SharedThreadData : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkSpuJobThreadPool : public hkJobThreadPool, public NetScriptFramework::IVirtualObject { };

		interface class hkpCharacterProxyJobUtil::JobData : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkJobQueue : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class CustomJobType : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class hkJobHandlerFuncs : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class CustomJobTypeSetup : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			enum class WaitPolicy : System::Int32
			{
				WAIT_UNTIL_ALL_WORK_COMPLETE = 0,
				WAIT_INDEFINITELY = 1,
			};

			enum class FinishJobFlag : System::Int32
			{
				FINISH_FLAG_NORMAL = 0,
				FINISH_FLAG_JUST_CALL_FINISH_CALLBACK = 1,
			};

			enum class JobCreationStatus : System::Int32
			{
				JOB_CREATED = 0,
				NO_JOB_CREATED = 1,
			};

			enum class JobPopFuncResult : System::Int32
			{
				POP_QUEUE_ENTRY = 0,
				DO_NOT_POP_QUEUE_ENTRY = 1,
			};

			enum class JobPriority : System::Int32
			{
				JOB_HIGH_PRIORITY = 0,
				JOB_LOW_PRIORITY = 1,
			};

			interface class JobQueueEntry : public hkJob, public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			enum class JobStatus : System::Int32
			{
				JOB_INVALID = -1,
				GOT_NEXT_JOB = 0,
				NO_JOBS_AVAILABLE = 1,
				ALL_JOBS_FINISHED = 2,
				JOBS_AVAILABLE_BUT_NOT_FOR_CURRENT_ELF = 3,
				SPU_QUIT_ELF = 4,
			};

			interface class JobTypeSpuStats : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			enum class WaitStatus : System::Int32
			{
				WAIT_FOR_NEXT_JOB = 0,
				DO_NOT_WAIT_FOR_NEXT_JOB = 1,
			};

			interface class JobQueueEntryInput : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DynamicData;

			interface class Queue;

			interface class DynamicData : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		generic <typename hkQueue_T1>
		public interface class hkQueue : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpBallGun : public hkpFirstPersonGun, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkJobQueue::Queue : public hkQueue<hkJobQueue::JobQueueEntry^>, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpMountedBallGun : public hkpBallGun, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class BSTriShape;

		public interface class Moon : public SkyObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class UpdateStates : System::Int32
			{
				NotRequired = 0,
				WhenCulled = 1,
				Initialize = 2,
			};

			enum class Phases : System::Int32
			{
				Full = 0,
				WaningGibbous = 1,
				WaningQuarter = 2,
				WaningCrescent = 3,
				NewMoon = 4,
				WaxingCrescent = 5,
				WaxingQuarter = 6,
				WaxingGibbous = 7,
			};

			property NiPointer<NiNode^>^ MoonNode
			{
				NiPointer<NiNode^>^ __clrcall get();
			}

			property NiPointer<NiNode^>^ ShadowNode
			{
				NiPointer<NiNode^>^ __clrcall get();
			}

			property NiPointer<BSTriShape^>^ MoonMesh
			{
				NiPointer<BSTriShape^>^ __clrcall get();
			}

			property NiPointer<BSTriShape^>^ ShadowMesh
			{
				NiPointer<BSTriShape^>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<BSString^>^ StateTextures
			{
				NetScriptFramework::FixedMemoryArray<BSString^>^ __clrcall get();
			}

			property System::Single AngleFadeStart
			{
				System::Single __clrcall get();
			}

			property System::Single AngleFadeEnd
			{
				System::Single __clrcall get();
			}

			property System::Single AngleShadowEarlyFade
			{
				System::Single __clrcall get();
			}

			property System::Single Speed
			{
				System::Single __clrcall get();
			}

			property System::Single ZOffset
			{
				System::Single __clrcall get();
			}

			property System::UInt32 Size
			{
				System::UInt32 __clrcall get();
			}

			property Moon::UpdateStates UpdateMoonTexture
			{
				Moon::UpdateStates __clrcall get();
			}
		};

		interface class TESObjectLAND::LoadedLandData : public NetScriptFramework::IMemoryObject
		{
		public:
			property NetScriptFramework::FixedMemoryArray<NiNode^>^ Meshes
			{
				NetScriptFramework::FixedMemoryArray<NiNode^>^ __clrcall get();
			}

			property System::IntPtr Heights
			{
				System::IntPtr __clrcall get();
			}

			property System::IntPtr Percents
			{
				System::IntPtr __clrcall get();
			}

			property System::IntPtr Colors
			{
				System::IntPtr __clrcall get();
			}

			property System::IntPtr Normals
			{
				System::IntPtr __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<NiPointer<BSTriShape^>^>^ GeometryShapes
			{
				NetScriptFramework::FixedMemoryArray<NiPointer<BSTriShape^>^>^ __clrcall get();
			}

			property NiPointer<BSTriShape^>^ Border
			{
				NiPointer<BSTriShape^>^ __clrcall get();
			}

			property NiPoint2^ HeightExtents
			{
				NiPoint2^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<TESLandTexture^>^ DefQuadTextures
			{
				NetScriptFramework::FixedMemoryArray<TESLandTexture^>^ __clrcall get();
			}

			property System::IntPtr QuadTextures
			{
				System::IntPtr __clrcall get();
			}

			property hkpMoppCode^ MoppCode
			{
				hkpMoppCode^ __clrcall get();
			}
		};

		interface class TESWorldSpace;

		public interface class PlayerTargetLocation : public NetScriptFramework::IMemoryObject
		{
		public:
			property TESWorldSpace^ World
			{
				TESWorldSpace^ __clrcall get();
			}

			property TESObjectCELL^ Interior
			{
				TESObjectCELL^ __clrcall get();
			}

			property NiPoint3^ Location
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ Angle
			{
				NiPoint3^ __clrcall get();
			}

			property System::IntPtr ArrivalFunc
			{
				System::IntPtr __clrcall get();
			}

			property System::Int64 ArrivalFuncData
			{
				System::Int64 __clrcall get();
			}

			property System::UInt32 FurnitureRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 FastTravelMarkerRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property System::Boolean ResetWeather
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean AllowAutoSave
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean IsValid
			{
				System::Boolean __clrcall get();
			}
		};

		interface class hkProcessContext;

		public interface class hkServerProcessHandler : public hkReferencedObject, public hkProcessHandler, public hkProcess, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkStatisticsProcess : public hkReferencedObject, public hkProcess, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkVisualDebuggerClient : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkVisualDebugger : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkProcessContext : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkInspectProcess : public hkReferencedObject, public hkProcess, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class ObjectPair : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkaAnimationContext : public hkReferencedObject, public hkProcessContext, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpPhysicsContext : public hkReferencedObject, public hkProcessContext, public hkpWorldDeletionListener, public hkpEntityListener, public hkpPhantomListener, public hkpConstraintListener, public hkpActionListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxSceneDataContext : public hkReferencedObject, public hkProcessContext, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpWorldViewerBase : public hkReferencedObject, public hkProcess, public hkpPhysicsContextWorldListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpPhysicsToSceneDataBridge : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class RootLevelContainer : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkxSceneViewer : public hkReferencedObject, public hkProcess, public hkxSceneDataContextListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConvexRadiusViewer : public hkpWorldViewerBase, public hkpEntityListener, public hkpWorldPostSimulationListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class WorldToEntityData : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpShapeDisplayViewer : public hkpWorldViewerBase, public hkpEntityListener, public hkpWorldPostSimulationListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class WorldToEntityData : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class ShapeDisplayViewerOptions : public hkReferencedObject, public hkProcessContext, public NetScriptFramework::IVirtualObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkpSweptTransformDisplayViewer : public hkpWorldViewerBase, public hkpEntityListener, public hkpWorldPostSimulationListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class WorldToEntityData : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpContactPointViewer : public hkpWorldViewerBase, public hkpWorldPostSimulationListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpBroadphaseViewer : public hkpWorldViewerBase, public hkpWorldPostSimulationListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConstraintViewer : public hkpWorldViewerBase, public hkpWorldPostSimulationListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpInconsistentWindingViewer : public hkpWorldViewerBase, public hkpWorldPostSimulationListener, public hkpEntityListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpMidphaseViewer : public hkpWorldViewerBase, public hkpWorldPostSimulationListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpMousePickingViewer : public hkpWorldViewerBase, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpPhantomDisplayViewer : public hkpWorldViewerBase, public hkpPhantomListener, public hkpWorldPostSimulationListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpRigidBodyCentreOfMassViewer : public hkpWorldViewerBase, public hkpEntityListener, public hkpWorldPostSimulationListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpRigidBodyInertiaViewer : public hkpWorldViewerBase, public hkpEntityListener, public hkpWorldPostSimulationListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSimulationIslandViewer : public hkpWorldViewerBase, public hkpWorldPostSimulationListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSingleBodyConstraintViewer : public hkpWorldViewerBase, public hkpWorldPostSimulationListener, public hkpEntityListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpToiContactPointViewer : public hkpWorldViewerBase, public hkpContactListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpToiCountViewer : public hkpWorldViewerBase, public hkpContactListener, public hkpWorldPostSimulationListener, public hkpEntityListener, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DisplayPosition : System::Int32
			{
				POSITIVE_X = 0,
				POSITIVE_Y = 1,
				POSITIVE_Z = 2,
				NEGATIVE_X = 3,
				NEGATIVE_Y = 4,
				NEGATIVE_Z = 5,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpVehicleViewer : public hkpWorldViewerBase, public hkpActionListener, public hkpWorldPostSimulationListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpWeldingViewer : public hkpWorldViewerBase, public hkpWorldPostSimulationListener, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpWorldMemoryViewer : public hkpWorldViewerBase, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpWorldSnapshotViewer : public hkpWorldViewerBase, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class Type : System::Int32
			{
				TYPE_XML_TAGFILE = 0,
				TYPE_BINARY_TAGFILE = 1,
				TYPE_COUNT_OF = 2,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpActiveContactPointViewer : public hkpContactPointViewer, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpInactiveContactPointViewer : public hkpContactPointViewer, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class TESWaterForm;

		public interface class TESObjectACTI : public TESBoundAnimObject, public TESFullName, public TESModelTextureSwap, public BGSDestructibleObjectForm, public BGSOpenCloseForm, public BGSKeywordForm, public TESMagicTargetForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DataFlags : System::UInt16
			{
				None = 0,
				NoDisplacement = 1,
				IgnoredBySandbox = 2,
				IsProceduralWater = 4,
				IsLODWater = 8,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				HasTreeLOD = 0x40,
				MustUpdateAnims = 0x100,
				HiddenFromLocalMap = 0x200,
				Ignored = 0x1000,
				HasDistantLOD = 0x8000,
				RandomAnimStart = 0x10000,
				Dangerous = 0x20000,
				IgnoresObjectInteraction = 0x100000,
				IsMarker = 0x800000,
				Obstacle = 0x2000000,
				NavMeshGeneration_Filter = 0x4000000,
				NavMeshGeneration_BoundingBox = 0x8000000,
				ChildCanUse = 0x20000000,
				NavMeshGeneration_Ground = 0x40000000,
			};

			property BGSSoundDescriptorForm^ SoundLoop
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}

			property BGSSoundDescriptorForm^ SoundActivate
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}

			property TESWaterForm^ WaterForm
			{
				TESWaterForm^ __clrcall get();
			}

			property TESObjectACTI::DataFlags ActivatorFlags
			{
				TESObjectACTI::DataFlags __clrcall get();
			}
		};

		public interface class ExtraCellWaterType : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property TESWaterForm^ Water
			{
				TESWaterForm^ __clrcall get();
			}
		};

		public interface class BGSTalkingActivator : public TESObjectACTI, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				HiddenFromLocalMap = 0x200,
				Ignored = 0x1000,
				RandomAnimStart = 0x10000,
				RadioStation = 0x20000,
			};

			enum class ChangeFlags : System::UInt32
			{
				None = 0,
				Speaker = 0x800000,
			};

			property TESObjectREFR^ TempRef
			{
				TESObjectREFR^ __clrcall get();
			}

			property BGSVoiceType^ VoiceType
			{
				BGSVoiceType^ __clrcall get();
			}
		};

		public interface class TESWaterForm : public TESForm, public TESFullName, public TESAttackDamageForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DataFlags : System::Byte
			{
				None = 0,
				CauseDamage = 1,
				EnableFlowmap = 8,
				BlendNormals = 0x10,
			};

			interface class DepthProperties : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Single Reflections
				{
					System::Single __clrcall get();
				}

				property System::Single Refraction
				{
					System::Single __clrcall get();
				}

				property System::Single Normals
				{
					System::Single __clrcall get();
				}

				property System::Single SpecularLighting
				{
					System::Single __clrcall get();
				}
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			interface class WaterShaderData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Single SunSpecularPower
				{
					System::Single __clrcall get();
				}

				property System::Single ReflectionAmount
				{
					System::Single __clrcall get();
				}

				property System::Single FresnelAmount
				{
					System::Single __clrcall get();
				}

				property System::Single AboveWaterFogDistNear
				{
					System::Single __clrcall get();
				}

				property System::Single AboveWaterFogDistFar
				{
					System::Single __clrcall get();
				}

				property Color^ ShallowWaterColor
				{
					Color^ __clrcall get();
				}

				property Color^ DeepWaterColor
				{
					Color^ __clrcall get();
				}

				property Color^ ReflectionWaterColor
				{
					Color^ __clrcall get();
				}

				property System::Single DisplacementSize
				{
					System::Single __clrcall get();
				}

				property System::Single DisplacementForce
				{
					System::Single __clrcall get();
				}

				property System::Single DisplacementVelocity
				{
					System::Single __clrcall get();
				}

				property System::Single DisplacementFalloff
				{
					System::Single __clrcall get();
				}

				property System::Single DisplacementDampener
				{
					System::Single __clrcall get();
				}

				property System::Single NoiseFalloff
				{
					System::Single __clrcall get();
				}

				property NetScriptFramework::FixedMemoryArray<System::Single>^ NoiseWindDirectionA
				{
					NetScriptFramework::FixedMemoryArray<System::Single>^ __clrcall get();
				}

				property NetScriptFramework::FixedMemoryArray<System::Single>^ NoiseWindSpeedA
				{
					NetScriptFramework::FixedMemoryArray<System::Single>^ __clrcall get();
				}

				property System::Single AboveWaterFogAmount
				{
					System::Single __clrcall get();
				}

				property System::Single UnderwaterFogAmount
				{
					System::Single __clrcall get();
				}

				property System::Single UnderwaterFogDistNear
				{
					System::Single __clrcall get();
				}

				property System::Single UnderwaterFogDistFar
				{
					System::Single __clrcall get();
				}

				property System::Single RefractionMagnitude
				{
					System::Single __clrcall get();
				}

				property System::Single SpecularPower
				{
					System::Single __clrcall get();
				}

				property System::Single SpecularRadius
				{
					System::Single __clrcall get();
				}

				property System::Single SpecularBrightness
				{
					System::Single __clrcall get();
				}

				property NetScriptFramework::FixedMemoryArray<System::Single>^ UvScaleA
				{
					NetScriptFramework::FixedMemoryArray<System::Single>^ __clrcall get();
				}

				property NetScriptFramework::FixedMemoryArray<System::Single>^ AmplitudeA
				{
					NetScriptFramework::FixedMemoryArray<System::Single>^ __clrcall get();
				}

				property System::Single ReflectionMagnitude
				{
					System::Single __clrcall get();
				}

				property System::Single SunSparkleMagnitude
				{
					System::Single __clrcall get();
				}

				property System::Single SunSpecularMagnitude
				{
					System::Single __clrcall get();
				}

				property TESWaterForm::DepthProperties^ DepthInfo
				{
					TESWaterForm::DepthProperties^ __clrcall get();
				}

				property System::Single SunSparklePower
				{
					System::Single __clrcall get();
				}

				property System::Single FlowmapScale
				{
					System::Single __clrcall get();
				}
			};

			property System::Boolean NeedUpdate
			{
				System::Boolean __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<NiColorA^>^ TexScroll
			{
				NetScriptFramework::FixedMemoryArray<NiColorA^>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<TESTexture^>^ NoiseTextures
			{
				NetScriptFramework::FixedMemoryArray<TESTexture^>^ __clrcall get();
			}

			property System::SByte Alpha
			{
				System::SByte __clrcall get();
			}

			property TESWaterForm::DataFlags WaterFlags
			{
				TESWaterForm::DataFlags __clrcall get();
			}

			property BGSMaterialType^ MaterialType
			{
				BGSMaterialType^ __clrcall get();
			}

			property BGSSoundDescriptorForm^ WaterSound
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}

			property TESWaterForm::WaterShaderData^ ShaderData
			{
				TESWaterForm::WaterShaderData^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<TESWaterForm^>^ WaterWeatherControl
			{
				NetScriptFramework::FixedMemoryArray<TESWaterForm^>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<System::Int32>^ CurrentTextureSelect
			{
				NetScriptFramework::FixedMemoryArray<System::Int32>^ __clrcall get();
			}

			property System::Int32 FrequencyX
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 FrequencyY
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 Octaves
			{
				System::Int32 __clrcall get();
			}

			property System::Single Amplitude
			{
				System::Single __clrcall get();
			}

			property System::Single Lacunarity
			{
				System::Single __clrcall get();
			}

			property System::Single Bias
			{
				System::Single __clrcall get();
			}

			property System::Single Gain
			{
				System::Single __clrcall get();
			}

			property SpellItem^ ContactSpell
			{
				SpellItem^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<NiPointer<NiTexture^>^>^ NoiseTextureData
			{
				NetScriptFramework::FixedMemoryArray<NiPointer<NiTexture^>^>^ __clrcall get();
			}

			property TESObjectACTI^ PlaceableAutoWater
			{
				TESObjectACTI^ __clrcall get();
			}

			property TESObjectACTI^ PlaceableLODWater
			{
				TESObjectACTI^ __clrcall get();
			}

			property BSWaterShaderMaterial^ WaterShaderMaterial
			{
				BSWaterShaderMaterial^ __clrcall get();
			}

			property System::Boolean ResetNoiseTextures
			{
				System::Boolean __clrcall get();
			}

			property TESImageSpace^ ImageSpace
			{
				TESImageSpace^ __clrcall get();
			}

			property NiPoint3^ LinearVelocity
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ AngularVelocity
			{
				NiPoint3^ __clrcall get();
			}
		};

		public interface class TESFlora : public TESObjectACTI, public TESProduceForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};
		};

		public interface class TESFurniture : public TESObjectACTI, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class ActiveMarkerFlags : System::UInt32
			{
				None = 0,
				Sit0 = 1,
				Sit1 = 2,
				Sit2 = 4,
				Sit3 = 8,
				Sit4 = 0x10,
				Sit5 = 0x20,
				Sit6 = 0x40,
				Sit7 = 0x80,
				Sit8 = 0x100,
				Sit9 = 0x200,
				Sit10 = 0x400,
				Sit11 = 0x800,
				Sit12 = 0x1000,
				Sit13 = 0x2000,
				Sit14 = 0x4000,
				Sit15 = 0x8000,
				Sit16 = 0x10000,
				Sit17 = 0x20000,
				Sit18 = 0x40000,
				Sit19 = 0x80000,
				Sit20 = 0x100000,
				Sit21 = 0x200000,
				Sit22 = 0x400000,
				Sit23 = 0x800000,
				DisablesActivation = 0x2000000,
				IsPerch = 0x4000000,
				MustExitToTalk = 0x8000000,
			};

			enum class WorkBenchTypes : System::SByte
			{
				None = 0,
				CreateObject = 1,
				SmithingWeapon = 2,
				Enchanting = 3,
				EnchantingExperiment = 4,
				Alchemy = 5,
				AlchemyExperiment = 6,
				SmithingArmor = 7,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				IsPerch = 0x80,
				Ignored = 0x1000,
				HasDistantLOD = 0x8000,
				RandomAnimStart = 0x10000,
				IsMarker = 0x800000,
				MustExitToTalk = 0x10000000,
				ChildCanUse = 0x20000000,
			};

			enum class DisabledEntryPointFlags : System::UInt16
			{
				None = 0,
				Front = 1,
				Behind = 2,
				Right = 4,
				Left = 8,
				Up = 0x10,
			};

			interface class WorkBenchData : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESFurniture::WorkBenchTypes BenchType
				{
					TESFurniture::WorkBenchTypes __clrcall get();
				}

				property ActorValueIndices8 UsesSkill
				{
					ActorValueIndices8 __clrcall get();
				}
			};

			interface class DisabledEntryPointData : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESFurniture::DisabledEntryPointFlags DisabledPoints
				{
					TESFurniture::DisabledEntryPointFlags __clrcall get();
				}
			};

			interface class EntryPointData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::UInt32 EntryPoint
				{
					System::UInt32 __clrcall get();
				}

				property TESFurniture::DisabledEntryPointData^ DisabledEntryPoints
				{
					TESFurniture::DisabledEntryPointData^ __clrcall get();
				}

				property BGSKeyword^ Keyword
				{
					BGSKeyword^ __clrcall get();
				}
			};

			property BSTArray<TESFurniture::EntryPointData^, BSTArrayHeapAllocator^>^ EntryPointDataArray
			{
				BSTArray<TESFurniture::EntryPointData^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property TESFurniture::WorkBenchData^ WorkBenchInfo
			{
				TESFurniture::WorkBenchData^ __clrcall get();
			}

			property TESFurniture::ActiveMarkerFlags FurnitureFlags
			{
				TESFurniture::ActiveMarkerFlags __clrcall get();
			}

			property SpellItem^ AssociatedForm
			{
				SpellItem^ __clrcall get();
			}
		};

		interface class hkConstraintInternal;

		generic <typename hkSmallArray_T1>
		public interface class hkSmallArray : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConstraintInstance : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class ConstraintPriority : System::Int32
			{
				PRIORITY_INVALID = 0,
				PRIORITY_PSI = 1,
				PRIORITY_SIMPLIFIED_TOI_UNUSED = 2,
				PRIORITY_TOI = 3,
				PRIORITY_TOI_HIGHER = 4,
				PRIORITY_TOI_FORCED = 5,
				NUM_PRIORITIES = 6,
			};

			enum class OnDestructionRemapInfo : System::Int32
			{
				ON_DESTRUCTION_REMAP = 0,
				ON_DESTRUCTION_REMOVE = 1,
				ON_DESTRUCTION_RESET_REMOVE = 2,
			};

			enum class AddReferences : System::Int32
			{
				DO_NOT_ADD_REFERENCES = 0,
				DO_ADD_REFERENCES = 1,
			};

			enum class CloningMode : System::Int32
			{
				CLONE_SHALLOW_IF_NOT_CONSTRAINED_TO_WORLD = 0,
				CLONE_DATAS_WITH_MOTORS = 1,
				CLONE_FORCE_SHALLOW = 2,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			enum class InstanceType : System::Int32
			{
				TYPE_NORMAL = 0,
				TYPE_CHAIN = 1,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class SmallArraySerializeOverrideType : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};
		};

		public interface class hkConstraintInternal : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class BSMultiBoundNode;

		generic <typename NiTMapItem_T1, typename NiTMapItem_T2>
		public interface class NiTMapItem : public NetScriptFramework::IMemoryObject
		{
		public:
			property NiTMapItem<NiTMapItem_T1, NiTMapItem_T2>^ Next
			{
				NiTMapItem<NiTMapItem_T1, NiTMapItem_T2>^ __clrcall get();
			}

			property NiTMapItem_T1 Key
			{
				NiTMapItem_T1 __clrcall get();
			}

			property NiTMapItem_T2 Value
			{
				NiTMapItem_T2 __clrcall get();
			}
		};

		generic <typename NiTMapBase_T1, typename NiTMapBase_T2, typename NiTMapBase_T3>
		public interface class NiTMapBase : public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Int32 Capacity
			{
				System::Int32 __clrcall get();
			}

			property System::IntPtr Data
			{
				System::IntPtr __clrcall get();
			}

			property unknown^ Allocator
			{
				unknown^ __clrcall get();
			}
		};

		generic <typename NiTMap_T1, typename NiTMap_T2>
		public interface class NiTMap : public NiTMapBase<DFALL<NiTMapItem<NiTMap_T1, NiTMap_T2>^>^, NiTMap_T1, NiTMap_T2>, public NetScriptFramework::IVirtualObject { };

		generic <typename NiTPointerMap_T1, typename NiTPointerMap_T2>
		public interface class NiTPointerMap : public NiTMapBase<NiTPointerAllocator<System::UInt64>^, NiTPointerMap_T1, NiTPointerMap_T2>, public NetScriptFramework::IVirtualObject { };

		public interface class BGSSaveLoadStatsMap : public NiTMap<ENUM_FORM_ID^, BSSimpleList<SavedFormData^>^>, public NetScriptFramework::IVirtualObject { };

		public interface class TESWorldSpace : public TESForm, public TESFullName, public TESModel, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DataFlags : System::Byte
			{
				None = 0,
				SmallWorld = 1,
				CantFastTravel = 2,
				NoLODWater = 8,
				NoLandscape = 0x10,
				NoSky = 0x20,
				FixedDimensions = 0x40,
				NoGrass = 0x80,
			};

			enum class ParentUseFlags : System::UInt16
			{
				None = 0,
				UseLandData = 1,
				UseLODData = 2,
				DontUseMapData = 4,
				UseWaterData = 8,
				UseClimateData = 0x10,
				UseImageSpaceData = 0x20,
				UseSkyCell = 0x40,
			};

			interface class WorldMapOffsetData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Single MapScale
				{
					System::Single __clrcall get();
				}

				property System::Single MapOffsetX
				{
					System::Single __clrcall get();
				}

				property System::Single MapOffsetY
				{
					System::Single __clrcall get();
				}

				property System::Single MapOffsetZ
				{
					System::Single __clrcall get();
				}
			};

			interface class CameraData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Single MinHeight
				{
					System::Single __clrcall get();
				}

				property System::Single MaxHeight
				{
					System::Single __clrcall get();
				}

				property System::Single InitialPitch
				{
					System::Single __clrcall get();
				}
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
				CantWait = 0x80000,
			};

			interface class WorldMapData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Int32 UsableWidth
				{
					System::Int32 __clrcall get();
				}

				property System::Int32 UsableHeight
				{
					System::Int32 __clrcall get();
				}

				property System::Int16 NorthWestCellX
				{
					System::Int16 __clrcall get();
				}

				property System::Int16 NorthWestCellY
				{
					System::Int16 __clrcall get();
				}

				property System::Int16 SouthEastCellX
				{
					System::Int16 __clrcall get();
				}

				property System::Int16 SouthEastCellY
				{
					System::Int16 __clrcall get();
				}

				property TESWorldSpace::CameraData^ CameraInfo
				{
					TESWorldSpace::CameraData^ __clrcall get();
				}
			};

			property BSTHashMap2<System::UInt32, TESObjectCELL^>^ CellIdMap
			{
				BSTHashMap2<System::UInt32, TESObjectCELL^>^ __clrcall get();
			}

			property TESObjectCELL^ PersistentCell
			{
				TESObjectCELL^ __clrcall get();
			}

			property System::IntPtr TerrainManager
			{
				System::IntPtr __clrcall get();
			}

			property TESClimate^ Climate
			{
				TESClimate^ __clrcall get();
			}

			property TESWorldSpace::DataFlags WorldSpaceFlags
			{
				TESWorldSpace::DataFlags __clrcall get();
			}

			property TESWorldSpace::ParentUseFlags ParentUse
			{
				TESWorldSpace::ParentUseFlags __clrcall get();
			}

			property System::Int16 FixedCenterX
			{
				System::Int16 __clrcall get();
			}

			property System::Int16 FixedCenterY
			{
				System::Int16 __clrcall get();
			}

			property BSTHashMap2<System::UInt32, BSTArray<NiPointer<TESObjectREFR^>^, BSTArrayHeapAllocator^>^>^ FixedPersistentRefMap
			{
				BSTHashMap2<System::UInt32, BSTArray<NiPointer<TESObjectREFR^>^, BSTArrayHeapAllocator^>^>^ __clrcall get();
			}

			property BSTArray<NiPointer<TESObjectREFR^>^, BSTArrayHeapAllocator^>^ MobilePersistentRefs
			{
				BSTArray<NiPointer<TESObjectREFR^>^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property NiTPointerMap<System::UInt32, BSSimpleList<TESObjectREFR^>^>^ OverlappedMultiboundMap
			{
				NiTPointerMap<System::UInt32, BSSimpleList<TESObjectREFR^>^>^ __clrcall get();
			}

			property TESObjectCELL^ SkyCell
			{
				TESObjectCELL^ __clrcall get();
			}

			property BSTHashMap2<System::UInt32, BGSLocation^>^ LocationFormIdMap
			{
				BSTHashMap2<System::UInt32, BGSLocation^>^ __clrcall get();
			}

			property TESWorldSpace^ ParentWorld
			{
				TESWorldSpace^ __clrcall get();
			}

			property BGSLightingTemplate^ LightingTemplate
			{
				BGSLightingTemplate^ __clrcall get();
			}

			property TESWaterForm^ WorldWater
			{
				TESWaterForm^ __clrcall get();
			}

			property TESWaterForm^ LodWater
			{
				TESWaterForm^ __clrcall get();
			}

			property System::Single LodWaterHeight
			{
				System::Single __clrcall get();
			}

			property TESWorldSpace::WorldMapData^ WorldMap
			{
				TESWorldSpace::WorldMapData^ __clrcall get();
			}

			property TESWorldSpace::WorldMapOffsetData^ WorldMapOffset
			{
				TESWorldSpace::WorldMapOffsetData^ __clrcall get();
			}

			property BGSMusicType^ MusicType
			{
				BGSMusicType^ __clrcall get();
			}

			property NiPoint2^ MinimumCoords
			{
				NiPoint2^ __clrcall get();
			}

			property NiPoint2^ MaximumCoords
			{
				NiPoint2^ __clrcall get();
			}

			property BSString^ FormEditorId
			{
				BSString^ __clrcall get();
			}

			property System::Single DefaultLandHeight
			{
				System::Single __clrcall get();
			}

			property System::Single DefaultWaterHeight
			{
				System::Single __clrcall get();
			}

			property System::Single DistantLODMult
			{
				System::Single __clrcall get();
			}

			property BGSEncounterZone^ EncounterZone
			{
				BGSEncounterZone^ __clrcall get();
			}

			property BGSLocation^ Location
			{
				BGSLocation^ __clrcall get();
			}

			property TESTexture^ CanopyShadowTexture
			{
				TESTexture^ __clrcall get();
			}

			property TESTexture^ WaterEnvMap
			{
				TESTexture^ __clrcall get();
			}

			property BGSLargeRefData^ LargeRefData
			{
				BGSLargeRefData^ __clrcall get();
			}

			property System::Single NorthRotation
			{
				System::Single __clrcall get();
			}

			property System::IntPtr MaxHeightData
			{
				System::IntPtr __clrcall get();
			}

			/// <summary>
			/// Gets the cell by its coordinates.
			/// </summary>
			/// <param name="x">The X coordinate of cell.</param>
			/// <param name="y">The Y coordinate of cell.</param>
			TESObjectCELL^ GetCellByCoordinates(System::Int32 x, System::Int32 y);

			/// <summary>
			/// Gets the cell by position in world.
			/// </summary>
			/// <param name="x">The X position.</param>
			/// <param name="y">The Y position.</param>
			TESObjectCELL^ GetCellByPosition(System::Single x, System::Single y);
		};

		generic <typename NiTStringMap_T1>
		public interface class NiTStringMap : public NiTStringTemplateMap<NiTMap<System::String^, NiTStringMap_T1>^, NiTStringMap_T1>, public NetScriptFramework::IVirtualObject { };

		generic <typename NiTStringPointerMap_T1>
		public interface class NiTStringPointerMap : public NiTStringTemplateMap<NiTPointerMap<System::String^, NiTStringPointerMap_T1>^, NiTStringPointerMap_T1>, public NetScriptFramework::IVirtualObject { };

		generic <typename BSTCaseInsensitiveStringMap_T1>
		public interface class BSTCaseInsensitiveStringMap : public NiTStringMap<BSTCaseInsensitiveStringMap_T1>, public NetScriptFramework::IVirtualObject { };

		generic <typename SettingCollectionMap_T1>
		public interface class SettingCollectionMap : public SettingCollection<SettingCollectionMap_T1>, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSTCaseInsensitiveStringMap<SettingCollectionMap_T1>^ Settings
			{
				BSTCaseInsensitiveStringMap<SettingCollectionMap_T1>^ __clrcall get();
			}
		};

		public interface class GameSettingCollection : public SettingCollectionMap<Setting^>, public NetScriptFramework::IVirtualObject { };

		interface class NavMesh;

		public interface class NavMeshArray : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSTArray<BSTSmartPointer<NavMesh^, BSTSmartPointerIntrusiveRefCount<NavMesh^>^>^, BSTArrayHeapAllocator^>^ NavMeshes
			{
				BSTArray<BSTSmartPointer<NavMesh^, BSTSmartPointerIntrusiveRefCount<NavMesh^>^>^, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		interface class ExtraNavMeshPortal::DataTarget : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::UInt32 NavMeshFormId
			{
				System::UInt32 __clrcall get();
			}

			property NavMesh^ NavMeshInstance
			{
				NavMesh^ __clrcall get();
			}
		};

		public interface class TESObjectCELL : public TESForm, public TESFullName, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class IDecalRefFunctor : public NetScriptFramework::IVirtualObject { };

			enum class DataFlags : System::UInt16
			{
				None = 0,
				IsInteriorCell = 1,
				HasWater = 2,
				CanTravelFromHere = 4,
				NoLODWater = 8,
				HasTempData = 0x10,
				PublicArea = 0x20,
				HandChanged = 0x40,
				ShowSky = 0x80,
				UseSkyLighting = 0x100,
			};

			enum class CellStates : System::SByte
			{
				None = 0,
				Attached = 7,
			};

			interface class LoadedCellData : public NetScriptFramework::IMemoryObject
			{
			public:
				property NiPointer<NiNode^>^ Cell3D
				{
					NiPointer<NiNode^>^ __clrcall get();
				}

				property NiTMap<System::UInt32, NiNode^>^ EmittanceLightRefHandleMap
				{
					NiTMap<System::UInt32, NiNode^>^ __clrcall get();
				}

				property NiTMap<System::UInt32, NiPointer<BSMultiBoundNode^>^>^ MultiboundRefHandleMap
				{
					NiTMap<System::UInt32, NiPointer<BSMultiBoundNode^>^>^ __clrcall get();
				}

				property NiTMap<BSMultiBoundNode^, System::UInt32>^ RefHandleMultiboundMap
				{
					NiTMap<BSMultiBoundNode^, System::UInt32>^ __clrcall get();
				}

				property BSSimpleList<System::UInt32>^ ActivatingRefHandles
				{
					BSSimpleList<System::UInt32>^ __clrcall get();
				}

				property BGSEncounterZone^ EncounterZone
				{
					BGSEncounterZone^ __clrcall get();
				}
			};

			enum class LandHideFlags : System::Byte
			{
				None = 0,
				Quad1 = 1,
				Quad2 = 2,
				Quad3 = 4,
				Quad4 = 8,
			};

			enum class ChangeFlags : System::UInt32
			{
				None = 0,
				Flags = 2,
				FullName = 4,
				Ownership = 8,
				ExteriorShort = 0x10000000,
				ExteriorChar = 0x20000000,
				DetachTime = 0x40000000,
				SeendData = 0x80000000,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Persistent = 0x400,
				Ignored = 0x1000,
				OffLimits = 0x20000,
				Compressed = 0x40000,
				CantWait = 0x80000,
			};

			interface class ExteriorData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Int32 CellX
				{
					System::Int32 __clrcall get();
				}

				property System::Int32 CellY
				{
					System::Int32 __clrcall get();
				}

				property System::IntPtr MaxHeightData
				{
					System::IntPtr __clrcall get();
				}

				property BGSTerrainVisibilityData^ LodVisibilityData
				{
					BGSTerrainVisibilityData^ __clrcall get();
				}

				property System::Single WorldX
				{
					System::Single __clrcall get();
				}

				property System::Single WorldY
				{
					System::Single __clrcall get();
				}

				property TESObjectCELL::LandHideFlags HideFlags
				{
					TESObjectCELL::LandHideFlags __clrcall get();
				}
			};

			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESObjectCELL::ExteriorData^ Exterior
				{
					TESObjectCELL::ExteriorData^ __clrcall get();
				}

				property BGSLightingTemplate::InteriorData^ Interior
				{
					BGSLightingTemplate::InteriorData^ __clrcall get();
				}
			};

			property Mutex^ GrassCreateLock
			{
				Mutex^ __clrcall get();
			}

			property Mutex^ GrassTaskLock
			{
				Mutex^ __clrcall get();
			}

			property TESObjectCELL::DataFlags CellFlags
			{
				TESObjectCELL::DataFlags __clrcall get();
			}

			property System::UInt16 CellGameFlags
			{
				System::UInt16 __clrcall get();
			}

			property TESObjectCELL::CellStates CellState
			{
				TESObjectCELL::CellStates __clrcall get();
			}

			property System::Boolean AutoWaterLoaded
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean CellDetached
			{
				System::Boolean __clrcall get();
			}

			property BSExtraDataList^ ExtraDataList
			{
				BSExtraDataList^ __clrcall get();
			}

			property TESObjectCELL::Data^ CellData
			{
				TESObjectCELL::Data^ __clrcall get();
			}

			property TESObjectLAND^ CellLand
			{
				TESObjectLAND^ __clrcall get();
			}

			property System::Single WaterHeight
			{
				System::Single __clrcall get();
			}

			property NavMeshArray^ NavMeshes
			{
				NavMeshArray^ __clrcall get();
			}

			/// <summary>
			/// Gets all current references in cell. Must use CellLock when iterating!
			/// </summary>
			property BSTSet<NiPointer<TESObjectREFR^>^>^ References
			{
				BSTSet<NiPointer<TESObjectREFR^>^>^ __clrcall get();
			}

			property BSTArray<TESObjectREFR^, BSTArrayHeapAllocator^>^ PersistentObjectList
			{
				BSTArray<TESObjectREFR^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property Mutex^ CellLock
			{
				Mutex^ __clrcall get();
			}

			/// <summary>
			/// Gets the worldspace of this cell.
			/// </summary>
			property TESWorldSpace^ WorldSpace
			{
				TESWorldSpace^ __clrcall get();
			}

			property TESObjectCELL::LoadedCellData^ LoadedData
			{
				TESObjectCELL::LoadedCellData^ __clrcall get();
			}

			property BGSLightingTemplate^ LightingTemplate
			{
				BGSLightingTemplate^ __clrcall get();
			}

			/// <summary>
			/// Gets the X coordinate of cell in it's worldspace grid. This will return zero for interior cells.
			/// </summary>
			property System::Int32 CoordinateX
			{
				System::Int32 __clrcall get();
			}

			/// <summary>
			/// Gets the Y coordinate of cell in it's worldspace grid. This will return zero for interior cells.
			/// </summary>
			property System::Int32 CoordinateY
			{
				System::Int32 __clrcall get();
			}

			/// <summary>
			/// Gets a value indicating whether this cell is attached.
			/// </summary>
			property System::Boolean IsAttached
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Check if this cell is marked as interior or exterior.
			/// </summary>
			property System::Boolean IsInterior
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Gets the owner form of cell. This could be actor or faction.
			/// </summary>
			property TESForm^ OwnerForm
			{
				TESForm^ __clrcall get();
			}

			/// <summary>
			/// Perform ray casting.
			/// </summary>
			static System::Collections::Generic::List<RayCastResult^>^ RayCast(RayCastParameters^ p);
		};

		interface class anonymous_namespace::ApplyAllDecalsRefFunctor : public TESObjectCELL::IDecalRefFunctor, public NetScriptFramework::IVirtualObject { };

		interface class anonymous_namespace::UpdateAllDecalsRefFunctor : public TESObjectCELL::IDecalRefFunctor, public NetScriptFramework::IVirtualObject { };

		interface class hkpConstraintChainInstance;

		public interface class hkpConstraintChainInstanceAction : public hkpAction, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpPoweredChainMapper : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class LinkInfo : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Target : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class ChainEndpoints : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Config : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpConstraintChainInstance : public hkpConstraintInstance, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class NiControllerSequence;

		generic <typename BSTHashMapEntry_T1, typename BSTHashMapEntry_T2>
		public interface class BSTHashMapEntry : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSTHashMapEntry_T1 Key
			{
				BSTHashMapEntry_T1 __clrcall get();
			}

			property BSTHashMapEntry_T2 Value
			{
				BSTHashMapEntry_T2 __clrcall get();
			}

			property BSTHashMapEntry<BSTHashMapEntry_T1, BSTHashMapEntry_T2>^ Next
			{
				BSTHashMapEntry<BSTHashMapEntry_T1, BSTHashMapEntry_T2>^ __clrcall get();
			}
		};

		interface class BSGeometry;

		public interface class Clouds : public SkyObject, public NetScriptFramework::IVirtualObject
		{
		public:
			property NetScriptFramework::FixedMemoryArray<NiPointer<BSGeometry^>^>^ CloudObjects
			{
				NetScriptFramework::FixedMemoryArray<NiPointer<BSGeometry^>^>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<NiPointer<NiTexture^>^>^ TransTexture
			{
				NetScriptFramework::FixedMemoryArray<NiPointer<NiTexture^>^>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<NiColor^>^ Colors
			{
				NetScriptFramework::FixedMemoryArray<NiColor^>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<System::Single>^ Alphas
			{
				NetScriptFramework::FixedMemoryArray<System::Single>^ __clrcall get();
			}

			property System::UInt16 NumLayers
			{
				System::UInt16 __clrcall get();
			}

			property System::Boolean ForceUpdate
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class Precipitation : public NetScriptFramework::IVirtualObject
		{
		public:
			interface class OcclusionMapData : public NetScriptFramework::IMemoryObject
			{
			public:
				property NetScriptFramework::FixedMemoryArray<System::Single>^ Projection
				{
					NetScriptFramework::FixedMemoryArray<System::Single>^ __clrcall get();
				}

				property NiPointer<NiCamera^>^ Camera
				{
					NiPointer<NiCamera^>^ __clrcall get();
				}

				property NiPointer<BSShaderAccumulator^>^ Accumulator
				{
					NiPointer<BSShaderAccumulator^>^ __clrcall get();
				}

				property BSCullingProcess^ CullingProcess
				{
					BSCullingProcess^ __clrcall get();
				}
			};

			property Precipitation::OcclusionMapData^ OcclusionData
			{
				Precipitation::OcclusionMapData^ __clrcall get();
			}

			property NiPointer<BSGeometry^>^ CurrentPrecipitationObject
			{
				NiPointer<BSGeometry^>^ __clrcall get();
			}

			property NiPointer<BSGeometry^>^ LastPrecipitationObject
			{
				NiPointer<BSGeometry^>^ __clrcall get();
			}

			property System::Single LastCubeSize
			{
				System::Single __clrcall get();
			}

			property System::Single CurrentParticleDensity
			{
				System::Single __clrcall get();
			}

			property System::Single LastParticleDensity
			{
				System::Single __clrcall get();
			}
		};

		interface class NiLight;

		interface class ExtraLight::Data : public NetScriptFramework::IMemoryObject
		{
		public:
			property NiPointer<NiLight^>^ Light
			{
				NiPointer<NiLight^>^ __clrcall get();
			}

			property System::Single WantDimmer
			{
				System::Single __clrcall get();
			}
		};

		public interface class Hazard : public TESObjectREFR, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::IntPtr HazardDBHandle
			{
				System::IntPtr __clrcall get();
			}

			property System::UInt32 OwnerActorRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property System::Single Age
			{
				System::Single __clrcall get();
			}

			property System::Single Lifetime
			{
				System::Single __clrcall get();
			}

			property System::Single TargetTimer
			{
				System::Single __clrcall get();
			}

			property System::Single Radius
			{
				System::Single __clrcall get();
			}

			property System::Single Magnitude
			{
				System::Single __clrcall get();
			}

			property BGSHazard^ HazardForm
			{
				BGSHazard^ __clrcall get();
			}

			property NiPointer<NiLight^>^ Light
			{
				NiPointer<NiLight^>^ __clrcall get();
			}

			property BSSoundHandle^ SoundHandle
			{
				BSSoundHandle^ __clrcall get();
			}

			property System::UInt32 HazardFlags
			{
				System::UInt32 __clrcall get();
			}
		};

		interface class BGSStoryManagerQuestNode;

		public interface class BGSScenePhase : public NetScriptFramework::IMemoryObject
		{
		public:
			property TESCondition^ StartConditions
			{
				TESCondition^ __clrcall get();
			}

			property TESCondition^ CompletionConditions
			{
				TESCondition^ __clrcall get();
			}

			property BGSStoryManagerQuestNode^ QuestNode
			{
				BGSStoryManagerQuestNode^ __clrcall get();
			}
		};

		public interface class BGSStoryManagerTreeVisitor : public NetScriptFramework::IVirtualObject
		{
		public:
			property System::IntPtr Timer
			{
				System::IntPtr __clrcall get();
			}

			property System::Int32 CurrentCursorDepth
			{
				System::Int32 __clrcall get();
			}

			property BGSStoryManagerQuestNode^ LastQuestParent
			{
				BGSStoryManagerQuestNode^ __clrcall get();
			}

			property BSTArray<BGSStoryManagerTreeForm^, BSTArrayHeapAllocator^>^ CursorAncestry
			{
				BSTArray<BGSStoryManagerTreeForm^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property System::UInt32 QueryId
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class BGSScene : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class SceneActorFlags : System::UInt32
			{
				None = 0,
				NoPlayerActivation = 1,
				Optional = 2,
				RunOnlyScenePackages = 4,
				NoCommandState = 8,
			};

			enum class SceneBehaviorFlags : System::UInt32
			{
				None = 0,
				DeathPause = 1,
				DeathEnd = 2,
				CombatPause = 4,
				CombatEnd = 8,
				DialoguePause = 0x10,
				DialogueEnd = 0x20,
				OBS_COMPause = 0x40,
				OBS_COMEnd = 0x80,
			};

			enum class SceneDataFlags : System::UInt32
			{
				None = 0,
				BeginOnQuestStart = 1,
				StopOnQuestEnd = 2,
				RepeatConditionsWhileTrue = 8,
				Interruptible = 0x10,
			};

			enum class ChangeFlags : System::UInt32
			{
				Active = 0x80000000,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property BSTArray<BGSScenePhase^, BSTArrayHeapAllocator^>^ Phases
			{
				BSTArray<BGSScenePhase^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ ActorFormIds
			{
				BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<BGSScene::SceneActorFlags, BSTArrayHeapAllocator^>^ ActorFlags
			{
				BSTArray<BGSScene::SceneActorFlags, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<BGSScene::SceneBehaviorFlags, BSTArrayHeapAllocator^>^ ActorProgressionFlags
			{
				BSTArray<BGSScene::SceneBehaviorFlags, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<BGSSceneAction^, BSTArrayHeapAllocator^>^ Actions
			{
				BSTArray<BGSSceneAction^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property TESQuest^ ParentQuest
			{
				TESQuest^ __clrcall get();
			}

			property BGSScene::SceneDataFlags SceneFlags
			{
				BGSScene::SceneDataFlags __clrcall get();
			}

			property TESCondition^ Conditions
			{
				TESCondition^ __clrcall get();
			}
		};

		public interface class BGSStoryManagerQuestFinder : public BGSStoryManagerTreeVisitor, public NetScriptFramework::IVirtualObject { };

		public interface class ExtraSceneData : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BGSScene^ Scene
			{
				BGSScene^ __clrcall get();
			}
		};

		interface class BGSQuestObjective;

		public interface class TESQuest : public BGSStoryManagerTreeForm, public TESFullName, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DataFlags : System::UInt16
			{
				None = 0,
				Enabled = 1,
				Completed = 2,
				AddIdleToHello = 4,
				AllowRepeatStages = 8,
				StartsEnabled = 0x10,
				DisplayedInHUD = 0x20,
				Failed = 0x40,
				StageWait = 0x80,
				RunOnce = 0x100,
				ExcludeFromExport = 0x200,
				WarnOnAliasFillFailure = 0x400,
				Active = 0x800,
				RepeatsConditions = 0x1000,
				KeepInstance = 0x2000,
				WantDormant = 0x4000,
				HasDialogueData = 0x8000,
				StopStart = 0xFFFF,
			};

			enum class QuestTypes : System::SByte
			{
				None = 0,
				MainQuest = 1,
				MagesGuild = 2,
				ThievesGuild = 3,
				DarkBrotherhood = 4,
				CompanionsQuest = 5,
				Miscellaneous = 6,
				Daedric = 7,
				SideQuest = 8,
				CivilWar = 9,
				DLC01_Vampire = 0xA,
				DLC02_Dragonborn = 0xB,
			};

			enum class DataStageFlags : System::Byte
			{
				None = 0,
				StartUpStage = 2,
				ShutDownStage = 4,
				KeepInstanceDataFromHereOn = 8,
			};

			interface class TargetData : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESCondition^ Conditions
				{
					TESCondition^ __clrcall get();
				}

				property System::Byte Alias
				{
					System::Byte __clrcall get();
				}
			};

			enum class DataObjectiveFlags : System::UInt32
			{
				None = 0,
				ORWithPrevious = 1,
				NoStatsTracking = 2,
			};

			enum class DataTargetFlags : System::UInt32
			{
				None = 0,
				CompassMarkerIgnoresLocks = 1,
			};

			enum class ChangeFlags : System::UInt32
			{
				None = 0,
				QuestFlags = 2,
				QuestScriptDelay = 4,
				QuestAlreadyRun = 0x4000000,
				QuestInstanceData = 0x8000000,
				QuestRuntimeData = 0x10000000,
				QuestObjectives = 0x20000000,
				QuestScript = 0x40000000,
				QuestStages = 0x80000000,
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Single QuestDelayTime
				{
					System::Single __clrcall get();
				}

				property TESQuest::DataFlags QuestFlags
				{
					TESQuest::DataFlags __clrcall get();
				}

				property System::SByte Priority
				{
					System::SByte __clrcall get();
				}

				property TESQuest::QuestTypes QuestType
				{
					TESQuest::QuestTypes __clrcall get();
				}
			};

			interface class StageData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::UInt16 Index
				{
					System::UInt16 __clrcall get();
				}

				property TESQuest::DataStageFlags StageFlags
				{
					TESQuest::DataStageFlags __clrcall get();
				}
			};

			property BSTArray<BGSQuestInstanceText^, BSTArrayHeapAllocator^>^ InstanceData
			{
				BSTArray<BGSQuestInstanceText^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property System::UInt32 CurrentInstanceId
			{
				System::UInt32 __clrcall get();
			}

			property BSTArray<BGSBaseAlias^, BSTArrayHeapAllocator^>^ Aliases
			{
				BSTArray<BGSBaseAlias^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property MutexRW^ AliasAccessLock
			{
				MutexRW^ __clrcall get();
			}

			property TESQuest::Data^ QuestData
			{
				TESQuest::Data^ __clrcall get();
			}

			property QuestEvents QuestEvent
			{
				QuestEvents __clrcall get();
			}

			property BSSimpleList<TESQuest::StageData^>^ ExecutedStages
			{
				BSSimpleList<TESQuest::StageData^>^ __clrcall get();
			}

			property BSSimpleList<TESQuest::StageData^>^ WaitingStages
			{
				BSSimpleList<TESQuest::StageData^>^ __clrcall get();
			}

			property BSSimpleList<BGSQuestObjective^>^ Objectives
			{
				BSSimpleList<BGSQuestObjective^>^ __clrcall get();
			}

			property TESCondition^ ObjectiveConditions
			{
				TESCondition^ __clrcall get();
			}

			property TESCondition^ StoryManagerConditions
			{
				TESCondition^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<BSTHashMap2<BGSDialogueBranch^, BSTArray<TESTopic^, BSTArrayHeapAllocator^>^>^>^ BranchedDialogue
			{
				NetScriptFramework::FixedMemoryArray<BSTHashMap2<BGSDialogueBranch^, BSTArray<TESTopic^, BSTArrayHeapAllocator^>^>^>^ __clrcall get();
			}

			property System::IntPtr Topics
			{
				System::IntPtr __clrcall get();
			}

			property BSTArray<BGSScene^, BSTArrayHeapAllocator^>^ Scenes
			{
				BSTArray<BGSScene^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<TESGlobal^, BSTArrayHeapAllocator^>^ TextGlobals
			{
				BSTArray<TESGlobal^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property System::UInt16 CurrentStage
			{
				System::UInt16 __clrcall get();
			}

			property System::Boolean AlreadyRun
			{
				System::Boolean __clrcall get();
			}

			property BSString^ FormEditorId
			{
				BSString^ __clrcall get();
			}

			property BGSStoryEvent^ StartEventData
			{
				BGSStoryEvent^ __clrcall get();
			}

			property NiPointer<QueuedPromoteQuestTask^>^ PromoteTask
			{
				NiPointer<QueuedPromoteQuestTask^>^ __clrcall get();
			}

			property BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ PromotedRefHandles
			{
				BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			/// <summary>
			/// Gets the alias from this quest.
			/// </summary>
			/// <param name="id">The ID of the alias within this quest.</param>
			BGSBaseAlias^ GetAlias(System::Int32 id);
		};

		public interface class BGSInstancedQuestObjective : public NetScriptFramework::IMemoryObject
		{
		public:
			property BGSQuestObjective^ Objective
			{
				BGSQuestObjective^ __clrcall get();
			}

			property System::UInt32 InstanceID
			{
				System::UInt32 __clrcall get();
			}

			property QuestObjectiveStates InstanceState
			{
				QuestObjectiveStates __clrcall get();
			}
		};

		public interface class BGSQuestObjective : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSFixedString^ DisplayText
			{
				BSFixedString^ __clrcall get();
			}

			property TESQuest^ OwnerQuest
			{
				TESQuest^ __clrcall get();
			}

			property System::IntPtr Targets
			{
				System::IntPtr __clrcall get();
			}

			property System::Int32 NumTargets
			{
				System::Int32 __clrcall get();
			}

			property System::UInt16 Index
			{
				System::UInt16 __clrcall get();
			}

			property System::Boolean Initialized
			{
				System::Boolean __clrcall get();
			}

			property QuestObjectiveStates8 ObjectiveState
			{
				QuestObjectiveStates8 __clrcall get();
			}

			property TESQuest::DataObjectiveFlags ObjectiveFlags
			{
				TESQuest::DataObjectiveFlags __clrcall get();
			}
		};

		public interface class TESQuestStageItem : public NetScriptFramework::IMemoryObject
		{
		public:
			property TESCondition^ ObjConditions
			{
				TESCondition^ __clrcall get();
			}

			property TESQuest^ NextQuest
			{
				TESQuest^ __clrcall get();
			}

			property BGSLocalizedStringDL^ LogEntry
			{
				BGSLocalizedStringDL^ __clrcall get();
			}

			property System::Byte Data
			{
				System::Byte __clrcall get();
			}

			property System::SByte Index
			{
				System::SByte __clrcall get();
			}

			property System::Boolean HasLogEntry
			{
				System::Boolean __clrcall get();
			}

			property TESQuest^ OwnerQuest
			{
				TESQuest^ __clrcall get();
			}

			property TESQuest::StageData^ OwningStage
			{
				TESQuest::StageData^ __clrcall get();
			}
		};

		interface class TESRegionList;

		public interface class ExtraRegionList : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property TESRegionList^ RegionList
			{
				TESRegionList^ __clrcall get();
			}
		};

		public interface class DataHandler : public NetScriptFramework::IMemoryObject
		{
		public:
			property TESObjectList^ ObjectList
			{
				TESObjectList^ __clrcall get();
			}

			property TESRegionList^ RegionList
			{
				TESRegionList^ __clrcall get();
			}

			property NiTPrimitiveArray<TESObjectCELL^>^ InteriorCells
			{
				NiTPrimitiveArray<TESObjectCELL^>^ __clrcall get();
			}

			property NiTPrimitiveArray<BGSAddonNode^>^ AddonNodes
			{
				NiTPrimitiveArray<BGSAddonNode^>^ __clrcall get();
			}

			property NiTPointerListBase<DFALL<TESForm^>^, TESForm^>^ BadForms
			{
				NiTPointerListBase<DFALL<TESForm^>^, TESForm^>^ __clrcall get();
			}

			property System::UInt32 NextFormId
			{
				System::UInt32 __clrcall get();
			}

			property TESFile^ ActiveFile
			{
				TESFile^ __clrcall get();
			}

			property BSSimpleList<TESFile^>^ LoadedMods
			{
				BSSimpleList<TESFile^>^ __clrcall get();
			}

			property TESFileCollection^ CompiledFileCollection
			{
				TESFileCollection^ __clrcall get();
			}

			property System::Boolean MasterSave
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean BlockSave
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean SaveLoadGame
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean AutoSaving
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean ExportingPlugin
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean ClearingData
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean HasDesiredFiles
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean CheckingModels
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean LoadingFiles
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean DontRemoveIds
			{
				System::Boolean __clrcall get();
			}

			property TESRegionDataManager^ RegionDataManager
			{
				TESRegionDataManager^ __clrcall get();
			}

			/// <summary>
			/// Gets the data handler instance.
			/// </summary>
			static property DataHandler^ Instance
			{
				DataHandler^ __clrcall get()
				{
					return NetScriptFramework::MemoryObject::FromAddress<DataHandler^>(NetScriptFramework::Memory::ReadPointer(__VIDS::VID514141.Value, false));
				}
			}

			/// <summary>
			/// Gets an array of all forms by form type.
			/// </summary>
			/// <param name="type">The form type.</param>
			BSTArray<TESForm^, BSTArrayHeapAllocator^>^ GetAllFormsByType(FormTypes type);
		};

		interface class hkpMaxSizeMotion;

		public interface class hkpEntity : public hkpWorldObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class SpuCollisionCallback : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class ExtendedListeners : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };

			interface class SmallArraySerializeOverrideType : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			enum class SpuCollisionCallbackEventFilter : System::Int32
			{
				SPU_SEND_NONE = 0,
				SPU_SEND_CONTACT_POINT_ADDED = 1,
				SPU_SEND_CONTACT_POINT_PROCESS = 2,
				SPU_SEND_CONTACT_POINT_REMOVED = 4,
				SPU_SEND_CONTACT_POINT_ADDED_OR_PROCESS = 3,
			};
		};

		public interface class hkpMotion : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class MotionType : System::Int32
			{
				MOTION_INVALID = 0,
				MOTION_DYNAMIC = 1,
				MOTION_SPHERE_INERTIA = 2,
				MOTION_BOX_INERTIA = 3,
				MOTION_KEYFRAMED = 4,
				MOTION_FIXED = 5,
				MOTION_THIN_BOX_INERTIA = 6,
				MOTION_CHARACTER = 7,
				MOTION_MAX_ID = 8,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpRigidBody : public hkpEntity, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpBoxMotion : public hkpMotion, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpCharacterMotion : public hkpMotion, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpKeyframedRigidMotion : public hkpMotion, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSphereMotion : public hkpMotion, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpRigidBodyCinfo : public NetScriptFramework::IMemoryObject
		{
		public:
			enum class SolverDeactivation : System::Int32
			{
				SOLVER_DEACTIVATION_INVALID = 0,
				SOLVER_DEACTIVATION_OFF = 1,
				SOLVER_DEACTIVATION_LOW = 2,
				SOLVER_DEACTIVATION_MEDIUM = 3,
				SOLVER_DEACTIVATION_HIGH = 4,
				SOLVER_DEACTIVATION_MAX = 5,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpRigidBodyResetUtil : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpRigidMotion : public hkpMotion, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkWorldOperation::SetRigidBodyMotionType : public hkWorldOperation::BaseOperation, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpMaxSizeMotion : public hkpKeyframedRigidMotion, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpFixedRigidMotion : public hkpKeyframedRigidMotion, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpThinBoxMotion : public hkpBoxMotion, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class _RTL_CRITICAL_SECTION;

		public interface class hkCriticalSection : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class _RTL_CRITICAL_SECTION_DEBUG : public NetScriptFramework::IMemoryObject { };

		public interface class _RTL_CRITICAL_SECTION : public NetScriptFramework::IMemoryObject { };

		public interface class CRITICAL_SECTION : public _RTL_CRITICAL_SECTION, public NetScriptFramework::IMemoryObject { };

		interface class hkpBuildJacobianTaskHeader;

		public interface class hkpBuildJacobianTask : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class AtomInfo : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSolveConstraintBatchTask : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpBuildJacobianTaskCollection : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class CallbackPair : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSolveJacobiansTaskCollection : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpBuildJacobianTaskHeader : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class _s__RTTIClassHierarchyDescriptor;

		public interface class _s__RTTIBaseClassDescriptor2 : public NetScriptFramework::IMemoryObject { };

		public interface class _s__RTTICompleteObjectLocator2 : public NetScriptFramework::IMemoryObject { };

		public interface class _s__RTTIBaseClassArray : public NetScriptFramework::IMemoryObject { };

		public interface class _s__RTTIClassHierarchyDescriptor : public NetScriptFramework::IMemoryObject { };

		interface class DialogueItem;

		public interface class ExtraSayToTopicInfo : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property TESTopic^ Topic
			{
				TESTopic^ __clrcall get();
			}

			property System::Single SubtitleSpeechDelay
			{
				System::Single __clrcall get();
			}

			property BGSDialogueBranch^ ExclusiveBranch
			{
				BGSDialogueBranch^ __clrcall get();
			}

			property DialogueItem^ Item
			{
				DialogueItem^ __clrcall get();
			}
		};

		public interface class DialogueItem : public BSIntrusiveRefCounted, public NetScriptFramework::IMemoryObject
		{
		public:
			property BSSimpleList<DialogueResponse^>^ Responses
			{
				BSSimpleList<DialogueResponse^>^ __clrcall get();
			}

			property BSSimpleList<DialogueResponse^>^ CurrentResponse
			{
				BSSimpleList<DialogueResponse^>^ __clrcall get();
			}

			property TESTopicInfo^ TopicInfo
			{
				TESTopicInfo^ __clrcall get();
			}

			property TESTopic^ Topic
			{
				TESTopic^ __clrcall get();
			}

			property TESQuest^ Quest
			{
				TESQuest^ __clrcall get();
			}

			property Actor^ Speaker
			{
				Actor^ __clrcall get();
			}

			property ExtraSayToTopicInfo^ ExtraData
			{
				ExtraSayToTopicInfo^ __clrcall get();
			}
		};

		interface class NiProperty;

		public interface class BSMaterialObject : public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DataFlags : System::UInt32
			{
				None = 0,
				Snow = 1,
			};

			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Single FalloffScale
				{
					System::Single __clrcall get();
				}

				property System::Single FalloffBias
				{
					System::Single __clrcall get();
				}

				property System::Single NoiseUVScale
				{
					System::Single __clrcall get();
				}

				property System::Single MaterialUVScale
				{
					System::Single __clrcall get();
				}

				property NiPoint3^ ProjectionDir
				{
					NiPoint3^ __clrcall get();
				}

				property System::Single NormalDampener
				{
					System::Single __clrcall get();
				}

				property NiColor^ SinglePassColor
				{
					NiColor^ __clrcall get();
				}

				property System::Int32 SinglePass
				{
					System::Int32 __clrcall get();
				}

				property BSMaterialObject::DataFlags Flags
				{
					BSMaterialObject::DataFlags __clrcall get();
				}
			};

			property BSMaterialObject::Data^ DirectionalData
			{
				BSMaterialObject::Data^ __clrcall get();
			}

			property BSTArray<NiPointer<NiProperty^>^, BSTArrayHeapAllocator^>^ Properties
			{
				BSTArray<NiPointer<NiProperty^>^, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		public interface class BGSMaterialObject : public TESForm, public TESModel, public BSMaterialObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class FileData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::IntPtr Buffer
				{
					System::IntPtr __clrcall get();
				}

				property System::Int32 BufferSize
				{
					System::Int32 __clrcall get();
				}
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};
		};

		interface class TESObjectSTAT::Data : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::Single MaterialThresholdAngle
			{
				System::Single __clrcall get();
			}

			property BGSMaterialObject^ MaterialObj
			{
				BGSMaterialObject^ __clrcall get();
			}

			property TESObjectSTAT::DataFlags StaticFlags
			{
				TESObjectSTAT::DataFlags __clrcall get();
			}
		};

		interface class NiBillboardNode;

		public interface class HighProcessData : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class KnowledgeData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::UInt32 FormId
				{
					System::UInt32 __clrcall get();
				}

				property NiPointer<ActorKnowledge^>^ Knowledge
				{
					NiPointer<ActorKnowledge^>^ __clrcall get();
				}
			};

			property VoiceStates VoiceState
			{
				VoiceStates __clrcall get();
			}

			property TESShout^ CurrentShout
			{
				TESShout^ __clrcall get();
			}

			property ShoutWordTypes CurrentShoutVariation
			{
				ShoutWordTypes __clrcall get();
			}

			property System::Single VoiceTimeElapsed
			{
				System::Single __clrcall get();
			}

			property System::Single VoiceRecoveryTime
			{
				System::Single __clrcall get();
			}

			property System::Single HealthRegenDelay
			{
				System::Single __clrcall get();
			}

			property System::Single StaminaRegenDelay
			{
				System::Single __clrcall get();
			}

			property System::Single MagickaRegenDelay
			{
				System::Single __clrcall get();
			}

			property BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ LastSpokenToActorRefHandles
			{
				BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BGSAnimationSequencer^ AnimSequencer
			{
				BGSAnimationSequencer^ __clrcall get();
			}

			property NiPoint3^ PathingCurrentMovementSpeed
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ PathingCurrentRotationSpeed
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ PathingDesiredPosition
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ PathingDesiredOrientation
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ PathingDesiredMovementSpeed
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ PathingDesiredRotationSpeed
			{
				NiPoint3^ __clrcall get();
			}

			property System::UInt32 LastExteriorDoorActivatedRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property System::Single ActivationHeight
			{
				System::Single __clrcall get();
			}

			property BSFixedString^ VoiceSubtitle
			{
				BSFixedString^ __clrcall get();
			}

			property FadeStates FadeState
			{
				FadeStates __clrcall get();
			}

			property System::Single HeadTrackTargetTimer
			{
				System::Single __clrcall get();
			}

			property NiPoint3^ HeadTrackTargetOffset
			{
				NiPoint3^ __clrcall get();
			}

			property System::Single HeadTrackHoldOffsetHoldTimer
			{
				System::Single __clrcall get();
			}

			property System::Single HeadTrackTargetOffsetTimer
			{
				System::Single __clrcall get();
			}

			property System::UInt32 LastTargetRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 PathLookAtTargetRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property System::Single CachedActorHeight
			{
				System::Single __clrcall get();
			}

			property BSTArray<unknown^, BSTArrayHeapAllocator^>^ KnowledgeArray
			{
				BSTArray<unknown^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property MutexRW^ KnowledgeLock
			{
				MutexRW^ __clrcall get();
			}

			property BSTArray<System::IntPtr, BSTArrayHeapAllocator^>^ QueueofGreetings
			{
				BSTArray<System::IntPtr, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property NiPointer<BGSAttackData^>^ AttackData
			{
				NiPointer<BGSAttackData^>^ __clrcall get();
			}

			property NiPoint3^ LocationOffsetByWaterPoint
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ DeathForceDirection
			{
				NiPoint3^ __clrcall get();
			}

			property System::Single DeathForce
			{
				System::Single __clrcall get();
			}

			property System::Single ClearTalkToListTimer
			{
				System::Single __clrcall get();
			}

			property System::Single MaxAlpha
			{
				System::Single __clrcall get();
			}

			property NiPoint3^ LeftWeaponLastPos
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ RightWeaponLastPos
			{
				NiPoint3^ __clrcall get();
			}

			property System::UInt32 GreetActorRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property System::Single SoundDelay
			{
				System::Single __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<BSSoundHandle^>^ SoundHandles
			{
				NetScriptFramework::FixedMemoryArray<BSSoundHandle^>^ __clrcall get();
			}

			property System::Single GreetingTimer
			{
				System::Single __clrcall get();
			}

			property System::Single ExclusiveTimer
			{
				System::Single __clrcall get();
			}

			property System::Single IdleTimer
			{
				System::Single __clrcall get();
			}

			property System::Single DetectGreetTimer
			{
				System::Single __clrcall get();
			}

			property System::Single BreathTimer
			{
				System::Single __clrcall get();
			}

			property BSTSmartPointer<DialogueItem^, BSTSmartPointerIntrusiveRefCount<DialogueItem^>^>^ GreetTopic
			{
				BSTSmartPointer<DialogueItem^, BSTSmartPointerIntrusiveRefCount<DialogueItem^>^>^ __clrcall get();
			}

			property NiPointer<NiBillboardNode^>^ HealthBarNode
			{
				NiPointer<NiBillboardNode^>^ __clrcall get();
			}

			property System::Int32 NumberGuardsPursuing
			{
				System::Int32 __clrcall get();
			}

			property System::Single ReEquipArmorTimer
			{
				System::Single __clrcall get();
			}

			property BSSimpleList<SpellItem^>^ LeveledSpellList
			{
				BSSimpleList<SpellItem^>^ __clrcall get();
			}

			property System::Single DetectionModifier
			{
				System::Single __clrcall get();
			}

			property System::Single DetectionModifierTimer
			{
				System::Single __clrcall get();
			}

			property System::Single LightLevel
			{
				System::Single __clrcall get();
			}

			property System::Single SceneHeadTrackTimer
			{
				System::Single __clrcall get();
			}

			property System::Single PCapVoiceFailsafeTimer
			{
				System::Single __clrcall get();
			}

			property DetectionEvent^ ActorsGeneratedDetectionEvent
			{
				DetectionEvent^ __clrcall get();
			}

			property NiPointer<anonymous_namespace::StandardDetectionListener^>^ DetectionListener
			{
				NiPointer<anonymous_namespace::StandardDetectionListener^>^ __clrcall get();
			}

			property NiPoint3^ AnimationDelta
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ AnimationAngleMod
			{
				NiPoint3^ __clrcall get();
			}

			property Crime^ CrimeToReactTo
			{
				Crime^ __clrcall get();
			}

			property System::Boolean Arrested
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean FarGeometry
			{
				System::Boolean __clrcall get();
			}
		};

		interface class TESRegionPointList;

		public interface class TESRegion : public TESForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				BorderRegion = 0x40,
				Ignored = 0x1000,
			};

			property System::IntPtr DataList
			{
				System::IntPtr __clrcall get();
			}

			property BSSimpleList<TESRegionPointList^>^ PointLists
			{
				BSSimpleList<TESRegionPointList^>^ __clrcall get();
			}

			property TESWorldSpace^ WorldSpace
			{
				TESWorldSpace^ __clrcall get();
			}

			property TESWeather^ CurrentWeather
			{
				TESWeather^ __clrcall get();
			}

			property NiColor^ EmittanceColor
			{
				NiColor^ __clrcall get();
			}
		};

		interface class BSAnimationGraphVariableCache;

		public interface class BSAnimationGraphManager : public BSTEventSink<BSAnimationGraphEvent^>, public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class AnimationVariableValue : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Boolean BoolValue
				{
					System::Boolean __clrcall get();
				}

				property System::Int32 IntValue
				{
					System::Int32 __clrcall get();
				}

				property System::Single FloatValue
				{
					System::Single __clrcall get();
				}
			};

			interface class AnimationVariable : public NetScriptFramework::IMemoryObject
			{
			public:
				property BSFixedString^ Name
				{
					BSFixedString^ __clrcall get();
				}

				property BSAnimationGraphManager::AnimationVariableValue^ Value
				{
					BSAnimationGraphManager::AnimationVariableValue^ __clrcall get();
				}
			};

			property BSTArray<BSTSmartPointer<BSAnimationGraphChannel^, BSTSmartPointerIntrusiveRefCount<BSAnimationGraphChannel^>^>^, BSTArrayHeapAllocator^>^ BoundChannels
			{
				BSTArray<BSTSmartPointer<BSAnimationGraphChannel^, BSTSmartPointerIntrusiveRefCount<BSAnimationGraphChannel^>^>^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<BSTSmartPointer<BSAnimationGraphChannel^, BSTSmartPointerIntrusiveRefCount<BSAnimationGraphChannel^>^>^, BSTArrayHeapAllocator^>^ BumpedChannels
			{
				BSTArray<BSTSmartPointer<BSAnimationGraphChannel^, BSTSmartPointerIntrusiveRefCount<BSAnimationGraphChannel^>^>^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property unknown^ Graphs
			{
				unknown^ __clrcall get();
			}

			property BSTArray<BSTSmartPointer<BSAnimationGraphManager^, BSTSmartPointerIntrusiveRefCount<BSAnimationGraphManager^>^>^, BSTArrayHeapAllocator^>^ SubManagers
			{
				BSTArray<BSTSmartPointer<BSAnimationGraphManager^, BSTSmartPointerIntrusiveRefCount<BSAnimationGraphManager^>^>^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSAnimationGraphVariableCache^ VariableCache
			{
				BSAnimationGraphVariableCache^ __clrcall get();
			}

			property Mutex^ UpdateLock
			{
				Mutex^ __clrcall get();
			}

			property Mutex^ DependentManagerLock
			{
				Mutex^ __clrcall get();
			}

			property System::UInt32 ActiveGraph
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 GenerateDepth
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class BSAnimationGraphVariableCache : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSTArray<BSAnimationGraphManager::AnimationVariable^, BSTArrayHeapAllocator^>^ VariableCache
			{
				BSTArray<BSAnimationGraphManager::AnimationVariable^, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		interface class hkpGunProjectile;

		public interface class hkpProjectileGun : public hkpFirstPersonGun, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpGunProjectile : public hkReferencedObject, public hkpContactListener, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class Flags : System::Int32
			{
				HIT_LISTENING = 4,
				HIT = 2,
				DESTROYED = 1,
			};

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpSerializedAgentNnEntry;

		public interface class hkpPhysicsSystemWithContacts : public hkpPhysicsSystem, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class hkpSerializedSubTrack1nInfo;

		public interface class hkpSerializedTrack1nInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSerializedAgentNnEntry : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class SerializedAgentType : System::Int32
			{
				INVALID_AGENT_TYPE = 0,
				BOX_BOX_AGENT3 = 1,
				CAPSULE_TRIANGLE_AGENT3 = 2,
				PRED_GSK_AGENT3 = 3,
				PRED_GSK_CYLINDER_AGENT3 = 4,
				CONVEX_LIST_AGENT3 = 5,
				LIST_AGENT3 = 6,
				BV_TREE_AGENT3 = 7,
				COLLECTION_COLLECTION_AGENT3 = 8,
				COLLECTION_AGENT3 = 9,
			};

			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		public interface class hkpSerializedSubTrack1nInfo : public hkpSerializedTrack1nInfo, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class DefaultStruct : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		interface class BSFogProperty;

		public interface class Atmosphere : public SkyObject, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPointer<BSTriShape^>^ AtmosphereObject
			{
				NiPointer<BSTriShape^>^ __clrcall get();
			}

			property NiPointer<BSFogProperty^>^ Fog
			{
				NiPointer<BSFogProperty^>^ __clrcall get();
			}

			property NiPointer<NiNode^>^ SkyQuadNode
			{
				NiPointer<NiNode^>^ __clrcall get();
			}

			property NiPointer<BSTriShape^>^ SkyQuad
			{
				NiPointer<BSTriShape^>^ __clrcall get();
			}

			property System::Boolean UpdateFogDistance
			{
				System::Boolean __clrcall get();
			}
		};

		interface class NiTimeController;

		public interface class NiObjectNET : public NiObject, public NetScriptFramework::IVirtualObject
		{
		public:
			/// <summary>
			/// Gets the name of object.
			/// </summary>
			property BSFixedString^ Name
			{
				BSFixedString^ __clrcall get();
			}

			property NiPointer<NiTimeController^>^ TimeControllers
			{
				NiPointer<NiTimeController^>^ __clrcall get();
			}

			property NiExtraDataList^ ExtraList
			{
				NiExtraDataList^ __clrcall get();
			}
		};

		public interface class NiAVObject : public NiObjectNET, public NetScriptFramework::IVirtualObject
		{
		public:
			/// <summary>
			/// Gets the parent node of this object.
			/// </summary>
			property NiNode^ Parent
			{
				NiNode^ __clrcall get();
			}

			/// <summary>
			/// Gets the index of this object in parent node child array. This is negative if not added to a parent.
			/// </summary>
			property System::Int32 Index
			{
				System::Int32 __clrcall get();
			}

			/// <summary>
			/// Gets the collision object.
			/// </summary>
			property NiPointer<NiCollisionObject^>^ Collidable
			{
				NiPointer<NiCollisionObject^>^ __clrcall get();
			}

			/// <summary>
			/// Local self only transform.
			/// </summary>
			property NiTransform^ LocalTransform
			{
				NiTransform^ __clrcall get();
			}

			/// <summary>
			/// World cumulative transform.
			/// </summary>
			property NiTransform^ WorldTransform
			{
				NiTransform^ __clrcall get();
			}

			/// <summary>
			/// This is a world transform that gets updated once per frame only.
			/// </summary>
			property NiTransform^ FrameTransform
			{
				NiTransform^ __clrcall get();
			}

			property NiBound^ WorldBound
			{
				NiBound^ __clrcall get();
			}

			/// <summary>
			/// Gets or sets the object flags.
			/// </summary>
			property NiAVObjectFlags NiAVFlags
			{
				NiAVObjectFlags __clrcall get();

				void __clrcall set(NiAVObjectFlags value);
			}

			/// <summary>
			/// Gets the owner object. This is set if this is the primary root node for a game object (form).
			/// </summary>
			property TESObjectREFR^ OwnerObject
			{
				TESObjectREFR^ __clrcall get();
			}

			property System::Single FadeAmount
			{
				System::Single __clrcall get();
			}

			/// <summary>
			/// Gets the last updated frame counter. This is used to check if FrameTransform needs to be updated.
			/// </summary>
			property System::UInt32 LastUpdatedFrameCounter
			{
				System::UInt32 __clrcall get();
			}

			/// <summary>
			/// Detach the object from parent node. This object will be deleted unless you manually IncRef before calling this function or it's still used somewhere else!
			/// </summary>
			void Detach();

			/// <summary>
			/// Update this node. This should be called if you change the local transform of object and don't expect for it to be updated automatically or it's a havok object and don't want havok to overwrite the position back.
			/// </summary>
			/// <param name="time">The time to set in time controllers. Set negative or zero to not update time controllers.</param>
			void Update(System::Single time);

			/// <summary>
			/// Update this node. This should be called if you change the local transform of object and don't expect for it to be updated automatically or it's a havok object and don't want havok to overwrite the position back.
			/// </summary>
			/// <param name="time">The time to set in time controllers. Set negative or zero to not update time controllers.</param>
			/// <param name="flags">The custom flags to use for update.</param>
			void UpdateEx(System::Single time, System::UInt32 flags);
		};

		public interface class NiTimeController : public NiObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class AnimFlags : System::UInt32
			{
				None = 0,
				Active = 1,
				PlayBackwards = 2,
				ManagerControlled = 4,
				ComputeScaledTime = 8,
				ForceUpdate = 0x10,
			};

			enum class AnimTypes : System::Int32
			{
				AppTime = 0,
				AppInit = 1,
			};

			enum class CycleTypes : System::Int32
			{
				Loop = 0,
				Reverse = 1,
				Clamp = 2,
			};

			property System::UInt16 IFlags
			{
				System::UInt16 __clrcall get();
			}

			property System::Single Frequency
			{
				System::Single __clrcall get();
			}

			property System::Single Phase
			{
				System::Single __clrcall get();
			}

			property System::Single LoKeyTime
			{
				System::Single __clrcall get();
			}

			property System::Single HiKeyTime
			{
				System::Single __clrcall get();
			}

			property System::Single StartTime
			{
				System::Single __clrcall get();
			}

			property System::Single LastTime
			{
				System::Single __clrcall get();
			}

			property System::Single WeightedLastTime
			{
				System::Single __clrcall get();
			}

			property System::Single ScaledTime
			{
				System::Single __clrcall get();
			}

			property NiObjectNET^ Target
			{
				NiObjectNET^ __clrcall get();
			}

			property NiTimeController^ NextController
			{
				NiTimeController^ __clrcall get();
			}

			property NiTimeController::AnimFlags AnimFlag
			{
				NiTimeController::AnimFlags __clrcall get();
			}

			property NiTimeController::AnimTypes AnimType
			{
				NiTimeController::AnimTypes __clrcall get();
			}

			property NiTimeController::CycleTypes CycleType
			{
				NiTimeController::CycleTypes __clrcall get();
			}
		};

		public interface class NiProperty : public NiObjectNET, public NetScriptFramework::IVirtualObject { };

		public interface class NiSequenceStreamHelper : public NiObjectNET, public NetScriptFramework::IVirtualObject { };

		public interface class NiNode : public NiAVObject, public NetScriptFramework::IVirtualObject
		{
		public:
			/// <summary>
			/// Gets the child nodes.
			/// </summary>
			property NiTObjectArray<NiAVObject^>^ Children
			{
				NiTObjectArray<NiAVObject^>^ __clrcall get();
			}

			/// <summary>
			/// Attaches an object to this node.
			/// </summary>
			/// <param name="obj">The object to attach.</param>
			void AttachObject(NiAVObject^ obj);

			/// <summary>
			/// Looks up the child node by it's name.
			/// </summary>
			/// <param name="name">The name of node. This is not case sensitive.</param>
			NiAVObject^ LookupNodeByName(System::String^ name);
		};

		public interface class bhkBlendController : public NiTimeController, public NetScriptFramework::IVirtualObject { };

		public interface class NiControllerManager : public NiTimeController, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiTObjectArray<NiPointer<NiControllerSequence^>^>^ Sequences
			{
				NiTObjectArray<NiPointer<NiControllerSequence^>^>^ __clrcall get();
			}

			property BSTHashMap2<BSFixedString^, NiControllerSequence^>^ SequenceMap
			{
				BSTHashMap2<BSFixedString^, NiControllerSequence^>^ __clrcall get();
			}

			property NiTObjectSet<NiPointer<NiControllerSequence^>^>^ TempBlendSeqs
			{
				NiTObjectSet<NiPointer<NiControllerSequence^>^>^ __clrcall get();
			}

			property NiPointer<NiAVObjectPalette^>^ ObjectPalette
			{
				NiPointer<NiAVObjectPalette^>^ __clrcall get();
			}
		};

		public interface class NiShadeProperty : public NiProperty, public NetScriptFramework::IVirtualObject { };

		public interface class NiCamera : public NiAVObject, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::IntPtr WorldToCam
			{
				System::IntPtr __clrcall get();
			}

			property NiFrustum^ ViewFrustum
			{
				NiFrustum^ __clrcall get();
			}

			property System::Single MinNearPlaneDist
			{
				System::Single __clrcall get();
			}

			property System::Single MaxFarNearRatio
			{
				System::Single __clrcall get();
			}

			property NiRect<System::Single>^ Port
			{
				NiRect<System::Single>^ __clrcall get();
			}

			property System::Single LodAdjust
			{
				System::Single __clrcall get();
			}
		};

		public interface class BSDoorHavokController : public NiTimeController, public NetScriptFramework::IVirtualObject { };

		public interface class BSGeometry : public NiAVObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class GeometryTypes : System::SByte
			{
				Geometry = 0,
				Particles = 1,
				StripParticles = 2,
				TriShape = 3,
				DynamicTriShape = 4,
				MeshLODTriShape = 5,
				LODMultiIndexTriShape = 6,
				MultiIndexTriShape = 7,
				SubIndexTriShape = 8,
				SubIndexLandTriShape = 9,
				MultiStreamInstanceTriShape = 0xA,
				ParticleShaderDynamicTriShape = 0xB,
				Lines = 0xC,
				DynamicLines = 0xD,
				InstanceGroup = 0xE,
			};

			property NiBound^ ModelBound
			{
				NiBound^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<NiPointer<NiProperty^>^>^ Properties
			{
				NetScriptFramework::FixedMemoryArray<NiPointer<NiProperty^>^>^ __clrcall get();
			}

			property NiPointer<NiSkinInstance^>^ Skin
			{
				NiPointer<NiSkinInstance^>^ __clrcall get();
			}

			property System::IntPtr RendererData
			{
				System::IntPtr __clrcall get();
			}

			property System::UInt64 VertexDesc
			{
				System::UInt64 __clrcall get();
			}

			property BSGeometry::GeometryTypes GeometryType
			{
				BSGeometry::GeometryTypes __clrcall get();
			}
		};

		public interface class NiInterpController : public NiTimeController, public NetScriptFramework::IVirtualObject { };

		public interface class NiFogProperty : public NiProperty, public NetScriptFramework::IVirtualObject { };

		public interface class BSLagBoneController : public NiTimeController, public NetScriptFramework::IVirtualObject { };

		public interface class NiGeometry : public NiAVObject, public NetScriptFramework::IVirtualObject { };

		public interface class BSPlayerDistanceCheckController : public NiTimeController, public NetScriptFramework::IVirtualObject { };

		public interface class BSSimpleScaleController : public NiTimeController, public NetScriptFramework::IVirtualObject { };

		public interface class NiLight : public NiAVObject, public NetScriptFramework::IVirtualObject
		{
		public:
			/// <summary>
			/// Gets the color of light. R/G/B as float ranging from 0 to 1.
			/// </summary>
			property NiPoint3^ Color
			{
				NiPoint3^ __clrcall get();
			}

			/// <summary>
			/// Gets the radius of light.
			/// </summary>
			property NiPoint3^ Radius
			{
				NiPoint3^ __clrcall get();
			}
		};

		public interface class NiAlphaProperty : public NiProperty, public NetScriptFramework::IVirtualObject { };

		public interface class NiBSBoneLODController : public NiTimeController, public NetScriptFramework::IVirtualObject { };

		public interface class NiFloatController : public NiTimeController, public NetScriptFramework::IVirtualObject { };

		public interface class NiKeyframeManager : public NiTimeController, public NetScriptFramework::IVirtualObject { };

		public interface class NiLookAtController : public NiTimeController, public NetScriptFramework::IVirtualObject { };

		public interface class NiPathController : public NiTimeController, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysResetOnLoopCtlr : public NiTimeController, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysUpdateCtlr : public NiTimeController, public NetScriptFramework::IVirtualObject { };

		interface class TESObjectREFRSync::REFRSyncController : public NiTimeController, public NetScriptFramework::IVirtualObject { };

		public interface class BSTriShape : public BSGeometry, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::UInt16 TriangleCount
			{
				System::UInt16 __clrcall get();
			}

			property System::UInt16 VertexCount
			{
				System::UInt16 __clrcall get();
			}
		};

		public interface class BSFogProperty : public NiFogProperty, public NetScriptFramework::IVirtualObject { };

		public interface class BGSDecalNode : public NiNode, public NetScriptFramework::IVirtualObject { };

		public interface class BSShaderProperty : public NiShadeProperty, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class ForEachVisitor : public NetScriptFramework::IVirtualObject { };

			enum class EShaderPropertyFlags : System::UInt64
			{
				None = 0,
				kSpecular = 1,
				kSkinned = 2,
				kTempRefraction = 4,
				kVertexAlpha = 8,
				kGrayscaleToPaletteColor = 0x10,
				kGrayscaleToPaletteAlpha = 0x20,
				kFalloff = 0x40,
				kEnvMap = 0x80,
				kRGBFalloff = 0x100,
				kCastShadows = 0x200,
				kFace = 0x400,
				kUIMaskRects = 0x800,
				kModelSpaceNormals = 0x1000,
				kRefractionClamp = 0x2000,
				kMultiTextureLandscape = 0x4000,
				kRefraction = 0x8000,
				kRefractionFalloff = 0x10000,
				kEyeReflect = 0x20000,
				kHairTint = 0x40000,
				kScreendoorAlphaFade = 0x80000,
				kLocalMapClear = 0x100000,
				kFaceGenRGBTint = 0x200000,
				kOwnEmit = 0x400000,
				kProjectedUV = 0x800000,
				kMultipleTextures = 0x1000000,
				kTesselate = 0x2000000,
				kDecal = 0x4000000,
				kDynamicDecal = 0x8000000,
				kCharacterLight = 0x10000000,
				kExternalEmittance = 0x20000000,
				kSoftEffect = 0x40000000,
				kZBufferTest = 0x80000000,
				kZBufferWrite = 0x100000000,
				kLODLandscape = 0x200000000,
				kLODObjects = 0x400000000,
				kNoFade = 0x800000000,
				kTwoSided = 0x1000000000,
				kVertexColors = 0x2000000000,
				kGlowMap = 0x4000000000,
				kTransformChanged = 0x8000000000,
				kDismembermentMeatCuff = 0x10000000000,
				kTint = 0x20000000000,
				kVertexLighting = 0x40000000000,
				kUniformScale = 0x80000000000,
				kFitSlope = 0x100000000000,
				kBillboard = 0x200000000000,
				kLODLandBlend = 0x400000000000,
				kDismemberment = 0x800000000000,
				kWireframe = 0x1000000000000,
				kWeaponBlood = 0x2000000000000,
				kHideOnLocalMap = 0x4000000000000,
				kPremultAlpha = 0x8000000000000,
				kVATSTarget = 0x10000000000000,
				kAnisotropicLighting = 0x20000000000000,
				kSkewSpecularAlpha = 0x40000000000000,
				kMenuScreen = 0x80000000000000,
				kMultiLayerParallax = 0x100000000000000,
				kAlphaTest = 0x200000000000000,
				kInvertedFadePattern = 0x400000000000000,
				kVATSTargetDrawAll = 0x800000000000000,
				kPipboyScreen = 0x1000000000000000,
				kTreeAnim = 0x2000000000000000,
				kEffectLighting = 0x4000000000000000,
				kRefractionWritesDepth = 0x8000000000000000,
			};

			property System::Single Alpha
			{
				System::Single __clrcall get();
			}

			property System::Int32 LastRenderPassState
			{
				System::Int32 __clrcall get();
			}

			property BSShaderProperty::EShaderPropertyFlags PropertyFlags
			{
				BSShaderProperty::EShaderPropertyFlags __clrcall get();
			}

			property BSShaderMaterial^ Material
			{
				BSShaderMaterial^ __clrcall get();
			}
		};

		public interface class NiControllerSequence : public NiObject, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class AnimStates : System::Int32
			{
				Inactive = 0,
				Animating = 1,
				EaseIn = 2,
				EaseOut = 3,
				TransSource = 4,
				TransDest = 5,
				MorphSource = 6,
			};

			interface class InterpArrayItem : public NetScriptFramework::IMemoryObject
			{
			public:
				property NiPointer<NiInterpolator^>^ Interpolator
				{
					NiPointer<NiInterpolator^>^ __clrcall get();
				}

				property NiPointer<NiInterpController^>^ InterpController
				{
					NiPointer<NiInterpController^>^ __clrcall get();
				}

				property NiBlendInterpolator^ BlendInterpolator
				{
					NiBlendInterpolator^ __clrcall get();
				}

				property System::Byte BlendIndex
				{
					System::Byte __clrcall get();
				}
			};

			interface class IDTag : public NetScriptFramework::IMemoryObject
			{
			public:
				property BSFixedString^ AvObjectName
				{
					BSFixedString^ __clrcall get();
				}

				property BSFixedString^ PropertyType
				{
					BSFixedString^ __clrcall get();
				}

				property BSFixedString^ ControllerType
				{
					BSFixedString^ __clrcall get();
				}

				property BSFixedString^ ControllerId
				{
					BSFixedString^ __clrcall get();
				}

				property BSFixedString^ InterpolatorId
				{
					BSFixedString^ __clrcall get();
				}
			};

			property BSFixedString^ Name
			{
				BSFixedString^ __clrcall get();
			}

			property System::Int32 ArraySize
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 ArrayGrowBy
			{
				System::Int32 __clrcall get();
			}

			property unknown^ InterpArray
			{
				unknown^ __clrcall get();
			}

			property unknown^ IdTagArray
			{
				unknown^ __clrcall get();
			}

			property System::Single SeqWeight
			{
				System::Single __clrcall get();
			}

			property NiPointer<NiTextKeyExtraData^>^ TextKeys
			{
				NiPointer<NiTextKeyExtraData^>^ __clrcall get();
			}

			property NiTimeController::CycleTypes CycleType
			{
				NiTimeController::CycleTypes __clrcall get();
			}

			property System::Single Frequency
			{
				System::Single __clrcall get();
			}

			property System::Single BeginKeyTime
			{
				System::Single __clrcall get();
			}

			property System::Single EndKeyTime
			{
				System::Single __clrcall get();
			}

			property System::Single LastTime
			{
				System::Single __clrcall get();
			}

			property System::Single WeightedLastTime
			{
				System::Single __clrcall get();
			}

			property System::Single LastScaledTime
			{
				System::Single __clrcall get();
			}

			property NiControllerManager^ Owner
			{
				NiControllerManager^ __clrcall get();
			}

			property NiControllerSequence::AnimStates State
			{
				NiControllerSequence::AnimStates __clrcall get();
			}

			property System::Single Offset
			{
				System::Single __clrcall get();
			}

			property System::Single StartTime
			{
				System::Single __clrcall get();
			}

			property System::Single EndTime
			{
				System::Single __clrcall get();
			}

			property System::Single DestFrame
			{
				System::Single __clrcall get();
			}

			property NiControllerSequence^ PartnerSequence
			{
				NiControllerSequence^ __clrcall get();
			}

			property BSFixedString^ AccumRootName
			{
				BSFixedString^ __clrcall get();
			}

			property NiAVObject^ AccumRoot
			{
				NiAVObject^ __clrcall get();
			}
		};

		public interface class BSNiNode : public NiNode, public NetScriptFramework::IVirtualObject { };

		public interface class BSClearZNode : public NiNode, public NetScriptFramework::IVirtualObject { };

		public interface class BSCubeMapCamera : public NiCamera, public NetScriptFramework::IVirtualObject { };

		public interface class BSLines : public BSGeometry, public NetScriptFramework::IVirtualObject { };

		public interface class NiSingleInterpController : public NiInterpController, public NetScriptFramework::IVirtualObject { };

		public interface class BSFaceGenNiNode : public NiNode, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiMatrix33^ BaseRotation
			{
				NiMatrix33^ __clrcall get();
			}

			property NiPointer<BSFaceGenAnimationData^>^ AnimationData
			{
				NiPointer<BSFaceGenAnimationData^>^ __clrcall get();
			}

			property System::Single LastTime
			{
				System::Single __clrcall get();
			}

			property System::UInt16 FaceGenFlags
			{
				System::UInt16 __clrcall get();
			}
		};

		public interface class BSFadeNode : public NiNode, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Single CurrentFade
			{
				System::Single __clrcall get();
			}
		};

		public interface class BSFlattenedBoneTree : public NiNode, public NetScriptFramework::IVirtualObject { };

		public interface class NiTriBasedGeom : public NiGeometry, public NetScriptFramework::IVirtualObject { };

		public interface class BSMasterParticleSystem : public NiNode, public NetScriptFramework::IVirtualObject { };

		public interface class BSMultiTargetTreadTransfController : public NiInterpController, public NetScriptFramework::IVirtualObject { };

		public interface class BSParticleSystemManager : public NiNode, public NetScriptFramework::IVirtualObject { };

		public interface class BSPortalSharedNode : public NiNode, public NetScriptFramework::IVirtualObject { };

		public interface class BSProceduralLightningController : public NiInterpController, public BSTEventSource<BSProceduralGeomEvent^>, public NetScriptFramework::IVirtualObject { };

		public interface class BSSceneGraph : public NiNode, public NetScriptFramework::IVirtualObject { };

		public interface class NiParticles : public BSGeometry, public NetScriptFramework::IVirtualObject { };

		public interface class BSTempNode : public NiNode, public NetScriptFramework::IVirtualObject { };

		public interface class BSTempNodeManager : public NiNode, public NetScriptFramework::IVirtualObject { };

		public interface class NiAmbientLight : public NiLight, public NetScriptFramework::IVirtualObject { };

		public interface class NiBillboardNode : public NiNode, public NetScriptFramework::IVirtualObject { };

		public interface class NiBSPNode : public NiNode, public NetScriptFramework::IVirtualObject { };

		public interface class NiDirectionalLight : public NiLight, public NetScriptFramework::IVirtualObject { };

		public interface class NiMultiTargetTransformController : public NiInterpController, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::IntPtr BlendInterpolators
			{
				System::IntPtr __clrcall get();
			}

			property System::IntPtr Targets
			{
				System::IntPtr __clrcall get();
			}

			property System::UInt16 NumInterpolators
			{
				System::UInt16 __clrcall get();
			}
		};

		public interface class NiPointLight : public NiLight, public NetScriptFramework::IVirtualObject { };

		public interface class NiRollController : public NiFloatController, public NetScriptFramework::IVirtualObject { };

		public interface class NiSwitchNode : public NiNode, public NetScriptFramework::IVirtualObject { };

		public interface class ShadowSceneNode : public NiNode, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSTArray<NiAVObject^, BSTArrayHeapAllocator^>^ ParticleNodeArray
			{
				BSTArray<NiAVObject^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<NiNode^, BSTArrayHeapAllocator^>^ ActorRootNodeArray
			{
				BSTArray<NiNode^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property System::UInt32 DrawFlags
			{
				System::UInt32 __clrcall get();

				void __clrcall set(System::UInt32 value);
			}

			property NiPoint3^ CameraPosition
			{
				NiPoint3^ __clrcall get();
			}
		};

		interface class BGSSceneInfo::TextureUse : public BSShaderProperty::ForEachVisitor, public NetScriptFramework::IVirtualObject { };

		interface class BGSTextureUseMap::TextureUse : public BSShaderProperty::ForEachVisitor, public NetScriptFramework::IVirtualObject { };

		public interface class BSAnimGroupSequence : public NiControllerSequence, public NetScriptFramework::IVirtualObject { };

		public interface class BSRangeNode : public BSNiNode, public NetScriptFramework::IVirtualObject { };

		public interface class BSBloodSplatterShaderProperty : public BSShaderProperty, public NetScriptFramework::IVirtualObject { };

		public interface class BSDistantTreeShaderProperty : public BSShaderProperty, public NetScriptFramework::IVirtualObject { };

		public interface class BSDynamicLines : public BSLines, public NetScriptFramework::IVirtualObject { };

		public interface class BSDynamicTriShape : public BSTriShape, public NetScriptFramework::IVirtualObject { };

		public interface class BSEffectShaderProperty : public BSShaderProperty, public NetScriptFramework::IVirtualObject { };

		public interface class NiPoint3InterpController : public NiSingleInterpController, public NetScriptFramework::IVirtualObject { };

		public interface class NiFloatInterpController : public NiSingleInterpController, public NetScriptFramework::IVirtualObject { };

		public interface class BSLightingShaderProperty : public BSShaderProperty, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiColor^ EmissiveColor
			{
				NiColor^ __clrcall get();
			}

			property System::Single EmissiveMult
			{
				System::Single __clrcall get();
			}
		};

		public interface class BSInstanceTriShape : public BSTriShape, public NetScriptFramework::IVirtualObject { };

		public interface class BSLeafAnimNode : public BSFadeNode, public NetScriptFramework::IVirtualObject { };

		public interface class BSMultiIndexTriShape : public BSTriShape, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::IntPtr AltIndexBuffer
			{
				System::IntPtr __clrcall get();
			}

			property System::Int32 AltPrimCount
			{
				System::Int32 __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<System::Single>^ MaterialProjection
			{
				NetScriptFramework::FixedMemoryArray<System::Single>^ __clrcall get();
			}

			property NiPointer<BSShaderProperty^>^ AdditionalShaderProperty
			{
				NiPointer<BSShaderProperty^>^ __clrcall get();
			}

			property System::Byte UseAdditionalTriList
			{
				System::Byte __clrcall get();
			}

			property NiColorA^ MaterialParams
			{
				NiColorA^ __clrcall get();
			}

			property System::Single MaterialScale
			{
				System::Single __clrcall get();
			}

			property System::Single NormalDampener
			{
				System::Single __clrcall get();
			}
		};

		public interface class NiTriShape : public NiTriBasedGeom, public NetScriptFramework::IVirtualObject { };

		public interface class BSMeshLODTriShape : public BSTriShape, public NetScriptFramework::IVirtualObject { };

		public interface class BSMultiBoundNode : public BSNiNode, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPointer<BSMultiBound^>^ MultiBound
			{
				NiPointer<BSMultiBound^>^ __clrcall get();
			}

			property BSCullingProcess::CullingTypes CullingMode
			{
				BSCullingProcess::CullingTypes __clrcall get();
			}

			property System::Single LastAccumTime
			{
				System::Single __clrcall get();
			}
		};

		public interface class BSOrderedNode : public BSNiNode, public NetScriptFramework::IVirtualObject { };

		public interface class BSParticleShaderProperty : public BSShaderProperty, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysModifierCtlr : public NiSingleInterpController, public NetScriptFramework::IVirtualObject { };

		public interface class BSSkinnedDecalTriShape : public BSTriShape, public NetScriptFramework::IVirtualObject { };

		public interface class BSSkyShaderProperty : public BSShaderProperty, public NetScriptFramework::IVirtualObject { };

		public interface class NiParticleSystem : public NiParticles, public NetScriptFramework::IVirtualObject { };

		public interface class BSSubIndexTriShape : public BSTriShape, public NetScriptFramework::IVirtualObject { };

		public interface class BSValueNode : public BSNiNode, public NetScriptFramework::IVirtualObject { };

		public interface class BSWaterShaderProperty : public BSShaderProperty, public NetScriptFramework::IVirtualObject { };

		public interface class ExtraEditorRef3DData : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPointer<NiAVObject^>^ Data3D
			{
				NiPointer<NiAVObject^>^ __clrcall get();
			}

			property NiPointer<BSLines^>^ DataBound
			{
				NiPointer<BSLines^>^ __clrcall get();
			}
		};

		public interface class NiBoolInterpController : public NiSingleInterpController, public NetScriptFramework::IVirtualObject { };

		public interface class NiExtraDataController : public NiSingleInterpController, public NetScriptFramework::IVirtualObject { };

		public interface class NiParticleMeshes : public NiParticles, public NetScriptFramework::IVirtualObject { };

		public interface class NiTransformController : public NiSingleInterpController, public NetScriptFramework::IVirtualObject { };

		public interface class NiSpotLight : public NiPointLight, public NetScriptFramework::IVirtualObject { };

		public interface class NiTriStrips : public NiTriBasedGeom, public NetScriptFramework::IVirtualObject { };

		public interface class SceneGraph : public BSSceneGraph, public NetScriptFramework::IVirtualObject { };

		public interface class Sun : public SkyObject, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPointer<NiBillboardNode^>^ SunBaseNode
			{
				NiPointer<NiBillboardNode^>^ __clrcall get();
			}

			property NiPointer<NiBillboardNode^>^ SunGlareNode
			{
				NiPointer<NiBillboardNode^>^ __clrcall get();
			}

			property NiPointer<BSTriShape^>^ SunBase
			{
				NiPointer<BSTriShape^>^ __clrcall get();
			}

			property NiPointer<BSTriShape^>^ SunQuery
			{
				NiPointer<BSTriShape^>^ __clrcall get();
			}

			property NiPointer<BSTriShape^>^ SunGlare
			{
				NiPointer<BSTriShape^>^ __clrcall get();
			}

			property NiPointer<NiDirectionalLight^>^ Light
			{
				NiPointer<NiDirectionalLight^>^ __clrcall get();
			}

			property NiPointer<NiDirectionalLight^>^ CloudLight
			{
				NiPointer<NiDirectionalLight^>^ __clrcall get();
			}

			property System::Single GlareScale
			{
				System::Single __clrcall get();
			}

			property System::Boolean DoOcclusionTests
			{
				System::Boolean __clrcall get();
			}

			property NiPointer<BSShaderAccumulator^>^ SunAccumulator
			{
				NiPointer<BSShaderAccumulator^>^ __clrcall get();
			}
		};

		public interface class StatsMenu : public IMenu, public MenuEventHandler, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class TreeStates : System::Int32
			{
				Resting = 0,
				Entering = 1,
				Exiting = 2,
			};

			interface class TreeData : public NetScriptFramework::IMemoryObject
			{
			public:
				property StatsMenu::TreeStates State
				{
					StatsMenu::TreeStates __clrcall get();
				}
			};

			property System::Single HorizontalVelocity
			{
				System::Single __clrcall get();
			}

			property BSTArray<ActorValueIndices, BSTArrayHeapAllocator^>^ SkillTrees
			{
				BSTArray<ActorValueIndices, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSResource::ID^ SkydomeHash
			{
				BSResource::ID^ __clrcall get();
			}

			property BSResource::ID^ StarsHash
			{
				BSResource::ID^ __clrcall get();
			}

			property BSResource::ID^ LinesHash
			{
				BSResource::ID^ __clrcall get();
			}

			property BSFadeNode^ SkydomeNode
			{
				BSFadeNode^ __clrcall get();
			}

			property BSFadeNode^ StarsNode
			{
				BSFadeNode^ __clrcall get();
			}

			property BSFadeNode^ LinesNode
			{
				BSFadeNode^ __clrcall get();
			}

			property System::Boolean Zoomed
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean Scrolling
			{
				System::Boolean __clrcall get();
			}

			property System::Int32 SelectedTree
			{
				System::Int32 __clrcall get();
			}

			property NiPoint3^ SkillsLookAt
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ StarCameraOffset
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ StarLookAt
			{
				NiPoint3^ __clrcall get();
			}

			property System::Single HorizontalAcceleration
			{
				System::Single __clrcall get();
			}

			property NiNode^ CameraPosition
			{
				NiNode^ __clrcall get();
			}

			property NiControllerSequence^ CameraIntro
			{
				NiControllerSequence^ __clrcall get();
			}

			property NiControllerSequence^ CameraOutro
			{
				NiControllerSequence^ __clrcall get();
			}

			property NiControllerSequence^ Idle
			{
				NiControllerSequence^ __clrcall get();
			}

			property System::Int32 NumSelectableTrees
			{
				System::Int32 __clrcall get();
			}

			property System::UInt32 StatsMenuFlags
			{
				System::UInt32 __clrcall get();
			}
		};

		public interface class BSBlastNode : public BSRangeNode, public NetScriptFramework::IVirtualObject { };

		public interface class BSDamageStage : public BSRangeNode, public NetScriptFramework::IVirtualObject { };

		public interface class BSDebrisNode : public BSRangeNode, public NetScriptFramework::IVirtualObject { };

		public interface class BSEffectShaderPropertyColorController : public NiPoint3InterpController, public NetScriptFramework::IVirtualObject { };

		public interface class BSEffectShaderPropertyFloatController : public NiFloatInterpController, public NetScriptFramework::IVirtualObject { };

		public interface class BSFrustumFOVController : public NiFloatInterpController, public NetScriptFramework::IVirtualObject { };

		public interface class BSGrassShaderProperty : public BSLightingShaderProperty, public NetScriptFramework::IVirtualObject { };

		public interface class BSLightingShaderPropertyColorController : public NiPoint3InterpController, public NetScriptFramework::IVirtualObject { };

		public interface class BSLightingShaderPropertyFloatController : public NiFloatInterpController, public NetScriptFramework::IVirtualObject { };

		public interface class BSLightingShaderPropertyUShortController : public NiFloatInterpController, public NetScriptFramework::IVirtualObject { };

		public interface class BSLODMultiIndexTriShape : public BSMultiIndexTriShape, public NetScriptFramework::IVirtualObject { };

		public interface class BSLODTriShape : public NiTriShape, public NetScriptFramework::IVirtualObject { };

		public interface class BSMultiBoundRoom : public BSMultiBoundNode, public NetScriptFramework::IVirtualObject { };

		public interface class BSMultiStreamInstanceTriShape : public BSInstanceTriShape, public NetScriptFramework::IVirtualObject { };

		public interface class BSNiAlphaPropertyTestRefController : public NiFloatInterpController, public NetScriptFramework::IVirtualObject { };

		public interface class BSParticleShaderGeometry : public BSDynamicTriShape, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysEmitterCtlr : public NiPSysModifierCtlr, public NetScriptFramework::IVirtualObject { };

		public interface class BSSegmentedTriShape : public NiTriShape, public NetScriptFramework::IVirtualObject { };

		public interface class BSStripParticleSystem : public NiParticleSystem, public NetScriptFramework::IVirtualObject { };

		public interface class BSSubIndexLandTriShape : public BSSubIndexTriShape, public NetScriptFramework::IVirtualObject { };

		public interface class BSTreeNode : public BSLeafAnimNode, public NetScriptFramework::IVirtualObject { };

		public interface class CellGrassData : public NetScriptFramework::IMemoryObject
		{
		public:
			property System::UInt64 GrassTypeKey
			{
				System::UInt64 __clrcall get();
			}

			property BSFixedString^ GrassModelKey
			{
				BSFixedString^ __clrcall get();
			}

			property NiPointer<BSInstanceTriShape^>^ TriShape
			{
				NiPointer<BSInstanceTriShape^>^ __clrcall get();
			}
		};

		public interface class NiColorExtraDataController : public NiExtraDataController, public NetScriptFramework::IVirtualObject { };

		public interface class NiFloatExtraDataController : public NiExtraDataController, public NetScriptFramework::IVirtualObject { };

		public interface class NiFloatsExtraDataController : public NiExtraDataController, public NetScriptFramework::IVirtualObject { };

		public interface class NiFloatsExtraDataPoint3Controller : public NiExtraDataController, public NetScriptFramework::IVirtualObject { };

		public interface class NiLightColorController : public NiPoint3InterpController, public NetScriptFramework::IVirtualObject { };

		public interface class NiLightDimmerController : public NiFloatInterpController, public NetScriptFramework::IVirtualObject { };

		public interface class NiMeshParticleSystem : public NiParticleSystem, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysModifierFloatCtlr : public NiPSysModifierCtlr, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysModifierBoolCtlr : public NiPSysModifierCtlr, public NetScriptFramework::IVirtualObject { };

		public interface class NiVisController : public NiBoolInterpController, public NetScriptFramework::IVirtualObject { };

		public interface class Sky : public NetScriptFramework::IVirtualObject
		{
		public:
			enum class SkyModes : System::Int32
			{
				None = 0,
				Interior = 1,
				SkyDomeOnly = 2,
				Full = 3,
			};

			interface class SkyStaticRefData : public NetScriptFramework::IMemoryObject { };

			property NiPointer<BSMultiBoundNode^>^ RootNode
			{
				NiPointer<BSMultiBoundNode^>^ __clrcall get();
			}

			property NiPointer<NiNode^>^ MoonsRoot
			{
				NiPointer<NiNode^>^ __clrcall get();
			}

			property NiPointer<NiNode^>^ AuroraRoot
			{
				NiPointer<NiNode^>^ __clrcall get();
			}

			property BGSLightingTemplate^ ExteriorLightingOverride
			{
				BGSLightingTemplate^ __clrcall get();
			}

			property System::UInt32 CurrentRoomRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 PreviousRoomRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property System::Single LightingTransition
			{
				System::Single __clrcall get();
			}

			property System::Single LightingTransitionTimer
			{
				System::Single __clrcall get();
			}

			property TESClimate^ CurrentClimate
			{
				TESClimate^ __clrcall get();
			}

			property TESWeather^ CurrentWeather
			{
				TESWeather^ __clrcall get();
			}

			property TESWeather^ LastWeather
			{
				TESWeather^ __clrcall get();
			}

			property TESWeather^ DefaultWeather
			{
				TESWeather^ __clrcall get();
			}

			property TESWeather^ OverrideWeather
			{
				TESWeather^ __clrcall get();
			}

			property TESRegion^ Region
			{
				TESRegion^ __clrcall get();
			}

			property Atmosphere^ AtmosphereInstance
			{
				Atmosphere^ __clrcall get();
			}

			property Stars^ StarsInstance
			{
				Stars^ __clrcall get();
			}

			property Sun^ SunInstance
			{
				Sun^ __clrcall get();
			}

			property Clouds^ CloudsInstance
			{
				Clouds^ __clrcall get();
			}

			property Moon^ Masser
			{
				Moon^ __clrcall get();
			}

			property Moon^ Secunda
			{
				Moon^ __clrcall get();
			}

			property Precipitation^ PrecipitationInstance
			{
				Precipitation^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<NiColor^>^ SkyColor
			{
				NetScriptFramework::FixedMemoryArray<NiColor^>^ __clrcall get();
			}

			property System::Single CurrentGameHour
			{
				System::Single __clrcall get();
			}

			property System::Single LastWeatherUpdate
			{
				System::Single __clrcall get();
			}

			property System::Single CurrentWeatherPct
			{
				System::Single __clrcall get();
			}

			property Sky::SkyModes SkyMode
			{
				Sky::SkyModes __clrcall get();
			}

			property BSSimpleList<System::IntPtr>^ SkySoundList
			{
				BSSimpleList<System::IntPtr>^ __clrcall get();
			}

			property System::Single Flash
			{
				System::Single __clrcall get();
			}

			property System::UInt64 FlashTime
			{
				System::UInt64 __clrcall get();
			}

			property System::UInt32 LastMoonPhaseUpdate
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 SkyFlags
			{
				System::UInt32 __clrcall get();
			}

			property ImageSpaceModifierInstanceForm^ CurrentWeatherImageSpaceMod
			{
				ImageSpaceModifierInstanceForm^ __clrcall get();
			}

			property ImageSpaceModifierInstanceForm^ CurrentWeatherImageSpaceMod2
			{
				ImageSpaceModifierInstanceForm^ __clrcall get();
			}

			property ImageSpaceModifierInstanceForm^ LastWeatherImageSpaceMod
			{
				ImageSpaceModifierInstanceForm^ __clrcall get();
			}

			property ImageSpaceModifierInstanceForm^ LastWeatherImageSpaceMod2
			{
				ImageSpaceModifierInstanceForm^ __clrcall get();
			}

			property System::IntPtr DirectionalAmbientColors
			{
				System::IntPtr __clrcall get();
			}

			property NiColor^ AmbientSpecularTint
			{
				NiColor^ __clrcall get();
			}

			property System::Single AmbientSpecularFresnel
			{
				System::Single __clrcall get();
			}

			property System::Single AuroraInStart
			{
				System::Single __clrcall get();
			}

			property System::Single AuroraIn
			{
				System::Single __clrcall get();
			}

			property System::Single AuroraOutStart
			{
				System::Single __clrcall get();
			}

			property System::Single AuroraOut
			{
				System::Single __clrcall get();
			}

			property NiPointer<ReferenceEffect^>^ CurrentReferenceEffect
			{
				NiPointer<ReferenceEffect^>^ __clrcall get();
			}

			property NiPointer<ReferenceEffect^>^ LastReferenceEffect
			{
				NiPointer<ReferenceEffect^>^ __clrcall get();
			}

			property SkyEffectController^ EffectController
			{
				SkyEffectController^ __clrcall get();
			}

			property BSTArray<NiPointer<NiTexture^>^, BSTArrayHeapAllocator^>^ StoredCloudTextures
			{
				BSTArray<NiPointer<NiTexture^>^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<NiPointer<NiTexture^>^, BSTArrayHeapAllocator^>^ StoredWorldMapCloudTextures
			{
				BSTArray<NiPointer<NiTexture^>^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<unknown^, BSTArrayHeapAllocator^>^ StaticRefData
			{
				BSTArray<unknown^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			static property Sky^ Instance
			{
				Sky^ __clrcall get()
				{
					return NetScriptFramework::MemoryObject::FromAddress<Sky^>(NetScriptFramework::Memory::InvokeCdecl(__VIDS::VID13789.Value));
				}
			}
		};

		public interface class MiddleHighProcessData : public NetScriptFramework::IMemoryObject
		{
		public:
			property ActorPackage^ RunOncePackage
			{
				ActorPackage^ __clrcall get();
			}

			property BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ DeadDetectRefHandleList
			{
				BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSSimpleList<TESObjectREFR^>^ RefListChairBed
			{
				BSSimpleList<TESObjectREFR^>^ __clrcall get();
			}

			property NiPoint3^ Rotation
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ RotationSpeed
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ ActorMountPosition
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ FurniturePathPoint
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ LastSeenPosition
			{
				NiPoint3^ __clrcall get();
			}

			property System::UInt32 BleedoutAttacker
			{
				System::UInt32 __clrcall get();
			}

			property WardStates WardState
			{
				WardStates __clrcall get();
			}

			property BSTSmartPointer<AnimResponseBase^, BSTSmartPointerIntrusiveRefCount<AnimResponseBase^>^>^ AnimResponse
			{
				BSTSmartPointer<AnimResponseBase^, BSTSmartPointerIntrusiveRefCount<AnimResponseBase^>^>^ __clrcall get();
			}

			property BSTArray<CommandedActorData^, BSTArrayHeapAllocator^>^ CommandedActors
			{
				BSTArray<CommandedActorData^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<NiNode^>^ DamageRootNode
			{
				NetScriptFramework::FixedMemoryArray<NiNode^>^ __clrcall get();
			}

			property NiNode^ WeaponBone
			{
				NiNode^ __clrcall get();
			}

			property NiAVObject^ HeadNode
			{
				NiAVObject^ __clrcall get();
			}

			property NiAVObject^ TorsoNode
			{
				NiAVObject^ __clrcall get();
			}

			property NiAVObject^ FaceTargetSourceNode
			{
				NiAVObject^ __clrcall get();
			}

			property BSFaceGenNiNode^ FaceNodeSkinned
			{
				BSFaceGenNiNode^ __clrcall get();
			}

			property NiPointer<BSLightingShaderProperty^>^ LightingProperty
			{
				NiPointer<BSLightingShaderProperty^>^ __clrcall get();
			}

			property QueuedItem^ ItemsToEquipUnequip
			{
				QueuedItem^ __clrcall get();
			}

			property HitData^ LastHitData
			{
				HitData^ __clrcall get();
			}

			property DeferredHideLimb^ HeadDeferredHideLimb
			{
				DeferredHideLimb^ __clrcall get();
			}

			property BSSimpleList<ActiveEffect^>^ ActiveEffects
			{
				BSSimpleList<ActiveEffect^>^ __clrcall get();
			}

			property BSTSmartPointer<BSAnimationGraphManager^, BSTSmartPointerIntrusiveRefCount<BSAnimationGraphManager^>^>^ AnimationGraphManager
			{
				BSTSmartPointer<BSAnimationGraphManager^, BSTSmartPointerIntrusiveRefCount<BSAnimationGraphManager^>^>^ __clrcall get();
			}

			property BSAnimationGraphVariableCache^ AnimationVariableCache
			{
				BSAnimationGraphVariableCache^ __clrcall get();
			}

			property System::Single HeadHeightOffset
			{
				System::Single __clrcall get();
			}

			property System::UInt32 CurrentFurnitureRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 OccupiedFurnitureRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property ExtraContainerChanges::ItemEntry^ LeftHand
			{
				ExtraContainerChanges::ItemEntry^ __clrcall get();
			}

			property TESIdleForm^ CurrentIdle
			{
				TESIdleForm^ __clrcall get();
			}

			property NiPointer<bhkCharacterController^>^ CharController
			{
				NiPointer<bhkCharacterController^>^ __clrcall get();
			}

			property BSTSmartPointer<bhkRagdollPenetrationUtil^, BSTSmartPointerIntrusiveRefCount<bhkRagdollPenetrationUtil^>^>^ PenetrationDetectUtil
			{
				BSTSmartPointer<bhkRagdollPenetrationUtil^, BSTSmartPointerIntrusiveRefCount<bhkRagdollPenetrationUtil^>^>^ __clrcall get();
			}

			property ExtraContainerChanges::ItemEntry^ RightHand
			{
				ExtraContainerChanges::ItemEntry^ __clrcall get();
			}

			property ExtraContainerChanges::ItemEntry^ BothHands
			{
				ExtraContainerChanges::ItemEntry^ __clrcall get();
			}

			property NiPointer<QueuedFile^>^ BodyPartPreload
			{
				NiPointer<QueuedFile^>^ __clrcall get();
			}

			property AIPerkData^ PerkData
			{
				AIPerkData^ __clrcall get();
			}

			property System::Single AlphaMult
			{
				System::Single __clrcall get();
			}

			property System::Single ScriptRefractPower
			{
				System::Single __clrcall get();
			}

			property Reset3DFlags Update3DModel
			{
				Reset3DFlags __clrcall get();
			}

			property System::Boolean PickPocketed
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean BeenAttacked
			{
				System::Boolean __clrcall get();
			}
		};

		/// <summary>
		/// A pointer to NiRefObject whose reference counts are automatically incremented or decremented when value changes.
		/// </summary>
		generic <typename NiPointer_T1>
		public interface class NiPointer : public NetScriptFramework::IMemoryObject
		{
		public:
			/// <summary>
			/// Gets or sets the value pointed to. Changing this value will automatically increment and decrement ref counts!
			/// </summary>
			property NiPointer_T1 Value
			{
				NiPointer_T1 __clrcall get();

				void __clrcall set(NiPointer_T1 value);
			}
		};

		public interface class ActorProcess : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class ObjectsToAcquire : public NetScriptFramework::IMemoryObject { };

			interface class UnkDataB8 : public NetScriptFramework::IMemoryObject { };

			property MiddleLowProcessData^ MiddleLow
			{
				MiddleLowProcessData^ __clrcall get();
			}

			property MiddleHighProcessData^ MiddleHigh
			{
				MiddleHighProcessData^ __clrcall get();
			}

			property HighProcessData^ High
			{
				HighProcessData^ __clrcall get();
			}

			property ActorPackage^ CurrentPackage
			{
				ActorPackage^ __clrcall get();
			}

			property CachedValues^ CachedValueData
			{
				CachedValues^ __clrcall get();
			}

			property System::Int32 NumberItemsActivate
			{
				System::Int32 __clrcall get();
			}

			property BSSimpleList<ActorProcess::ObjectsToAcquire^>^ Objects
			{
				BSSimpleList<ActorProcess::ObjectsToAcquire^>^ __clrcall get();
			}

			property BSSimpleList<TESObjectREFR^>^ GenericLocations
			{
				BSSimpleList<TESObjectREFR^>^ __clrcall get();
			}

			property ActorProcess::ObjectsToAcquire^ AcquireObject
			{
				ActorProcess::ObjectsToAcquire^ __clrcall get();
			}

			property ActorProcess::ObjectsToAcquire^ SavedAcquireObject
			{
				ActorProcess::ObjectsToAcquire^ __clrcall get();
			}

			property System::Single EssentialDownTimer
			{
				System::Single __clrcall get();
			}

			property System::Single DeathTime
			{
				System::Single __clrcall get();
			}

			property System::Single TrackedDamage
			{
				System::Single __clrcall get();
			}

			property BSTArray<TESForm^, BSTArrayHeapAllocator^>^ Forms
			{
				BSTArray<TESForm^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property TESForm^ EquippedLeftHand
			{
				TESForm^ __clrcall get();
			}

			property TESForm^ EquippedRightHand
			{
				TESForm^ __clrcall get();
			}

			property System::Byte LowProcessFlags
			{
				System::Byte __clrcall get();
			}

			property ActorProcessTypes ProcessLevel
			{
				ActorProcessTypes __clrcall get();
			}

			property System::Boolean SkippedTimeStampForPathing
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean IgnoringCombat
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean EndAlarmOnActor
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean EscortingPlayer
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class BSPSysMultiTargetEmitterCtlr : public NiPSysEmitterCtlr, public NetScriptFramework::IVirtualObject { };

		public interface class ExtraCellGrassData : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSTArray<CellGrassData^, BSTArrayHeapAllocator^>^ GrassHandles
			{
				BSTArray<CellGrassData^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property NiPointer<AddCellGrassTask^>^ AddGrassTask
			{
				NiPointer<AddCellGrassTask^>^ __clrcall get();
			}
		};

		public interface class ExtraRoom : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPointer<BSMultiBoundRoom^>^ Room
			{
				NiPointer<BSMultiBoundRoom^>^ __clrcall get();
			}
		};

		public interface class NiPSysAirFieldAirFrictionCtlr : public NiPSysModifierFloatCtlr, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysAirFieldInheritVelocityCtlr : public NiPSysModifierFloatCtlr, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysAirFieldSpreadCtlr : public NiPSysModifierFloatCtlr, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysEmitterDeclinationCtlr : public NiPSysModifierFloatCtlr, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysEmitterDeclinationVarCtlr : public NiPSysModifierFloatCtlr, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysEmitterInitialRadiusCtlr : public NiPSysModifierFloatCtlr, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysEmitterLifeSpanCtlr : public NiPSysModifierFloatCtlr, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysEmitterPlanarAngleCtlr : public NiPSysModifierFloatCtlr, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysEmitterPlanarAngleVarCtlr : public NiPSysModifierFloatCtlr, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysEmitterSpeedCtlr : public NiPSysModifierFloatCtlr, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysFieldAttenuationCtlr : public NiPSysModifierFloatCtlr, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysFieldMagnitudeCtlr : public NiPSysModifierFloatCtlr, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysFieldMaxDistanceCtlr : public NiPSysModifierFloatCtlr, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysGravityStrengthCtlr : public NiPSysModifierFloatCtlr, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysInitialRotAngleCtlr : public NiPSysModifierFloatCtlr, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysInitialRotAngleVarCtlr : public NiPSysModifierFloatCtlr, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysInitialRotSpeedCtlr : public NiPSysModifierFloatCtlr, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysInitialRotSpeedVarCtlr : public NiPSysModifierFloatCtlr, public NetScriptFramework::IVirtualObject { };

		public interface class NiPSysModifierActiveCtlr : public NiPSysModifierBoolCtlr, public NetScriptFramework::IVirtualObject { };

		interface class BGSDistantTreeBlock::TreeGroup : public NetScriptFramework::IMemoryObject
		{
		public:
			property NiPointer<BSMultiStreamInstanceTriShape^>^ Geometry
			{
				NiPointer<BSMultiStreamInstanceTriShape^>^ __clrcall get();
			}

			property BSTArray<BGSDistantTreeBlock::InstanceData^, BSTArrayHeapAllocator^>^ Instances
			{
				BSTArray<BGSDistantTreeBlock::InstanceData^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property System::Int32 Num
			{
				System::Int32 __clrcall get();
			}

			property System::Boolean ShaderPropertyUpToDate
			{
				System::Boolean __clrcall get();
			}

			property System::SByte TreeType
			{
				System::SByte __clrcall get();
			}
		};

		/// <summary>
		/// Simple one-way linked list node implementation.
		/// </summary>
		generic <typename BSSimpleList_T1>
		public interface class BSSimpleList : public NetScriptFramework::IMemoryObject, public System::Collections::Generic::IEnumerable<BSSimpleList_T1>
		{
		public:
			/// <summary>
			/// Gets the current item at node.
			/// </summary>
			property BSSimpleList_T1 Item
			{
				BSSimpleList_T1 __clrcall get();
			}

			/// <summary>
			/// Gets the next node in list.
			/// </summary>
			property BSSimpleList<BSSimpleList_T1>^ Next
			{
				BSSimpleList<BSSimpleList_T1>^ __clrcall get();
			}
		};

		/// <summary>
		/// Actor class implementation of game. This is equivalent to the papyrus "Actor" type.
		/// </summary>
		public interface class Actor : public TESObjectREFR, public MagicTarget, public ActorValueOwner, public ActorState, public BSTEventSink<BSTransformDeltaEvent^>, public BSTEventSink<bhkCharacterMoveFinishEvent^>, public IPostAnimationChannelUpdateFunctor, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class ForEachSpellVisitor : public NetScriptFramework::IVirtualObject { };

			enum class ChangeFlags : System::UInt32
			{
				LifeState = 0x400,
				PackageExtraData = 0x800,
				MerchantContainer = 0x1000,
				DismemberedLimbs = 0x20000,
				LeveledActor = 0x40000,
				DispModifiers = 0x80000,
				TempModifiers = 0x100000,
				DamageModifiers = 0x200000,
				OverrideModifiers = 0x400000,
				PermanentModifiers = 0x800000,
			};

			enum class RecordFlags : System::UInt32
			{
				Deleted = 0x20,
				StartsDead = 0x200,
				Persistent = 0x400,
				InitiallyDisabled = 0x800,
				Ignored = 0x1000,
				NoAIAcquire = 0x2000000,
				DontHavokSettle = 0x20000000,
			};

			property ActorFlags1 ActorFlagsValue1
			{
				ActorFlags1 __clrcall get();
			}

			property System::Single UpdateTargetTimer
			{
				System::Single __clrcall get();
			}

			property ActorCriticalStages CriticalStage
			{
				ActorCriticalStages __clrcall get();
			}

			/// <summary>
			/// Gets the actor process.
			/// </summary>
			property ActorProcess^ Process
			{
				ActorProcess^ __clrcall get();
			}

			property System::UInt32 KillerRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property System::Single CheckMyDeadBodyTimer
			{
				System::Single __clrcall get();
			}

			property System::Single VoiceTimer
			{
				System::Single __clrcall get();
			}

			property System::Single UnderWaterTimer
			{
				System::Single __clrcall get();
			}

			property System::Int32 ThiefCrimeStamp
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 ActionValue
			{
				System::Int32 __clrcall get();
			}

			property System::Single TimerOnAction
			{
				System::Single __clrcall get();
			}

			property NiPoint3^ EditorLocPosition
			{
				NiPoint3^ __clrcall get();
			}

			property System::Single EditorLocRotation
			{
				System::Single __clrcall get();
			}

			property TESForm^ EditorLocForm
			{
				TESForm^ __clrcall get();
			}

			property BGSLocation^ EditorLocation
			{
				BGSLocation^ __clrcall get();
			}

			property ActorMover^ Mover
			{
				ActorMover^ __clrcall get();
			}

			property BSTSmartPointer<MovementControllerNPC^, BSTSmartPointerIntrusiveRefCount<MovementControllerNPC^>^>^ MovementController
			{
				BSTSmartPointer<MovementControllerNPC^, BSTSmartPointerIntrusiveRefCount<MovementControllerNPC^>^>^ __clrcall get();
			}

			property TESFaction^ VendorFaction
			{
				TESFaction^ __clrcall get();
			}

			property AITimeStamp^ CalculateVendorFactionTimer
			{
				AITimeStamp^ __clrcall get();
			}

			property System::UInt32 IntimidateBribeDayStamp
			{
				System::UInt32 __clrcall get();
			}

			property BSTArray<SpellItem^, BSTSmallArrayHeapAllocator<UnknownGenArg_8^>^>^ AddedSpells
			{
				BSTArray<SpellItem^, BSTSmallArrayHeapAllocator<UnknownGenArg_8^>^>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<ActorMagicCaster^>^ MagicCasters
			{
				NetScriptFramework::FixedMemoryArray<ActorMagicCaster^>^ __clrcall get();
			}

			property TESForm^ EquippedMagicLeftHandSlot
			{
				TESForm^ __clrcall get();
			}

			property TESForm^ EquippedMagicRightHandSlot
			{
				TESForm^ __clrcall get();
			}

			property TESForm^ EquippedMagicOtherSlot
			{
				TESForm^ __clrcall get();
			}

			property TESForm^ EquippedMagicInstantSlot
			{
				TESForm^ __clrcall get();
			}

			property TESForm^ EquippedMagicShoutSlot
			{
				TESForm^ __clrcall get();
			}

			/// <summary>
			/// Gets or sets the race of actor
			/// </summary>
			property TESRace^ Race
			{
				TESRace^ __clrcall get();

				void __clrcall set(TESRace^ value);
			}

			property System::Single EquippedWeight
			{
				System::Single __clrcall get();
			}

			property ActorFlags2 ActorFlagsValue2
			{
				ActorFlags2 __clrcall get();
			}

			property ActorValueStorage^ AvStorage
			{
				ActorValueStorage^ __clrcall get();
			}

			property BGSDialogueBranch^ ExclusiveBranch
			{
				BGSDialogueBranch^ __clrcall get();
			}

			property ActorValueStorage::Modifiers^ HealthModifiers
			{
				ActorValueStorage::Modifiers^ __clrcall get();
			}

			property ActorValueStorage::Modifiers^ MagickaModifiers
			{
				ActorValueStorage::Modifiers^ __clrcall get();
			}

			property ActorValueStorage::Modifiers^ StaminaModifiers
			{
				ActorValueStorage::Modifiers^ __clrcall get();
			}

			property ActorValueStorage::Modifiers^ VoicePointsModifiers
			{
				ActorValueStorage::Modifiers^ __clrcall get();
			}

			property System::Single LastUpdate
			{
				System::Single __clrcall get();
			}

			property System::UInt32 LastSeenTime
			{
				System::UInt32 __clrcall get();
			}

			property BSTSmartPointer<BipedAnim^, BSTSmartPointerIntrusiveRefCount<BipedAnim^>^>^ Biped
			{
				BSTSmartPointer<BipedAnim^, BSTSmartPointerIntrusiveRefCount<BipedAnim^>^>^ __clrcall get();
			}

			property System::Single ArmorRating
			{
				System::Single __clrcall get();
			}

			property System::Single ArmorBaseFactorSum
			{
				System::Single __clrcall get();
			}

			property System::SByte SoundCallBackSet
			{
				System::SByte __clrcall get();
			}

			/// <summary>
			/// Adds the perk to actor.
			/// </summary>
			/// <param name="perk">The perk to add.</param>
			/// <param name="rank">The rank. Zero in most cases.</param>
			void AddPerk(BGSPerk^ perk, System::Int32 rank);

			/// <summary>
			/// Adds a shout to this actor.
			/// </summary>
			/// <param name="shout">The shout to add.</param>
			void AddShout(TESShout^ shout);

			/// <summary>
			/// Adds a spell to this actor. Returns true on success.
			/// </summary>
			/// <param name="spell">The spell to add.</param>
			/// <param name="showLearnedMessage">Show the learned spell message in HUD? If this actor is not player the argument is ignored.</param>
			System::Boolean AddSpell(SpellItem^ spell, System::Boolean showLearnedMessage);

			/// <summary>
			/// Sets whether to allow bleedout dialogue for this actor.
			/// </summary>
			/// <param name="allow">Allow or not?</param>
			void AllowBleedoutDialogue(System::Boolean allow);

			/// <summary>
			/// Sets whether to allow player dialogue or not.
			/// </summary>
			/// <param name="allow">Allow or not?</param>
			void AllowPCDialogue(System::Boolean allow);

			/// <summary>
			/// Gets the base form of actor. If this is a leveled actor it will return the base leveled form generated during gameplay as GetLeveledActorBase papyrus command would. If you want the base-base form of a leveled actor get BaseForm instead and cast it to TESNPC type.
			/// </summary>
			property TESNPC^ BaseActor
			{
				TESNPC^ __clrcall get();
			}

			/// <summary>
			/// Check if this actor can detect another.
			/// </summary>
			/// <param name="target">The target actor.</param>
			System::Boolean CanDetect(Actor^ target);

			/// <summary>
			/// Can this actor fly here?
			/// </summary>
			property System::Boolean CanFlyHere
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Clears this actor's arrested state.
			/// </summary>
			void ClearArrested();

			/// <summary>
			/// Clear all expression overrides on this actor.
			/// </summary>
			void ClearExpressionOverride();

			/// <summary>
			/// Clear shot arrows from actor.
			/// </summary>
			void ClearExtraArrows();

			/// <summary>
			/// Clear movement offset.
			/// </summary>
			void ClearKeepOffsetFromActor();

			/// <summary>
			/// Clears the actor from looking at an object.
			/// </summary>
			void ClearLookAtObject();

			/// <summary>
			/// Clears the actor from looking at a specific position.
			/// </summary>
			void ClearLookAtPosition();

			/// <summary>
			/// Gets the combat state of actor.
			/// </summary>
			property ActorCombatStates CombatState
			{
				ActorCombatStates __clrcall get();
			}

			/// <summary>
			/// Gets the combat target of this actor.
			/// </summary>
			property Actor^ CombatTarget
			{
				Actor^ __clrcall get();
			}

			/// <summary>
			/// Gets or sets the crime faction of this actor. This may be null if no crime faction.
			/// </summary>
			property TESFaction^ CrimeFaction
			{
				TESFaction^ __clrcall get();

				void __clrcall set(TESFaction^ value);
			}

			/// <summary>
			/// Gets the current package of actor.
			/// </summary>
			property TESPackage^ CurrentPackage
			{
				TESPackage^ __clrcall get();
			}

			/// <summary>
			/// Gets the current actor's dialogue target.
			/// </summary>
			property Actor^ DialogueTarget
			{
				Actor^ __clrcall get();
			}

			/// <summary>
			/// Dismounts the actor.
			/// </summary>
			System::Boolean Dismount();

			/// <summary>
			/// Dispel all spells from the actor.
			/// </summary>
			void DispelAllSpells();

			/// <summary>
			/// Attempts to dispel a spell from actor.
			/// </summary>
			/// <param name="spell">The spell to dispel.</param>
			System::Boolean DispelSpell(SpellItem^ spell);

			/// <summary>
			/// Applies a spell to target in combat.
			/// </summary>
			/// <param name="spell">The spell to apply.</param>
			/// <param name="target">The target.</param>
			void DoCombatSpellApply(SpellItem^ spell, TESObjectREFR^ target);

			/// <summary>
			/// Force actor to draw their weapon.
			/// </summary>
			void DrawWeapon();

			/// <summary>
			/// Enable or disable the actor's AI.
			/// </summary>
			/// <param name="enable">Enable or disable?</param>
			void EnableAI(System::Boolean enable);

			/// <summary>
			/// Remove actor from end deferred kill state.
			/// </summary>
			void EndDeferredKill();

			/// <summary>
			/// Equips an item on this actor.
			/// </summary>
			/// <param name="form">The object to equip.</param>
			/// <param name="preventUnequip">Prevent unequipping the item?</param>
			/// <param name="silent">Do this silently?</param>
			void EquipItem(TESForm^ form, System::Boolean preventUnequip, System::Boolean silent);

			/// <summary>
			/// Equips a shout on the actor.
			/// </summary>
			/// <param name="shout">The shout to equip.</param>
			void EquipShout(TESShout^ shout);

			/// <summary>
			/// Equip a spell on actor.
			/// </summary>
			/// <param name="spell">The spell to equip.</param>
			/// <param name="slot">The slot to equip in.</param>
			void EquipSpell(SpellItem^ spell, EquippedSpellSlots slot);

			/// <summary>
			/// Force actor to re-evaluate package.
			/// </summary>
			void EvaluatePackage();

			/// <summary>
			/// Gets the flying state of actor.
			/// </summary>
			property FlyingStates FlyingState
			{
				FlyingStates __clrcall get();
			}

			/// <summary>
			/// Gets or sets the forced landing marker this actor must land at.
			/// </summary>
			property TESObjectREFR^ ForcedLandingMarker
			{
				TESObjectREFR^ __clrcall get();

				void __clrcall set(TESObjectREFR^ value);
			}

			/// <summary>
			/// Gets the amount of gold required to bribe actor.
			/// </summary>
			property System::Int32 BribeAmount
			{
				System::Int32 __clrcall get();
			}

			/// <summary>
			/// Gets the equipped armor in slot.
			/// </summary>
			/// <param name="slot">The slot to check.</param>
			TESObjectARMO^ GetEquippedArmorInSlot(EquipSlots slot);

			/// <summary>
			/// Gets the type of item equipped.
			/// </summary>
			/// <param name="slot">The slot to check.</param>
			EquippedItemTypes GetEquippedItemType(EquippedHandSlots slot);

			/// <summary>
			/// Gets the equipped shield of actor.
			/// </summary>
			property TESObjectARMO^ EquippedShield
			{
				TESObjectARMO^ __clrcall get();
			}

			/// <summary>
			/// Gets the currently equipped shout.
			/// </summary>
			property TESShout^ EquippedShout
			{
				TESShout^ __clrcall get();
			}

			/// <summary>
			/// Gets the equipped spell.
			/// </summary>
			/// <param name="slot">The slot to check.</param>
			SpellItem^ GetEquippedSpell(EquippedSpellSlots slot);

			/// <summary>
			/// Gets the faction rank of actor. The result is -2 if actor is not in faction. -1 if actor is in faction but the rank was set to -1 (this should be treated as not in faction but may eventually become in faction). And any other value for the rank in faction.
			/// </summary>
			/// <param name="faction">The faction to check.</param>
			System::Int32 GetFactionRank(TESFaction^ faction);

			/// <summary>
			/// Gets the reaction of this actor to another actor based on faction.
			/// </summary>
			/// <param name="other">The other actor.</param>
			FactionReactions GetFactionReaction(Actor^ other);

			/// <summary>
			/// Gets the amount of gold currently on this actor.
			/// </summary>
			property System::Int32 GoldAmount
			{
				System::Int32 __clrcall get();
			}

			/// <summary>
			/// Gets the current mount if actor is mounted.
			/// </summary>
			Actor^ GetMount();

			/// <summary>
			/// Gets the actor who is currently mounting this actor.
			/// </summary>
			Actor^ GetMountedBy();

			/// <summary>
			/// Gets the relationship rank between this actor and another.
			/// </summary>
			/// <param name="other">The other actor.</param>
			RelationshipRanks GetRelationshipRank(Actor^ other);

			/// <summary>
			/// Check if this actor has association with another. If the other actor is null check if actor has association of the specified type with anyone.
			/// </summary>
			/// <param name="type">The association type.</param>
			/// <param name="other">The other actor. If this is null check whether actor has the specified association with anyone.</param>
			System::Boolean HasAssociation(BGSAssociationType^ type, Actor^ other);

			/// <summary>
			/// Check if this actor has family relationship with another actor. If the other actor is null then check if has family relationship with anyone.
			/// </summary>
			/// <param name="other">The other actor. If this is null then check for family relationship with anyone.</param>
			System::Boolean HasFamilyRelationship(Actor^ other);

			/// <summary>
			/// Check if this actor has line of sight with an object. Only player can check line of sight with a non-actor!
			/// </summary>
			/// <param name="other">The other object.</param>
			System::Boolean HasLOS_Papyrus(TESObjectREFR^ other);

			/// <summary>
			/// Check if this actor has parent relationship with another.
			/// </summary>
			/// <param name="other">The other actor.</param>
			System::Boolean HasParentRelationship(Actor^ other);

			/// <summary>
			/// Check if actor has the specified perk.
			/// </summary>
			/// <param name="perk">The perk to check for.</param>
			System::Boolean HasPerk(BGSPerk^ perk);

			/// <summary>
			/// Check if actor has a spell or shout.
			/// </summary>
			/// <param name="spellOrShout">The spell or shout form.</param>
			System::Boolean HasSpell(TESForm^ spellOrShout);

			/// <summary>
			/// Gets the highest relationship rank this actor has. This does not take into account changes made during gameplay.
			/// </summary>
			property RelationshipRanks HighestRelationshipRank
			{
				RelationshipRanks __clrcall get();
			}

			/// <summary>
			/// Interrupt all casting of this actor.
			/// </summary>
			void InterruptCast();

			/// <summary>
			/// Check if this actor is alarmed right now.
			/// </summary>
			property System::Boolean IsAlarmed
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Gets or sets if this actor is alerted.
			/// </summary>
			property System::Boolean IsAlerted
			{
				System::Boolean __clrcall get();

				void __clrcall set(System::Boolean value);
			}

			/// <summary>
			/// Get or set if actor is allowed to fly.
			/// </summary>
			property System::Boolean IsAllowedToFly
			{
				System::Boolean __clrcall get();

				void __clrcall set(System::Boolean value);
			}

			/// <summary>
			/// Check if this actor is arrested right now.
			/// </summary>
			property System::Boolean IsArrested
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Check if this actor is arresting their target.
			/// </summary>
			property System::Boolean IsArrestingTarget
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Check if this actor is being ridden (horse).
			/// </summary>
			property System::Boolean IsBeingRidden
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Check if this actor is in bleedout state.
			/// </summary>
			property System::Boolean IsBleedingOut
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Gets or sets if actor is bribed by player.
			/// </summary>
			property System::Boolean IsBribed
			{
				System::Boolean __clrcall get();

				void __clrcall set(System::Boolean value);
			}

			/// <summary>
			/// Check if actor has a race marked with the child flag.
			/// </summary>
			property System::Boolean IsChild
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Check if actor is commanded.
			/// </summary>
			property System::Boolean IsCommandedActor
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Check if actor is dead.
			/// </summary>
			property System::Boolean IsDead
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Gets or sets if actor is doing favor for player now.
			/// </summary>
			property System::Boolean IsDoingFavor
			{
				System::Boolean __clrcall get();

				void __clrcall set(System::Boolean value);
			}

			/// <summary>
			/// Check if an item is equipped.
			/// </summary>
			/// <param name="form">The object to check. This may be a list as well.</param>
			System::Boolean IsEquipped(TESForm^ form);

			/// <summary>
			/// Check if actor is marked as essential.
			/// </summary>
			property System::Boolean IsEssential
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Gets a value indicating whether this actor is currently falling. This will be false while jumping upwards and only will become true when starting to fall back down.
			/// </summary>
			property System::Boolean IsFalling
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Check if actor is flying.
			/// </summary>
			property System::Boolean IsFlying
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Gets or sets if actor is a ghost. Ethereal form does this.
			/// </summary>
			property System::Boolean IsGhost
			{
				System::Boolean __clrcall get();

				void __clrcall set(System::Boolean value);
			}

			/// <summary>
			/// Check if actor is a guard.
			/// </summary>
			property System::Boolean IsGuard
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Gets or sets whether the head tracking mode is enabled for this actor.
			/// </summary>
			property System::Boolean IsHeadTrackingEnabled
			{
				System::Boolean __clrcall get();

				void __clrcall set(System::Boolean value);
			}

			/// <summary>
			/// Check if this actor is hostile to another actor.
			/// </summary>
			/// <param name="target">The target actor to check hostility towards.</param>
			System::Boolean IsHostileToActor(Actor^ target);

			/// <summary>
			/// Check if this actor is in combat now.
			/// </summary>
			property System::Boolean IsInCombat
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Check if this actor is in faction.
			/// </summary>
			/// <param name="faction">The specified faction.</param>
			System::Boolean IsInFaction(TESFaction^ faction);

			/// <summary>
			/// Check if actor is in killmove now.
			/// </summary>
			property System::Boolean IsInKillmove
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Gets or sets if actor is in intimidated.
			/// </summary>
			property System::Boolean IsIntimidated
			{
				System::Boolean __clrcall get();

				void __clrcall set(System::Boolean value);
			}

			/// <summary>
			/// Gets a value indicating if this actor is currently in the jump state. You may also want to check IsFalling because after the jump state the actor will be in the falling state.
			/// </summary>
			property System::Boolean IsJumping
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Check if this actor is on a flying mount.
			/// </summary>
			property System::Boolean IsOnFlyingMount
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Check if actor is on mount.
			/// </summary>
			property System::Boolean IsOnMount
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Check if actor is over encumbered.
			/// </summary>
			property System::Boolean IsOverEncumbered
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Check if this actor is the player character.
			/// </summary>
			property System::Boolean IsPlayer
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Check if this is player's last ridden horse.
			/// </summary>
			property System::Boolean IsPlayersLastRiddenHorse
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Check if actor is marked as player's teammate.
			/// </summary>
			property System::Boolean IsPlayerTeammate
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Check if actor is running.
			/// </summary>
			property System::Boolean IsRunning
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Gets or sets if actor is sneaking.
			/// </summary>
			property System::Boolean IsSneaking
			{
				System::Boolean __clrcall get();

				void __clrcall set(System::Boolean value);
			}

			/// <summary>
			/// Check if actor is sprinting.
			/// </summary>
			property System::Boolean IsSprinting
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Check if actor is trespassing.
			/// </summary>
			property System::Boolean IsTrespassing
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Gets or sets if actor is unconscious.
			/// </summary>
			property System::Boolean IsUnconscious
			{
				System::Boolean __clrcall get();

				void __clrcall set(System::Boolean value);
			}

			/// <summary>
			/// Check if actor has weapon out.
			/// </summary>
			property System::Boolean IsWeaponDrawn
			{
				System::Boolean __clrcall get();
			}

			/// <param name="killer">The actor who is marked as killer. This can be null.</param>
			/// <param name="noEvents">If true then don't raise any kill events.</param>
			/// <param name="force">If true then kill even if actor is essential or otherwise unkillable.</param>
			void Kill(Actor^ killer, System::Boolean noEvents, System::Boolean force);

			/// <summary>
			/// Gets the killer of this actor.
			/// </summary>
			property Actor^ KilledBy
			{
				Actor^ __clrcall get();
			}

			/// <summary>
			/// Gets the level of actor.
			/// </summary>
			property System::Int32 Level
			{
				System::Int32 __clrcall get();
			}

			/// <summary>
			/// Gets the actor's current light level.
			/// </summary>
			property System::Single LightLevel
			{
				System::Single __clrcall get();
			}

			/// <summary>
			/// Gets the lowest relationship rank this actor has.
			/// </summary>
			property RelationshipRanks LowestRelationshipRank
			{
				RelationshipRanks __clrcall get();
			}

			/// <summary>
			/// Gets the current movement state of actor.
			/// </summary>
			property bhkCharacterStateTypes MovementState
			{
				bhkCharacterStateTypes __clrcall get();
			}

			/// <summary>
			/// Gets or sets whether this actor can recover from a bleedout or not.
			/// </summary>
			property System::Boolean NoBleedoutRecovery
			{
				System::Boolean __clrcall get();

				void __clrcall set(System::Boolean value);
			}

			/// <summary>
			/// Gets or sets whether this actor receives player control input.
			/// </summary>
			property System::Boolean ReceivesPlayerControls
			{
				System::Boolean __clrcall get();

				void __clrcall set(System::Boolean value);
			}

			/// <summary>
			/// Removes actor from all the factions.
			/// </summary>
			void RemoveFromAllFactions();

			/// <summary>
			/// Removes the actor from specified faction.
			/// </summary>
			/// <param name="faction">The faction to remove from.</param>
			void RemoveFromFaction(TESFaction^ faction);

			/// <summary>
			/// Removes a perk from actor.
			/// </summary>
			/// <param name="perk">The perk to remove.</param>
			void RemovePerk(BGSPerk^ perk);

			/// <summary>
			/// Removes a shout from this actor.
			/// </summary>
			/// <param name="shout">The shout to remove.</param>
			System::Boolean RemoveShout(TESShout^ shout);

			/// <summary>
			/// Removes a spell from actor. Always returns true.
			/// </summary>
			/// <param name="spell">The spell to remove.</param>
			System::Boolean RemoveSpell(SpellItem^ spell);

			/// <summary>
			/// Resets the health and limbs of actor.
			/// </summary>
			void ResetHealthAndLimbs();

			/// <summary>
			/// Resurrect this actor.
			/// </summary>
			void Resurrect();

			/// <summary>
			/// Sends the alarm as if an actor was just assaulted by another.
			/// </summary>
			/// <param name="assaulter">The actor who assaulted this actor.</param>
			void SendAssaultAlarm(Actor^ assaulter);

			/// <summary>
			/// Have this actor believe they caught someone trespassing.
			/// </summary>
			/// <param name="criminal">The actor who was caught trespassing (bad guy).</param>
			void SendTrespassAlarm(Actor^ criminal);

			/// <summary>
			/// Sets if actor is allowed to fly.
			/// </summary>
			/// <param name="allowFly">Allowed to fly?</param>
			/// <param name="allowCrash">Allow crash?</param>
			/// <param name="allowSearch">Allow search?</param>
			void SetAllowFlyingEx(System::Boolean allowFly, System::Boolean allowCrash, System::Boolean allowSearch);

			/// <summary>
			/// Sets the alpha value of actor (transparency).
			/// </summary>
			/// <param name="alpha">The alpha value. Valid is between 0 and 1 where 0 is completely transparent and 1 is solid.</param>
			/// <param name="fade">Fade to the value instead of immediately popping?</param>
			void SetAlpha(System::Single alpha, System::Boolean fade);

			/// <summary>
			/// Should this actor be attacked by all other actors when its detected?
			/// </summary>
			/// <param name="should">Should or not.</param>
			void SetAttackedByAllOnSight(System::Boolean should);

			/// <summary>
			/// Sets the critical stage for actor and handles the associated effects.
			/// </summary>
			/// <param name="stage">The stage.</param>
			void SetCriticalStage(ActorCriticalStages stage);

			/// <summary>
			/// Sets actor not to move.
			/// </summary>
			/// <param name="dontMove">Allow move or not?</param>
			void SetDontMove(System::Boolean dontMove);

			/// <summary>
			/// Sets the expression override on actor.
			/// </summary>
			/// <param name="expression">The expression ID.</param>
			/// <param name="amount">The amount. This is from 0 to 1.</param>
			System::Boolean SetExpressionOverride(System::Int32 expression, System::Single amount);

			/// <summary>
			/// Sets this actor's head tracking target object.
			/// </summary>
			/// <param name="target">The object to look at.</param>
			/// <param name="whilePathing">Also continue looking at object while pathing?</param>
			void SetLookAtObject(TESObjectREFR^ target, System::Boolean whilePathing);

			/// <summary>
			/// Makes actor look at a specific position. This has to be called every time after the actor has already updated their headtracking targets or it will be overwritten always.
			/// </summary>
			/// <param name="position">The position to look at.</param>
			void SetLookAtPosition(NiPoint3^ position);

			/// <summary>
			/// Sets the outfit of this actor.
			/// </summary>
			/// <param name="outfit">The outfit to set.</param>
			/// <param name="sleepOutfit">Set sleep outfit or normal?</param>
			void SetOutfit(BGSOutfit^ outfit, System::Boolean sleepOutfit);

			/// <summary>
			/// Sets the player as resisting arrest from this actor's faction.
			/// </summary>
			void SetPlayerResistingArrest();

			/// <summary>
			/// Sets this actor as being player teammate or not.
			/// </summary>
			/// <param name="teammate">Is teammate?</param>
			/// <param name="canDoFavors">Can this actor do favors?</param>
			void SetPlayerTeammate(System::Boolean teammate, System::Boolean canDoFavors);

			/// <summary>
			/// Sets the relationship rank of this actor with another.
			/// </summary>
			/// <param name="other">The other actor.</param>
			/// <param name="rank">The rank.</param>
			void SetRelationshipRank(Actor^ other, RelationshipRanks rank);

			/// <summary>
			/// Sets if actor is restrained.
			/// </summary>
			/// <param name="restrained">Is restrained?</param>
			void SetRestrained(System::Boolean restrained);

			/// <summary>
			/// Sets the vehicle of actor.
			/// </summary>
			/// <param name="vehicle">The vehicle to set. If null then clear vehicle.</param>
			void SetVehicle(TESObjectREFR^ vehicle);

			/// <summary>
			/// Show barter menu for this actor.
			/// </summary>
			void ShowBarterMenu();

			/// <summary>
			/// Gets or sets whether this actor's detection state of player will affect the stealth meter.
			/// </summary>
			property System::Boolean ShowOnStealthMeter
			{
				System::Boolean __clrcall get();

				void __clrcall set(System::Boolean value);
			}

			/// <summary>
			/// Gets the sitting state of actor.
			/// </summary>
			property ActorActionStates SitState
			{
				ActorActionStates __clrcall get();
			}

			/// <summary>
			/// Gets the sleep state of actor.
			/// </summary>
			property ActorActionStates SleepState
			{
				ActorActionStates __clrcall get();
			}

			/// <summary>
			/// Tries to start combat with target. Returns false if failed.
			/// </summary>
			/// <param name="target">The target.</param>
			System::Boolean StartCombat(Actor^ target);

			/// <summary>
			/// Go into deferred kill state.
			/// </summary>
			void StartDeferredKill();

			/// <summary>
			/// Stops combat on this actor.
			/// </summary>
			void StopCombat();

			/// <summary>
			/// Stops the combat alarm from this actor.
			/// </summary>
			void StopCombatAlarm();

			/// <summary>
			/// Attempts to trap the soul of target and returns if successful.
			/// </summary>
			/// <param name="target">The target actor whose soul to trap.</param>
			System::Boolean TrapSoul(Actor^ target);

			/// <summary>
			/// Unequip all items.
			/// </summary>
			void UnequipAll();

			/// <summary>
			/// Unequip an item from actor.
			/// </summary>
			/// <param name="form">The item to unequip.</param>
			/// <param name="preventEquip">Prevent equipping it again?</param>
			/// <param name="silent">Is it silent unequip?</param>
			void UnequipItem(TESForm^ form, System::Boolean preventEquip, System::Boolean silent);

			/// <summary>
			/// Removes all equipment from an item slot.
			/// </summary>
			/// <param name="slot">The slot to unequip.</param>
			void UnequipItemSlot(EquipSlots slot);

			/// <summary>
			/// Unequips the specified shout.
			/// </summary>
			/// <param name="shout">The shout to unequip.</param>
			void UnequipShout(TESShout^ shout);

			/// <summary>
			/// Unequips the spell from actor.
			/// </summary>
			/// <param name="spell">The spell to unequip.</param>
			/// <param name="slot">The slot to unequip from.</param>
			void UnequipSpell(SpellItem^ spell, EquippedSpellSlots slot);

			/// <summary>
			/// Unlock owned doors in cell of actor. Only works in interior.
			/// </summary>
			void UnlockOwnedDoorsInCell();

			/// <summary>
			/// Updates the movement controller location for actor.
			/// </summary>
			/// <param name="pos">The position to update to.</param>
			void UpdateMovementControllerPosition(NiPoint3^ pos);

			/// <summary>
			/// Gets the total warmth rating of actor.
			/// </summary>
			property System::Single WarmthRating
			{
				System::Single __clrcall get();
			}

			/// <summary>
			/// Check if intimidate would succeed on actor.
			/// </summary>
			property System::Boolean WillIntimidateSucceed
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Gets the time until actor can shout again (in seconds).
			/// </summary>
			property System::Single VoiceRecoveryTime
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}

			/// <summary>
			/// Check if a worn item has the specified keyword.
			/// </summary>
			/// <param name="keyword">The keyword to check for.</param>
			System::Boolean WornHasKeyword(BGSKeyword^ keyword);

			/// <param name="keyword">The keyword to check for.</param>
			System::Boolean WornHasKeywordText(System::String^ keyword);

			/// <summary>
			/// Increases the skill by an amount. This is experience amount not level count!
			/// </summary>
			/// <param name="skill">The skill to increase.</param>
			/// <param name="amount">The amount to increase. This is experience not skill levels!</param>
			/// <param name="target">The form that caused us to use skill.</param>
			void AdvanceSkill(ActorValueIndices skill, System::Single amount, TESForm^ target);
		};

		interface class anonymous_namespace::MagicMenuAddSpellVisitor : public Actor::ForEachSpellVisitor, public NetScriptFramework::IVirtualObject { };

		interface class TESWeather::WeatherSoundList : public BSSimpleList<TESWeather::SoundData^>, public NetScriptFramework::IMemoryObject { };

		public interface class TESRegionPointList : public BSSimpleList<TESRegionPoint^>, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class ScaleResult : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESRegionPoint^ Point
				{
					TESRegionPoint^ __clrcall get();
				}

				property System::Single Distance
				{
					System::Single __clrcall get();
				}

				property System::Single Scale
				{
					System::Single __clrcall get();
				}
			};

			property TESRegionPointList::ScaleResult^ LastScaleResult
			{
				TESRegionPointList::ScaleResult^ __clrcall get();
			}

			property System::Boolean OwnsPointMemory
			{
				System::Boolean __clrcall get();
			}

			property NiPoint2^ Minimums
			{
				NiPoint2^ __clrcall get();
			}

			property NiPoint2^ Maximums
			{
				NiPoint2^ __clrcall get();
			}

			property System::Int32 DistanceInsideAtMax
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 Count
			{
				System::Int32 __clrcall get();
			}
		};

		public interface class Character : public Actor, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				StartsDead = 0x200,
				Persistent = 0x400,
				InitiallyDisabled = 0x800,
				Ignored = 0x1000,
				NoAIAcquire = 0x2000000,
				DontHavokSettle = 0x20000000,
			};
		};

		public interface class TESRegionList : public BSSimpleList<TESRegion^>, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Boolean OwnsRegionMemory
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class GatherSpellsFunctor : public Actor::ForEachSpellVisitor, public BSScrapArray<SpellItem^>, public NetScriptFramework::IVirtualObject { };

		public interface class HasSpellVisitor : public Actor::ForEachSpellVisitor, public NetScriptFramework::IVirtualObject { };

		public interface class TESRegionGrassObjectList : public BSSimpleList<TESRegionGrassObject^>, public NetScriptFramework::IVirtualObject { };

		public interface class TESRegionObjectList : public BSSimpleList<TESRegionObject^>, public NetScriptFramework::IVirtualObject { };

		/// <summary>
		/// The player character.
		/// </summary>
		public interface class PlayerCharacter : public Character, public BSTEventSink<MenuOpenCloseEvent^>, public BSTEventSink<MenuModeChangeEvent^>, public BSTEventSink<UserEventEnabledEvent^>, public BSTEventSink<TESTrackedStatsEvent^>, public BSTEventSource<BGSActorCellEvent^>, public BSTEventSource<BGSActorDeathEvent^>, public BSTEventSource<PositionPlayerEvent^>, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSTHashMap2<TESFaction^, CrimeGoldStruct^>^ CrimeGoldMap
			{
				BSTHashMap2<TESFaction^, CrimeGoldStruct^>^ __clrcall get();
			}

			property BSTHashMap2<TESFaction^, StolenItemValueStruct^>^ StolenItemValueMap
			{
				BSTHashMap2<TESFaction^, StolenItemValueStruct^>^ __clrcall get();
			}

			property System::UInt32 CommandWaitMarkerRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property BSTHashMap2<TESFaction^, FriendshipFactionsStruct^>^ FactionOwnerFriendsMap
			{
				BSTHashMap2<TESFaction^, FriendshipFactionsStruct^>^ __clrcall get();
			}

			property NiPoint3^ LastKnownGoodPosition
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ BulletAutoAim
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ CachedVelocity
			{
				NiPoint3^ __clrcall get();
			}

			property BSTArray<System::IntPtr, BSTArrayHeapAllocator^>^ AddedPerks
			{
				BSTArray<System::IntPtr, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<BGSPerk^, BSTArrayHeapAllocator^>^ Perks
			{
				BSTArray<BGSPerk^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<BGSPerk^, BSTArrayHeapAllocator^>^ StandingStonePerks
			{
				BSTArray<BGSPerk^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ CurrentMapMarkerRefHandles
			{
				BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<BSTTuple<NiPoint3^, AITimeStamp^>^, BSTArrayHeapAllocator^>^ VelocityArray
			{
				BSTArray<BSTTuple<NiPoint3^, AITimeStamp^>^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ RuneCastRefHandles
			{
				BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<System::IntPtr, BSTArrayHeapAllocator^>^ ImageSpaceModifierAnims1
			{
				BSTArray<System::IntPtr, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<System::IntPtr, BSTArrayHeapAllocator^>^ ImageSpaceModifierAnims2
			{
				BSTArray<System::IntPtr, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSSimpleList<TESQuestStageItem^>^ QuestLog
			{
				BSSimpleList<TESQuestStageItem^>^ __clrcall get();
			}

			property BSTArray<BGSInstancedQuestObjective^, BSTArrayHeapAllocator^>^ Objectives
			{
				BSTArray<BGSInstancedQuestObjective^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTHashMap2<unknown^, unknown^>^ CurrentSayOnceInfosMap
			{
				BSTHashMap2<unknown^, unknown^>^ __clrcall get();
			}

			property BSSimpleList<System::UInt32>^ DroppedRefHandleList
			{
				BSSimpleList<System::UInt32>^ __clrcall get();
			}

			property NiTMap<System::UInt32, System::Byte>^ RandomDoorSpaceMap
			{
				NiTMap<System::UInt32, System::Byte>^ __clrcall get();
			}

			property TESWorldSpace^ CachedWorldSpace
			{
				TESWorldSpace^ __clrcall get();
			}

			property NiPoint3^ ExteriorPosition
			{
				NiPoint3^ __clrcall get();
			}

			property PlayerTargetLocation^ QueuedTargetLocation
			{
				PlayerTargetLocation^ __clrcall get();
			}

			property BSSoundHandle^ MagicFailureSound
			{
				BSSoundHandle^ __clrcall get();
			}

			property DialoguePackage^ ClosestConversation
			{
				DialoguePackage^ __clrcall get();
			}

			property DialoguePackage^ AiConversationRunning
			{
				DialoguePackage^ __clrcall get();
			}

			property System::Int32 NumberOfStealWarnings
			{
				System::Int32 __clrcall get();
			}

			property System::Single StealWarningTimer
			{
				System::Single __clrcall get();
			}

			property System::Int32 NumberOfPickpocketWarnings
			{
				System::Int32 __clrcall get();
			}

			property System::Single PickPocketWarningTimer
			{
				System::Single __clrcall get();
			}

			property AITimeStamp^ WarnToLeaveTimeStamp
			{
				AITimeStamp^ __clrcall get();
			}

			property ImageSpaceModifierInstanceDOF^ IronsightsDOFInstance
			{
				ImageSpaceModifierInstanceDOF^ __clrcall get();
			}

			property ImageSpaceModifierInstanceDOF^ VatsDOFInstance
			{
				ImageSpaceModifierInstanceDOF^ __clrcall get();
			}

			property ImageSpaceModifierInstanceDOF^ DynamicDOFInstance
			{
				ImageSpaceModifierInstanceDOF^ __clrcall get();
			}

			property System::Single DynamicDOFFocusTime
			{
				System::Single __clrcall get();
			}

			property System::Boolean DynamicDOFFocused
			{
				System::Boolean __clrcall get();
			}

			property NiPoint3^ DynamicDOFLastAngle
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ DynamicDOFLastPosition
			{
				NiPoint3^ __clrcall get();
			}

			property TESFaction^ CurrentPrisonFaction
			{
				TESFaction^ __clrcall get();
			}

			property System::Int32 JailSentence
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 VampireFeedDetection
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 MapMarkerIterator
			{
				System::Int32 __clrcall get();
			}

			property System::UInt32 ForceActivateRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<PlayerActionObject^>^ PlayerActionObjects
			{
				NetScriptFramework::FixedMemoryArray<PlayerActionObject^>^ __clrcall get();
			}

			property PlayerActions MostRecentAction
			{
				PlayerActions __clrcall get();
			}

			property System::UInt32 ActorDoingPlayerCommandRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property BSTArray<hkRefPtr<bhkMouseSpringAction^>^, BSTSmallArrayHeapAllocator<UnknownGenArg_32^>^>^ GrabSpring
			{
				BSTArray<hkRefPtr<bhkMouseSpringAction^>^, BSTSmallArrayHeapAllocator<UnknownGenArg_32^>^>^ __clrcall get();
			}

			property System::UInt32 GrabbedObjectRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property System::Single GrabObjectWeight
			{
				System::Single __clrcall get();
			}

			property System::Single GrabDistance
			{
				System::Single __clrcall get();
			}

			property System::Int32 SleepSeconds
			{
				System::Int32 __clrcall get();
			}

			property BSTSmartPointer<BipedAnim^, BSTSmartPointerIntrusiveRefCount<BipedAnim^>^>^ LargeBiped
			{
				BSTSmartPointer<BipedAnim^, BSTSmartPointerIntrusiveRefCount<BipedAnim^>^>^ __clrcall get();
			}

			property NiPointer<NiNode^>^ FirstPerson3D
			{
				NiPointer<NiNode^>^ __clrcall get();
			}

			property System::Single EyeHeight
			{
				System::Single __clrcall get();
			}

			property System::Single GreetTimer
			{
				System::Single __clrcall get();
			}

			property System::Single EncumberedTimer
			{
				System::Single __clrcall get();
			}

			property System::Single PowerAttackTimer
			{
				System::Single __clrcall get();
			}

			property System::Int32 HoursToSleep
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 AmountStolenSold
			{
				System::Int32 __clrcall get();
			}

			property System::UInt32 ValueStolen
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 LastRiddenMountRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property System::UInt32 LightTargetRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property System::Single SortActorDistanceTimer
			{
				System::Single __clrcall get();
			}

			property System::Single SitHeadingDelta
			{
				System::Single __clrcall get();
			}

			property System::Int32 SkillTrainingsThisLevel
			{
				System::Int32 __clrcall get();
			}

			property TESClass^ DefaultClass
			{
				TESClass^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<System::Int32>^ CrimeCounts
			{
				NetScriptFramework::FixedMemoryArray<System::Int32>^ __clrcall get();
			}

			property AlchemyItem^ PendingPoison
			{
				AlchemyItem^ __clrcall get();
			}

			property System::Int64 LastPlayingTimeUpdate
			{
				System::Int64 __clrcall get();
			}

			property System::Int64 TotalPlayingTime
			{
				System::Int64 __clrcall get();
			}

			property System::Int32 CharacterSeed
			{
				System::Int32 __clrcall get();
			}

			property TESForm^ LastKnownGoodLocation
			{
				TESForm^ __clrcall get();
			}

			property NiPointer<BSLight^>^ FirstPersonLight
			{
				NiPointer<BSLight^>^ __clrcall get();
			}

			property NiPointer<BSLight^>^ ThirdPersonLight
			{
				NiPointer<BSLight^>^ __clrcall get();
			}

			property System::Single DropAngleMod
			{
				System::Single __clrcall get();
			}

			property System::Single LastDropAngleMod
			{
				System::Single __clrcall get();
			}

			property PlayerSkills^ Skills
			{
				PlayerSkills^ __clrcall get();
			}

			property System::UInt32 AutoAimActorRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property NiPointer<NiAVObject^>^ Targeted3D
			{
				NiPointer<NiAVObject^>^ __clrcall get();
			}

			property CombatGroup^ CombatGroupData
			{
				CombatGroup^ __clrcall get();
			}

			property BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ ActorsToDisplayOnTheHUDRefHandles
			{
				BSTArray<System::UInt32, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<TESBoundObject^>^ LastOneHandItems
			{
				NetScriptFramework::FixedMemoryArray<TESBoundObject^>^ __clrcall get();
			}

			property System::Single TeammatesCount
			{
				System::Single __clrcall get();
			}

			property System::Single CombatTimer
			{
				System::Single __clrcall get();
			}

			property System::Single YieldTimer
			{
				System::Single __clrcall get();
			}

			property System::Single ChaseTimer
			{
				System::Single __clrcall get();
			}

			property System::Single DrawSheatheSafetyTimer
			{
				System::Single __clrcall get();
			}

			property BGSLocation^ CurrentLocation
			{
				BGSLocation^ __clrcall get();
			}

			property AITimeStamp^ CachedVelocityTimeStamp
			{
				AITimeStamp^ __clrcall get();
			}

			property System::Single TelekinesisDistance
			{
				System::Single __clrcall get();
			}

			property System::Single CommandTimer
			{
				System::Single __clrcall get();
			}

			property GrabbingTypes GrabType
			{
				GrabbingTypes __clrcall get();
			}

			property System::Int32 Difficulty
			{
				System::Int32 __clrcall get();
			}

			property System::SByte Murder
			{
				System::SByte __clrcall get();
			}

			property System::SByte PerkCount
			{
				System::SByte __clrcall get();
			}

			property ByCharGenFlags ByCharGenFlag
			{
				ByCharGenFlags __clrcall get();
			}

			property Crime^ ResistArrestCrime
			{
				Crime^ __clrcall get();
			}

			property BSTArray<System::IntPtr, BSTArrayHeapAllocator^>^ TintMasks
			{
				BSTArray<System::IntPtr, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<System::IntPtr, BSTArrayHeapAllocator^>^ OverlayTintMasks
			{
				BSTArray<System::IntPtr, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BGSTextureSet^ Complexion
			{
				BGSTextureSet^ __clrcall get();
			}

			property TESRace^ CharGenRace
			{
				TESRace^ __clrcall get();
			}

			property TESRace^ Race2
			{
				TESRace^ __clrcall get();
			}

			/// <summary>
			/// Gets the player character instance.
			/// </summary>
			static property PlayerCharacter^ Instance
			{
				PlayerCharacter^ __clrcall get()
				{
					return NetScriptFramework::MemoryObject::FromAddress<PlayerCharacter^>(NetScriptFramework::Memory::ReadPointer(__VIDS::VID517014.Value, false));
				}
			}
		};

		interface class TESCameraState;

		public interface class TESCamera : public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPoint2^ RotationInput
			{
				NiPoint2^ __clrcall get();
			}

			property NiPoint3^ TranslationInput
			{
				NiPoint3^ __clrcall get();
			}

			property System::Single ZoomInput
			{
				System::Single __clrcall get();
			}

			/// <summary>
			/// Gets the node of camera. Example "WorldRoot CameraNode".
			/// </summary>
			property NiNode^ Node
			{
				NiNode^ __clrcall get();
			}

			/// <summary>
			/// Gets the current state of camera.
			/// </summary>
			property TESCameraState^ State
			{
				TESCameraState^ __clrcall get();
			}

			property System::Boolean Enabled
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class TESCameraState : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject
		{
		public:
			/// <summary>
			/// Gets the parent camera of state.
			/// </summary>
			property TESCamera^ Camera
			{
				TESCamera^ __clrcall get();
			}

			/// <summary>
			/// Gets the identifier of this state.
			/// </summary>
			property TESCameraStates Id
			{
				TESCameraStates __clrcall get();
			}
		};

		public interface class LocalMapCamera : public TESCamera, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class DefaultState : public TESCameraState, public NetScriptFramework::IVirtualObject
			{
			public:
				property NiPoint3^ InitialPosition
				{
					NiPoint3^ __clrcall get();
				}

				property NiPoint3^ Translation
				{
					NiPoint3^ __clrcall get();
				}

				property System::Single Zoom
				{
					System::Single __clrcall get();
				}

				property System::Single MinFrustumHalfWidth
				{
					System::Single __clrcall get();
				}

				property System::Single MinFrustumHalfHeight
				{
					System::Single __clrcall get();
				}
			};

			property NiPoint3^ MaxExtent
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ MinExtent
			{
				NiPoint3^ __clrcall get();
			}

			property BSTSmartPointer<LocalMapCamera::DefaultState^, BSTSmartPointerIntrusiveRefCount<LocalMapCamera::DefaultState^>^>^ DefaultLocalMapCameraState
			{
				BSTSmartPointer<LocalMapCamera::DefaultState^, BSTSmartPointerIntrusiveRefCount<LocalMapCamera::DefaultState^>^>^ __clrcall get();
			}

			property NiPointer<NiCamera^>^ Camera
			{
				NiPointer<NiCamera^>^ __clrcall get();
			}

			property System::Single ZRotation
			{
				System::Single __clrcall get();
			}
		};

		public interface class MapCamera : public TESCamera, public NetScriptFramework::IVirtualObject
		{
		public:
			property TESWorldSpace^ WorldSpace
			{
				TESWorldSpace^ __clrcall get();
			}
		};

		public interface class RaceSexCamera : public TESCamera, public NetScriptFramework::IVirtualObject { };

		public interface class AutoVanityState : public TESCameraState, public NetScriptFramework::IVirtualObject { };

		public interface class ThirdPersonState : public TESCameraState, public PlayerInputHandler, public NetScriptFramework::IVirtualObject
		{
		public:
			/// <summary>
			/// Gets the attached node. For example "Camera3rd [Cam3]".
			/// </summary>
			property NiAVObject^ AttachedNode
			{
				NiAVObject^ __clrcall get();
			}

			/// <summary>
			/// Gets the control node. For example "Camera Control".
			/// </summary>
			property NiNode^ ControlNode
			{
				NiNode^ __clrcall get();
			}

			/// <summary>
			/// Gets the position. This is the actual camera position and not player position!
			/// </summary>
			property NiPoint3^ Position
			{
				NiPoint3^ __clrcall get();
			}

			property NiQuaternion^ Rotation
			{
				NiQuaternion^ __clrcall get();
			}

			/// <summary>
			/// Gets the over shoulder offsets.
			/// </summary>
			property NiPoint3^ OverShoulderOffsetTarget
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ OverShoulderOffsetCurrent
			{
				NiPoint3^ __clrcall get();
			}

			/// <summary>
			/// Gets or sets the target zoom level that we are zooming to.
			/// </summary>
			property System::Single TargetZoomLevel
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}

			/// <summary>
			/// Gets or sets the current zoom level that we have zoomed to.
			/// </summary>
			property System::Single CurrentZoomLevel
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}

			property System::Single TargetYaw
			{
				System::Single __clrcall get();
			}

			property System::Single CurrentYaw
			{
				System::Single __clrcall get();
			}

			property System::Single SavedZoomLevel
			{
				System::Single __clrcall get();
			}

			property System::Single PitchZoomLevel
			{
				System::Single __clrcall get();
			}

			/// <summary>
			/// Gets the last camera collision point. This is only set if the camera collides with something in its path.
			/// </summary>
			property NiPoint3^ LastCollisionPoint
			{
				NiPoint3^ __clrcall get();
			}

			property System::Single LastCollisionPointValue
			{
				System::Single __clrcall get();
			}

			/// <summary>
			/// Gets the target node.
			/// </summary>
			property NiPointer<NiNode^>^ TargetNode
			{
				NiPointer<NiNode^>^ __clrcall get();
			}

			/// <summary>
			/// Gets the target node name.
			/// </summary>
			property BSFixedString^ TargetNodeName
			{
				BSFixedString^ __clrcall get();
			}

			property NiQuaternion^ TargetNodeRotation
			{
				NiQuaternion^ __clrcall get();
			}

			/// <summary>
			/// Gets or sets the X rotation from last reset point. This is in radians. This is the one where if you move mouse left or right.
			/// </summary>
			property System::Single XRotationFromLastResetPoint
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}

			/// <summary>
			/// Gets or sets the Y rotation from last reset point. This is in radians. This is the one where if you move mouse down or up.
			/// </summary>
			property System::Single YRotationFromLastResetPoint
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}

			property System::Boolean StateNotActive
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean ApplyOffsets
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Check if forced free look mode is set. This is true if the player character should not be snapped to camera direction even if they are moving.
			/// </summary>
			property System::Boolean IsFreeLookMode
			{
				System::Boolean __clrcall get();
			}
		};

		/// <summary>
		/// First person camera state.
		/// </summary>
		public interface class FirstPersonState : public TESCameraState, public PlayerInputHandler, public NetScriptFramework::IVirtualObject
		{
		public:
			/// <summary>
			/// Gets the player character's current position. This is not the camera position!
			/// </summary>
			property NiPoint3^ PlayerPosition
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ LastFrameSpringVelocity
			{
				NiPoint3^ __clrcall get();
			}

			property NiPoint3^ DampeningOffset
			{
				NiPoint3^ __clrcall get();
			}

			/// <summary>
			/// Gets the attached node. Example "Camera1st [Cam1]".
			/// </summary>
			property NiNode^ AttachedNode
			{
				NiNode^ __clrcall get();
			}

			/// <summary>
			/// Gets the control node. This is the "Camera Control" node name from skeleton?
			/// </summary>
			property NiNode^ ControlNode
			{
				NiNode^ __clrcall get();
			}

			property System::Single SittingRotation
			{
				System::Single __clrcall get();
			}

			property System::Single CurrentPitchOffset
			{
				System::Single __clrcall get();
			}

			property System::Single TargetPitchOffset
			{
				System::Single __clrcall get();
			}

			property System::Boolean CameraOverride
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean CameraPitchOverride
			{
				System::Boolean __clrcall get();
			}
		};

		public interface class VATSCameraState : public TESCameraState, public NetScriptFramework::IVirtualObject { };

		public interface class FreeCameraState : public TESCameraState, public PlayerInputHandler, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiPoint3^ Position
			{
				NiPoint3^ __clrcall get();
			}
		};

		public interface class IronSightsState : public TESCameraState, public NetScriptFramework::IVirtualObject { };

		/// <summary>
		/// This camera state is used as we are currently in the process of sitting down or standing up. It is not used while sitting.
		/// </summary>
		public interface class FurnitureCameraState : public TESCameraState, public NetScriptFramework::IVirtualObject { };

		public interface class PlayerCameraTransitionState : public TESCameraState, public NetScriptFramework::IVirtualObject
		{
		public:
			/// <summary>
			/// Gets the state to transition from.
			/// </summary>
			property TESCameraState^ TransitionFrom
			{
				TESCameraState^ __clrcall get();
			}

			/// <summary>
			/// Gets the state to transition to.
			/// </summary>
			property TESCameraState^ TransitionTo
			{
				TESCameraState^ __clrcall get();
			}
		};

		public interface class TweenMenuCameraState : public TESCameraState, public NetScriptFramework::IVirtualObject
		{
		public:
			/// <summary>
			/// Gets or sets the current Y turn.
			/// </summary>
			property System::Single CurrentYTurn
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}

			/// <summary>
			/// Gets or sets the current X turn.
			/// </summary>
			property System::Single CurrentXTurn
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}

			/// <summary>
			/// Gets or sets the target Y turn. This is the vertical turn where + is down and - is up.
			/// </summary>
			property System::Single TargetYTurn
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}

			/// <summary>
			/// Gets or sets the target X turn. This is the sideways turn where + is right and - is left.
			/// </summary>
			property System::Single TargetXTurn
			{
				System::Single __clrcall get();

				void __clrcall set(System::Single value);
			}
		};

		interface class LocalMapMenu::LocalMapCullingProcess : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property NiPointer<BSShaderAccumulator^>^ ShaderAccumulator
				{
					NiPointer<BSShaderAccumulator^>^ __clrcall get();
				}

				property NiPointer<NiCamera^>^ Camera
				{
					NiPointer<NiCamera^>^ __clrcall get();
				}
			};

			property BSCullingProcess^ CullingProcess
			{
				BSCullingProcess^ __clrcall get();
			}

			property LocalMapCamera^ Camera
			{
				LocalMapCamera^ __clrcall get();
			}
		};

		interface class MapCameraStates::Exit : public TESCameraState, public NetScriptFramework::IVirtualObject { };

		public interface class TransitionState : public TESCameraState, public NetScriptFramework::IVirtualObject { };

		interface class MapCameraStates::World : public TESCameraState, public NetScriptFramework::IVirtualObject { };

		public interface class RaceSexMenu : public IMenu, public MenuEventHandler, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class SexTypes : System::Int32
			{
				Error = -1,
				Male = 0,
				Female = 1,
			};

			property RaceSexCamera^ Camera
			{
				RaceSexCamera^ __clrcall get();
			}

			property RaceSexMenu::SexTypes Sex
			{
				RaceSexMenu::SexTypes __clrcall get();
			}
		};

		public interface class BleedoutCameraState : public ThirdPersonState, public NetScriptFramework::IVirtualObject
		{
		public:
			property NiMatrix33^ Rotation
			{
				NiMatrix33^ __clrcall get();
			}

			property System::Single Zoom
			{
				System::Single __clrcall get();
			}

			property System::Single Pitch
			{
				System::Single __clrcall get();
			}

			property System::Single Yaw
			{
				System::Single __clrcall get();
			}

			property System::Single RandHeading
			{
				System::Single __clrcall get();
			}

			property NiPointer<NiAVObject^>^ AnimatedBone
			{
				NiPointer<NiAVObject^>^ __clrcall get();
			}

			property BSSoundHandle^ ActiveSound
			{
				BSSoundHandle^ __clrcall get();
			}

			property System::Boolean UseCurrentHeading
			{
				System::Boolean __clrcall get();
			}
		};

		/// <summary>
		/// This state is used while mounted, while mounting and while dismounting.
		/// </summary>
		public interface class HorseCameraState : public ThirdPersonState, public NetScriptFramework::IVirtualObject
		{
		public:
			/// <summary>
			/// Gets the reference handle of the horse the player is currently riding.
			/// </summary>
			property System::UInt32 HorseRefHandle
			{
				System::UInt32 __clrcall get();
			}

			/// <summary>
			/// This is the direction where horse is currently facing in radians. This is not the direction of the camera or where player wants to go but actual horse direction.
			/// </summary>
			property System::Single HorseCurrentDirection
			{
				System::Single __clrcall get();
			}
		};

		public interface class DragonCameraState : public ThirdPersonState, public NetScriptFramework::IVirtualObject { };

		interface class MapCameraStates::Transition : public TransitionState, public NetScriptFramework::IVirtualObject { };

		public interface class PlayerCamera : public TESCamera, public BSTSingletonSDM<PlayerCamera^, BSTSingletonSDMOpStaticBuffer0^>, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::UInt32 TargetRefHandle
			{
				System::UInt32 __clrcall get();
			}

			property FirstPersonState^ CameraFirstPersonState
			{
				FirstPersonState^ __clrcall get();
			}

			property AutoVanityState^ CameraAutoVanityState
			{
				AutoVanityState^ __clrcall get();
			}

			property VATSCameraState^ CameraVATSCameraState
			{
				VATSCameraState^ __clrcall get();
			}

			property FreeCameraState^ CameraFreeCameraState
			{
				FreeCameraState^ __clrcall get();
			}

			property IronSightsState^ CameraIronSightsState
			{
				IronSightsState^ __clrcall get();
			}

			property FurnitureCameraState^ CameraFurnitureCameraState
			{
				FurnitureCameraState^ __clrcall get();
			}

			property PlayerCameraTransitionState^ CameraPlayerCameraTransitionState
			{
				PlayerCameraTransitionState^ __clrcall get();
			}

			property TweenMenuCameraState^ CameraTweenMenuCameraState
			{
				TweenMenuCameraState^ __clrcall get();
			}

			property ThirdPersonState^ CameraThirdPersonState1
			{
				ThirdPersonState^ __clrcall get();
			}

			property ThirdPersonState^ CameraThirdPersonState2
			{
				ThirdPersonState^ __clrcall get();
			}

			property HorseCameraState^ CameraHorseCameraState
			{
				HorseCameraState^ __clrcall get();
			}

			property BleedoutCameraState^ CameraBleedoutCameraState
			{
				BleedoutCameraState^ __clrcall get();
			}

			property DragonCameraState^ CameraDragonCameraState
			{
				DragonCameraState^ __clrcall get();
			}

			/// <summary>
			/// Gets the collision object for camera.
			/// </summary>
			property NiPointer<bhkRigidBody^>^ Collidable
			{
				NiPointer<bhkRigidBody^>^ __clrcall get();
			}

			property System::Single ThirdPersonFOV
			{
				System::Single __clrcall get();
			}

			property System::Single FirstPersonFOV
			{
				System::Single __clrcall get();
			}

			/// <summary>
			/// Gets the last node position.
			/// </summary>
			property NiPoint3^ LastNodePosition
			{
				NiPoint3^ __clrcall get();
			}

			/// <summary>
			/// Gets the seconds since last input.
			/// </summary>
			property System::Single TimeSinceLastInput
			{
				System::Single __clrcall get();
			}

			/// <summary>
			/// Gets or sets whether to enable the auto vanity mode.
			/// </summary>
			property System::Byte EnableVanityMode
			{
				System::Byte __clrcall get();

				void __clrcall set(System::Byte value);
			}

			property System::Boolean BowZoomedIn
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean IsWeaponSheathed
			{
				System::Boolean __clrcall get();
			}

			property System::Boolean IsProcessed
			{
				System::Boolean __clrcall get();
			}

			/// <summary>
			/// Gets the player camera instance.
			/// </summary>
			static property PlayerCamera^ Instance
			{
				PlayerCamera^ __clrcall get()
				{
					return NetScriptFramework::MemoryObject::FromAddress<PlayerCamera^>(NetScriptFramework::Memory::ReadPointer(__VIDS::VID514642.Value, false));
				}
			}

			/// <summary>
			/// Enter third person mode with camera.
			/// </summary>
			void EnterThirdPerson();

			/// <summary>
			/// Enter first person mode with camera.
			/// </summary>
			void EnterFirstPerson();
		};

		interface class ActorValueInfo;

		public interface class BGSSkillPerkTreeNode : public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Int32 Index
			{
				System::Int32 __clrcall get();
			}

			property BSTArray<BGSSkillPerkTreeNode^, BSTArrayHeapAllocator^>^ Children
			{
				BSTArray<BGSSkillPerkTreeNode^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<BGSSkillPerkTreeNode^, BSTArrayHeapAllocator^>^ Parents
			{
				BSTArray<BGSSkillPerkTreeNode^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BGSPerk^ Perk
			{
				BGSPerk^ __clrcall get();
			}

			property System::Int32 PerkGridX
			{
				System::Int32 __clrcall get();
			}

			property System::Int32 PerkGridY
			{
				System::Int32 __clrcall get();
			}

			property ActorValueInfo^ AssociatedSkill
			{
				ActorValueInfo^ __clrcall get();
			}

			property System::Single HorizontalPosition
			{
				System::Single __clrcall get();
			}

			property System::Single VerticalPosition
			{
				System::Single __clrcall get();
			}
		};

		public interface class ActorValueInfo : public TESForm, public TESFullName, public TESDescription, public TESIcon, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Skill : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Single UseMult
				{
					System::Single __clrcall get();
				}

				property System::Single OffsetMult
				{
					System::Single __clrcall get();
				}

				property System::Single ImproveMult
				{
					System::Single __clrcall get();
				}

				property System::Single ImproveOffset
				{
					System::Single __clrcall get();
				}
			};

			property System::String^ EnumName
			{
				System::String^ __clrcall get();
			}

			property BSFixedString^ Abbreviation
			{
				BSFixedString^ __clrcall get();
			}

			property ActorValueInfo::Skill^ SkillData
			{
				ActorValueInfo::Skill^ __clrcall get();
			}

			property BGSSkillPerkTreeNode^ PerkTree
			{
				BGSSkillPerkTreeNode^ __clrcall get();
			}
		};

		interface class BGSBodyPartData;

		public interface class TESRace : public TESForm, public TESFullName, public TESDescription, public TESSpellList, public BGSSkinForm, public BGSBipedObjectForm, public BGSKeywordForm, public BGSAttackDataForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class EquipmentFlags : System::UInt32
			{
				None = 0,
				HandToHandMelee = 1,
				OneHandSword = 2,
				OneHandDagger = 4,
				OneHandAxe = 8,
				OneHandMace = 0x10,
				TwoHandSword = 0x20,
				TwoHandAxe = 0x40,
				Bow = 0x80,
				Staff = 0x100,
				Spell = 0x200,
				Shield = 0x400,
				Torch = 0x800,
				Crossbow = 0x1000,
			};

			interface class SkillBoostData : public NetScriptFramework::IMemoryObject
			{
			public:
				property ActorValueIndices8 Skill
				{
					ActorValueIndices8 __clrcall get();
				}

				property System::SByte Bonus
				{
					System::SByte __clrcall get();
				}
			};

			enum class DataFlags1 : System::UInt32
			{
				None = 0,
				Playable = 1,
				FaceGenHead = 2,
				Child = 4,
				TiltFrontBack = 8,
				TiltLeftRight = 0x10,
				NoShadow = 0x20,
				Swims = 0x40,
				Flies = 0x80,
				Walks = 0x100,
				Immobile = 0x200,
				NotPushable = 0x400,
				NoCombatInWater = 0x800,
				NoRotatingToHeadTrack = 0x1000,
				DontShowBloodSpray = 0x2000,
				DontShowBloodDecal = 0x4000,
				UseHeadTrackAnims = 0x8000,
				SpellsAlignWithMagicNode = 0x10000,
				UseWorldRaycastsForFootIK = 0x20000,
				AllowRagdollCollision = 0x40000,
				RegenHPInCombat = 0x80000,
				CantOpenDoors = 0x100000,
				AllowPCDialogue = 0x200000,
				NoKnockdowns = 0x400000,
				AllowPickpocket = 0x800000,
				AlwaysUseProxyController = 0x1000000,
				DontShowWeaponBlood = 0x2000000,
				OverlayHeadPartList = 0x4000000,
				OverrideHeadPartList = 0x8000000,
				CanPickupItems = 0x10000000,
				AllowMultipleMembraneShaders = 0x20000000,
				CanDualWield = 0x40000000,
				AvoidsRoads = 0x80000000,
			};

			enum class RaceSizes : System::Int32
			{
				Small = 0,
				Medium = 1,
				Large = 2,
				ExtraLarge = 3,
			};

			enum class DataFlags2 : System::UInt32
			{
				None = 0,
				UseAdvancedAvoidance = 1,
				NonHostile = 2,
				AllowMountedCombat = 0x10,
			};

			interface class UnkData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::IntPtr UnkHashes
				{
					System::IntPtr __clrcall get();
				}

				property System::Int32 NumUnkHashes1
				{
					System::Int32 __clrcall get();
				}

				property System::Int32 NumUnkHashes2
				{
					System::Int32 __clrcall get();
				}
			};

			interface class MorphData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::UInt32 MorphFlags
				{
					System::UInt32 __clrcall get();
				}
			};

			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
				Critter = 0x80000,
			};

			enum class MovementTypes : System::Int32
			{
				Walk = 0,
				Run = 1,
				Swim = 2,
				Fly = 3,
				Sneak = 4,
				Sprint = 5,
			};

			interface class TintPresetsData : public NetScriptFramework::IMemoryObject
			{
			public:
				property BSTArray<BGSColorForm^, BSTArrayHeapAllocator^>^ Colors
				{
					BSTArray<BGSColorForm^, BSTArrayHeapAllocator^>^ __clrcall get();
				}

				property BSTArray<System::Single, BSTArrayHeapAllocator^>^ DefaultValues
				{
					BSTArray<System::Single, BSTArrayHeapAllocator^>^ __clrcall get();
				}

				property BSTArray<System::UInt16, BSTArrayHeapAllocator^>^ Indices
				{
					BSTArray<System::UInt16, BSTArrayHeapAllocator^>^ __clrcall get();
				}
			};

			enum class SkinTones : System::SByte
			{
				None = 0,
				LipColor = 1,
				CheekColor = 2,
				Eyeliner = 3,
				EyeSocketUpper = 4,
				EyeSocketLower = 5,
				SkinTone = 6,
				Paint = 7,
				LaughLines = 8,
				CheekColorLower = 9,
				Nose = 0xA,
				Chin = 0xB,
				Neck = 0xC,
				Forehead = 0xD,
				Dirt = 0xE,
			};

			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property NetScriptFramework::FixedMemoryArray<TESRace::SkillBoostData^>^ SkillBoosts
				{
					NetScriptFramework::FixedMemoryArray<TESRace::SkillBoostData^>^ __clrcall get();
				}

				property NetScriptFramework::FixedMemoryArray<System::Single>^ Height
				{
					NetScriptFramework::FixedMemoryArray<System::Single>^ __clrcall get();
				}

				property NetScriptFramework::FixedMemoryArray<System::Single>^ Weight
				{
					NetScriptFramework::FixedMemoryArray<System::Single>^ __clrcall get();
				}

				property TESRace::DataFlags1 RaceFlags1
				{
					TESRace::DataFlags1 __clrcall get();
				}

				property System::Single StartingHealth
				{
					System::Single __clrcall get();
				}

				property System::Single StartingMagicka
				{
					System::Single __clrcall get();
				}

				property System::Single StartingStamina
				{
					System::Single __clrcall get();
				}

				property System::Single BaseCarryWeight
				{
					System::Single __clrcall get();
				}

				property System::Single BaseMass
				{
					System::Single __clrcall get();
				}

				property System::Single Accelerate
				{
					System::Single __clrcall get();
				}

				property System::Single Decelerate
				{
					System::Single __clrcall get();
				}

				property TESRace::RaceSizes RaceSize
				{
					TESRace::RaceSizes __clrcall get();
				}

				property BipedObjects HeadObject
				{
					BipedObjects __clrcall get();
				}

				property BipedObjects HairObject
				{
					BipedObjects __clrcall get();
				}

				property System::Single InjuredHealthPercent
				{
					System::Single __clrcall get();
				}

				property BipedObjects ShieldObject
				{
					BipedObjects __clrcall get();
				}

				property System::Single HealthRegen
				{
					System::Single __clrcall get();
				}

				property System::Single MagickaRegen
				{
					System::Single __clrcall get();
				}

				property System::Single StaminaRegen
				{
					System::Single __clrcall get();
				}

				property System::Single UnarmedDamage
				{
					System::Single __clrcall get();
				}

				property System::Single UnarmedReach
				{
					System::Single __clrcall get();
				}

				property BipedObjects BodyObject
				{
					BipedObjects __clrcall get();
				}

				property System::Single AimAngleTolerance
				{
					System::Single __clrcall get();
				}

				property System::Single FlightRadius
				{
					System::Single __clrcall get();
				}

				property System::Single AngleAccelerate
				{
					System::Single __clrcall get();
				}

				property System::Single AngleTolerance
				{
					System::Single __clrcall get();
				}

				property TESRace::DataFlags2 RaceFlags2
				{
					TESRace::DataFlags2 __clrcall get();
				}

				property NiPoint3^ MountOffset
				{
					NiPoint3^ __clrcall get();
				}

				property NiPoint3^ DismountOffset
				{
					NiPoint3^ __clrcall get();
				}

				property NiPoint3^ MountCameraOffset
				{
					NiPoint3^ __clrcall get();
				}
			};

			interface class TintLayerData : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::UInt16 Index
				{
					System::UInt16 __clrcall get();
				}

				property TESRace::SkinTones SkinTone
				{
					TESRace::SkinTones __clrcall get();
				}

				property TESTexture^ File
				{
					TESTexture^ __clrcall get();
				}

				property BGSColorForm^ PresetDefault
				{
					BGSColorForm^ __clrcall get();
				}
			};

			interface class TintAssetData : public NetScriptFramework::IMemoryObject
			{
			public:
				property TESRace::TintLayerData^ Texture
				{
					TESRace::TintLayerData^ __clrcall get();
				}

				property TESRace::TintPresetsData^ Presets
				{
					TESRace::TintPresetsData^ __clrcall get();
				}
			};

			interface class FaceRelatedData : public NetScriptFramework::IMemoryObject
			{
			public:
				property NetScriptFramework::FixedMemoryArray<TESRace::MorphData^>^ AvailableMorphs
				{
					NetScriptFramework::FixedMemoryArray<TESRace::MorphData^>^ __clrcall get();
				}

				property NetScriptFramework::FixedMemoryArray<System::Int32>^ NumFlagsSet
				{
					NetScriptFramework::FixedMemoryArray<System::Int32>^ __clrcall get();
				}

				property BSTArray<TESRace::TintAssetData^, BSTArrayHeapAllocator^>^ TintMasks
				{
					BSTArray<TESRace::TintAssetData^, BSTArrayHeapAllocator^>^ __clrcall get();
				}

				property BSTArray<BGSTextureSet^, BSTArrayHeapAllocator^>^ FaceDetailsTextureSets
				{
					BSTArray<BGSTextureSet^, BSTArrayHeapAllocator^>^ __clrcall get();
				}

				property BGSTextureSet^ DefaultFaceDetailsTextureSet
				{
					BGSTextureSet^ __clrcall get();
				}

				property BSTArray<TESNPC^, BSTArrayHeapAllocator^>^ PresetNPCs
				{
					BSTArray<TESNPC^, BSTArrayHeapAllocator^>^ __clrcall get();
				}

				property BSTArray<BGSColorForm^, BSTArrayHeapAllocator^>^ AvailableHairColors
				{
					BSTArray<BGSColorForm^, BSTArrayHeapAllocator^>^ __clrcall get();
				}

				property BGSColorForm^ DefaultHairColor
				{
					BGSColorForm^ __clrcall get();
				}

				property BSTArray<BGSHeadPart^, BSTArrayHeapAllocator^>^ HeadParts
				{
					BSTArray<BGSHeadPart^, BSTArrayHeapAllocator^>^ __clrcall get();
				}
			};

			property NetScriptFramework::FixedMemoryArray<TESModel^>^ SkeletonModels
			{
				NetScriptFramework::FixedMemoryArray<TESModel^>^ __clrcall get();
			}

			property TESRace::Data^ RaceData
			{
				TESRace::Data^ __clrcall get();
			}

			property System::Single ClampFaceGeoValue
			{
				System::Single __clrcall get();
			}

			property System::Single ClampFaceGeoValue2
			{
				System::Single __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<BGSTextureModel^>^ BodyTextureModels
			{
				NetScriptFramework::FixedMemoryArray<BGSTextureModel^>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<BGSBehaviorGraphModel^>^ BehaviorGraphs
			{
				NetScriptFramework::FixedMemoryArray<BGSBehaviorGraphModel^>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<BSFixedString^>^ RootBehaviorGraphNames
			{
				NetScriptFramework::FixedMemoryArray<BSFixedString^>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<BSFixedString^>^ BehaviorGraphProjectNames
			{
				NetScriptFramework::FixedMemoryArray<BSFixedString^>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<BGSVoiceType^>^ DefaultVoiceTypes
			{
				NetScriptFramework::FixedMemoryArray<BGSVoiceType^>^ __clrcall get();
			}

			property BGSBodyPartData^ BodyPartData
			{
				BGSBodyPartData^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<TESObjectARMO^>^ DecapitateArmors
			{
				NetScriptFramework::FixedMemoryArray<TESObjectARMO^>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<AttackAnimationArrayMap^>^ AttackAnimations
			{
				NetScriptFramework::FixedMemoryArray<AttackAnimationArrayMap^>^ __clrcall get();
			}

			property BSFixedString^ FormEditorId
			{
				BSFixedString^ __clrcall get();
			}

			property BGSMaterialType^ BloodImpactMaterial
			{
				BGSMaterialType^ __clrcall get();
			}

			property BGSImpactDataSet^ ImpactDataSet
			{
				BGSImpactDataSet^ __clrcall get();
			}

			property BGSArtObject^ DismemberBlood
			{
				BGSArtObject^ __clrcall get();
			}

			property BGSSoundDescriptorForm^ CorpseOpenSound
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}

			property BGSSoundDescriptorForm^ CorpseCloseSound
			{
				BGSSoundDescriptorForm^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<BSFixedString^>^ BipedObjectNameA
			{
				NetScriptFramework::FixedMemoryArray<BSFixedString^>^ __clrcall get();
			}

			property BSTArray<BGSEquipSlot^, BSTArrayHeapAllocator^>^ EquipSlots
			{
				BSTArray<BGSEquipSlot^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property TESRace::EquipmentFlags ValidEquipTypes
			{
				TESRace::EquipmentFlags __clrcall get();
			}

			property BGSEquipSlot^ UnarmedEquipSlot
			{
				BGSEquipSlot^ __clrcall get();
			}

			property TESRace^ MorphRace
			{
				TESRace^ __clrcall get();
			}

			property TESRace^ ArmorParentRace
			{
				TESRace^ __clrcall get();
			}

			property BSTArray<BSFixedString^, BSTArrayHeapAllocator^>^ PhonemeTargets
			{
				BSTArray<BSFixedString^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<BGSMovementType^>^ BaseMoveTypes
			{
				NetScriptFramework::FixedMemoryArray<BGSMovementType^>^ __clrcall get();
			}

			property NetScriptFramework::FixedMemoryArray<TESRace::FaceRelatedData^>^ FaceData
			{
				NetScriptFramework::FixedMemoryArray<TESRace::FaceRelatedData^>^ __clrcall get();
			}

			/// <summary>
			/// Check if this race can head track.
			/// </summary>
			property System::Boolean CanHeadTrack
			{
				System::Boolean __clrcall get();
			}
		};

		interface class BGSBodyPart;

		public interface class BGSBodyPartData : public TESForm, public TESModel, public BGSPreloadable, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class LimbEnum : System::Int32
			{
				None = -1,
				Torso = 0,
				Head = 1,
				Eye = 2,
				LookAt = 3,
				FlyGrab = 4,
				Saddle = 5,
			};

			enum class BodyPartFlags : System::Byte
			{
				None = 0,
				Severable = 1,
				IKData = 2,
				IKData_BipedData = 4,
				Explodable = 8,
				IKData_IsHead = 0x10,
				IKData_HeadTracking = 0x20,
				ToHitChance_Absolute = 0x40,
			};

			enum class LimbEnum8 : System::SByte
			{
				None = -1,
				Torso = 0,
				Head = 1,
				Eye = 2,
				LookAt = 3,
				FlyGrab = 4,
				Saddle = 5,
			};

			enum class RecordFlags : System::UInt32
			{
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property System::Single DamageMult
				{
					System::Single __clrcall get();
				}

				property BGSBodyPartData::BodyPartFlags Flags
				{
					BGSBodyPartData::BodyPartFlags __clrcall get();
				}

				property BGSBodyPartData::LimbEnum8 Type
				{
					BGSBodyPartData::LimbEnum8 __clrcall get();
				}

				property System::SByte HealthPercent
				{
					System::SByte __clrcall get();
				}

				property ActorValueIndices8 ActorValue
				{
					ActorValueIndices8 __clrcall get();
				}

				property System::SByte ToHitChance
				{
					System::SByte __clrcall get();
				}

				property System::SByte ExplosionChance
				{
					System::SByte __clrcall get();
				}

				property System::SByte ExplosionGenericDebrisCount
				{
					System::SByte __clrcall get();
				}

				property BGSDebris^ ExplosionGenericDebris
				{
					BGSDebris^ __clrcall get();
				}

				property BGSExplosion^ Explosion
				{
					BGSExplosion^ __clrcall get();
				}

				property System::Single TrackingMaxAngle
				{
					System::Single __clrcall get();
				}

				property System::Single ExplosionGenericDebrisScale
				{
					System::Single __clrcall get();
				}

				property System::SByte DismemberGenericDebrisCount
				{
					System::SByte __clrcall get();
				}

				property BGSDebris^ DismemberGenericDebris
				{
					BGSDebris^ __clrcall get();
				}

				property BGSExplosion^ DismemberExplosion
				{
					BGSExplosion^ __clrcall get();
				}

				property System::Single DismemberGenericDebrisScale
				{
					System::Single __clrcall get();
				}

				property NiPoint3^ GoreTranslate
				{
					NiPoint3^ __clrcall get();
				}

				property NiPoint3^ GoreRotate
				{
					NiPoint3^ __clrcall get();
				}

				property BGSImpactDataSet^ DismemberImpactDataSet
				{
					BGSImpactDataSet^ __clrcall get();
				}

				property BGSImpactDataSet^ ExplosionImpactDataSet
				{
					BGSImpactDataSet^ __clrcall get();
				}

				property System::SByte DismemberDecalCount
				{
					System::SByte __clrcall get();
				}

				property System::SByte ExplosionDecalCount
				{
					System::SByte __clrcall get();
				}

				property System::Single ExplosionSpecialDebrisScale
				{
					System::Single __clrcall get();
				}
			};

			property NetScriptFramework::FixedMemoryArray<BGSBodyPart^>^ Parts
			{
				NetScriptFramework::FixedMemoryArray<BGSBodyPart^>^ __clrcall get();
			}

			property BGSRagdoll^ Ragdoll
			{
				BGSRagdoll^ __clrcall get();
			}
		};

		public interface class BGSBodyPart : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSFixedString^ NodeName
			{
				BSFixedString^ __clrcall get();
			}

			property BSFixedString^ TargetName
			{
				BSFixedString^ __clrcall get();
			}

			property BSFixedString^ HitReactionVariablePrefix
			{
				BSFixedString^ __clrcall get();
			}

			property BSFixedString^ PartName
			{
				BSFixedString^ __clrcall get();
			}

			property BSFixedString^ GoreObjectName
			{
				BSFixedString^ __clrcall get();
			}

			property TESModel^ ExplosionSpecialDebris
			{
				TESModel^ __clrcall get();
			}

			property TESModelPSA^ PoseMatching
			{
				TESModelPSA^ __clrcall get();
			}

			property BGSBodyPartData::Data^ Data
			{
				BGSBodyPartData::Data^ __clrcall get();
			}
		};

		public interface class ExtraDismemberedLimbs : public BSExtraData, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class Data : public NetScriptFramework::IMemoryObject
			{
			public:
				property BSTArray<TESForm^, BSTArrayHeapAllocator^>^ Objects
				{
					BSTArray<TESForm^, BSTArrayHeapAllocator^>^ __clrcall get();
				}

				property BGSBodyPartData::LimbEnum8 LimbType
				{
					BGSBodyPartData::LimbEnum8 __clrcall get();
				}
			};

			property System::UInt16 Limbs
			{
				System::UInt16 __clrcall get();
			}

			property System::Boolean Eaten
			{
				System::Boolean __clrcall get();
			}

			property TESForm^ DeathObject
			{
				TESForm^ __clrcall get();
			}

			property BSTArray<ExtraDismemberedLimbs::Data^, BSTArrayHeapAllocator^>^ DismemberedLimbs
			{
				BSTArray<ExtraDismemberedLimbs::Data^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BGSBodyPartData::LimbEnum LastHitLimbType
			{
				BGSBodyPartData::LimbEnum __clrcall get();
			}
		};

		interface class BGSStoryManagerBranchNode;

		public interface class BGSStoryManagerNodeBase : public BGSStoryManagerTreeForm, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class DataNodeFlags : System::UInt16
			{
				None = 0,
				Random = 1,
				WarnIfNoChildQuestStarted = 2,
			};

			enum class DataQuestFlags : System::UInt16
			{
				None = 0,
				DoAllBeforeRepeating = 1,
				SharesEvent = 2,
				NumQuestsToRun = 4,
			};

			property BGSStoryManagerBranchNode^ ParentNode
			{
				BGSStoryManagerBranchNode^ __clrcall get();
			}

			property BGSStoryManagerNodeBase^ PreviousSibling
			{
				BGSStoryManagerNodeBase^ __clrcall get();
			}

			property System::Int32 MaxQuests
			{
				System::Int32 __clrcall get();
			}

			property BGSStoryManagerNodeBase::DataNodeFlags NodeFlags
			{
				BGSStoryManagerNodeBase::DataNodeFlags __clrcall get();
			}

			property BGSStoryManagerNodeBase::DataQuestFlags QuestFlags
			{
				BGSStoryManagerNodeBase::DataQuestFlags __clrcall get();
			}

			property TESCondition^ Conditions
			{
				TESCondition^ __clrcall get();
			}
		};

		public interface class BGSStoryManagerBranchNode : public BGSStoryManagerNodeBase, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property BSTArray<BGSStoryManagerNodeBase^, BSTArrayHeapAllocator^>^ Children
			{
				BSTArray<BGSStoryManagerNodeBase^, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		public interface class BGSStoryManagerQuestNode : public BGSStoryManagerNodeBase, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			enum class ChangeFlags : System::UInt32
			{
				None = 0,
				TimeLastRun = 0x80000000,
			};

			property BSTArray<TESQuest^, BSTArrayHeapAllocator^>^ Quests
			{
				BSTArray<TESQuest^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTHashMap2<TESQuest^, System::UInt32>^ PerQuestFlags
			{
				BSTHashMap2<TESQuest^, System::UInt32>^ __clrcall get();
			}

			property BSTHashMap2<TESQuest^, System::Single>^ PerQuestHoursUntilReset
			{
				BSTHashMap2<TESQuest^, System::Single>^ __clrcall get();
			}

			property System::Int32 NumQuestsToStart
			{
				System::Int32 __clrcall get();
			}

			property BSTArray<System::Single, BSTArrayHeapAllocator^>^ ChildrenLastRun
			{
				BSTArray<System::Single, BSTArrayHeapAllocator^>^ __clrcall get();
			}
		};

		public interface class BGSStoryManagerEventNode : public BGSStoryManagerBranchNode, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
			};

			property BGSRegisteredStoryEvent^ Event
			{
				BGSRegisteredStoryEvent^ __clrcall get();
			}
		};

		interface class BSNavmeshEdgeExtraInfo;

		public interface class BSNavmesh : public BSIntrusiveRefCounted, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class EdgeExtraInfoTypes : System::Int32
			{
				Invalid = -1,
				Portal = 0,
				LedgeUp = 1,
				LedgeDown = 2,
				EnableDisablePortal = 3,
			};

			property BSTArray<BSNavmeshVertex^, BSTArrayHeapAllocator^>^ Vertices
			{
				BSTArray<BSNavmeshVertex^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<BSNavmeshTriangle^, BSTArrayHeapAllocator^>^ Triangles
			{
				BSTArray<BSNavmeshTriangle^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<BSNavmeshEdgeExtraInfo^, BSTArrayHeapAllocator^>^ ExtraEdgeInfo
			{
				BSTArray<BSNavmeshEdgeExtraInfo^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<BSNavmeshTriangleDoorPortal^, BSTArrayHeapAllocator^>^ DoorPortals
			{
				BSTArray<BSNavmeshTriangleDoorPortal^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<BSNavmeshClosedDoorInfo^, BSTArrayHeapAllocator^>^ ClosedDoors
			{
				BSTArray<BSNavmeshClosedDoorInfo^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTArray<BSNavmeshCoverEdge^, BSTArrayHeapAllocator^>^ CoverArray
			{
				BSTArray<BSNavmeshCoverEdge^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSNavmeshGrid^ MeshGrid
			{
				BSNavmeshGrid^ __clrcall get();
			}

			property BSTArray<NiPointer<BSNavmeshObstacleUndoData^>^, BSTArrayHeapAllocator^>^ Obstacles
			{
				BSTArray<NiPointer<BSNavmeshObstacleUndoData^>^, BSTArrayHeapAllocator^>^ __clrcall get();
			}

			property BSTHashMap2<System::UInt16, NiPointer<BSNavmeshObstacleData^>^>^ TriangleToObstacleMap
			{
				BSTHashMap2<System::UInt16, NiPointer<BSNavmeshObstacleData^>^>^ __clrcall get();
			}

			property BSTSmartPointer<BSPathingCell^, BSTSmartPointerIntrusiveRefCount<BSPathingCell^>^>^ ParentCell
			{
				BSTSmartPointer<BSPathingCell^, BSTSmartPointerIntrusiveRefCount<BSPathingCell^>^>^ __clrcall get();
			}
		};

		public interface class BSNavmeshEdgeExtraInfo : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSNavmesh::EdgeExtraInfoTypes Type
			{
				BSNavmesh::EdgeExtraInfoTypes __clrcall get();
			}

			property BSNavmeshTriangleEdgePortal^ Portal
			{
				BSNavmeshTriangleEdgePortal^ __clrcall get();
			}
		};

		public interface class NavMesh : public TESForm, public TESChildCell, public BSNavmesh, public NetScriptFramework::IVirtualObject
		{
		public:
			enum class RecordFlags : System::UInt32
			{
				None = 0,
				Deleted = 0x20,
				Ignored = 0x1000,
				Compressed = 0x40000,
				AutoGen = 0x4000000,
				NavMeshGenCell = 0x80000000,
			};
		};

		interface class BSPCGamepadDeviceDelegate;

		public interface class BSPCGamepadDeviceHandler : public BSIInputDevice, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSPCGamepadDeviceDelegate^ CurrentPCGamePadDelegate
			{
				BSPCGamepadDeviceDelegate^ __clrcall get();
			}
		};

		public interface class BSPCGamepadDeviceDelegate : public BSGamepadDevice, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSPCGamepadDeviceHandler^ GamepadDeviceHandler
			{
				BSPCGamepadDeviceHandler^ __clrcall get();
			}
		};

		public interface class BSPCOrbisGamepadDevice : public BSPCGamepadDeviceDelegate, public NetScriptFramework::IVirtualObject { };

		public interface class BSWin32GamepadDevice : public BSPCGamepadDeviceDelegate, public NetScriptFramework::IVirtualObject
		{
		public:
			property System::Byte CurrentState
			{
				System::Byte __clrcall get();
			}

			property System::Single CurrentLX
			{
				System::Single __clrcall get();
			}

			property System::Single CurrentLY
			{
				System::Single __clrcall get();
			}

			property System::Single CurrentRX
			{
				System::Single __clrcall get();
			}

			property System::Single CurrentRY
			{
				System::Single __clrcall get();
			}

			property System::Byte PreviousState
			{
				System::Byte __clrcall get();
			}

			property System::Single PreviousLX
			{
				System::Single __clrcall get();
			}

			property System::Single PreviousLY
			{
				System::Single __clrcall get();
			}

			property System::Single PreviousRX
			{
				System::Single __clrcall get();
			}

			property System::Single PreviousRY
			{
				System::Single __clrcall get();
			}
		};

		interface class MapMenu;

		public interface class MapInputHandler : public MenuEventHandler, public NetScriptFramework::IVirtualObject
		{
		public:
			property MapMenu^ Menu
			{
				MapMenu^ __clrcall get();
			}
		};

		public interface class MapLookHandler : public MapInputHandler, public NetScriptFramework::IVirtualObject { };

		public interface class MapMoveHandler : public MapInputHandler, public NetScriptFramework::IVirtualObject { };

		public interface class MapZoomHandler : public MapInputHandler, public NetScriptFramework::IVirtualObject { };

		generic <typename BSTSmartPointer_T1, typename BSTSmartPointer_T2>
		public interface class BSTSmartPointer : public NetScriptFramework::IMemoryObject
		{
		public:
			property BSTSmartPointer_T1 Target
			{
				BSTSmartPointer_T1 __clrcall get();
			}
		};

		public interface class MapMenu : public IMenu, public BSTEventSink<MenuOpenCloseEvent^>, public IMapCameraCallbacks, public NetScriptFramework::IVirtualObject
		{
		public:
			property BSTSmartPointer<MapMoveHandler^, BSTSmartPointerIntrusiveRefCount<MapMoveHandler^>^>^ MoveHandler
			{
				BSTSmartPointer<MapMoveHandler^, BSTSmartPointerIntrusiveRefCount<MapMoveHandler^>^>^ __clrcall get();
			}

			property BSTSmartPointer<MapLookHandler^, BSTSmartPointerIntrusiveRefCount<MapLookHandler^>^>^ LookHandler
			{
				BSTSmartPointer<MapLookHandler^, BSTSmartPointerIntrusiveRefCount<MapLookHandler^>^>^ __clrcall get();
			}

			property BSTSmartPointer<MapZoomHandler^, BSTSmartPointerIntrusiveRefCount<MapZoomHandler^>^>^ ZoomHandler
			{
				BSTSmartPointer<MapZoomHandler^, BSTSmartPointerIntrusiveRefCount<MapZoomHandler^>^>^ __clrcall get();
			}

			property LocalMapMenu^ LocalMap
			{
				LocalMapMenu^ __clrcall get();
			}

			property MapCamera^ Camera
			{
				MapCamera^ __clrcall get();
			}

			property TESWorldSpace^ WorldSpace
			{
				TESWorldSpace^ __clrcall get();
			}
		};

		generic <typename hkMinHeap_T1, typename hkMinHeap_T2>
		interface class hkMinHeap;

		public interface class hkQemSimplifier : public hkReferencedObject, public NetScriptFramework::IVirtualObject
		{
		public:
			interface class EdgeContraction : public NetScriptFramework::IMemoryObject
			{
			public:
				enum class Type : System::Int32
				{
					TYPE_SELECT_START = 0,
					TYPE_SELECT_END = 1,
					TYPE_NEW = 2,
					TYPE_USED = 3,
				};

				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Group : public NetScriptFramework::IMemoryObject
			{
			public:
				interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
			};

			interface class Triangle : public hkgpVertexTriangleTopologyBase::Triangle, public NetScriptFramework::IMemoryObject { };

			interface class Attribute : public NetScriptFramework::IMemoryObject { };

			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		generic <typename hkArrayBase_T1>
		public interface class hkArrayBase : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		generic <typename hkMinHeap_T1, typename hkMinHeap_T2>
		public interface class hkMinHeap : public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};

		generic <typename hkArray_T1, typename hkArray_T2>
		public interface class hkArray : public hkArrayBase<hkArray_T1>, public NetScriptFramework::IMemoryObject { };

		generic <typename hkInplaceArray_T1, typename hkInplaceArray_T2, typename hkInplaceArray_T3>
		public interface class hkInplaceArray : public hkArray<hkInplaceArray_T1, hkInplaceArray_T3>, public NetScriptFramework::IMemoryObject
		{
		public:
			interface class MustEndWithSemiColon : public NetScriptFramework::IMemoryObject { };
		};
	}
}

#pragma warning(pop)
